ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_hal_uart.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_UART_Init,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_UART_Init
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	HAL_UART_Init:
  27              	.LFB216:
  28              		.file 1 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c"
   1:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
   2:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ******************************************************************************
   3:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @file    stm32f4xx_hal_uart.c
   4:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @author  MCD Application Team
   5:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief   UART HAL module driver.
   6:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter Peripheral (UART).
   8:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           + IO operation functions
  10:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           + Peripheral Control functions
  11:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           + Peripheral State and Errors functions
  12:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
  13:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ******************************************************************************
  14:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @attention
  15:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
  16:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * Copyright (c) 2016 STMicroelectronics.
  17:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * All rights reserved.
  18:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
  19:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * This software is licensed under terms that can be found in the LICENSE file
  20:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * in the root directory of this software component.
  21:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  22:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
  23:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ******************************************************************************
  24:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   @verbatim
  25:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
  26:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                         ##### How to use this driver #####
  27:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
  28:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   [..]
  29:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  30:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 2


  31:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure (eg. UART_HandleTypeDef huart).
  32:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
  33:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (##) Enable the USARTx interface clock.
  34:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (##) UART pins configuration:
  35:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  36:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the UART TX/RX pins as alternate function pull-up.
  37:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (##) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  38:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  39:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  40:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
  41:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (##) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
  42:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
  43:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx stream.
  44:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
  45:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required
  46:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                   Tx/Rx parameters.
  47:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx stream.
  48:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  49:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete
  50:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                   interrupt on the DMA Tx/Rx stream.
  51:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority and enable the NVIC USART IRQ handle
  52:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                   (used for last byte sending completion detection in DMA non circular mode)
  53:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  54:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Hardware
  55:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         flow control and Mode(Receiver/Transmitter) in the huart Init structure.
  56:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  57:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  58:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         the HAL_UART_Init() API.
  59:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  60:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling
  61:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  62:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  63:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For the LIN mode, initialize the UART registers by calling the HAL_LIN_Init() API.
  64:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  65:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For the Multi-Processor mode, initialize the UART registers by calling
  66:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         the HAL_MultiProcessor_Init() API.
  67:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  68:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
  69:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (@) The specific UART interrupts (Transmission complete interrupt,
  70:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             RXNE interrupt and Error Interrupts) will be managed using the macros
  71:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT() inside the transmit
  72:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             and receive process.
  73:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  74:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
  75:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (@) These APIs (HAL_UART_Init() and HAL_HalfDuplex_Init()) configure also the
  76:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             low level Hardware GPIO, CLOCK, CORTEX...etc) by calling the customized
  77:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             HAL_UART_MspInit() API.
  78:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  79:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ##### Callback registration #####
  80:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ==================================
  81:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  82:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
  83:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     The compilation define USE_HAL_UART_REGISTER_CALLBACKS when set to 1
  84:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     allows the user to configure dynamically the driver callbacks.
  85:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  86:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
  87:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     Use Function HAL_UART_RegisterCallback() to register a user callback.
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 3


  88:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     Function HAL_UART_RegisterCallback() allows to register following callbacks:
  89:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
  90:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
  91:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
  92:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
  93:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
  94:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
  95:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
  96:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
  97:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
  98:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
  99:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This function takes as parameters the HAL peripheral handle, the Callback ID
 100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     and a pointer to the user callback function.
 101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     Use function HAL_UART_UnRegisterCallback() to reset a callback to the default
 104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     weak (surcharged) function.
 105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_UnRegisterCallback() takes as parameters the HAL peripheral handle,
 106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     and the Callback ID.
 107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This function allows to reset following callbacks:
 108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
 109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
 110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
 111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
 112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
 113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
 114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
 115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
 116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
 117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
 118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     For specific callback RxEventCallback, use dedicated registration/reset functions:
 121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     respectively HAL_UART_RegisterRxEventCallback() , HAL_UART_UnRegisterRxEventCallback().
 122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     By default, after the HAL_UART_Init() and when the state is HAL_UART_STATE_RESET
 125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     all callbacks are set to the corresponding weak (surcharged) functions:
 126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     examples HAL_UART_TxCpltCallback(), HAL_UART_RxHalfCpltCallback().
 127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     Exception done for MspInit and MspDeInit functions that are respectively
 128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     reset to the legacy weak (surcharged) functions in the HAL_UART_Init()
 129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     and HAL_UART_DeInit() only when these callbacks are null (not registered beforehand).
 130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     If not, MspInit or MspDeInit are not null, the HAL_UART_Init() and HAL_UART_DeInit()
 131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     keep and use the user MspInit/MspDeInit callbacks (registered beforehand).
 132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     Callbacks can be registered/unregistered in HAL_UART_STATE_READY state only.
 135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     Exception done MspInit/MspDeInit that can be registered/unregistered
 136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     in HAL_UART_STATE_READY or HAL_UART_STATE_RESET state, thus registered (user)
 137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     MspInit/DeInit callbacks can be used during the Init/DeInit.
 138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     In that case first register the MspInit/MspDeInit user callbacks
 139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     using HAL_UART_RegisterCallback() before calling HAL_UART_DeInit()
 140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     or HAL_UART_Init() function.
 141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     When The compilation define USE_HAL_UART_REGISTER_CALLBACKS is set to 0 or
 144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     not defined, the callback registration feature is not available
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 4


 145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     and weak (surcharged) callbacks are used.
 146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         Three operation modes are available within this driver :
 149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      *** Polling mode IO operation ***
 151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      =================================
 152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Send an amount of data in blocking mode using HAL_UART_Transmit()
 154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Receive an amount of data in blocking mode using HAL_UART_Receive()
 155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      *** Interrupt mode IO operation ***
 157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      ===================================
 158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode using HAL_UART_Transmit_IT()
 160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can
 161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
 162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode using HAL_UART_Receive_IT()
 163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can
 164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
 165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can
 166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
 167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      *** DMA mode IO operation ***
 169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      ==============================
 170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode (DMA) using HAL_UART_Transmit_DMA()
 172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At transmission end of half transfer HAL_UART_TxHalfCpltCallback is executed and user ca
 173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxHalfCpltCallback
 174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can
 175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
 176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode (DMA) using HAL_UART_Receive_DMA()
 177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At reception end of half transfer HAL_UART_RxHalfCpltCallback is executed and user can
 178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxHalfCpltCallback
 179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can
 180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
 181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can
 182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
 183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Pause the DMA Transfer using HAL_UART_DMAPause()
 184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Resume the DMA Transfer using HAL_UART_DMAResume()
 185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Stop the DMA Transfer using HAL_UART_DMAStop()
 186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..] This subsection also provides a set of additional functions providing enhanced reception
 189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     services to user. (For example, these functions allow application to handle use cases
 190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     where number of data to be received is unknown).
 191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Compared to standard reception services which only consider number of received
 193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         data elements as reception completion criteria, these functions also consider additional ev
 194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         as triggers for updating reception status to caller :
 195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Detection of inactivity period (RX line has not been active for a given period).
 196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           (++) RX inactivity detected by IDLE event, i.e. RX line has been in idle state (normally 
 197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                for 1 frame time, after last received byte.
 198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) There are two mode of transfer:
 200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Blocking mode: The reception is performed in polling mode, until either expected number 
 201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            or till IDLE event occurs. Reception is handled only during function execution.
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 5


 202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            When function exits, no data reception could occur. HAL status and number of actually re
 203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            are returned by function after finishing transfer.
 204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Non-Blocking mode: The reception is performed using Interrupts or DMA.
 205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            These API's return the HAL status.
 206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            The end of the data processing will be indicated through the
 207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when using DMA mode.
 208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            The HAL_UARTEx_RxEventCallback() user callback will be executed during Receive process
 209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a reception error is det
 210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Blocking mode API:
 212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UARTEx_ReceiveToIdle()
 213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Non-Blocking mode API with Interrupt:
 215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UARTEx_ReceiveToIdle_IT()
 216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Non-Blocking mode API with DMA:
 218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UARTEx_ReceiveToIdle_DMA()
 219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      *** UART HAL driver macros list ***
 222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      =============================================
 223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        Below the list of most used macros in UART HAL driver.
 225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_ENABLE: Enable the UART peripheral
 227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_DISABLE: Disable the UART peripheral
 228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_GET_FLAG : Check whether the specified UART flag is set or not
 229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_CLEAR_FLAG : Clear the specified UART pending flag
 230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_ENABLE_IT: Enable the specified UART interrupt
 231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_DISABLE_IT: Disable the specified UART interrupt
 232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_GET_IT_SOURCE: Check whether the specified UART interrupt has occurred or not
 233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (@) You can refer to the UART HAL driver header file for more useful macros
 236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   @endverbatim
 238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (@) Additional remark: If the parity is enabled, then the MSB bit of the data written
 240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            in the data register is transmitted but is changed by the parity bit.
 241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Depending on the frame length defined by the M bit (8-bits or 9-bits),
 242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the possible UART frame formats are as listed in the following table:
 243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     +-------------------------------------------------------------+
 244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |   M bit |  PCE bit  |            UART frame                 |
 245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |---------------------|---------------------------------------|
 246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |    0    |    0      |    | SB | 8 bit data | STB |          |
 247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |---------|-----------|---------------------------------------|
 248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |    0    |    1      |    | SB | 7 bit data | PB | STB |     |
 249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |---------|-----------|---------------------------------------|
 250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |    1    |    0      |    | SB | 9 bit data | STB |          |
 251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |---------|-----------|---------------------------------------|
 252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |    1    |    1      |    | SB | 8 bit data | PB | STB |     |
 253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     +-------------------------------------------------------------+
 254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ******************************************************************************
 255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #include "stm32f4xx_hal.h"
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 6


 259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @addtogroup STM32F4xx_HAL_Driver
 261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART UART
 265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief HAL UART module driver
 266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @addtogroup UART_Private_Constants
 273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
 277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private macro -------------------------------------------------------------*/
 279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @addtogroup UART_Private_Functions  UART Private Functions
 282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** void UART_InitCallbacksToDefault(UART_HandleTypeDef *huart);
 287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart);
 289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart);
 290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma);
 295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart);
 301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart);
 303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, Flag
 304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                                                      uint32_t Tickstart, uint32_t Timeout);
 305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_SetConfig(UART_HandleTypeDef *huart);
 306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
 309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Exported functions ---------------------------------------------------------*/
 312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 7


 316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions
 317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions
 318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @verbatim
 320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  ===============================================================================
 321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  ===============================================================================
 323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy
 325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     in asynchronous mode.
 326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) For the asynchronous mode only these parameters can be configured:
 327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Baud Rate
 328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Word Length
 329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Stop Bit
 330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Parity: If the parity is enabled, then the MSB bit of the data written
 331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              in the data register is transmitted but is changed by the parity bit.
 332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              Depending on the frame length defined by the M bit (8-bits or 9-bits),
 333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              please refer to Reference manual for possible UART frame formats.
 334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Hardware flow control
 335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Receiver/transmitter modes
 336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Over Sampling Method
 337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init() and HAL_MultiProcessor_Init() APIs
 339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     follow respectively the UART asynchronous, UART Half duplex, LIN and Multi-Processor configurat
 340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     procedures (details for the procedures are available in reference manual
 341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (RM0430 for STM32F4X3xx MCUs and RM0402 for STM32F412xx MCUs
 342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      RM0383 for STM32F411xC/E MCUs and RM0401 for STM32F410xx MCUs
 343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      RM0090 for STM32F4X5xx/STM32F4X7xx/STM32F429xx/STM32F439xx MCUs
 344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      RM0390 for STM32F446xx MCUs and RM0386 for STM32F469xx/STM32F479xx MCUs)).
 345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @endverbatim
 347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initializes the UART mode according to the specified parameters in
 352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the UART_InitTypeDef and create the associated handle.
 353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
  29              		.loc 1 358 1
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 8
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33 0000 80B5     		push	{r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 82B0     		sub	sp, sp, #8
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 16
  41 0004 00AF     		add	r7, sp, #0
  42              	.LCFI2:
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 8


  43              		.cfi_def_cfa_register 7
  44 0006 7860     		str	r0, [r7, #4]
 359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart == NULL)
  45              		.loc 1 360 6
  46 0008 7B68     		ldr	r3, [r7, #4]
  47 000a 002B     		cmp	r3, #0
  48 000c 01D1     		bne	.L2
 361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
  49              		.loc 1 362 12
  50 000e 0123     		movs	r3, #1
  51 0010 3FE0     		b	.L3
  52              	.L2:
 363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* The hardware flow control is available only for USART1, USART2, USART3 and USART6.
 369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        Except for STM32F446xx devices, that is available for USART1, USART2, USART3, USART6, UART4 
 370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     */
 371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
 373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     assert_param(IS_UART_INSTANCE(huart->Instance));
 377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
  53              		.loc 1 381 12
  54 0012 7B68     		ldr	r3, [r7, #4]
  55 0014 93F83D30 		ldrb	r3, [r3, #61]
  56 0018 DBB2     		uxtb	r3, r3
  57              		.loc 1 381 6
  58 001a 002B     		cmp	r3, #0
  59 001c 06D1     		bne	.L4
 382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
  60              		.loc 1 384 17
  61 001e 7B68     		ldr	r3, [r7, #4]
  62 0020 0022     		movs	r2, #0
  63 0022 83F83C20 		strb	r2, [r3, #60]
 385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 9


 395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
 397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
  64              		.loc 1 398 5
  65 0026 7868     		ldr	r0, [r7, #4]
  66 0028 FFF7FEFF 		bl	HAL_UART_MspInit
  67              	.L4:
 399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
  68              		.loc 1 402 17
  69 002c 7B68     		ldr	r3, [r7, #4]
  70 002e 2422     		movs	r2, #36
  71 0030 83F83D20 		strb	r2, [r3, #61]
 403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the peripheral */
 405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
  72              		.loc 1 405 3
  73 0034 7B68     		ldr	r3, [r7, #4]
  74 0036 1B68     		ldr	r3, [r3]
  75 0038 DA68     		ldr	r2, [r3, #12]
  76 003a 7B68     		ldr	r3, [r7, #4]
  77 003c 1B68     		ldr	r3, [r3]
  78 003e 22F40052 		bic	r2, r2, #8192
  79 0042 DA60     		str	r2, [r3, #12]
 406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_SetConfig(huart);
  80              		.loc 1 408 3
  81 0044 7868     		ldr	r0, [r7, #4]
  82 0046 FFF7FEFF 		bl	UART_SetConfig
 409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared:
 411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
 413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
  83              		.loc 1 413 3
  84 004a 7B68     		ldr	r3, [r7, #4]
  85 004c 1B68     		ldr	r3, [r3]
  86 004e 1A69     		ldr	r2, [r3, #16]
  87 0050 7B68     		ldr	r3, [r7, #4]
  88 0052 1B68     		ldr	r3, [r3]
  89 0054 22F49042 		bic	r2, r2, #18432
  90 0058 1A61     		str	r2, [r3, #16]
 414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
  91              		.loc 1 414 3
  92 005a 7B68     		ldr	r3, [r7, #4]
  93 005c 1B68     		ldr	r3, [r3]
  94 005e 5A69     		ldr	r2, [r3, #20]
  95 0060 7B68     		ldr	r3, [r7, #4]
  96 0062 1B68     		ldr	r3, [r3]
  97 0064 22F02A02 		bic	r2, r2, #42
  98 0068 5A61     		str	r2, [r3, #20]
 415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the peripheral */
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 10


 417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
  99              		.loc 1 417 3
 100 006a 7B68     		ldr	r3, [r7, #4]
 101 006c 1B68     		ldr	r3, [r3]
 102 006e DA68     		ldr	r2, [r3, #12]
 103 0070 7B68     		ldr	r3, [r7, #4]
 104 0072 1B68     		ldr	r3, [r3]
 105 0074 42F40052 		orr	r2, r2, #8192
 106 0078 DA60     		str	r2, [r3, #12]
 418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize the UART state */
 420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 107              		.loc 1 420 20
 108 007a 7B68     		ldr	r3, [r7, #4]
 109 007c 0022     		movs	r2, #0
 110 007e 1A64     		str	r2, [r3, #64]
 421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 111              		.loc 1 421 17
 112 0080 7B68     		ldr	r3, [r7, #4]
 113 0082 2022     		movs	r2, #32
 114 0084 83F83D20 		strb	r2, [r3, #61]
 422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 115              		.loc 1 422 18
 116 0088 7B68     		ldr	r3, [r7, #4]
 117 008a 2022     		movs	r2, #32
 118 008c 83F83E20 		strb	r2, [r3, #62]
 423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 119              		.loc 1 424 10
 120 0090 0023     		movs	r3, #0
 121              	.L3:
 425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 122              		.loc 1 425 1
 123 0092 1846     		mov	r0, r3
 124 0094 0837     		adds	r7, r7, #8
 125              	.LCFI3:
 126              		.cfi_def_cfa_offset 8
 127 0096 BD46     		mov	sp, r7
 128              	.LCFI4:
 129              		.cfi_def_cfa_register 13
 130              		@ sp needed
 131 0098 80BD     		pop	{r7, pc}
 132              		.cfi_endproc
 133              	.LFE216:
 135              		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 136              		.align	1
 137              		.global	HAL_HalfDuplex_Init
 138              		.syntax unified
 139              		.thumb
 140              		.thumb_func
 141              		.fpu fpv4-sp-d16
 143              	HAL_HalfDuplex_Init:
 144              	.LFB217:
 426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initializes the half-duplex mode according to the specified
 429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 11


 430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 145              		.loc 1 435 1
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 8
 148              		@ frame_needed = 1, uses_anonymous_args = 0
 149 0000 80B5     		push	{r7, lr}
 150              	.LCFI5:
 151              		.cfi_def_cfa_offset 8
 152              		.cfi_offset 7, -8
 153              		.cfi_offset 14, -4
 154 0002 82B0     		sub	sp, sp, #8
 155              	.LCFI6:
 156              		.cfi_def_cfa_offset 16
 157 0004 00AF     		add	r7, sp, #0
 158              	.LCFI7:
 159              		.cfi_def_cfa_register 7
 160 0006 7860     		str	r0, [r7, #4]
 436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart == NULL)
 161              		.loc 1 437 6
 162 0008 7B68     		ldr	r3, [r7, #4]
 163 000a 002B     		cmp	r3, #0
 164 000c 01D1     		bne	.L6
 438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 165              		.loc 1 439 12
 166 000e 0123     		movs	r3, #1
 167 0010 47E0     		b	.L7
 168              	.L6:
 440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_HALFDUPLEX_INSTANCE(huart->Instance));
 444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 169              		.loc 1 447 12
 170 0012 7B68     		ldr	r3, [r7, #4]
 171 0014 93F83D30 		ldrb	r3, [r3, #61]
 172 0018 DBB2     		uxtb	r3, r3
 173              		.loc 1 447 6
 174 001a 002B     		cmp	r3, #0
 175 001c 06D1     		bne	.L8
 448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 176              		.loc 1 450 17
 177 001e 7B68     		ldr	r3, [r7, #4]
 178 0020 0022     		movs	r2, #0
 179 0022 83F83C20 		strb	r2, [r3, #60]
 451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 12


 452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
 463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 180              		.loc 1 464 5
 181 0026 7868     		ldr	r0, [r7, #4]
 182 0028 FFF7FEFF 		bl	HAL_UART_MspInit
 183              	.L8:
 465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 184              		.loc 1 468 17
 185 002c 7B68     		ldr	r3, [r7, #4]
 186 002e 2422     		movs	r2, #36
 187 0030 83F83D20 		strb	r2, [r3, #61]
 469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the peripheral */
 471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 188              		.loc 1 471 3
 189 0034 7B68     		ldr	r3, [r7, #4]
 190 0036 1B68     		ldr	r3, [r3]
 191 0038 DA68     		ldr	r2, [r3, #12]
 192 003a 7B68     		ldr	r3, [r7, #4]
 193 003c 1B68     		ldr	r3, [r3]
 194 003e 22F40052 		bic	r2, r2, #8192
 195 0042 DA60     		str	r2, [r3, #12]
 472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_SetConfig(huart);
 196              		.loc 1 474 3
 197 0044 7868     		ldr	r0, [r7, #4]
 198 0046 FFF7FEFF 		bl	UART_SetConfig
 475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared:
 477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - SCEN and IREN bits in the USART_CR3 register.*/
 479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 199              		.loc 1 479 3
 200 004a 7B68     		ldr	r3, [r7, #4]
 201 004c 1B68     		ldr	r3, [r3]
 202 004e 1A69     		ldr	r2, [r3, #16]
 203 0050 7B68     		ldr	r3, [r7, #4]
 204 0052 1B68     		ldr	r3, [r3]
 205 0054 22F49042 		bic	r2, r2, #18432
 206 0058 1A61     		str	r2, [r3, #16]
 480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 207              		.loc 1 480 3
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 13


 208 005a 7B68     		ldr	r3, [r7, #4]
 209 005c 1B68     		ldr	r3, [r3]
 210 005e 5A69     		ldr	r2, [r3, #20]
 211 0060 7B68     		ldr	r3, [r7, #4]
 212 0062 1B68     		ldr	r3, [r3]
 213 0064 22F02202 		bic	r2, r2, #34
 214 0068 5A61     		str	r2, [r3, #20]
 481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 215              		.loc 1 483 3
 216 006a 7B68     		ldr	r3, [r7, #4]
 217 006c 1B68     		ldr	r3, [r3]
 218 006e 5A69     		ldr	r2, [r3, #20]
 219 0070 7B68     		ldr	r3, [r7, #4]
 220 0072 1B68     		ldr	r3, [r3]
 221 0074 42F00802 		orr	r2, r2, #8
 222 0078 5A61     		str	r2, [r3, #20]
 484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the peripheral */
 486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 223              		.loc 1 486 3
 224 007a 7B68     		ldr	r3, [r7, #4]
 225 007c 1B68     		ldr	r3, [r3]
 226 007e DA68     		ldr	r2, [r3, #12]
 227 0080 7B68     		ldr	r3, [r7, #4]
 228 0082 1B68     		ldr	r3, [r3]
 229 0084 42F40052 		orr	r2, r2, #8192
 230 0088 DA60     		str	r2, [r3, #12]
 487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize the UART state*/
 489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 231              		.loc 1 489 20
 232 008a 7B68     		ldr	r3, [r7, #4]
 233 008c 0022     		movs	r2, #0
 234 008e 1A64     		str	r2, [r3, #64]
 490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 235              		.loc 1 490 17
 236 0090 7B68     		ldr	r3, [r7, #4]
 237 0092 2022     		movs	r2, #32
 238 0094 83F83D20 		strb	r2, [r3, #61]
 491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 239              		.loc 1 491 18
 240 0098 7B68     		ldr	r3, [r7, #4]
 241 009a 2022     		movs	r2, #32
 242 009c 83F83E20 		strb	r2, [r3, #62]
 492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 243              		.loc 1 493 10
 244 00a0 0023     		movs	r3, #0
 245              	.L7:
 494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 246              		.loc 1 494 1
 247 00a2 1846     		mov	r0, r3
 248 00a4 0837     		adds	r7, r7, #8
 249              	.LCFI8:
 250              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 14


 251 00a6 BD46     		mov	sp, r7
 252              	.LCFI9:
 253              		.cfi_def_cfa_register 13
 254              		@ sp needed
 255 00a8 80BD     		pop	{r7, pc}
 256              		.cfi_endproc
 257              	.LFE217:
 259              		.section	.text.HAL_LIN_Init,"ax",%progbits
 260              		.align	1
 261              		.global	HAL_LIN_Init
 262              		.syntax unified
 263              		.thumb
 264              		.thumb_func
 265              		.fpu fpv4-sp-d16
 267              	HAL_LIN_Init:
 268              	.LFB218:
 495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initializes the LIN mode according to the specified
 498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  BreakDetectLength Specifies the LIN break detection length.
 502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *            @arg UART_LINBREAKDETECTLENGTH_10B: 10-bit break detection
 504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *            @arg UART_LINBREAKDETECTLENGTH_11B: 11-bit break detection
 505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_Init(UART_HandleTypeDef *huart, uint32_t BreakDetectLength)
 508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 269              		.loc 1 508 1
 270              		.cfi_startproc
 271              		@ args = 0, pretend = 0, frame = 8
 272              		@ frame_needed = 1, uses_anonymous_args = 0
 273 0000 80B5     		push	{r7, lr}
 274              	.LCFI10:
 275              		.cfi_def_cfa_offset 8
 276              		.cfi_offset 7, -8
 277              		.cfi_offset 14, -4
 278 0002 82B0     		sub	sp, sp, #8
 279              	.LCFI11:
 280              		.cfi_def_cfa_offset 16
 281 0004 00AF     		add	r7, sp, #0
 282              	.LCFI12:
 283              		.cfi_def_cfa_register 7
 284 0006 7860     		str	r0, [r7, #4]
 285 0008 3960     		str	r1, [r7]
 509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart == NULL)
 286              		.loc 1 510 6
 287 000a 7B68     		ldr	r3, [r7, #4]
 288 000c 002B     		cmp	r3, #0
 289 000e 01D1     		bne	.L10
 511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 290              		.loc 1 512 12
 291 0010 0123     		movs	r3, #1
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 15


 292 0012 57E0     		b	.L11
 293              	.L10:
 513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the LIN UART instance */
 516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
 517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the Break detection length parameter */
 519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
 520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_WORD_LENGTH(huart->Init.WordLength));
 521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_OVERSAMPLING(huart->Init.OverSampling));
 522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 294              		.loc 1 523 12
 295 0014 7B68     		ldr	r3, [r7, #4]
 296 0016 93F83D30 		ldrb	r3, [r3, #61]
 297 001a DBB2     		uxtb	r3, r3
 298              		.loc 1 523 6
 299 001c 002B     		cmp	r3, #0
 300 001e 06D1     		bne	.L12
 524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 301              		.loc 1 526 17
 302 0020 7B68     		ldr	r3, [r7, #4]
 303 0022 0022     		movs	r2, #0
 304 0024 83F83C20 		strb	r2, [r3, #60]
 527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
 539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 305              		.loc 1 540 5
 306 0028 7868     		ldr	r0, [r7, #4]
 307 002a FFF7FEFF 		bl	HAL_UART_MspInit
 308              	.L12:
 541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 309              		.loc 1 544 17
 310 002e 7B68     		ldr	r3, [r7, #4]
 311 0030 2422     		movs	r2, #36
 312 0032 83F83D20 		strb	r2, [r3, #61]
 545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the peripheral */
 547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 313              		.loc 1 547 3
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 16


 314 0036 7B68     		ldr	r3, [r7, #4]
 315 0038 1B68     		ldr	r3, [r3]
 316 003a DA68     		ldr	r2, [r3, #12]
 317 003c 7B68     		ldr	r3, [r7, #4]
 318 003e 1B68     		ldr	r3, [r3]
 319 0040 22F40052 		bic	r2, r2, #8192
 320 0044 DA60     		str	r2, [r3, #12]
 548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_SetConfig(huart);
 321              		.loc 1 550 3
 322 0046 7868     		ldr	r0, [r7, #4]
 323 0048 FFF7FEFF 		bl	UART_SetConfig
 551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In LIN mode, the following bits must be kept cleared:
 553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - CLKEN bits in the USART_CR2 register,
 554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - SCEN, HDSEL and IREN bits in the USART_CR3 register.*/
 555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_CLKEN));
 324              		.loc 1 555 3
 325 004c 7B68     		ldr	r3, [r7, #4]
 326 004e 1B68     		ldr	r3, [r3]
 327 0050 1A69     		ldr	r2, [r3, #16]
 328 0052 7B68     		ldr	r3, [r7, #4]
 329 0054 1B68     		ldr	r3, [r3]
 330 0056 22F40062 		bic	r2, r2, #2048
 331 005a 1A61     		str	r2, [r3, #16]
 556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 332              		.loc 1 556 3
 333 005c 7B68     		ldr	r3, [r7, #4]
 334 005e 1B68     		ldr	r3, [r3]
 335 0060 5A69     		ldr	r2, [r3, #20]
 336 0062 7B68     		ldr	r3, [r7, #4]
 337 0064 1B68     		ldr	r3, [r3]
 338 0066 22F02A02 		bic	r2, r2, #42
 339 006a 5A61     		str	r2, [r3, #20]
 557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, USART_CR2_LINEN);
 340              		.loc 1 559 3
 341 006c 7B68     		ldr	r3, [r7, #4]
 342 006e 1B68     		ldr	r3, [r3]
 343 0070 1A69     		ldr	r2, [r3, #16]
 344 0072 7B68     		ldr	r3, [r7, #4]
 345 0074 1B68     		ldr	r3, [r3]
 346 0076 42F48042 		orr	r2, r2, #16384
 347 007a 1A61     		str	r2, [r3, #16]
 560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the USART LIN Break detection length. */
 562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_LBDL);
 348              		.loc 1 562 3
 349 007c 7B68     		ldr	r3, [r7, #4]
 350 007e 1B68     		ldr	r3, [r3]
 351 0080 1A69     		ldr	r2, [r3, #16]
 352 0082 7B68     		ldr	r3, [r7, #4]
 353 0084 1B68     		ldr	r3, [r3]
 354 0086 22F02002 		bic	r2, r2, #32
 355 008a 1A61     		str	r2, [r3, #16]
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 17


 563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, BreakDetectLength);
 356              		.loc 1 563 3
 357 008c 7B68     		ldr	r3, [r7, #4]
 358 008e 1B68     		ldr	r3, [r3]
 359 0090 1969     		ldr	r1, [r3, #16]
 360 0092 7B68     		ldr	r3, [r7, #4]
 361 0094 1B68     		ldr	r3, [r3]
 362 0096 3A68     		ldr	r2, [r7]
 363 0098 0A43     		orrs	r2, r2, r1
 364 009a 1A61     		str	r2, [r3, #16]
 564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the peripheral */
 566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 365              		.loc 1 566 3
 366 009c 7B68     		ldr	r3, [r7, #4]
 367 009e 1B68     		ldr	r3, [r3]
 368 00a0 DA68     		ldr	r2, [r3, #12]
 369 00a2 7B68     		ldr	r3, [r7, #4]
 370 00a4 1B68     		ldr	r3, [r3]
 371 00a6 42F40052 		orr	r2, r2, #8192
 372 00aa DA60     		str	r2, [r3, #12]
 567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize the UART state*/
 569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 373              		.loc 1 569 20
 374 00ac 7B68     		ldr	r3, [r7, #4]
 375 00ae 0022     		movs	r2, #0
 376 00b0 1A64     		str	r2, [r3, #64]
 570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 377              		.loc 1 570 17
 378 00b2 7B68     		ldr	r3, [r7, #4]
 379 00b4 2022     		movs	r2, #32
 380 00b6 83F83D20 		strb	r2, [r3, #61]
 571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 381              		.loc 1 571 18
 382 00ba 7B68     		ldr	r3, [r7, #4]
 383 00bc 2022     		movs	r2, #32
 384 00be 83F83E20 		strb	r2, [r3, #62]
 572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 385              		.loc 1 573 10
 386 00c2 0023     		movs	r3, #0
 387              	.L11:
 574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 388              		.loc 1 574 1
 389 00c4 1846     		mov	r0, r3
 390 00c6 0837     		adds	r7, r7, #8
 391              	.LCFI13:
 392              		.cfi_def_cfa_offset 8
 393 00c8 BD46     		mov	sp, r7
 394              	.LCFI14:
 395              		.cfi_def_cfa_register 13
 396              		@ sp needed
 397 00ca 80BD     		pop	{r7, pc}
 398              		.cfi_endproc
 399              	.LFE218:
 401              		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 18


 402              		.align	1
 403              		.global	HAL_MultiProcessor_Init
 404              		.syntax unified
 405              		.thumb
 406              		.thumb_func
 407              		.fpu fpv4-sp-d16
 409              	HAL_MultiProcessor_Init:
 410              	.LFB219:
 575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initializes the Multi-Processor mode according to the specified
 578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Address USART address
 582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  WakeUpMethod specifies the USART wake-up method.
 583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *            @arg UART_WAKEUPMETHOD_IDLELINE: Wake-up by an idle line detection
 585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *            @arg UART_WAKEUPMETHOD_ADDRESSMARK: Wake-up by an address mark
 586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 411              		.loc 1 589 1
 412              		.cfi_startproc
 413              		@ args = 0, pretend = 0, frame = 16
 414              		@ frame_needed = 1, uses_anonymous_args = 0
 415 0000 80B5     		push	{r7, lr}
 416              	.LCFI15:
 417              		.cfi_def_cfa_offset 8
 418              		.cfi_offset 7, -8
 419              		.cfi_offset 14, -4
 420 0002 84B0     		sub	sp, sp, #16
 421              	.LCFI16:
 422              		.cfi_def_cfa_offset 24
 423 0004 00AF     		add	r7, sp, #0
 424              	.LCFI17:
 425              		.cfi_def_cfa_register 7
 426 0006 F860     		str	r0, [r7, #12]
 427 0008 0B46     		mov	r3, r1
 428 000a 7A60     		str	r2, [r7, #4]
 429 000c FB72     		strb	r3, [r7, #11]
 590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart == NULL)
 430              		.loc 1 591 6
 431 000e FB68     		ldr	r3, [r7, #12]
 432 0010 002B     		cmp	r3, #0
 433 0012 01D1     		bne	.L14
 592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 434              		.loc 1 593 12
 435 0014 0123     		movs	r3, #1
 436 0016 5FE0     		b	.L15
 437              	.L14:
 594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 19


 597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the Address & wake up method parameters */
 600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_ADDRESS(Address));
 602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 438              		.loc 1 605 12
 439 0018 FB68     		ldr	r3, [r7, #12]
 440 001a 93F83D30 		ldrb	r3, [r3, #61]
 441 001e DBB2     		uxtb	r3, r3
 442              		.loc 1 605 6
 443 0020 002B     		cmp	r3, #0
 444 0022 06D1     		bne	.L16
 606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 445              		.loc 1 608 17
 446 0024 FB68     		ldr	r3, [r7, #12]
 447 0026 0022     		movs	r2, #0
 448 0028 83F83C20 		strb	r2, [r3, #60]
 609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
 621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 449              		.loc 1 622 5
 450 002c F868     		ldr	r0, [r7, #12]
 451 002e FFF7FEFF 		bl	HAL_UART_MspInit
 452              	.L16:
 623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 453              		.loc 1 626 17
 454 0032 FB68     		ldr	r3, [r7, #12]
 455 0034 2422     		movs	r2, #36
 456 0036 83F83D20 		strb	r2, [r3, #61]
 627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the peripheral */
 629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 457              		.loc 1 629 3
 458 003a FB68     		ldr	r3, [r7, #12]
 459 003c 1B68     		ldr	r3, [r3]
 460 003e DA68     		ldr	r2, [r3, #12]
 461 0040 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 20


 462 0042 1B68     		ldr	r3, [r3]
 463 0044 22F40052 		bic	r2, r2, #8192
 464 0048 DA60     		str	r2, [r3, #12]
 630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_SetConfig(huart);
 465              		.loc 1 632 3
 466 004a F868     		ldr	r0, [r7, #12]
 467 004c FFF7FEFF 		bl	UART_SetConfig
 633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In Multi-Processor mode, the following bits must be kept cleared:
 635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - SCEN, HDSEL and IREN  bits in the USART_CR3 register */
 637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 468              		.loc 1 637 3
 469 0050 FB68     		ldr	r3, [r7, #12]
 470 0052 1B68     		ldr	r3, [r3]
 471 0054 1A69     		ldr	r2, [r3, #16]
 472 0056 FB68     		ldr	r3, [r7, #12]
 473 0058 1B68     		ldr	r3, [r3]
 474 005a 22F49042 		bic	r2, r2, #18432
 475 005e 1A61     		str	r2, [r3, #16]
 638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 476              		.loc 1 638 3
 477 0060 FB68     		ldr	r3, [r7, #12]
 478 0062 1B68     		ldr	r3, [r3]
 479 0064 5A69     		ldr	r2, [r3, #20]
 480 0066 FB68     		ldr	r3, [r7, #12]
 481 0068 1B68     		ldr	r3, [r3]
 482 006a 22F02A02 		bic	r2, r2, #42
 483 006e 5A61     		str	r2, [r3, #20]
 639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the USART address node */
 641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_ADD);
 484              		.loc 1 641 3
 485 0070 FB68     		ldr	r3, [r7, #12]
 486 0072 1B68     		ldr	r3, [r3]
 487 0074 1A69     		ldr	r2, [r3, #16]
 488 0076 FB68     		ldr	r3, [r7, #12]
 489 0078 1B68     		ldr	r3, [r3]
 490 007a 22F00F02 		bic	r2, r2, #15
 491 007e 1A61     		str	r2, [r3, #16]
 642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, Address);
 492              		.loc 1 642 3
 493 0080 FB68     		ldr	r3, [r7, #12]
 494 0082 1B68     		ldr	r3, [r3]
 495 0084 1969     		ldr	r1, [r3, #16]
 496 0086 FA7A     		ldrb	r2, [r7, #11]	@ zero_extendqisi2
 497 0088 FB68     		ldr	r3, [r7, #12]
 498 008a 1B68     		ldr	r3, [r3]
 499 008c 0A43     		orrs	r2, r2, r1
 500 008e 1A61     		str	r2, [r3, #16]
 643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_WAKE);
 501              		.loc 1 645 3
 502 0090 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 21


 503 0092 1B68     		ldr	r3, [r3]
 504 0094 DA68     		ldr	r2, [r3, #12]
 505 0096 FB68     		ldr	r3, [r7, #12]
 506 0098 1B68     		ldr	r3, [r3]
 507 009a 22F40062 		bic	r2, r2, #2048
 508 009e DA60     		str	r2, [r3, #12]
 646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, WakeUpMethod);
 509              		.loc 1 646 3
 510 00a0 FB68     		ldr	r3, [r7, #12]
 511 00a2 1B68     		ldr	r3, [r3]
 512 00a4 D968     		ldr	r1, [r3, #12]
 513 00a6 FB68     		ldr	r3, [r7, #12]
 514 00a8 1B68     		ldr	r3, [r3]
 515 00aa 7A68     		ldr	r2, [r7, #4]
 516 00ac 0A43     		orrs	r2, r2, r1
 517 00ae DA60     		str	r2, [r3, #12]
 647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the peripheral */
 649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 518              		.loc 1 649 3
 519 00b0 FB68     		ldr	r3, [r7, #12]
 520 00b2 1B68     		ldr	r3, [r3]
 521 00b4 DA68     		ldr	r2, [r3, #12]
 522 00b6 FB68     		ldr	r3, [r7, #12]
 523 00b8 1B68     		ldr	r3, [r3]
 524 00ba 42F40052 		orr	r2, r2, #8192
 525 00be DA60     		str	r2, [r3, #12]
 650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize the UART state */
 652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 526              		.loc 1 652 20
 527 00c0 FB68     		ldr	r3, [r7, #12]
 528 00c2 0022     		movs	r2, #0
 529 00c4 1A64     		str	r2, [r3, #64]
 653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 530              		.loc 1 653 17
 531 00c6 FB68     		ldr	r3, [r7, #12]
 532 00c8 2022     		movs	r2, #32
 533 00ca 83F83D20 		strb	r2, [r3, #61]
 654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 534              		.loc 1 654 18
 535 00ce FB68     		ldr	r3, [r7, #12]
 536 00d0 2022     		movs	r2, #32
 537 00d2 83F83E20 		strb	r2, [r3, #62]
 655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 538              		.loc 1 656 10
 539 00d6 0023     		movs	r3, #0
 540              	.L15:
 657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 541              		.loc 1 657 1
 542 00d8 1846     		mov	r0, r3
 543 00da 1037     		adds	r7, r7, #16
 544              	.LCFI18:
 545              		.cfi_def_cfa_offset 8
 546 00dc BD46     		mov	sp, r7
 547              	.LCFI19:
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 22


 548              		.cfi_def_cfa_register 13
 549              		@ sp needed
 550 00de 80BD     		pop	{r7, pc}
 551              		.cfi_endproc
 552              	.LFE219:
 554              		.section	.text.HAL_UART_DeInit,"ax",%progbits
 555              		.align	1
 556              		.global	HAL_UART_DeInit
 557              		.syntax unified
 558              		.thumb
 559              		.thumb_func
 560              		.fpu fpv4-sp-d16
 562              	HAL_UART_DeInit:
 563              	.LFB220:
 658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DeInitializes the UART peripheral.
 661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 564              		.loc 1 666 1
 565              		.cfi_startproc
 566              		@ args = 0, pretend = 0, frame = 8
 567              		@ frame_needed = 1, uses_anonymous_args = 0
 568 0000 80B5     		push	{r7, lr}
 569              	.LCFI20:
 570              		.cfi_def_cfa_offset 8
 571              		.cfi_offset 7, -8
 572              		.cfi_offset 14, -4
 573 0002 82B0     		sub	sp, sp, #8
 574              	.LCFI21:
 575              		.cfi_def_cfa_offset 16
 576 0004 00AF     		add	r7, sp, #0
 577              	.LCFI22:
 578              		.cfi_def_cfa_register 7
 579 0006 7860     		str	r0, [r7, #4]
 667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart == NULL)
 580              		.loc 1 668 6
 581 0008 7B68     		ldr	r3, [r7, #4]
 582 000a 002B     		cmp	r3, #0
 583 000c 01D1     		bne	.L18
 669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 584              		.loc 1 670 12
 585 000e 0123     		movs	r3, #1
 586 0010 21E0     		b	.L19
 587              	.L18:
 671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 23


 588              		.loc 1 676 17
 589 0012 7B68     		ldr	r3, [r7, #4]
 590 0014 2422     		movs	r2, #36
 591 0016 83F83D20 		strb	r2, [r3, #61]
 677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the Peripheral */
 679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 592              		.loc 1 679 3
 593 001a 7B68     		ldr	r3, [r7, #4]
 594 001c 1B68     		ldr	r3, [r3]
 595 001e DA68     		ldr	r2, [r3, #12]
 596 0020 7B68     		ldr	r3, [r7, #4]
 597 0022 1B68     		ldr	r3, [r3]
 598 0024 22F40052 		bic	r2, r2, #8192
 599 0028 DA60     		str	r2, [r3, #12]
 680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->MspDeInitCallback == NULL)
 683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->MspDeInitCallback = HAL_UART_MspDeInit;
 685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DeInit the low level hardware */
 687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->MspDeInitCallback(huart);
 688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
 689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DeInit the low level hardware */
 690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 600              		.loc 1 690 3
 601 002a 7868     		ldr	r0, [r7, #4]
 602 002c FFF7FEFF 		bl	HAL_UART_MspDeInit
 691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 603              		.loc 1 693 20
 604 0030 7B68     		ldr	r3, [r7, #4]
 605 0032 0022     		movs	r2, #0
 606 0034 1A64     		str	r2, [r3, #64]
 694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 607              		.loc 1 694 17
 608 0036 7B68     		ldr	r3, [r7, #4]
 609 0038 0022     		movs	r2, #0
 610 003a 83F83D20 		strb	r2, [r3, #61]
 695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 611              		.loc 1 695 18
 612 003e 7B68     		ldr	r3, [r7, #4]
 613 0040 0022     		movs	r2, #0
 614 0042 83F83E20 		strb	r2, [r3, #62]
 696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 615              		.loc 1 696 24
 616 0046 7B68     		ldr	r3, [r7, #4]
 617 0048 0022     		movs	r2, #0
 618 004a 1A63     		str	r2, [r3, #48]
 697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlock */
 699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 619              		.loc 1 699 3
 620 004c 7B68     		ldr	r3, [r7, #4]
 621 004e 0022     		movs	r2, #0
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 24


 622 0050 83F83C20 		strb	r2, [r3, #60]
 700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 623              		.loc 1 701 10
 624 0054 0023     		movs	r3, #0
 625              	.L19:
 702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 626              		.loc 1 702 1
 627 0056 1846     		mov	r0, r3
 628 0058 0837     		adds	r7, r7, #8
 629              	.LCFI23:
 630              		.cfi_def_cfa_offset 8
 631 005a BD46     		mov	sp, r7
 632              	.LCFI24:
 633              		.cfi_def_cfa_register 13
 634              		@ sp needed
 635 005c 80BD     		pop	{r7, pc}
 636              		.cfi_endproc
 637              	.LFE220:
 639              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 640              		.align	1
 641              		.weak	HAL_UART_MspInit
 642              		.syntax unified
 643              		.thumb
 644              		.thumb_func
 645              		.fpu fpv4-sp-d16
 647              	HAL_UART_MspInit:
 648              	.LFB221:
 703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART MSP Init.
 706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
 709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 649              		.loc 1 711 1
 650              		.cfi_startproc
 651              		@ args = 0, pretend = 0, frame = 8
 652              		@ frame_needed = 1, uses_anonymous_args = 0
 653              		@ link register save eliminated.
 654 0000 80B4     		push	{r7}
 655              	.LCFI25:
 656              		.cfi_def_cfa_offset 4
 657              		.cfi_offset 7, -4
 658 0002 83B0     		sub	sp, sp, #12
 659              	.LCFI26:
 660              		.cfi_def_cfa_offset 16
 661 0004 00AF     		add	r7, sp, #0
 662              	.LCFI27:
 663              		.cfi_def_cfa_register 7
 664 0006 7860     		str	r0, [r7, #4]
 712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
 714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
 715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_MspInit could be implemented in the user file
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 25


 716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
 717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 665              		.loc 1 717 1
 666 0008 00BF     		nop
 667 000a 0C37     		adds	r7, r7, #12
 668              	.LCFI28:
 669              		.cfi_def_cfa_offset 4
 670 000c BD46     		mov	sp, r7
 671              	.LCFI29:
 672              		.cfi_def_cfa_register 13
 673              		@ sp needed
 674 000e 5DF8047B 		ldr	r7, [sp], #4
 675              	.LCFI30:
 676              		.cfi_restore 7
 677              		.cfi_def_cfa_offset 0
 678 0012 7047     		bx	lr
 679              		.cfi_endproc
 680              	.LFE221:
 682              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 683              		.align	1
 684              		.weak	HAL_UART_MspDeInit
 685              		.syntax unified
 686              		.thumb
 687              		.thumb_func
 688              		.fpu fpv4-sp-d16
 690              	HAL_UART_MspDeInit:
 691              	.LFB222:
 718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART MSP DeInit.
 721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
 724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 692              		.loc 1 726 1
 693              		.cfi_startproc
 694              		@ args = 0, pretend = 0, frame = 8
 695              		@ frame_needed = 1, uses_anonymous_args = 0
 696              		@ link register save eliminated.
 697 0000 80B4     		push	{r7}
 698              	.LCFI31:
 699              		.cfi_def_cfa_offset 4
 700              		.cfi_offset 7, -4
 701 0002 83B0     		sub	sp, sp, #12
 702              	.LCFI32:
 703              		.cfi_def_cfa_offset 16
 704 0004 00AF     		add	r7, sp, #0
 705              	.LCFI33:
 706              		.cfi_def_cfa_register 7
 707 0006 7860     		str	r0, [r7, #4]
 727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
 729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
 730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_MspDeInit could be implemented in the user file
 731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 26


 732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 708              		.loc 1 732 1
 709 0008 00BF     		nop
 710 000a 0C37     		adds	r7, r7, #12
 711              	.LCFI34:
 712              		.cfi_def_cfa_offset 4
 713 000c BD46     		mov	sp, r7
 714              	.LCFI35:
 715              		.cfi_def_cfa_register 13
 716              		@ sp needed
 717 000e 5DF8047B 		ldr	r7, [sp], #4
 718              	.LCFI36:
 719              		.cfi_restore 7
 720              		.cfi_def_cfa_offset 0
 721 0012 7047     		bx	lr
 722              		.cfi_endproc
 723              	.LFE222:
 725              		.section	.text.HAL_UART_Transmit,"ax",%progbits
 726              		.align	1
 727              		.global	HAL_UART_Transmit
 728              		.syntax unified
 729              		.thumb
 730              		.thumb_func
 731              		.fpu fpv4-sp-d16
 733              	HAL_UART_Transmit:
 734              	.LFB223:
 733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Register a User UART Callback
 737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         To be used instead of the weak predefined callback
 738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart uart handle
 739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be registered
 740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pCallback pointer to the Callback function
 752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_RegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef C
 755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                                             pUART_CallbackTypeDef pCallback)
 756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (pCallback == NULL)
 760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Update the error code */
 762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 27


 764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process locked */
 767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     switch (CallbackID)
 772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->TxHalfCpltCallback = pCallback;
 775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->TxCpltCallback = pCallback;
 779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxHalfCpltCallback = pCallback;
 783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxCpltCallback = pCallback;
 787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCallback = pCallback;
 791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->AbortCpltCallback = pCallback;
 795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = pCallback;
 799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = pCallback;
 803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       default :
 814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Update the error code */
 815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Return error status */
 818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         status =  HAL_ERROR;
 819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 28


 821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else if (huart->gState == HAL_UART_STATE_RESET)
 823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     switch (CallbackID)
 825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       default :
 835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Update the error code */
 836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Return error status */
 839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         status =  HAL_ERROR;
 840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Update the error code */
 846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Return error status */
 849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     status =  HAL_ERROR;
 850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Release Lock */
 853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return status;
 856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Unregister an UART Callback
 860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         UART callaback is redirected to the weak predefined callback
 861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart uart handle
 862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be unregistered
 863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_UnRegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef
 877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 29


 878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process locked */
 881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_UART_STATE_READY == huart->gState)
 884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     switch (CallbackID)
 886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->TxHalfCpltCallback = HAL_UART_TxHalfCpltCallback;               /* Legacy weak  TxHa
 889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->TxCpltCallback = HAL_UART_TxCpltCallback;                       /* Legacy weak TxCpl
 893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxHalfCpltCallback = HAL_UART_RxHalfCpltCallback;               /* Legacy weak RxHal
 897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxCpltCallback = HAL_UART_RxCpltCallback;                       /* Legacy weak RxCpl
 901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCallback = HAL_UART_ErrorCallback;                         /* Legacy weak Error
 905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->AbortCpltCallback = HAL_UART_AbortCpltCallback;                 /* Legacy weak Abort
 909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak Abort
 913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = HAL_UART_AbortReceiveCpltCallback;   /* Legacy weak Abort
 917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;                             /* Legacy weak MspIn
 921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;                         /* Legacy weak MspDe
 925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       default :
 928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Update the error code */
 929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Return error status */
 932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         status =  HAL_ERROR;
 933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 30


 935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else if (HAL_UART_STATE_RESET == huart->gState)
 937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     switch (CallbackID)
 939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;
 942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;
 946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       default :
 949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Update the error code */
 950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Return error status */
 953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         status =  HAL_ERROR;
 954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Update the error code */
 960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Return error status */
 963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     status =  HAL_ERROR;
 964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Release Lock */
 967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return status;
 970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Register a User UART Rx Event Callback
 974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         To be used instead of the weak predefined callback
 975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart     Uart handle
 976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pCallback Pointer to the Rx Event Callback function
 977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_RegisterRxEventCallback(UART_HandleTypeDef *huart, pUART_RxEventCallback
 980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (pCallback == NULL)
 984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process locked */
 991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 31


 992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxEventCallback = pCallback;
 996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
1000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     status =  HAL_ERROR;
1002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Release Lock */
1005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return status;
1008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UnRegister the UART Rx Event Callback
1012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         UART Rx Event Callback is redirected to the weak HAL_UARTEx_RxEventCallback() predefine
1013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart     Uart handle
1014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_UnRegisterRxEventCallback(UART_HandleTypeDef *huart)
1017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
1019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process locked */
1021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
1022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxEventCallback = HAL_UARTEx_RxEventCallback; /* Legacy weak UART Rx Event Callback  */
1026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
1030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     status =  HAL_ERROR;
1032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Release Lock */
1035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return status;
1037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
1039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
1042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions
1045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *  @brief UART Transmit and Receive functions
1046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
1047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @verbatim
1048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  ===============================================================================
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 32


1049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                       ##### IO operation functions #####
1050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  ===============================================================================
1051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
1052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     and Half duplex data transfers.
1053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) There are two modes of transfer:
1055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Blocking mode: The communication is performed in polling mode.
1056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            The HAL status of all data processing is returned by the same function
1057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            after finishing transfer.
1058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Non-Blocking mode: The communication is performed using Interrupts
1059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            or DMA, these API's return the HAL status.
1060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            The end of the data processing will be indicated through the
1061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when
1062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            using DMA mode.
1063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks
1064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            will be executed respectively at the end of the transmit or receive process
1065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a communication error is
1066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Blocking mode API's are :
1068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Transmit()
1069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Receive()
1070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Non-Blocking mode API's with Interrupt are :
1072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Transmit_IT()
1073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Receive_IT()
1074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_IRQHandler()
1075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Non-Blocking mode API's with DMA are :
1077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Transmit_DMA()
1078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Receive_DMA()
1079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_DMAPause()
1080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_DMAResume()
1081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_DMAStop()
1082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in Non_Blocking mode:
1084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_TxHalfCpltCallback()
1085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_TxCpltCallback()
1086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_RxHalfCpltCallback()
1087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_RxCpltCallback()
1088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_ErrorCallback()
1089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Non-Blocking mode transfers could be aborted using Abort API's :
1091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Abort()
1092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit()
1093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortReceive()
1094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Abort_IT()
1095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit_IT()
1096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortReceive_IT()
1097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For Abort services based on interrupts (HAL_UART_Abortxxx_IT), a set of Abort Complete Call
1099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortCpltCallback()
1100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmitCpltCallback()
1101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortReceiveCpltCallback()
1102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) A Rx Event Reception Callback (Rx event notification) is available for Non_Blocking modes o
1104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UARTEx_RxEventCallback()
1105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 33


1106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) In Non-Blocking mode transfers, possible errors are split into 2 categories.
1107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         Errors are handled as follows :
1108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Error is considered as Recoverable and non blocking : Transfer could go till end, but er
1109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            to be evaluated by user : this concerns Frame Error, Parity Error or Noise Error in Inte
1110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Received character is then retrieved and stored in Rx buffer, Error code is set to allow
1111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            and HAL_UART_ErrorCallback() user callback is executed. Transfer is kept ongoing on UART
1112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            If user wants to abort it, Abort services should be called by user.
1113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Error is considered as Blocking : Transfer could not be completed properly and is aborte
1114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            This concerns Overrun Error In Interrupt mode reception and all errors in DMA mode.
1115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Error code is set to allow user to identify error type, and HAL_UART_ErrorCallback() use
1116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     -@- In the Half duplex communication, it is forbidden to run the transmit
1118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX can't be useful.
1119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @endverbatim
1121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
1122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Sends an amount of data in blocking mode.
1126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of u16 provided through pData.
1129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
1130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified UART module.
1131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
1132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be sent
1133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Timeout Timeout duration
1134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, const uint8_t *pData, uint16_t Size,
1137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 735              		.loc 1 1137 1
 736              		.cfi_startproc
 737              		@ args = 0, pretend = 0, frame = 32
 738              		@ frame_needed = 1, uses_anonymous_args = 0
 739 0000 80B5     		push	{r7, lr}
 740              	.LCFI37:
 741              		.cfi_def_cfa_offset 8
 742              		.cfi_offset 7, -8
 743              		.cfi_offset 14, -4
 744 0002 8AB0     		sub	sp, sp, #40
 745              	.LCFI38:
 746              		.cfi_def_cfa_offset 48
 747 0004 02AF     		add	r7, sp, #8
 748              	.LCFI39:
 749              		.cfi_def_cfa 7, 40
 750 0006 F860     		str	r0, [r7, #12]
 751 0008 B960     		str	r1, [r7, #8]
 752 000a 3B60     		str	r3, [r7]
 753 000c 1346     		mov	r3, r2	@ movhi
 754 000e FB80     		strh	r3, [r7, #6]	@ movhi
1138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   const uint8_t  *pdata8bits;
1139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   const uint16_t *pdata16bits;
1140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tickstart = 0U;
 755              		.loc 1 1140 12
 756 0010 0023     		movs	r3, #0
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 34


 757 0012 7B61     		str	r3, [r7, #20]
1141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 758              		.loc 1 1143 12
 759 0014 FB68     		ldr	r3, [r7, #12]
 760 0016 93F83D30 		ldrb	r3, [r3, #61]
 761 001a DBB2     		uxtb	r3, r3
 762              		.loc 1 1143 6
 763 001c 202B     		cmp	r3, #32
 764 001e 7CD1     		bne	.L23
1144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 765              		.loc 1 1145 8
 766 0020 BB68     		ldr	r3, [r7, #8]
 767 0022 002B     		cmp	r3, #0
 768 0024 02D0     		beq	.L24
 769              		.loc 1 1145 25 discriminator 1
 770 0026 FB88     		ldrh	r3, [r7, #6]
 771 0028 002B     		cmp	r3, #0
 772 002a 01D1     		bne	.L25
 773              	.L24:
1146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return  HAL_ERROR;
 774              		.loc 1 1147 15
 775 002c 0123     		movs	r3, #1
 776 002e 75E0     		b	.L26
 777              	.L25:
1148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
1151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 778              		.loc 1 1151 5
 779 0030 FB68     		ldr	r3, [r7, #12]
 780 0032 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 781 0036 012B     		cmp	r3, #1
 782 0038 01D1     		bne	.L27
 783              		.loc 1 1151 5 is_stmt 0 discriminator 1
 784 003a 0223     		movs	r3, #2
 785 003c 6EE0     		b	.L26
 786              	.L27:
 787              		.loc 1 1151 5 discriminator 2
 788 003e FB68     		ldr	r3, [r7, #12]
 789 0040 0122     		movs	r2, #1
 790 0042 83F83C20 		strb	r2, [r3, #60]
1152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 791              		.loc 1 1153 22 is_stmt 1 discriminator 2
 792 0046 FB68     		ldr	r3, [r7, #12]
 793 0048 0022     		movs	r2, #0
 794 004a 1A64     		str	r2, [r3, #64]
1154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 795              		.loc 1 1154 19 discriminator 2
 796 004c FB68     		ldr	r3, [r7, #12]
 797 004e 2122     		movs	r2, #33
 798 0050 83F83D20 		strb	r2, [r3, #61]
1155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 35


1156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init tickstart for timeout management */
1157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     tickstart = HAL_GetTick();
 799              		.loc 1 1157 17 discriminator 2
 800 0054 FFF7FEFF 		bl	HAL_GetTick
 801 0058 7861     		str	r0, [r7, #20]
1158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferSize = Size;
 802              		.loc 1 1159 23 discriminator 2
 803 005a FB68     		ldr	r3, [r7, #12]
 804 005c FA88     		ldrh	r2, [r7, #6]	@ movhi
 805 005e 9A84     		strh	r2, [r3, #36]	@ movhi
1160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
 806              		.loc 1 1160 24 discriminator 2
 807 0060 FB68     		ldr	r3, [r7, #12]
 808 0062 FA88     		ldrh	r2, [r7, #6]	@ movhi
 809 0064 DA84     		strh	r2, [r3, #38]	@ movhi
1161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData needs to be handled as a uint16_t pointer */
1163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 810              		.loc 1 1163 21 discriminator 2
 811 0066 FB68     		ldr	r3, [r7, #12]
 812 0068 9B68     		ldr	r3, [r3, #8]
 813              		.loc 1 1163 8 discriminator 2
 814 006a B3F5805F 		cmp	r3, #4096
 815 006e 08D1     		bne	.L28
 816              		.loc 1 1163 71 discriminator 1
 817 0070 FB68     		ldr	r3, [r7, #12]
 818 0072 1B69     		ldr	r3, [r3, #16]
 819              		.loc 1 1163 56 discriminator 1
 820 0074 002B     		cmp	r3, #0
 821 0076 04D1     		bne	.L28
1164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata8bits  = NULL;
 822              		.loc 1 1165 19
 823 0078 0023     		movs	r3, #0
 824 007a FB61     		str	r3, [r7, #28]
1166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata16bits = (const uint16_t *) pData;
 825              		.loc 1 1166 19
 826 007c BB68     		ldr	r3, [r7, #8]
 827 007e BB61     		str	r3, [r7, #24]
 828 0080 03E0     		b	.L29
 829              	.L28:
1167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
1169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata8bits  = pData;
 830              		.loc 1 1170 19
 831 0082 BB68     		ldr	r3, [r7, #8]
 832 0084 FB61     		str	r3, [r7, #28]
1171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata16bits = NULL;
 833              		.loc 1 1171 19
 834 0086 0023     		movs	r3, #0
 835 0088 BB61     		str	r3, [r7, #24]
 836              	.L29:
1172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 36


1175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 837              		.loc 1 1175 5
 838 008a FB68     		ldr	r3, [r7, #12]
 839 008c 0022     		movs	r2, #0
 840 008e 83F83C20 		strb	r2, [r3, #60]
1176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     while (huart->TxXferCount > 0U)
 841              		.loc 1 1177 11
 842 0092 2AE0     		b	.L30
 843              	.L34:
1178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 844              		.loc 1 1179 11
 845 0094 3B68     		ldr	r3, [r7]
 846 0096 0093     		str	r3, [sp]
 847 0098 7B69     		ldr	r3, [r7, #20]
 848 009a 0022     		movs	r2, #0
 849 009c 8021     		movs	r1, #128
 850 009e F868     		ldr	r0, [r7, #12]
 851 00a0 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 852 00a4 0346     		mov	r3, r0
 853              		.loc 1 1179 10
 854 00a6 002B     		cmp	r3, #0
 855 00a8 01D0     		beq	.L31
1180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         return HAL_TIMEOUT;
 856              		.loc 1 1181 16
 857 00aa 0323     		movs	r3, #3
 858 00ac 36E0     		b	.L26
 859              	.L31:
1182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (pdata8bits == NULL)
 860              		.loc 1 1183 10
 861 00ae FB69     		ldr	r3, [r7, #28]
 862 00b0 002B     		cmp	r3, #0
 863 00b2 0BD1     		bne	.L32
1184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->Instance->DR = (uint16_t)(*pdata16bits & 0x01FFU);
 864              		.loc 1 1185 42
 865 00b4 BB69     		ldr	r3, [r7, #24]
 866 00b6 1B88     		ldrh	r3, [r3]
 867              		.loc 1 1185 31
 868 00b8 1A46     		mov	r2, r3
 869              		.loc 1 1185 14
 870 00ba FB68     		ldr	r3, [r7, #12]
 871 00bc 1B68     		ldr	r3, [r3]
 872              		.loc 1 1185 31
 873 00be C2F30802 		ubfx	r2, r2, #0, #9
 874              		.loc 1 1185 29
 875 00c2 5A60     		str	r2, [r3, #4]
1186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         pdata16bits++;
 876              		.loc 1 1186 20
 877 00c4 BB69     		ldr	r3, [r7, #24]
 878 00c6 0233     		adds	r3, r3, #2
 879 00c8 BB61     		str	r3, [r7, #24]
 880 00ca 07E0     		b	.L33
 881              	.L32:
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 37


1187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
1189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->Instance->DR = (uint8_t)(*pdata8bits & 0xFFU);
 882              		.loc 1 1190 41
 883 00cc FB69     		ldr	r3, [r7, #28]
 884 00ce 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 885              		.loc 1 1190 14
 886 00d0 FB68     		ldr	r3, [r7, #12]
 887 00d2 1B68     		ldr	r3, [r3]
 888              		.loc 1 1190 29
 889 00d4 5A60     		str	r2, [r3, #4]
1191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         pdata8bits++;
 890              		.loc 1 1191 19
 891 00d6 FB69     		ldr	r3, [r7, #28]
 892 00d8 0133     		adds	r3, r3, #1
 893 00da FB61     		str	r3, [r7, #28]
 894              	.L33:
1192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->TxXferCount--;
 895              		.loc 1 1193 12
 896 00dc FB68     		ldr	r3, [r7, #12]
 897 00de DB8C     		ldrh	r3, [r3, #38]	@ movhi
 898 00e0 9BB2     		uxth	r3, r3
 899              		.loc 1 1193 25
 900 00e2 013B     		subs	r3, r3, #1
 901 00e4 9AB2     		uxth	r2, r3
 902 00e6 FB68     		ldr	r3, [r7, #12]
 903 00e8 DA84     		strh	r2, [r3, #38]	@ movhi
 904              	.L30:
1177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 905              		.loc 1 1177 17
 906 00ea FB68     		ldr	r3, [r7, #12]
 907 00ec DB8C     		ldrh	r3, [r3, #38]	@ movhi
 908 00ee 9BB2     		uxth	r3, r3
1177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 909              		.loc 1 1177 11
 910 00f0 002B     		cmp	r3, #0
 911 00f2 CFD1     		bne	.L34
1194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 912              		.loc 1 1196 9
 913 00f4 3B68     		ldr	r3, [r7]
 914 00f6 0093     		str	r3, [sp]
 915 00f8 7B69     		ldr	r3, [r7, #20]
 916 00fa 0022     		movs	r2, #0
 917 00fc 4021     		movs	r1, #64
 918 00fe F868     		ldr	r0, [r7, #12]
 919 0100 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 920 0104 0346     		mov	r3, r0
 921              		.loc 1 1196 8
 922 0106 002B     		cmp	r3, #0
 923 0108 01D0     		beq	.L35
1197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_TIMEOUT;
 924              		.loc 1 1198 14
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 38


 925 010a 0323     		movs	r3, #3
 926 010c 06E0     		b	.L26
 927              	.L35:
1199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
1202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 928              		.loc 1 1202 19
 929 010e FB68     		ldr	r3, [r7, #12]
 930 0110 2022     		movs	r2, #32
 931 0112 83F83D20 		strb	r2, [r3, #61]
1203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 932              		.loc 1 1204 12
 933 0116 0023     		movs	r3, #0
 934 0118 00E0     		b	.L26
 935              	.L23:
1205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 936              		.loc 1 1208 12
 937 011a 0223     		movs	r3, #2
 938              	.L26:
1209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 939              		.loc 1 1210 1
 940 011c 1846     		mov	r0, r3
 941 011e 2037     		adds	r7, r7, #32
 942              	.LCFI40:
 943              		.cfi_def_cfa_offset 8
 944 0120 BD46     		mov	sp, r7
 945              	.LCFI41:
 946              		.cfi_def_cfa_register 13
 947              		@ sp needed
 948 0122 80BD     		pop	{r7, pc}
 949              		.cfi_endproc
 950              	.LFE223:
 952              		.section	.text.HAL_UART_Receive,"ax",%progbits
 953              		.align	1
 954              		.global	HAL_UART_Receive
 955              		.syntax unified
 956              		.thumb
 957              		.thumb_func
 958              		.fpu fpv4-sp-d16
 960              	HAL_UART_Receive:
 961              	.LFB224:
1211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Receives an amount of data in blocking mode.
1214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of u16 available through pData.
1217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
1218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified UART module.
1219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
1220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be received.
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 39


1221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Timeout Timeout duration
1222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
1225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 962              		.loc 1 1225 1
 963              		.cfi_startproc
 964              		@ args = 0, pretend = 0, frame = 32
 965              		@ frame_needed = 1, uses_anonymous_args = 0
 966 0000 80B5     		push	{r7, lr}
 967              	.LCFI42:
 968              		.cfi_def_cfa_offset 8
 969              		.cfi_offset 7, -8
 970              		.cfi_offset 14, -4
 971 0002 8AB0     		sub	sp, sp, #40
 972              	.LCFI43:
 973              		.cfi_def_cfa_offset 48
 974 0004 02AF     		add	r7, sp, #8
 975              	.LCFI44:
 976              		.cfi_def_cfa 7, 40
 977 0006 F860     		str	r0, [r7, #12]
 978 0008 B960     		str	r1, [r7, #8]
 979 000a 3B60     		str	r3, [r7]
 980 000c 1346     		mov	r3, r2	@ movhi
 981 000e FB80     		strh	r3, [r7, #6]	@ movhi
1226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint8_t  *pdata8bits;
1227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t *pdata16bits;
1228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tickstart = 0U;
 982              		.loc 1 1228 12
 983 0010 0023     		movs	r3, #0
 984 0012 7B61     		str	r3, [r7, #20]
1229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 985              		.loc 1 1231 12
 986 0014 FB68     		ldr	r3, [r7, #12]
 987 0016 93F83E30 		ldrb	r3, [r3, #62]
 988 001a DBB2     		uxtb	r3, r3
 989              		.loc 1 1231 6
 990 001c 202B     		cmp	r3, #32
 991 001e 40F08C80 		bne	.L37
1232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 992              		.loc 1 1233 8
 993 0022 BB68     		ldr	r3, [r7, #8]
 994 0024 002B     		cmp	r3, #0
 995 0026 02D0     		beq	.L38
 996              		.loc 1 1233 25 discriminator 1
 997 0028 FB88     		ldrh	r3, [r7, #6]
 998 002a 002B     		cmp	r3, #0
 999 002c 01D1     		bne	.L39
 1000              	.L38:
1234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return  HAL_ERROR;
 1001              		.loc 1 1235 15
 1002 002e 0123     		movs	r3, #1
 1003 0030 84E0     		b	.L40
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 40


 1004              	.L39:
1236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
1239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 1005              		.loc 1 1239 5
 1006 0032 FB68     		ldr	r3, [r7, #12]
 1007 0034 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 1008 0038 012B     		cmp	r3, #1
 1009 003a 01D1     		bne	.L41
 1010              		.loc 1 1239 5 is_stmt 0 discriminator 1
 1011 003c 0223     		movs	r3, #2
 1012 003e 7DE0     		b	.L40
 1013              	.L41:
 1014              		.loc 1 1239 5 discriminator 2
 1015 0040 FB68     		ldr	r3, [r7, #12]
 1016 0042 0122     		movs	r2, #1
 1017 0044 83F83C20 		strb	r2, [r3, #60]
1240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1018              		.loc 1 1241 22 is_stmt 1 discriminator 2
 1019 0048 FB68     		ldr	r3, [r7, #12]
 1020 004a 0022     		movs	r2, #0
 1021 004c 1A64     		str	r2, [r3, #64]
1242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1022              		.loc 1 1242 20 discriminator 2
 1023 004e FB68     		ldr	r3, [r7, #12]
 1024 0050 2222     		movs	r2, #34
 1025 0052 83F83E20 		strb	r2, [r3, #62]
1243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 1026              		.loc 1 1243 26 discriminator 2
 1027 0056 FB68     		ldr	r3, [r7, #12]
 1028 0058 0022     		movs	r2, #0
 1029 005a 1A63     		str	r2, [r3, #48]
1244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init tickstart for timeout management */
1246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     tickstart = HAL_GetTick();
 1030              		.loc 1 1246 17 discriminator 2
 1031 005c FFF7FEFF 		bl	HAL_GetTick
 1032 0060 7861     		str	r0, [r7, #20]
1247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferSize = Size;
 1033              		.loc 1 1248 23 discriminator 2
 1034 0062 FB68     		ldr	r3, [r7, #12]
 1035 0064 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1036 0066 9A85     		strh	r2, [r3, #44]	@ movhi
1249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = Size;
 1037              		.loc 1 1249 24 discriminator 2
 1038 0068 FB68     		ldr	r3, [r7, #12]
 1039 006a FA88     		ldrh	r2, [r7, #6]	@ movhi
 1040 006c DA85     		strh	r2, [r3, #46]	@ movhi
1250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pRxData needs to be handled as a uint16_t pointer */
1252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 1041              		.loc 1 1252 21 discriminator 2
 1042 006e FB68     		ldr	r3, [r7, #12]
 1043 0070 9B68     		ldr	r3, [r3, #8]
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 41


 1044              		.loc 1 1252 8 discriminator 2
 1045 0072 B3F5805F 		cmp	r3, #4096
 1046 0076 08D1     		bne	.L42
 1047              		.loc 1 1252 71 discriminator 1
 1048 0078 FB68     		ldr	r3, [r7, #12]
 1049 007a 1B69     		ldr	r3, [r3, #16]
 1050              		.loc 1 1252 56 discriminator 1
 1051 007c 002B     		cmp	r3, #0
 1052 007e 04D1     		bne	.L42
1253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata8bits  = NULL;
 1053              		.loc 1 1254 19
 1054 0080 0023     		movs	r3, #0
 1055 0082 FB61     		str	r3, [r7, #28]
1255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
 1056              		.loc 1 1255 19
 1057 0084 BB68     		ldr	r3, [r7, #8]
 1058 0086 BB61     		str	r3, [r7, #24]
 1059 0088 03E0     		b	.L43
 1060              	.L42:
1256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
1258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata8bits  = pData;
 1061              		.loc 1 1259 19
 1062 008a BB68     		ldr	r3, [r7, #8]
 1063 008c FB61     		str	r3, [r7, #28]
1260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata16bits = NULL;
 1064              		.loc 1 1260 19
 1065 008e 0023     		movs	r3, #0
 1066 0090 BB61     		str	r3, [r7, #24]
 1067              	.L43:
1261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
1264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1068              		.loc 1 1264 5
 1069 0092 FB68     		ldr	r3, [r7, #12]
 1070 0094 0022     		movs	r2, #0
 1071 0096 83F83C20 		strb	r2, [r3, #60]
1265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Check the remain data to be received */
1267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     while (huart->RxXferCount > 0U)
 1072              		.loc 1 1267 11
 1073 009a 43E0     		b	.L44
 1074              	.L51:
1268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 1075              		.loc 1 1269 11
 1076 009c 3B68     		ldr	r3, [r7]
 1077 009e 0093     		str	r3, [sp]
 1078 00a0 7B69     		ldr	r3, [r7, #20]
 1079 00a2 0022     		movs	r2, #0
 1080 00a4 2021     		movs	r1, #32
 1081 00a6 F868     		ldr	r0, [r7, #12]
 1082 00a8 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1083 00ac 0346     		mov	r3, r0
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 42


 1084              		.loc 1 1269 10
 1085 00ae 002B     		cmp	r3, #0
 1086 00b0 01D0     		beq	.L45
1270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         return HAL_TIMEOUT;
 1087              		.loc 1 1271 16
 1088 00b2 0323     		movs	r3, #3
 1089 00b4 42E0     		b	.L40
 1090              	.L45:
1272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (pdata8bits == NULL)
 1091              		.loc 1 1273 10
 1092 00b6 FB69     		ldr	r3, [r7, #28]
 1093 00b8 002B     		cmp	r3, #0
 1094 00ba 0CD1     		bne	.L46
1274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         *pdata16bits = (uint16_t)(huart->Instance->DR & 0x01FF);
 1095              		.loc 1 1275 40
 1096 00bc FB68     		ldr	r3, [r7, #12]
 1097 00be 1B68     		ldr	r3, [r3]
 1098              		.loc 1 1275 50
 1099 00c0 5B68     		ldr	r3, [r3, #4]
 1100              		.loc 1 1275 24
 1101 00c2 9BB2     		uxth	r3, r3
 1102 00c4 C3F30803 		ubfx	r3, r3, #0, #9
 1103 00c8 9AB2     		uxth	r2, r3
 1104              		.loc 1 1275 22
 1105 00ca BB69     		ldr	r3, [r7, #24]
 1106 00cc 1A80     		strh	r2, [r3]	@ movhi
1276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         pdata16bits++;
 1107              		.loc 1 1276 20
 1108 00ce BB69     		ldr	r3, [r7, #24]
 1109 00d0 0233     		adds	r3, r3, #2
 1110 00d2 BB61     		str	r3, [r7, #24]
 1111 00d4 1FE0     		b	.L47
 1112              	.L46:
1277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
1279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if ((huart->Init.WordLength == UART_WORDLENGTH_9B) || ((huart->Init.WordLength == UART_WORD
 1113              		.loc 1 1280 25
 1114 00d6 FB68     		ldr	r3, [r7, #12]
 1115 00d8 9B68     		ldr	r3, [r3, #8]
 1116              		.loc 1 1280 12
 1117 00da B3F5805F 		cmp	r3, #4096
 1118 00de 07D0     		beq	.L48
 1119              		.loc 1 1280 76 discriminator 1
 1120 00e0 FB68     		ldr	r3, [r7, #12]
 1121 00e2 9B68     		ldr	r3, [r3, #8]
 1122              		.loc 1 1280 60 discriminator 1
 1123 00e4 002B     		cmp	r3, #0
 1124 00e6 0AD1     		bne	.L49
 1125              		.loc 1 1280 126 discriminator 2
 1126 00e8 FB68     		ldr	r3, [r7, #12]
 1127 00ea 1B69     		ldr	r3, [r3, #16]
 1128              		.loc 1 1280 111 discriminator 2
 1129 00ec 002B     		cmp	r3, #0
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 43


 1130 00ee 06D1     		bne	.L49
 1131              	.L48:
1281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
 1132              		.loc 1 1282 40
 1133 00f0 FB68     		ldr	r3, [r7, #12]
 1134 00f2 1B68     		ldr	r3, [r3]
 1135              		.loc 1 1282 50
 1136 00f4 5B68     		ldr	r3, [r3, #4]
 1137              		.loc 1 1282 25
 1138 00f6 DAB2     		uxtb	r2, r3
 1139              		.loc 1 1282 23
 1140 00f8 FB69     		ldr	r3, [r7, #28]
 1141 00fa 1A70     		strb	r2, [r3]
 1142 00fc 08E0     		b	.L50
 1143              	.L49:
1283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         else
1285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
 1144              		.loc 1 1286 40
 1145 00fe FB68     		ldr	r3, [r7, #12]
 1146 0100 1B68     		ldr	r3, [r3]
 1147              		.loc 1 1286 50
 1148 0102 5B68     		ldr	r3, [r3, #4]
 1149              		.loc 1 1286 25
 1150 0104 DBB2     		uxtb	r3, r3
 1151 0106 03F07F03 		and	r3, r3, #127
 1152 010a DAB2     		uxtb	r2, r3
 1153              		.loc 1 1286 23
 1154 010c FB69     		ldr	r3, [r7, #28]
 1155 010e 1A70     		strb	r2, [r3]
 1156              	.L50:
1287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         pdata8bits++;
 1157              		.loc 1 1288 19
 1158 0110 FB69     		ldr	r3, [r7, #28]
 1159 0112 0133     		adds	r3, r3, #1
 1160 0114 FB61     		str	r3, [r7, #28]
 1161              	.L47:
1289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->RxXferCount--;
 1162              		.loc 1 1290 12
 1163 0116 FB68     		ldr	r3, [r7, #12]
 1164 0118 DB8D     		ldrh	r3, [r3, #46]	@ movhi
 1165 011a 9BB2     		uxth	r3, r3
 1166              		.loc 1 1290 25
 1167 011c 013B     		subs	r3, r3, #1
 1168 011e 9AB2     		uxth	r2, r3
 1169 0120 FB68     		ldr	r3, [r7, #12]
 1170 0122 DA85     		strh	r2, [r3, #46]	@ movhi
 1171              	.L44:
1267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1172              		.loc 1 1267 17
 1173 0124 FB68     		ldr	r3, [r7, #12]
 1174 0126 DB8D     		ldrh	r3, [r3, #46]	@ movhi
 1175 0128 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 44


1267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1176              		.loc 1 1267 11
 1177 012a 002B     		cmp	r3, #0
 1178 012c B6D1     		bne	.L51
1291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
1294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 1179              		.loc 1 1294 20
 1180 012e FB68     		ldr	r3, [r7, #12]
 1181 0130 2022     		movs	r2, #32
 1182 0132 83F83E20 		strb	r2, [r3, #62]
1295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 1183              		.loc 1 1296 12
 1184 0136 0023     		movs	r3, #0
 1185 0138 00E0     		b	.L40
 1186              	.L37:
1297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 1187              		.loc 1 1300 12
 1188 013a 0223     		movs	r3, #2
 1189              	.L40:
1301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1190              		.loc 1 1302 1
 1191 013c 1846     		mov	r0, r3
 1192 013e 2037     		adds	r7, r7, #32
 1193              	.LCFI45:
 1194              		.cfi_def_cfa_offset 8
 1195 0140 BD46     		mov	sp, r7
 1196              	.LCFI46:
 1197              		.cfi_def_cfa_register 13
 1198              		@ sp needed
 1199 0142 80BD     		pop	{r7, pc}
 1200              		.cfi_endproc
 1201              	.LFE224:
 1203              		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 1204              		.align	1
 1205              		.global	HAL_UART_Transmit_IT
 1206              		.syntax unified
 1207              		.thumb
 1208              		.thumb_func
 1209              		.fpu fpv4-sp-d16
 1211              	HAL_UART_Transmit_IT:
 1212              	.LFB225:
1303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Sends an amount of data in non blocking mode.
1306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of u16 provided through pData.
1309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
1310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified UART module.
1311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 45


1312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be sent
1313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, const uint8_t *pData, uint16_t Si
1316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 1213              		.loc 1 1316 1
 1214              		.cfi_startproc
 1215              		@ args = 0, pretend = 0, frame = 16
 1216              		@ frame_needed = 1, uses_anonymous_args = 0
 1217              		@ link register save eliminated.
 1218 0000 80B4     		push	{r7}
 1219              	.LCFI47:
 1220              		.cfi_def_cfa_offset 4
 1221              		.cfi_offset 7, -4
 1222 0002 85B0     		sub	sp, sp, #20
 1223              	.LCFI48:
 1224              		.cfi_def_cfa_offset 24
 1225 0004 00AF     		add	r7, sp, #0
 1226              	.LCFI49:
 1227              		.cfi_def_cfa_register 7
 1228 0006 F860     		str	r0, [r7, #12]
 1229 0008 B960     		str	r1, [r7, #8]
 1230 000a 1346     		mov	r3, r2
 1231 000c FB80     		strh	r3, [r7, #6]	@ movhi
1317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 1232              		.loc 1 1318 12
 1233 000e FB68     		ldr	r3, [r7, #12]
 1234 0010 93F83D30 		ldrb	r3, [r3, #61]
 1235 0014 DBB2     		uxtb	r3, r3
 1236              		.loc 1 1318 6
 1237 0016 202B     		cmp	r3, #32
 1238 0018 30D1     		bne	.L53
1319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1239              		.loc 1 1320 8
 1240 001a BB68     		ldr	r3, [r7, #8]
 1241 001c 002B     		cmp	r3, #0
 1242 001e 02D0     		beq	.L54
 1243              		.loc 1 1320 25 discriminator 1
 1244 0020 FB88     		ldrh	r3, [r7, #6]
 1245 0022 002B     		cmp	r3, #0
 1246 0024 01D1     		bne	.L55
 1247              	.L54:
1321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
 1248              		.loc 1 1322 14
 1249 0026 0123     		movs	r3, #1
 1250 0028 29E0     		b	.L56
 1251              	.L55:
1323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
1326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 1252              		.loc 1 1326 5
 1253 002a FB68     		ldr	r3, [r7, #12]
 1254 002c 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 46


 1255 0030 012B     		cmp	r3, #1
 1256 0032 01D1     		bne	.L57
 1257              		.loc 1 1326 5 is_stmt 0 discriminator 1
 1258 0034 0223     		movs	r3, #2
 1259 0036 22E0     		b	.L56
 1260              	.L57:
 1261              		.loc 1 1326 5 discriminator 2
 1262 0038 FB68     		ldr	r3, [r7, #12]
 1263 003a 0122     		movs	r2, #1
 1264 003c 83F83C20 		strb	r2, [r3, #60]
1327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 1265              		.loc 1 1328 23 is_stmt 1 discriminator 2
 1266 0040 FB68     		ldr	r3, [r7, #12]
 1267 0042 BA68     		ldr	r2, [r7, #8]
 1268 0044 1A62     		str	r2, [r3, #32]
1329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferSize = Size;
 1269              		.loc 1 1329 23 discriminator 2
 1270 0046 FB68     		ldr	r3, [r7, #12]
 1271 0048 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1272 004a 9A84     		strh	r2, [r3, #36]	@ movhi
1330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
 1273              		.loc 1 1330 24 discriminator 2
 1274 004c FB68     		ldr	r3, [r7, #12]
 1275 004e FA88     		ldrh	r2, [r7, #6]	@ movhi
 1276 0050 DA84     		strh	r2, [r3, #38]	@ movhi
1331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1277              		.loc 1 1332 22 discriminator 2
 1278 0052 FB68     		ldr	r3, [r7, #12]
 1279 0054 0022     		movs	r2, #0
 1280 0056 1A64     		str	r2, [r3, #64]
1333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1281              		.loc 1 1333 19 discriminator 2
 1282 0058 FB68     		ldr	r3, [r7, #12]
 1283 005a 2122     		movs	r2, #33
 1284 005c 83F83D20 		strb	r2, [r3, #61]
1334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
1336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1285              		.loc 1 1336 5 discriminator 2
 1286 0060 FB68     		ldr	r3, [r7, #12]
 1287 0062 0022     		movs	r2, #0
 1288 0064 83F83C20 		strb	r2, [r3, #60]
1337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Transmit data register empty Interrupt */
1339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_TXE);
 1289              		.loc 1 1339 5 discriminator 2
 1290 0068 FB68     		ldr	r3, [r7, #12]
 1291 006a 1B68     		ldr	r3, [r3]
 1292 006c DA68     		ldr	r2, [r3, #12]
 1293 006e FB68     		ldr	r3, [r7, #12]
 1294 0070 1B68     		ldr	r3, [r3]
 1295 0072 42F08002 		orr	r2, r2, #128
 1296 0076 DA60     		str	r2, [r3, #12]
1340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 47


 1297              		.loc 1 1341 12 discriminator 2
 1298 0078 0023     		movs	r3, #0
 1299 007a 00E0     		b	.L56
 1300              	.L53:
1342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 1301              		.loc 1 1345 12
 1302 007c 0223     		movs	r3, #2
 1303              	.L56:
1346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1304              		.loc 1 1347 1
 1305 007e 1846     		mov	r0, r3
 1306 0080 1437     		adds	r7, r7, #20
 1307              	.LCFI50:
 1308              		.cfi_def_cfa_offset 4
 1309 0082 BD46     		mov	sp, r7
 1310              	.LCFI51:
 1311              		.cfi_def_cfa_register 13
 1312              		@ sp needed
 1313 0084 5DF8047B 		ldr	r7, [sp], #4
 1314              	.LCFI52:
 1315              		.cfi_restore 7
 1316              		.cfi_def_cfa_offset 0
 1317 0088 7047     		bx	lr
 1318              		.cfi_endproc
 1319              	.LFE225:
 1321              		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 1322              		.align	1
 1323              		.global	HAL_UART_Receive_IT
 1324              		.syntax unified
 1325              		.thumb
 1326              		.thumb_func
 1327              		.fpu fpv4-sp-d16
 1329              	HAL_UART_Receive_IT:
 1330              	.LFB226:
1348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Receives an amount of data in non blocking mode.
1351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of u16 available through pData.
1354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
1355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified UART module.
1356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
1357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be received.
1358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 1331              		.loc 1 1361 1
 1332              		.cfi_startproc
 1333              		@ args = 0, pretend = 0, frame = 16
 1334              		@ frame_needed = 1, uses_anonymous_args = 0
 1335 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 48


 1336              	.LCFI53:
 1337              		.cfi_def_cfa_offset 8
 1338              		.cfi_offset 7, -8
 1339              		.cfi_offset 14, -4
 1340 0002 84B0     		sub	sp, sp, #16
 1341              	.LCFI54:
 1342              		.cfi_def_cfa_offset 24
 1343 0004 00AF     		add	r7, sp, #0
 1344              	.LCFI55:
 1345              		.cfi_def_cfa_register 7
 1346 0006 F860     		str	r0, [r7, #12]
 1347 0008 B960     		str	r1, [r7, #8]
 1348 000a 1346     		mov	r3, r2
 1349 000c FB80     		strh	r3, [r7, #6]	@ movhi
1362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 1350              		.loc 1 1363 12
 1351 000e FB68     		ldr	r3, [r7, #12]
 1352 0010 93F83E30 		ldrb	r3, [r3, #62]
 1353 0014 DBB2     		uxtb	r3, r3
 1354              		.loc 1 1363 6
 1355 0016 202B     		cmp	r3, #32
 1356 0018 1DD1     		bne	.L59
1364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1357              		.loc 1 1365 8
 1358 001a BB68     		ldr	r3, [r7, #8]
 1359 001c 002B     		cmp	r3, #0
 1360 001e 02D0     		beq	.L60
 1361              		.loc 1 1365 25 discriminator 1
 1362 0020 FB88     		ldrh	r3, [r7, #6]
 1363 0022 002B     		cmp	r3, #0
 1364 0024 01D1     		bne	.L61
 1365              	.L60:
1366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
 1366              		.loc 1 1367 14
 1367 0026 0123     		movs	r3, #1
 1368 0028 16E0     		b	.L62
 1369              	.L61:
1368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
1371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 1370              		.loc 1 1371 5
 1371 002a FB68     		ldr	r3, [r7, #12]
 1372 002c 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 1373 0030 012B     		cmp	r3, #1
 1374 0032 01D1     		bne	.L63
 1375              		.loc 1 1371 5 is_stmt 0 discriminator 1
 1376 0034 0223     		movs	r3, #2
 1377 0036 0FE0     		b	.L62
 1378              	.L63:
 1379              		.loc 1 1371 5 discriminator 2
 1380 0038 FB68     		ldr	r3, [r7, #12]
 1381 003a 0122     		movs	r2, #1
 1382 003c 83F83C20 		strb	r2, [r3, #60]
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 49


1372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set Reception type to Standard reception */
1374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 1383              		.loc 1 1374 26 is_stmt 1 discriminator 2
 1384 0040 FB68     		ldr	r3, [r7, #12]
 1385 0042 0022     		movs	r2, #0
 1386 0044 1A63     		str	r2, [r3, #48]
1375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return (UART_Start_Receive_IT(huart, pData, Size));
 1387              		.loc 1 1376 13 discriminator 2
 1388 0046 FB88     		ldrh	r3, [r7, #6]
 1389 0048 1A46     		mov	r2, r3
 1390 004a B968     		ldr	r1, [r7, #8]
 1391 004c F868     		ldr	r0, [r7, #12]
 1392 004e FFF7FEFF 		bl	UART_Start_Receive_IT
 1393 0052 0346     		mov	r3, r0
 1394 0054 00E0     		b	.L62
 1395              	.L59:
1377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 1396              		.loc 1 1380 12
 1397 0056 0223     		movs	r3, #2
 1398              	.L62:
1381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1399              		.loc 1 1382 1
 1400 0058 1846     		mov	r0, r3
 1401 005a 1037     		adds	r7, r7, #16
 1402              	.LCFI56:
 1403              		.cfi_def_cfa_offset 8
 1404 005c BD46     		mov	sp, r7
 1405              	.LCFI57:
 1406              		.cfi_def_cfa_register 13
 1407              		@ sp needed
 1408 005e 80BD     		pop	{r7, pc}
 1409              		.cfi_endproc
 1410              	.LFE226:
 1412              		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 1413              		.align	1
 1414              		.global	HAL_UART_Transmit_DMA
 1415              		.syntax unified
 1416              		.thumb
 1417              		.thumb_func
 1418              		.fpu fpv4-sp-d16
 1420              	HAL_UART_Transmit_DMA:
 1421              	.LFB227:
1383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Sends an amount of data in DMA mode.
1386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of u16 provided through pData.
1389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
1390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 50


1392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be sent
1393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, const uint8_t *pData, uint16_t S
1396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 1422              		.loc 1 1396 1
 1423              		.cfi_startproc
 1424              		@ args = 0, pretend = 0, frame = 48
 1425              		@ frame_needed = 1, uses_anonymous_args = 0
 1426 0000 80B5     		push	{r7, lr}
 1427              	.LCFI58:
 1428              		.cfi_def_cfa_offset 8
 1429              		.cfi_offset 7, -8
 1430              		.cfi_offset 14, -4
 1431 0002 8CB0     		sub	sp, sp, #48
 1432              	.LCFI59:
 1433              		.cfi_def_cfa_offset 56
 1434 0004 00AF     		add	r7, sp, #0
 1435              	.LCFI60:
 1436              		.cfi_def_cfa_register 7
 1437 0006 F860     		str	r0, [r7, #12]
 1438 0008 B960     		str	r1, [r7, #8]
 1439 000a 1346     		mov	r3, r2
 1440 000c FB80     		strh	r3, [r7, #6]	@ movhi
1397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   const uint32_t *tmp;
1398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 1441              		.loc 1 1400 12
 1442 000e FB68     		ldr	r3, [r7, #12]
 1443 0010 93F83D30 		ldrb	r3, [r3, #61]
 1444 0014 DBB2     		uxtb	r3, r3
 1445              		.loc 1 1400 6
 1446 0016 202B     		cmp	r3, #32
 1447 0018 65D1     		bne	.L65
1401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1448              		.loc 1 1402 16
 1449 001a BB68     		ldr	r3, [r7, #8]
 1450              		.loc 1 1402 8
 1451 001c 002B     		cmp	r3, #0
 1452 001e 02D0     		beq	.L66
 1453              		.loc 1 1402 25 discriminator 1
 1454 0020 FB88     		ldrh	r3, [r7, #6]
 1455 0022 002B     		cmp	r3, #0
 1456 0024 01D1     		bne	.L67
 1457              	.L66:
1403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
 1458              		.loc 1 1404 14
 1459 0026 0123     		movs	r3, #1
 1460 0028 5EE0     		b	.L68
 1461              	.L67:
1405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
1408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 51


 1462              		.loc 1 1408 5
 1463 002a FB68     		ldr	r3, [r7, #12]
 1464 002c 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 1465 0030 012B     		cmp	r3, #1
 1466 0032 01D1     		bne	.L69
 1467              		.loc 1 1408 5 is_stmt 0 discriminator 1
 1468 0034 0223     		movs	r3, #2
 1469 0036 57E0     		b	.L68
 1470              	.L69:
 1471              		.loc 1 1408 5 discriminator 2
 1472 0038 FB68     		ldr	r3, [r7, #12]
 1473 003a 0122     		movs	r2, #1
 1474 003c 83F83C20 		strb	r2, [r3, #60]
1409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 1475              		.loc 1 1410 23 is_stmt 1 discriminator 2
 1476 0040 BA68     		ldr	r2, [r7, #8]
 1477 0042 FB68     		ldr	r3, [r7, #12]
 1478 0044 1A62     		str	r2, [r3, #32]
1411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferSize = Size;
 1479              		.loc 1 1411 23 discriminator 2
 1480 0046 FB68     		ldr	r3, [r7, #12]
 1481 0048 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1482 004a 9A84     		strh	r2, [r3, #36]	@ movhi
1412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
 1483              		.loc 1 1412 24 discriminator 2
 1484 004c FB68     		ldr	r3, [r7, #12]
 1485 004e FA88     		ldrh	r2, [r7, #6]	@ movhi
 1486 0050 DA84     		strh	r2, [r3, #38]	@ movhi
1413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1487              		.loc 1 1414 22 discriminator 2
 1488 0052 FB68     		ldr	r3, [r7, #12]
 1489 0054 0022     		movs	r2, #0
 1490 0056 1A64     		str	r2, [r3, #64]
1415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1491              		.loc 1 1415 19 discriminator 2
 1492 0058 FB68     		ldr	r3, [r7, #12]
 1493 005a 2122     		movs	r2, #33
 1494 005c 83F83D20 		strb	r2, [r3, #61]
1416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
1418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
 1495              		.loc 1 1418 10 discriminator 2
 1496 0060 FB68     		ldr	r3, [r7, #12]
 1497 0062 5B6B     		ldr	r3, [r3, #52]
 1498              		.loc 1 1418 37 discriminator 2
 1499 0064 224A     		ldr	r2, .L73
 1500 0066 DA63     		str	r2, [r3, #60]
1419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
1421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
 1501              		.loc 1 1421 10 discriminator 2
 1502 0068 FB68     		ldr	r3, [r7, #12]
 1503 006a 5B6B     		ldr	r3, [r3, #52]
 1504              		.loc 1 1421 41 discriminator 2
 1505 006c 214A     		ldr	r2, .L73+4
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 52


 1506 006e 1A64     		str	r2, [r3, #64]
1422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the DMA error callback */
1424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmatx->XferErrorCallback = UART_DMAError;
 1507              		.loc 1 1424 10 discriminator 2
 1508 0070 FB68     		ldr	r3, [r7, #12]
 1509 0072 5B6B     		ldr	r3, [r3, #52]
 1510              		.loc 1 1424 38 discriminator 2
 1511 0074 204A     		ldr	r2, .L73+8
 1512 0076 DA64     		str	r2, [r3, #76]
1425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the DMA abort callback */
1427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmatx->XferAbortCallback = NULL;
 1513              		.loc 1 1427 10 discriminator 2
 1514 0078 FB68     		ldr	r3, [r7, #12]
 1515 007a 5B6B     		ldr	r3, [r3, #52]
 1516              		.loc 1 1427 38 discriminator 2
 1517 007c 0022     		movs	r2, #0
 1518 007e 1A65     		str	r2, [r3, #80]
1428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART transmit DMA stream */
1430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     tmp = (const uint32_t *)&pData;
 1519              		.loc 1 1430 9 discriminator 2
 1520 0080 07F10803 		add	r3, r7, #8
 1521 0084 FB62     		str	r3, [r7, #44]
1431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmatx, *(const uint32_t *)tmp, (uint32_t)&huart->Instance->DR, Size);
 1522              		.loc 1 1431 5 discriminator 2
 1523 0086 FB68     		ldr	r3, [r7, #12]
 1524 0088 586B     		ldr	r0, [r3, #52]
 1525 008a FB6A     		ldr	r3, [r7, #44]
 1526 008c 1968     		ldr	r1, [r3]
 1527              		.loc 1 1431 77 discriminator 2
 1528 008e FB68     		ldr	r3, [r7, #12]
 1529 0090 1B68     		ldr	r3, [r3]
 1530              		.loc 1 1431 71 discriminator 2
 1531 0092 0433     		adds	r3, r3, #4
 1532              		.loc 1 1431 5 discriminator 2
 1533 0094 1A46     		mov	r2, r3
 1534 0096 FB88     		ldrh	r3, [r7, #6]
 1535 0098 FFF7FEFF 		bl	HAL_DMA_Start_IT
1432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Clear the TC flag in the SR register by writing 0 to it */
1434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_FLAG_TC);
 1536              		.loc 1 1434 5 discriminator 2
 1537 009c FB68     		ldr	r3, [r7, #12]
 1538 009e 1B68     		ldr	r3, [r3]
 1539 00a0 6FF04002 		mvn	r2, #64
 1540 00a4 1A60     		str	r2, [r3]
1435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
1437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1541              		.loc 1 1437 5 discriminator 2
 1542 00a6 FB68     		ldr	r3, [r7, #12]
 1543 00a8 0022     		movs	r2, #0
 1544 00aa 83F83C20 		strb	r2, [r3, #60]
 1545              	.L72:
 1546              	.LBB320:
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 53


1438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
1440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        in the UART CR3 register */
1441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 1547              		.loc 1 1441 5 discriminator 1
 1548 00ae FB68     		ldr	r3, [r7, #12]
 1549 00b0 1B68     		ldr	r3, [r3]
 1550 00b2 1433     		adds	r3, r3, #20
 1551 00b4 BB61     		str	r3, [r7, #24]
 1552              	.LBB321:
 1553              	.LBB322:
 1554              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 54


  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 55


 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 144:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 150:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 151:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 154:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 157:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 158:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 159:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 56


 160:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 168:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 170:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 177:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 178:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 183:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 201:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 202:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 57


 217:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 218:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 221:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 225:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 243:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 247:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 249:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 253:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 256:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 261:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 264:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 268:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 271:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 273:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 58


 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 277:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 282:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 285:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 303:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 310:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 316:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 318:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 322:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 323:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 325:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 327:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 59


 331:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 339:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 343:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 359:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 366:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 370:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 382:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 385:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 60


 388:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 390:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 391:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 394:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 400:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 406:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 407:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 412:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 415:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 418:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 420:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 421:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 422:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 424:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 425:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 426:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 427:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 428:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 429:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 432:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 433:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 434:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 438:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 439:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 440:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 61


 445:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 451:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 453:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 457:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 458:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 460:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 461:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 462:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 464:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 465:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 471:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 492:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 498:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 499:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 500:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 501:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 62


 502:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 503:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 504:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 506:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 508:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 511:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 518:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 521:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 537:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 540:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 541:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 542:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 544:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 548:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 554:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 557:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 558:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 63


 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 560:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 564:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 568:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 572:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 573:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 574:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 575:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 577:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 580:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 582:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 583:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 584:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 585:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 586:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 592:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 596:Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 598:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 599:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 600:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 601:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 603:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 604:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 605:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 606:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 608:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 609:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 610:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 611:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 612:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 615:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 64


 616:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 621:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 622:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 625:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 626:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 627:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 628:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 630:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 631:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 633:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 634:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 636:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 637:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 638:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 639:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 641:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 644:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 647:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 648:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 649:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 650:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 652:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 654:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 655:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 661:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 663:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 665:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 666:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 669:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 671:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 672:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 65


 673:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 675:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 682:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 683:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 684:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 689:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 690:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 693:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 695:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 696:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 698:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 699:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 700:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 702:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 703:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 704:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 708:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 711:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 712:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 713:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 714:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 715:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 716:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 721:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 723:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 724:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 726:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 727:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 66


 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 731:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 732:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 734:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 735:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 736:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 738:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 742:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 749:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 751:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 752:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 755:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 757:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 759:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 760:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 761:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 762:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 763:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 765:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 766:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 767:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 769:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 772:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 775:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 778:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 67


 787:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 795:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 796:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 797:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 799:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 800:Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 803:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 804:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 806:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 809:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 814:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 817:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 818:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 820:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 826:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 827:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 828:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 829:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 830:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 834:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 835:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 838:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 842:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 68


 844:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 846:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 849:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 853:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 860:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 861:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 864:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 865:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 869:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 870:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 871:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 872:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 873:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 874:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 876:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 878:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 879:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 883:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 888:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 889:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 890:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 892:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 896:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 897:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 898:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 899:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 900:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 69


 901:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 902:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 904:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 906:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 907:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 908:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 909:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 911:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 912:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 914:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 915:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 916:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 919:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 920:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 922:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 924:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 926:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 930:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 931:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 932:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 937:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 939:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 940:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 945:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 946:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 947:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 949:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 950:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 952:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 953:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 70


 958:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 960:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 961:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 962:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 963:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 964:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 965:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 966:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 967:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 968:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 969:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 970:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 971:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 972:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 973:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 974:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 975:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 976:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 977:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 978:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 979:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 980:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 981:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 982:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 983:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 984:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 985:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 986:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 987:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 988:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 989:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 990:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 991:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 992:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 993:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 994:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 995:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 996:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 997:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 998:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 999:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
1000:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1001:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
1002:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1003:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1004:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1005:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1006:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
1007:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
1008:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
1009:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
1010:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1011:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CLZ             (uint8_t)__builtin_clz
1012:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1013:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1014:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 71


1015:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1016:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1017:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
1018:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1019:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
1020:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
1021:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1022:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1023:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1024:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
1025:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1026:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
1027:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1028:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1029:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
1030:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
1031:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1032:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1033:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
1034:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
1035:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1036:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
1037:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1038:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1039:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1040:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1041:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
1042:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
1043:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1044:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1045:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1046:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
1047:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1048:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
1049:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1051:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
1052:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
1053:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1054:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1055:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
1056:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
1057:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1058:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
1059:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1060:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1061:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1062:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1063:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
1064:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
1065:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1066:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1067:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
1069:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1070:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
1071:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 72


1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 1555              		.loc 2 1072 4 discriminator 1
 1556 00b6 BB69     		ldr	r3, [r7, #24]
 1557              		.syntax unified
 1558              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1559 00b8 53E8003F 		ldrex r3, [r3]
 1560              	@ 0 "" 2
 1561              		.thumb
 1562              		.syntax unified
 1563 00bc 7B61     		str	r3, [r7, #20]
1073:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1564              		.loc 2 1073 10 discriminator 1
 1565 00be 7B69     		ldr	r3, [r7, #20]
 1566              	.LBE322:
 1567              	.LBE321:
 1568              		.loc 1 1441 5 discriminator 1
 1569 00c0 43F08003 		orr	r3, r3, #128
 1570 00c4 BB62     		str	r3, [r7, #40]
 1571 00c6 FB68     		ldr	r3, [r7, #12]
 1572 00c8 1B68     		ldr	r3, [r3]
 1573 00ca 1433     		adds	r3, r3, #20
 1574 00cc BA6A     		ldr	r2, [r7, #40]
 1575 00ce 7A62     		str	r2, [r7, #36]
 1576 00d0 3B62     		str	r3, [r7, #32]
 1577              	.LBB323:
 1578              	.LBB324:
1074:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1075:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1076:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1077:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1078:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
1079:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
1080:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1081:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1082:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1083:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
1084:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1085:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
1086:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1087:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
1088:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
1090:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
1091:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1092:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1093:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1094:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1095:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
1096:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
1097:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1098:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1099:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1100:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
1101:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1102:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
1103:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1104:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 73


1105:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1106:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
1107:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
1108:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1109:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1110:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1111:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1112:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
1113:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
1114:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1115:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1116:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1117:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
1118:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1119:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
1120:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1121:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
1122:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 1579              		.loc 2 1123 4 discriminator 1
 1580 00d2 396A     		ldr	r1, [r7, #32]
 1581 00d4 7A6A     		ldr	r2, [r7, #36]
 1582              		.syntax unified
 1583              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1584 00d6 41E80023 		strex r3, r2, [r1]
 1585              	@ 0 "" 2
 1586              		.thumb
 1587              		.syntax unified
 1588 00da FB61     		str	r3, [r7, #28]
1124:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1589              		.loc 2 1124 10 discriminator 1
 1590 00dc FB69     		ldr	r3, [r7, #28]
 1591              	.LBE324:
 1592              	.LBE323:
 1593              		.loc 1 1441 5 discriminator 1
 1594 00de 002B     		cmp	r3, #0
 1595 00e0 E5D1     		bne	.L72
 1596              	.LBE320:
1442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 1597              		.loc 1 1443 12
 1598 00e2 0023     		movs	r3, #0
 1599 00e4 00E0     		b	.L68
 1600              	.L65:
1444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 1601              		.loc 1 1447 12
 1602 00e6 0223     		movs	r3, #2
 1603              	.L68:
1448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1604              		.loc 1 1449 1
 1605 00e8 1846     		mov	r0, r3
 1606 00ea 3037     		adds	r7, r7, #48
 1607              	.LCFI61:
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 74


 1608              		.cfi_def_cfa_offset 8
 1609 00ec BD46     		mov	sp, r7
 1610              	.LCFI62:
 1611              		.cfi_def_cfa_register 13
 1612              		@ sp needed
 1613 00ee 80BD     		pop	{r7, pc}
 1614              	.L74:
 1615              		.align	2
 1616              	.L73:
 1617 00f0 00000000 		.word	UART_DMATransmitCplt
 1618 00f4 00000000 		.word	UART_DMATxHalfCplt
 1619 00f8 00000000 		.word	UART_DMAError
 1620              		.cfi_endproc
 1621              	.LFE227:
 1623              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 1624              		.align	1
 1625              		.global	HAL_UART_Receive_DMA
 1626              		.syntax unified
 1627              		.thumb
 1628              		.thumb_func
 1629              		.fpu fpv4-sp-d16
 1631              	HAL_UART_Receive_DMA:
 1632              	.LFB228:
1450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Receives an amount of data in DMA mode.
1453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of u16 available through pData.
1456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
1457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified UART module.
1458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
1459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be received.
1460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1) the received data contains the parity bit.
1461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 1633              		.loc 1 1464 1
 1634              		.cfi_startproc
 1635              		@ args = 0, pretend = 0, frame = 16
 1636              		@ frame_needed = 1, uses_anonymous_args = 0
 1637 0000 80B5     		push	{r7, lr}
 1638              	.LCFI63:
 1639              		.cfi_def_cfa_offset 8
 1640              		.cfi_offset 7, -8
 1641              		.cfi_offset 14, -4
 1642 0002 84B0     		sub	sp, sp, #16
 1643              	.LCFI64:
 1644              		.cfi_def_cfa_offset 24
 1645 0004 00AF     		add	r7, sp, #0
 1646              	.LCFI65:
 1647              		.cfi_def_cfa_register 7
 1648 0006 F860     		str	r0, [r7, #12]
 1649 0008 B960     		str	r1, [r7, #8]
 1650 000a 1346     		mov	r3, r2
 1651 000c FB80     		strh	r3, [r7, #6]	@ movhi
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 75


1465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 1652              		.loc 1 1466 12
 1653 000e FB68     		ldr	r3, [r7, #12]
 1654 0010 93F83E30 		ldrb	r3, [r3, #62]
 1655 0014 DBB2     		uxtb	r3, r3
 1656              		.loc 1 1466 6
 1657 0016 202B     		cmp	r3, #32
 1658 0018 1DD1     		bne	.L76
1467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1659              		.loc 1 1468 8
 1660 001a BB68     		ldr	r3, [r7, #8]
 1661 001c 002B     		cmp	r3, #0
 1662 001e 02D0     		beq	.L77
 1663              		.loc 1 1468 25 discriminator 1
 1664 0020 FB88     		ldrh	r3, [r7, #6]
 1665 0022 002B     		cmp	r3, #0
 1666 0024 01D1     		bne	.L78
 1667              	.L77:
1469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
 1668              		.loc 1 1470 14
 1669 0026 0123     		movs	r3, #1
 1670 0028 16E0     		b	.L79
 1671              	.L78:
1471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
1474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 1672              		.loc 1 1474 5
 1673 002a FB68     		ldr	r3, [r7, #12]
 1674 002c 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 1675 0030 012B     		cmp	r3, #1
 1676 0032 01D1     		bne	.L80
 1677              		.loc 1 1474 5 is_stmt 0 discriminator 1
 1678 0034 0223     		movs	r3, #2
 1679 0036 0FE0     		b	.L79
 1680              	.L80:
 1681              		.loc 1 1474 5 discriminator 2
 1682 0038 FB68     		ldr	r3, [r7, #12]
 1683 003a 0122     		movs	r2, #1
 1684 003c 83F83C20 		strb	r2, [r3, #60]
1475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set Reception type to Standard reception */
1477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 1685              		.loc 1 1477 26 is_stmt 1 discriminator 2
 1686 0040 FB68     		ldr	r3, [r7, #12]
 1687 0042 0022     		movs	r2, #0
 1688 0044 1A63     		str	r2, [r3, #48]
1478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return (UART_Start_Receive_DMA(huart, pData, Size));
 1689              		.loc 1 1479 13 discriminator 2
 1690 0046 FB88     		ldrh	r3, [r7, #6]
 1691 0048 1A46     		mov	r2, r3
 1692 004a B968     		ldr	r1, [r7, #8]
 1693 004c F868     		ldr	r0, [r7, #12]
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 76


 1694 004e FFF7FEFF 		bl	UART_Start_Receive_DMA
 1695 0052 0346     		mov	r3, r0
 1696 0054 00E0     		b	.L79
 1697              	.L76:
1480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 1698              		.loc 1 1483 12
 1699 0056 0223     		movs	r3, #2
 1700              	.L79:
1484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1701              		.loc 1 1485 1
 1702 0058 1846     		mov	r0, r3
 1703 005a 1037     		adds	r7, r7, #16
 1704              	.LCFI66:
 1705              		.cfi_def_cfa_offset 8
 1706 005c BD46     		mov	sp, r7
 1707              	.LCFI67:
 1708              		.cfi_def_cfa_register 13
 1709              		@ sp needed
 1710 005e 80BD     		pop	{r7, pc}
 1711              		.cfi_endproc
 1712              	.LFE228:
 1714              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 1715              		.align	1
 1716              		.global	HAL_UART_DMAPause
 1717              		.syntax unified
 1718              		.thumb
 1719              		.thumb_func
 1720              		.fpu fpv4-sp-d16
 1722              	HAL_UART_DMAPause:
 1723              	.LFB229:
1486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief Pauses the DMA Transfer.
1489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
1490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 1724              		.loc 1 1494 1
 1725              		.cfi_startproc
 1726              		@ args = 0, pretend = 0, frame = 112
 1727              		@ frame_needed = 1, uses_anonymous_args = 0
 1728              		@ link register save eliminated.
 1729 0000 80B4     		push	{r7}
 1730              	.LCFI68:
 1731              		.cfi_def_cfa_offset 4
 1732              		.cfi_offset 7, -4
 1733 0002 9DB0     		sub	sp, sp, #116
 1734              	.LCFI69:
 1735              		.cfi_def_cfa_offset 120
 1736 0004 00AF     		add	r7, sp, #0
 1737              	.LCFI70:
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 77


 1738              		.cfi_def_cfa_register 7
 1739 0006 7860     		str	r0, [r7, #4]
1495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 1740              		.loc 1 1495 12
 1741 0008 0023     		movs	r3, #0
 1742 000a FB66     		str	r3, [r7, #108]
1496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
1498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 1743              		.loc 1 1498 3
 1744 000c 7B68     		ldr	r3, [r7, #4]
 1745 000e 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 1746 0012 012B     		cmp	r3, #1
 1747 0014 01D1     		bne	.L82
 1748              		.loc 1 1498 3 is_stmt 0 discriminator 1
 1749 0016 0223     		movs	r3, #2
 1750 0018 98E0     		b	.L83
 1751              	.L82:
 1752              		.loc 1 1498 3 discriminator 2
 1753 001a 7B68     		ldr	r3, [r7, #4]
 1754 001c 0122     		movs	r2, #1
 1755 001e 83F83C20 		strb	r2, [r3, #60]
1499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
 1756              		.loc 1 1500 16 is_stmt 1 discriminator 2
 1757 0022 7B68     		ldr	r3, [r7, #4]
 1758 0024 1B68     		ldr	r3, [r3]
 1759 0026 5B69     		ldr	r3, [r3, #20]
 1760 0028 03F08003 		and	r3, r3, #128
 1761 002c 802B     		cmp	r3, #128
 1762 002e 0CBF     		ite	eq
 1763 0030 0123     		moveq	r3, #1
 1764 0032 0023     		movne	r3, #0
 1765 0034 DBB2     		uxtb	r3, r3
 1766              		.loc 1 1500 14 discriminator 2
 1767 0036 FB66     		str	r3, [r7, #108]
1501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 1768              		.loc 1 1501 13 discriminator 2
 1769 0038 7B68     		ldr	r3, [r7, #4]
 1770 003a 93F83D30 		ldrb	r3, [r3, #61]
 1771 003e DBB2     		uxtb	r3, r3
 1772              		.loc 1 1501 6 discriminator 2
 1773 0040 212B     		cmp	r3, #33
 1774 0042 1CD1     		bne	.L84
 1775              		.loc 1 1501 49 discriminator 1
 1776 0044 FB6E     		ldr	r3, [r7, #108]
 1777 0046 002B     		cmp	r3, #0
 1778 0048 19D0     		beq	.L84
 1779              	.L87:
 1780              	.LBB325:
1502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 1781              		.loc 1 1504 5 discriminator 1
 1782 004a 7B68     		ldr	r3, [r7, #4]
 1783 004c 1B68     		ldr	r3, [r3]
 1784 004e 1433     		adds	r3, r3, #20
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 78


 1785 0050 FB64     		str	r3, [r7, #76]
 1786              	.LBB326:
 1787              	.LBB327:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1788              		.loc 2 1072 4 discriminator 1
 1789 0052 FB6C     		ldr	r3, [r7, #76]
 1790              		.syntax unified
 1791              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1792 0054 53E8003F 		ldrex r3, [r3]
 1793              	@ 0 "" 2
 1794              		.thumb
 1795              		.syntax unified
 1796 0058 BB64     		str	r3, [r7, #72]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1797              		.loc 2 1073 10 discriminator 1
 1798 005a BB6C     		ldr	r3, [r7, #72]
 1799              	.LBE327:
 1800              	.LBE326:
 1801              		.loc 1 1504 5 discriminator 1
 1802 005c 23F08003 		bic	r3, r3, #128
 1803 0060 BB66     		str	r3, [r7, #104]
 1804 0062 7B68     		ldr	r3, [r7, #4]
 1805 0064 1B68     		ldr	r3, [r3]
 1806 0066 1433     		adds	r3, r3, #20
 1807 0068 BA6E     		ldr	r2, [r7, #104]
 1808 006a BA65     		str	r2, [r7, #88]
 1809 006c 7B65     		str	r3, [r7, #84]
 1810              	.LBB328:
 1811              	.LBB329:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1812              		.loc 2 1123 4 discriminator 1
 1813 006e 796D     		ldr	r1, [r7, #84]
 1814 0070 BA6D     		ldr	r2, [r7, #88]
 1815              		.syntax unified
 1816              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1817 0072 41E80023 		strex r3, r2, [r1]
 1818              	@ 0 "" 2
 1819              		.thumb
 1820              		.syntax unified
 1821 0076 3B65     		str	r3, [r7, #80]
 1822              		.loc 2 1124 10 discriminator 1
 1823 0078 3B6D     		ldr	r3, [r7, #80]
 1824              	.LBE329:
 1825              	.LBE328:
 1826              		.loc 1 1504 5 discriminator 1
 1827 007a 002B     		cmp	r3, #0
 1828 007c E5D1     		bne	.L87
 1829              	.L84:
 1830              	.LBE325:
1505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 1831              		.loc 1 1507 16
 1832 007e 7B68     		ldr	r3, [r7, #4]
 1833 0080 1B68     		ldr	r3, [r3]
 1834 0082 5B69     		ldr	r3, [r3, #20]
 1835 0084 03F04003 		and	r3, r3, #64
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 79


 1836 0088 402B     		cmp	r3, #64
 1837 008a 0CBF     		ite	eq
 1838 008c 0123     		moveq	r3, #1
 1839 008e 0023     		movne	r3, #0
 1840 0090 DBB2     		uxtb	r3, r3
 1841              		.loc 1 1507 14
 1842 0092 FB66     		str	r3, [r7, #108]
1508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 1843              		.loc 1 1508 13
 1844 0094 7B68     		ldr	r3, [r7, #4]
 1845 0096 93F83E30 		ldrb	r3, [r3, #62]
 1846 009a DBB2     		uxtb	r3, r3
 1847              		.loc 1 1508 6
 1848 009c 222B     		cmp	r3, #34
 1849 009e 50D1     		bne	.L88
 1850              		.loc 1 1508 50 discriminator 1
 1851 00a0 FB6E     		ldr	r3, [r7, #108]
 1852 00a2 002B     		cmp	r3, #0
 1853 00a4 4DD0     		beq	.L88
 1854              	.L91:
 1855              	.LBB330:
1509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 1856              		.loc 1 1511 5 discriminator 1
 1857 00a6 7B68     		ldr	r3, [r7, #4]
 1858 00a8 1B68     		ldr	r3, [r3]
 1859 00aa 0C33     		adds	r3, r3, #12
 1860 00ac BB63     		str	r3, [r7, #56]
 1861              	.LBB331:
 1862              	.LBB332:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1863              		.loc 2 1072 4 discriminator 1
 1864 00ae BB6B     		ldr	r3, [r7, #56]
 1865              		.syntax unified
 1866              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1867 00b0 53E8003F 		ldrex r3, [r3]
 1868              	@ 0 "" 2
 1869              		.thumb
 1870              		.syntax unified
 1871 00b4 7B63     		str	r3, [r7, #52]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1872              		.loc 2 1073 10 discriminator 1
 1873 00b6 7B6B     		ldr	r3, [r7, #52]
 1874              	.LBE332:
 1875              	.LBE331:
 1876              		.loc 1 1511 5 discriminator 1
 1877 00b8 23F48073 		bic	r3, r3, #256
 1878 00bc 7B66     		str	r3, [r7, #100]
 1879 00be 7B68     		ldr	r3, [r7, #4]
 1880 00c0 1B68     		ldr	r3, [r3]
 1881 00c2 0C33     		adds	r3, r3, #12
 1882 00c4 7A6E     		ldr	r2, [r7, #100]
 1883 00c6 7A64     		str	r2, [r7, #68]
 1884 00c8 3B64     		str	r3, [r7, #64]
 1885              	.LBB333:
 1886              	.LBB334:
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 80


1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1887              		.loc 2 1123 4 discriminator 1
 1888 00ca 396C     		ldr	r1, [r7, #64]
 1889 00cc 7A6C     		ldr	r2, [r7, #68]
 1890              		.syntax unified
 1891              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1892 00ce 41E80023 		strex r3, r2, [r1]
 1893              	@ 0 "" 2
 1894              		.thumb
 1895              		.syntax unified
 1896 00d2 FB63     		str	r3, [r7, #60]
 1897              		.loc 2 1124 10 discriminator 1
 1898 00d4 FB6B     		ldr	r3, [r7, #60]
 1899              	.LBE334:
 1900              	.LBE333:
 1901              		.loc 1 1511 5 discriminator 1
 1902 00d6 002B     		cmp	r3, #0
 1903 00d8 E5D1     		bne	.L91
 1904              	.L94:
 1905              	.LBE330:
 1906              	.LBB335:
1512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1907              		.loc 1 1512 5 discriminator 1
 1908 00da 7B68     		ldr	r3, [r7, #4]
 1909 00dc 1B68     		ldr	r3, [r3]
 1910 00de 1433     		adds	r3, r3, #20
 1911 00e0 7B62     		str	r3, [r7, #36]
 1912              	.LBB336:
 1913              	.LBB337:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1914              		.loc 2 1072 4 discriminator 1
 1915 00e2 7B6A     		ldr	r3, [r7, #36]
 1916              		.syntax unified
 1917              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1918 00e4 53E8003F 		ldrex r3, [r3]
 1919              	@ 0 "" 2
 1920              		.thumb
 1921              		.syntax unified
 1922 00e8 3B62     		str	r3, [r7, #32]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1923              		.loc 2 1073 10 discriminator 1
 1924 00ea 3B6A     		ldr	r3, [r7, #32]
 1925              	.LBE337:
 1926              	.LBE336:
 1927              		.loc 1 1512 5 discriminator 1
 1928 00ec 23F00103 		bic	r3, r3, #1
 1929 00f0 3B66     		str	r3, [r7, #96]
 1930 00f2 7B68     		ldr	r3, [r7, #4]
 1931 00f4 1B68     		ldr	r3, [r3]
 1932 00f6 1433     		adds	r3, r3, #20
 1933 00f8 3A6E     		ldr	r2, [r7, #96]
 1934 00fa 3A63     		str	r2, [r7, #48]
 1935 00fc FB62     		str	r3, [r7, #44]
 1936              	.LBB338:
 1937              	.LBB339:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1938              		.loc 2 1123 4 discriminator 1
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 81


 1939 00fe F96A     		ldr	r1, [r7, #44]
 1940 0100 3A6B     		ldr	r2, [r7, #48]
 1941              		.syntax unified
 1942              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1943 0102 41E80023 		strex r3, r2, [r1]
 1944              	@ 0 "" 2
 1945              		.thumb
 1946              		.syntax unified
 1947 0106 BB62     		str	r3, [r7, #40]
 1948              		.loc 2 1124 10 discriminator 1
 1949 0108 BB6A     		ldr	r3, [r7, #40]
 1950              	.LBE339:
 1951              	.LBE338:
 1952              		.loc 1 1512 5 discriminator 1
 1953 010a 002B     		cmp	r3, #0
 1954 010c E5D1     		bne	.L94
 1955              	.L97:
 1956              	.LBE335:
 1957              	.LBB340:
1513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 1958              		.loc 1 1515 5 discriminator 1
 1959 010e 7B68     		ldr	r3, [r7, #4]
 1960 0110 1B68     		ldr	r3, [r3]
 1961 0112 1433     		adds	r3, r3, #20
 1962 0114 3B61     		str	r3, [r7, #16]
 1963              	.LBB341:
 1964              	.LBB342:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1965              		.loc 2 1072 4 discriminator 1
 1966 0116 3B69     		ldr	r3, [r7, #16]
 1967              		.syntax unified
 1968              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1969 0118 53E8003F 		ldrex r3, [r3]
 1970              	@ 0 "" 2
 1971              		.thumb
 1972              		.syntax unified
 1973 011c FB60     		str	r3, [r7, #12]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1974              		.loc 2 1073 10 discriminator 1
 1975 011e FB68     		ldr	r3, [r7, #12]
 1976              	.LBE342:
 1977              	.LBE341:
 1978              		.loc 1 1515 5 discriminator 1
 1979 0120 23F04003 		bic	r3, r3, #64
 1980 0124 FB65     		str	r3, [r7, #92]
 1981 0126 7B68     		ldr	r3, [r7, #4]
 1982 0128 1B68     		ldr	r3, [r3]
 1983 012a 1433     		adds	r3, r3, #20
 1984 012c FA6D     		ldr	r2, [r7, #92]
 1985 012e FA61     		str	r2, [r7, #28]
 1986 0130 BB61     		str	r3, [r7, #24]
 1987              	.LBB343:
 1988              	.LBB344:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1989              		.loc 2 1123 4 discriminator 1
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 82


 1990 0132 B969     		ldr	r1, [r7, #24]
 1991 0134 FA69     		ldr	r2, [r7, #28]
 1992              		.syntax unified
 1993              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1994 0136 41E80023 		strex r3, r2, [r1]
 1995              	@ 0 "" 2
 1996              		.thumb
 1997              		.syntax unified
 1998 013a 7B61     		str	r3, [r7, #20]
 1999              		.loc 2 1124 10 discriminator 1
 2000 013c 7B69     		ldr	r3, [r7, #20]
 2001              	.LBE344:
 2002              	.LBE343:
 2003              		.loc 1 1515 5 discriminator 1
 2004 013e 002B     		cmp	r3, #0
 2005 0140 E5D1     		bne	.L97
 2006              	.L88:
 2007              	.LBE340:
1516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
1519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 2008              		.loc 1 1519 3
 2009 0142 7B68     		ldr	r3, [r7, #4]
 2010 0144 0022     		movs	r2, #0
 2011 0146 83F83C20 		strb	r2, [r3, #60]
1520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 2012              		.loc 1 1521 10
 2013 014a 0023     		movs	r3, #0
 2014              	.L83:
1522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2015              		.loc 1 1522 1
 2016 014c 1846     		mov	r0, r3
 2017 014e 7437     		adds	r7, r7, #116
 2018              	.LCFI71:
 2019              		.cfi_def_cfa_offset 4
 2020 0150 BD46     		mov	sp, r7
 2021              	.LCFI72:
 2022              		.cfi_def_cfa_register 13
 2023              		@ sp needed
 2024 0152 5DF8047B 		ldr	r7, [sp], #4
 2025              	.LCFI73:
 2026              		.cfi_restore 7
 2027              		.cfi_def_cfa_offset 0
 2028 0156 7047     		bx	lr
 2029              		.cfi_endproc
 2030              	.LFE229:
 2032              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 2033              		.align	1
 2034              		.global	HAL_UART_DMAResume
 2035              		.syntax unified
 2036              		.thumb
 2037              		.thumb_func
 2038              		.fpu fpv4-sp-d16
 2040              	HAL_UART_DMAResume:
 2041              	.LFB230:
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 83


1523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief Resumes the DMA Transfer.
1526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
1527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 2042              		.loc 1 1531 1
 2043              		.cfi_startproc
 2044              		@ args = 0, pretend = 0, frame = 112
 2045              		@ frame_needed = 1, uses_anonymous_args = 0
 2046              		@ link register save eliminated.
 2047 0000 80B4     		push	{r7}
 2048              	.LCFI74:
 2049              		.cfi_def_cfa_offset 4
 2050              		.cfi_offset 7, -4
 2051 0002 9DB0     		sub	sp, sp, #116
 2052              	.LCFI75:
 2053              		.cfi_def_cfa_offset 120
 2054 0004 00AF     		add	r7, sp, #0
 2055              	.LCFI76:
 2056              		.cfi_def_cfa_register 7
 2057 0006 7860     		str	r0, [r7, #4]
1532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
1533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 2058              		.loc 1 1533 3
 2059 0008 7B68     		ldr	r3, [r7, #4]
 2060 000a 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 2061 000e 012B     		cmp	r3, #1
 2062 0010 01D1     		bne	.L99
 2063              		.loc 1 1533 3 is_stmt 0 discriminator 1
 2064 0012 0223     		movs	r3, #2
 2065 0014 8BE0     		b	.L100
 2066              	.L99:
 2067              		.loc 1 1533 3 discriminator 2
 2068 0016 7B68     		ldr	r3, [r7, #4]
 2069 0018 0122     		movs	r2, #1
 2070 001a 83F83C20 		strb	r2, [r3, #60]
1534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 2071              		.loc 1 1535 12 is_stmt 1 discriminator 2
 2072 001e 7B68     		ldr	r3, [r7, #4]
 2073 0020 93F83D30 		ldrb	r3, [r3, #61]
 2074 0024 DBB2     		uxtb	r3, r3
 2075              		.loc 1 1535 6 discriminator 2
 2076 0026 212B     		cmp	r3, #33
 2077 0028 19D1     		bne	.L101
 2078              	.L104:
 2079              	.LBB345:
1536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2080              		.loc 1 1538 5 discriminator 1
 2081 002a 7B68     		ldr	r3, [r7, #4]
 2082 002c 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 84


 2083 002e 1433     		adds	r3, r3, #20
 2084 0030 3B65     		str	r3, [r7, #80]
 2085              	.LBB346:
 2086              	.LBB347:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2087              		.loc 2 1072 4 discriminator 1
 2088 0032 3B6D     		ldr	r3, [r7, #80]
 2089              		.syntax unified
 2090              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2091 0034 53E8003F 		ldrex r3, [r3]
 2092              	@ 0 "" 2
 2093              		.thumb
 2094              		.syntax unified
 2095 0038 FB64     		str	r3, [r7, #76]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2096              		.loc 2 1073 10 discriminator 1
 2097 003a FB6C     		ldr	r3, [r7, #76]
 2098              	.LBE347:
 2099              	.LBE346:
 2100              		.loc 1 1538 5 discriminator 1
 2101 003c 43F08003 		orr	r3, r3, #128
 2102 0040 FB66     		str	r3, [r7, #108]
 2103 0042 7B68     		ldr	r3, [r7, #4]
 2104 0044 1B68     		ldr	r3, [r3]
 2105 0046 1433     		adds	r3, r3, #20
 2106 0048 FA6E     		ldr	r2, [r7, #108]
 2107 004a FA65     		str	r2, [r7, #92]
 2108 004c BB65     		str	r3, [r7, #88]
 2109              	.LBB348:
 2110              	.LBB349:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2111              		.loc 2 1123 4 discriminator 1
 2112 004e B96D     		ldr	r1, [r7, #88]
 2113 0050 FA6D     		ldr	r2, [r7, #92]
 2114              		.syntax unified
 2115              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2116 0052 41E80023 		strex r3, r2, [r1]
 2117              	@ 0 "" 2
 2118              		.thumb
 2119              		.syntax unified
 2120 0056 7B65     		str	r3, [r7, #84]
 2121              		.loc 2 1124 10 discriminator 1
 2122 0058 7B6D     		ldr	r3, [r7, #84]
 2123              	.LBE349:
 2124              	.LBE348:
 2125              		.loc 1 1538 5 discriminator 1
 2126 005a 002B     		cmp	r3, #0
 2127 005c E5D1     		bne	.L104
 2128              	.L101:
 2129              	.LBE345:
1539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 2130              		.loc 1 1541 12
 2131 005e 7B68     		ldr	r3, [r7, #4]
 2132 0060 93F83E30 		ldrb	r3, [r3, #62]
 2133 0064 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 85


 2134              		.loc 1 1541 6
 2135 0066 222B     		cmp	r3, #34
 2136 0068 5CD1     		bne	.L105
 2137              	.LBB350:
1542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer*/
1544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_CLEAR_OREFLAG(huart);
 2138              		.loc 1 1544 5
 2139 006a 0023     		movs	r3, #0
 2140 006c FB60     		str	r3, [r7, #12]
 2141 006e 7B68     		ldr	r3, [r7, #4]
 2142 0070 1B68     		ldr	r3, [r3]
 2143 0072 1B68     		ldr	r3, [r3]
 2144 0074 FB60     		str	r3, [r7, #12]
 2145 0076 7B68     		ldr	r3, [r7, #4]
 2146 0078 1B68     		ldr	r3, [r3]
 2147 007a 5B68     		ldr	r3, [r3, #4]
 2148 007c FB60     		str	r3, [r7, #12]
 2149 007e FB68     		ldr	r3, [r7, #12]
 2150              	.LBE350:
1545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Re-enable PE and ERR (Frame error, noise error, overrun error) interrupts */
1547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->Init.Parity != UART_PARITY_NONE)
 2151              		.loc 1 1547 20
 2152 0080 7B68     		ldr	r3, [r7, #4]
 2153 0082 1B69     		ldr	r3, [r3, #16]
 2154              		.loc 1 1547 8
 2155 0084 002B     		cmp	r3, #0
 2156 0086 19D0     		beq	.L112
 2157              	.L109:
 2158              	.LBB351:
1548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 2159              		.loc 1 1549 7 discriminator 1
 2160 0088 7B68     		ldr	r3, [r7, #4]
 2161 008a 1B68     		ldr	r3, [r3]
 2162 008c 0C33     		adds	r3, r3, #12
 2163 008e FB63     		str	r3, [r7, #60]
 2164              	.LBB352:
 2165              	.LBB353:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2166              		.loc 2 1072 4 discriminator 1
 2167 0090 FB6B     		ldr	r3, [r7, #60]
 2168              		.syntax unified
 2169              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2170 0092 53E8003F 		ldrex r3, [r3]
 2171              	@ 0 "" 2
 2172              		.thumb
 2173              		.syntax unified
 2174 0096 BB63     		str	r3, [r7, #56]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2175              		.loc 2 1073 10 discriminator 1
 2176 0098 BB6B     		ldr	r3, [r7, #56]
 2177              	.LBE353:
 2178              	.LBE352:
 2179              		.loc 1 1549 7 discriminator 1
 2180 009a 43F48073 		orr	r3, r3, #256
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 86


 2181 009e BB66     		str	r3, [r7, #104]
 2182 00a0 7B68     		ldr	r3, [r7, #4]
 2183 00a2 1B68     		ldr	r3, [r3]
 2184 00a4 0C33     		adds	r3, r3, #12
 2185 00a6 BA6E     		ldr	r2, [r7, #104]
 2186 00a8 BA64     		str	r2, [r7, #72]
 2187 00aa 7B64     		str	r3, [r7, #68]
 2188              	.LBB354:
 2189              	.LBB355:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2190              		.loc 2 1123 4 discriminator 1
 2191 00ac 796C     		ldr	r1, [r7, #68]
 2192 00ae BA6C     		ldr	r2, [r7, #72]
 2193              		.syntax unified
 2194              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2195 00b0 41E80023 		strex r3, r2, [r1]
 2196              	@ 0 "" 2
 2197              		.thumb
 2198              		.syntax unified
 2199 00b4 3B64     		str	r3, [r7, #64]
 2200              		.loc 2 1124 10 discriminator 1
 2201 00b6 3B6C     		ldr	r3, [r7, #64]
 2202              	.LBE355:
 2203              	.LBE354:
 2204              		.loc 1 1549 7 discriminator 1
 2205 00b8 002B     		cmp	r3, #0
 2206 00ba E5D1     		bne	.L109
 2207              	.L112:
 2208              	.LBE351:
 2209              	.LBB356:
1550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2210              		.loc 1 1551 5 discriminator 1
 2211 00bc 7B68     		ldr	r3, [r7, #4]
 2212 00be 1B68     		ldr	r3, [r3]
 2213 00c0 1433     		adds	r3, r3, #20
 2214 00c2 BB62     		str	r3, [r7, #40]
 2215              	.LBB357:
 2216              	.LBB358:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2217              		.loc 2 1072 4 discriminator 1
 2218 00c4 BB6A     		ldr	r3, [r7, #40]
 2219              		.syntax unified
 2220              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2221 00c6 53E8003F 		ldrex r3, [r3]
 2222              	@ 0 "" 2
 2223              		.thumb
 2224              		.syntax unified
 2225 00ca 7B62     		str	r3, [r7, #36]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2226              		.loc 2 1073 10 discriminator 1
 2227 00cc 7B6A     		ldr	r3, [r7, #36]
 2228              	.LBE358:
 2229              	.LBE357:
 2230              		.loc 1 1551 5 discriminator 1
 2231 00ce 43F00103 		orr	r3, r3, #1
 2232 00d2 7B66     		str	r3, [r7, #100]
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 87


 2233 00d4 7B68     		ldr	r3, [r7, #4]
 2234 00d6 1B68     		ldr	r3, [r3]
 2235 00d8 1433     		adds	r3, r3, #20
 2236 00da 7A6E     		ldr	r2, [r7, #100]
 2237 00dc 7A63     		str	r2, [r7, #52]
 2238 00de 3B63     		str	r3, [r7, #48]
 2239              	.LBB359:
 2240              	.LBB360:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2241              		.loc 2 1123 4 discriminator 1
 2242 00e0 396B     		ldr	r1, [r7, #48]
 2243 00e2 7A6B     		ldr	r2, [r7, #52]
 2244              		.syntax unified
 2245              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2246 00e4 41E80023 		strex r3, r2, [r1]
 2247              	@ 0 "" 2
 2248              		.thumb
 2249              		.syntax unified
 2250 00e8 FB62     		str	r3, [r7, #44]
 2251              		.loc 2 1124 10 discriminator 1
 2252 00ea FB6A     		ldr	r3, [r7, #44]
 2253              	.LBE360:
 2254              	.LBE359:
 2255              		.loc 1 1551 5 discriminator 1
 2256 00ec 002B     		cmp	r3, #0
 2257 00ee E5D1     		bne	.L112
 2258              	.L115:
 2259              	.LBE356:
 2260              	.LBB361:
1552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2261              		.loc 1 1554 5 discriminator 1
 2262 00f0 7B68     		ldr	r3, [r7, #4]
 2263 00f2 1B68     		ldr	r3, [r3]
 2264 00f4 1433     		adds	r3, r3, #20
 2265 00f6 7B61     		str	r3, [r7, #20]
 2266              	.LBB362:
 2267              	.LBB363:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2268              		.loc 2 1072 4 discriminator 1
 2269 00f8 7B69     		ldr	r3, [r7, #20]
 2270              		.syntax unified
 2271              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2272 00fa 53E8003F 		ldrex r3, [r3]
 2273              	@ 0 "" 2
 2274              		.thumb
 2275              		.syntax unified
 2276 00fe 3B61     		str	r3, [r7, #16]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2277              		.loc 2 1073 10 discriminator 1
 2278 0100 3B69     		ldr	r3, [r7, #16]
 2279              	.LBE363:
 2280              	.LBE362:
 2281              		.loc 1 1554 5 discriminator 1
 2282 0102 43F04003 		orr	r3, r3, #64
 2283 0106 3B66     		str	r3, [r7, #96]
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 88


 2284 0108 7B68     		ldr	r3, [r7, #4]
 2285 010a 1B68     		ldr	r3, [r3]
 2286 010c 1433     		adds	r3, r3, #20
 2287 010e 3A6E     		ldr	r2, [r7, #96]
 2288 0110 3A62     		str	r2, [r7, #32]
 2289 0112 FB61     		str	r3, [r7, #28]
 2290              	.LBB364:
 2291              	.LBB365:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2292              		.loc 2 1123 4 discriminator 1
 2293 0114 F969     		ldr	r1, [r7, #28]
 2294 0116 3A6A     		ldr	r2, [r7, #32]
 2295              		.syntax unified
 2296              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2297 0118 41E80023 		strex r3, r2, [r1]
 2298              	@ 0 "" 2
 2299              		.thumb
 2300              		.syntax unified
 2301 011c BB61     		str	r3, [r7, #24]
 2302              		.loc 2 1124 10 discriminator 1
 2303 011e BB69     		ldr	r3, [r7, #24]
 2304              	.LBE365:
 2305              	.LBE364:
 2306              		.loc 1 1554 5 discriminator 1
 2307 0120 002B     		cmp	r3, #0
 2308 0122 E5D1     		bne	.L115
 2309              	.L105:
 2310              	.LBE361:
1555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
1558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 2311              		.loc 1 1558 3
 2312 0124 7B68     		ldr	r3, [r7, #4]
 2313 0126 0022     		movs	r2, #0
 2314 0128 83F83C20 		strb	r2, [r3, #60]
1559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 2315              		.loc 1 1560 10
 2316 012c 0023     		movs	r3, #0
 2317              	.L100:
1561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2318              		.loc 1 1561 1
 2319 012e 1846     		mov	r0, r3
 2320 0130 7437     		adds	r7, r7, #116
 2321              	.LCFI77:
 2322              		.cfi_def_cfa_offset 4
 2323 0132 BD46     		mov	sp, r7
 2324              	.LCFI78:
 2325              		.cfi_def_cfa_register 13
 2326              		@ sp needed
 2327 0134 5DF8047B 		ldr	r7, [sp], #4
 2328              	.LCFI79:
 2329              		.cfi_restore 7
 2330              		.cfi_def_cfa_offset 0
 2331 0138 7047     		bx	lr
 2332              		.cfi_endproc
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 89


 2333              	.LFE230:
 2335              		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 2336              		.align	1
 2337              		.global	HAL_UART_DMAStop
 2338              		.syntax unified
 2339              		.thumb
 2340              		.thumb_func
 2341              		.fpu fpv4-sp-d16
 2343              	HAL_UART_DMAStop:
 2344              	.LFB231:
1562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief Stops the DMA Transfer.
1565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
1566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 2345              		.loc 1 1570 1
 2346              		.cfi_startproc
 2347              		@ args = 0, pretend = 0, frame = 64
 2348              		@ frame_needed = 1, uses_anonymous_args = 0
 2349 0000 80B5     		push	{r7, lr}
 2350              	.LCFI80:
 2351              		.cfi_def_cfa_offset 8
 2352              		.cfi_offset 7, -8
 2353              		.cfi_offset 14, -4
 2354 0002 90B0     		sub	sp, sp, #64
 2355              	.LCFI81:
 2356              		.cfi_def_cfa_offset 72
 2357 0004 00AF     		add	r7, sp, #0
 2358              	.LCFI82:
 2359              		.cfi_def_cfa_register 7
 2360 0006 7860     		str	r0, [r7, #4]
1571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 2361              		.loc 1 1571 12
 2362 0008 0023     		movs	r3, #0
 2363 000a FB63     		str	r3, [r7, #60]
1572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      when calling HAL_DMA_Abort() API the DMA TX/RX Transfer complete interrupt is generated
1575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      and the correspond call back is executed HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      */
1577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
 2364              		.loc 1 1579 16
 2365 000c 7B68     		ldr	r3, [r7, #4]
 2366 000e 1B68     		ldr	r3, [r3]
 2367 0010 5B69     		ldr	r3, [r3, #20]
 2368 0012 03F08003 		and	r3, r3, #128
 2369 0016 802B     		cmp	r3, #128
 2370 0018 0CBF     		ite	eq
 2371 001a 0123     		moveq	r3, #1
 2372 001c 0023     		movne	r3, #0
 2373 001e DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 90


 2374              		.loc 1 1579 14
 2375 0020 FB63     		str	r3, [r7, #60]
1580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 2376              		.loc 1 1580 13
 2377 0022 7B68     		ldr	r3, [r7, #4]
 2378 0024 93F83D30 		ldrb	r3, [r3, #61]
 2379 0028 DBB2     		uxtb	r3, r3
 2380              		.loc 1 1580 6
 2381 002a 212B     		cmp	r3, #33
 2382 002c 28D1     		bne	.L117
 2383              		.loc 1 1580 49 discriminator 1
 2384 002e FB6B     		ldr	r3, [r7, #60]
 2385 0030 002B     		cmp	r3, #0
 2386 0032 25D0     		beq	.L117
 2387              	.L120:
 2388              	.LBB366:
1581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2389              		.loc 1 1582 5 discriminator 1
 2390 0034 7B68     		ldr	r3, [r7, #4]
 2391 0036 1B68     		ldr	r3, [r3]
 2392 0038 1433     		adds	r3, r3, #20
 2393 003a 7B62     		str	r3, [r7, #36]
 2394              	.LBB367:
 2395              	.LBB368:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2396              		.loc 2 1072 4 discriminator 1
 2397 003c 7B6A     		ldr	r3, [r7, #36]
 2398              		.syntax unified
 2399              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2400 003e 53E8003F 		ldrex r3, [r3]
 2401              	@ 0 "" 2
 2402              		.thumb
 2403              		.syntax unified
 2404 0042 3B62     		str	r3, [r7, #32]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2405              		.loc 2 1073 10 discriminator 1
 2406 0044 3B6A     		ldr	r3, [r7, #32]
 2407              	.LBE368:
 2408              	.LBE367:
 2409              		.loc 1 1582 5 discriminator 1
 2410 0046 23F08003 		bic	r3, r3, #128
 2411 004a BB63     		str	r3, [r7, #56]
 2412 004c 7B68     		ldr	r3, [r7, #4]
 2413 004e 1B68     		ldr	r3, [r3]
 2414 0050 1433     		adds	r3, r3, #20
 2415 0052 BA6B     		ldr	r2, [r7, #56]
 2416 0054 3A63     		str	r2, [r7, #48]
 2417 0056 FB62     		str	r3, [r7, #44]
 2418              	.LBB369:
 2419              	.LBB370:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2420              		.loc 2 1123 4 discriminator 1
 2421 0058 F96A     		ldr	r1, [r7, #44]
 2422 005a 3A6B     		ldr	r2, [r7, #48]
 2423              		.syntax unified
 2424              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 91


 2425 005c 41E80023 		strex r3, r2, [r1]
 2426              	@ 0 "" 2
 2427              		.thumb
 2428              		.syntax unified
 2429 0060 BB62     		str	r3, [r7, #40]
 2430              		.loc 2 1124 10 discriminator 1
 2431 0062 BB6A     		ldr	r3, [r7, #40]
 2432              	.LBE370:
 2433              	.LBE369:
 2434              		.loc 1 1582 5 discriminator 1
 2435 0064 002B     		cmp	r3, #0
 2436 0066 E5D1     		bne	.L120
 2437              	.LBE366:
1583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx stream */
1585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 2438              		.loc 1 1585 14
 2439 0068 7B68     		ldr	r3, [r7, #4]
 2440 006a 5B6B     		ldr	r3, [r3, #52]
 2441              		.loc 1 1585 8
 2442 006c 002B     		cmp	r3, #0
 2443 006e 04D0     		beq	.L121
1586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
 2444              		.loc 1 1587 7
 2445 0070 7B68     		ldr	r3, [r7, #4]
 2446 0072 5B6B     		ldr	r3, [r3, #52]
 2447 0074 1846     		mov	r0, r3
 2448 0076 FFF7FEFF 		bl	HAL_DMA_Abort
 2449              	.L121:
1588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 2450              		.loc 1 1589 5
 2451 007a 7868     		ldr	r0, [r7, #4]
 2452 007c FFF7FEFF 		bl	UART_EndTxTransfer
 2453              	.L117:
1590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 2454              		.loc 1 1593 16
 2455 0080 7B68     		ldr	r3, [r7, #4]
 2456 0082 1B68     		ldr	r3, [r3]
 2457 0084 5B69     		ldr	r3, [r3, #20]
 2458 0086 03F04003 		and	r3, r3, #64
 2459 008a 402B     		cmp	r3, #64
 2460 008c 0CBF     		ite	eq
 2461 008e 0123     		moveq	r3, #1
 2462 0090 0023     		movne	r3, #0
 2463 0092 DBB2     		uxtb	r3, r3
 2464              		.loc 1 1593 14
 2465 0094 FB63     		str	r3, [r7, #60]
1594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 2466              		.loc 1 1594 13
 2467 0096 7B68     		ldr	r3, [r7, #4]
 2468 0098 93F83E30 		ldrb	r3, [r3, #62]
 2469 009c DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 92


 2470              		.loc 1 1594 6
 2471 009e 222B     		cmp	r3, #34
 2472 00a0 28D1     		bne	.L122
 2473              		.loc 1 1594 50 discriminator 1
 2474 00a2 FB6B     		ldr	r3, [r7, #60]
 2475 00a4 002B     		cmp	r3, #0
 2476 00a6 25D0     		beq	.L122
 2477              	.L125:
 2478              	.LBB371:
1595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2479              		.loc 1 1596 5 discriminator 1
 2480 00a8 7B68     		ldr	r3, [r7, #4]
 2481 00aa 1B68     		ldr	r3, [r3]
 2482 00ac 1433     		adds	r3, r3, #20
 2483 00ae 3B61     		str	r3, [r7, #16]
 2484              	.LBB372:
 2485              	.LBB373:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2486              		.loc 2 1072 4 discriminator 1
 2487 00b0 3B69     		ldr	r3, [r7, #16]
 2488              		.syntax unified
 2489              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2490 00b2 53E8003F 		ldrex r3, [r3]
 2491              	@ 0 "" 2
 2492              		.thumb
 2493              		.syntax unified
 2494 00b6 FB60     		str	r3, [r7, #12]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2495              		.loc 2 1073 10 discriminator 1
 2496 00b8 FB68     		ldr	r3, [r7, #12]
 2497              	.LBE373:
 2498              	.LBE372:
 2499              		.loc 1 1596 5 discriminator 1
 2500 00ba 23F04003 		bic	r3, r3, #64
 2501 00be 7B63     		str	r3, [r7, #52]
 2502 00c0 7B68     		ldr	r3, [r7, #4]
 2503 00c2 1B68     		ldr	r3, [r3]
 2504 00c4 1433     		adds	r3, r3, #20
 2505 00c6 7A6B     		ldr	r2, [r7, #52]
 2506 00c8 FA61     		str	r2, [r7, #28]
 2507 00ca BB61     		str	r3, [r7, #24]
 2508              	.LBB374:
 2509              	.LBB375:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2510              		.loc 2 1123 4 discriminator 1
 2511 00cc B969     		ldr	r1, [r7, #24]
 2512 00ce FA69     		ldr	r2, [r7, #28]
 2513              		.syntax unified
 2514              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2515 00d0 41E80023 		strex r3, r2, [r1]
 2516              	@ 0 "" 2
 2517              		.thumb
 2518              		.syntax unified
 2519 00d4 7B61     		str	r3, [r7, #20]
 2520              		.loc 2 1124 10 discriminator 1
 2521 00d6 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 93


 2522              	.LBE375:
 2523              	.LBE374:
 2524              		.loc 1 1596 5 discriminator 1
 2525 00d8 002B     		cmp	r3, #0
 2526 00da E5D1     		bne	.L125
 2527              	.LBE371:
1597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx stream */
1599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 2528              		.loc 1 1599 14
 2529 00dc 7B68     		ldr	r3, [r7, #4]
 2530 00de 9B6B     		ldr	r3, [r3, #56]
 2531              		.loc 1 1599 8
 2532 00e0 002B     		cmp	r3, #0
 2533 00e2 04D0     		beq	.L126
1600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
 2534              		.loc 1 1601 7
 2535 00e4 7B68     		ldr	r3, [r7, #4]
 2536 00e6 9B6B     		ldr	r3, [r3, #56]
 2537 00e8 1846     		mov	r0, r3
 2538 00ea FFF7FEFF 		bl	HAL_DMA_Abort
 2539              	.L126:
1602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 2540              		.loc 1 1603 5
 2541 00ee 7868     		ldr	r0, [r7, #4]
 2542 00f0 FFF7FEFF 		bl	UART_EndRxTransfer
 2543              	.L122:
1604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 2544              		.loc 1 1606 10
 2545 00f4 0023     		movs	r3, #0
1607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2546              		.loc 1 1607 1
 2547 00f6 1846     		mov	r0, r3
 2548 00f8 4037     		adds	r7, r7, #64
 2549              	.LCFI83:
 2550              		.cfi_def_cfa_offset 8
 2551 00fa BD46     		mov	sp, r7
 2552              	.LCFI84:
 2553              		.cfi_def_cfa_register 13
 2554              		@ sp needed
 2555 00fc 80BD     		pop	{r7, pc}
 2556              		.cfi_endproc
 2557              	.LFE231:
 2559              		.section	.text.HAL_UARTEx_ReceiveToIdle,"ax",%progbits
 2560              		.align	1
 2561              		.global	HAL_UARTEx_ReceiveToIdle
 2562              		.syntax unified
 2563              		.thumb
 2564              		.thumb_func
 2565              		.fpu fpv4-sp-d16
 2567              	HAL_UARTEx_ReceiveToIdle:
 2568              	.LFB232:
1608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 94


1609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief Receive an amount of data in blocking mode till either the expected number of data is re
1611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   HAL_OK is returned if reception is completed (expected number of data has been received
1612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         or if reception is stopped after IDLE event (less than the expected number of data has 
1613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         In this case, RxLen output parameter indicates number of data available in reception bu
1614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M =
1615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the received data is handled as a set of uint16_t. In this case, Size must indicate the
1616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of uint16_t available through pData.
1617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param huart   UART handle.
1618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param pData   Pointer to data buffer (uint8_t or uint16_t data elements).
1619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param Size    Amount of data elements (uint8_t or uint16_t) to be received.
1620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param RxLen   Number of data elements finally received (could be lower than Size, in case rece
1621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param Timeout Timeout duration expressed in ms (covers the whole reception sequence).
1622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UARTEx_ReceiveToIdle(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size
1625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                                            uint32_t Timeout)
1626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 2569              		.loc 1 1626 1
 2570              		.cfi_startproc
 2571              		@ args = 4, pretend = 0, frame = 32
 2572              		@ frame_needed = 1, uses_anonymous_args = 0
 2573 0000 80B5     		push	{r7, lr}
 2574              	.LCFI85:
 2575              		.cfi_def_cfa_offset 8
 2576              		.cfi_offset 7, -8
 2577              		.cfi_offset 14, -4
 2578 0002 88B0     		sub	sp, sp, #32
 2579              	.LCFI86:
 2580              		.cfi_def_cfa_offset 40
 2581 0004 00AF     		add	r7, sp, #0
 2582              	.LCFI87:
 2583              		.cfi_def_cfa_register 7
 2584 0006 F860     		str	r0, [r7, #12]
 2585 0008 B960     		str	r1, [r7, #8]
 2586 000a 3B60     		str	r3, [r7]
 2587 000c 1346     		mov	r3, r2	@ movhi
 2588 000e FB80     		strh	r3, [r7, #6]	@ movhi
1627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint8_t  *pdata8bits;
1628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t *pdata16bits;
1629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tickstart;
1630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 2589              		.loc 1 1632 12
 2590 0010 FB68     		ldr	r3, [r7, #12]
 2591 0012 93F83E30 		ldrb	r3, [r3, #62]
 2592 0016 DBB2     		uxtb	r3, r3
 2593              		.loc 1 1632 6
 2594 0018 202B     		cmp	r3, #32
 2595 001a 40F0C980 		bne	.L129
1633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 2596              		.loc 1 1634 8
 2597 001e BB68     		ldr	r3, [r7, #8]
 2598 0020 002B     		cmp	r3, #0
 2599 0022 02D0     		beq	.L130
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 95


 2600              		.loc 1 1634 25 discriminator 1
 2601 0024 FB88     		ldrh	r3, [r7, #6]
 2602 0026 002B     		cmp	r3, #0
 2603 0028 01D1     		bne	.L131
 2604              	.L130:
1635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return  HAL_ERROR;
 2605              		.loc 1 1636 15
 2606 002a 0123     		movs	r3, #1
 2607 002c C1E0     		b	.L132
 2608              	.L131:
1637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 2609              		.loc 1 1639 5
 2610 002e FB68     		ldr	r3, [r7, #12]
 2611 0030 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 2612 0034 012B     		cmp	r3, #1
 2613 0036 01D1     		bne	.L133
 2614              		.loc 1 1639 5 is_stmt 0 discriminator 1
 2615 0038 0223     		movs	r3, #2
 2616 003a BAE0     		b	.L132
 2617              	.L133:
 2618              		.loc 1 1639 5 discriminator 2
 2619 003c FB68     		ldr	r3, [r7, #12]
 2620 003e 0122     		movs	r2, #1
 2621 0040 83F83C20 		strb	r2, [r3, #60]
1640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 2622              		.loc 1 1641 22 is_stmt 1 discriminator 2
 2623 0044 FB68     		ldr	r3, [r7, #12]
 2624 0046 0022     		movs	r2, #0
 2625 0048 1A64     		str	r2, [r3, #64]
1642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 2626              		.loc 1 1642 20 discriminator 2
 2627 004a FB68     		ldr	r3, [r7, #12]
 2628 004c 2222     		movs	r2, #34
 2629 004e 83F83E20 		strb	r2, [r3, #62]
1643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_TOIDLE;
 2630              		.loc 1 1643 26 discriminator 2
 2631 0052 FB68     		ldr	r3, [r7, #12]
 2632 0054 0122     		movs	r2, #1
 2633 0056 1A63     		str	r2, [r3, #48]
1644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init tickstart for timeout management */
1646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     tickstart = HAL_GetTick();
 2634              		.loc 1 1646 17 discriminator 2
 2635 0058 FFF7FEFF 		bl	HAL_GetTick
 2636 005c 7861     		str	r0, [r7, #20]
1647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferSize  = Size;
 2637              		.loc 1 1648 24 discriminator 2
 2638 005e FB68     		ldr	r3, [r7, #12]
 2639 0060 FA88     		ldrh	r2, [r7, #6]	@ movhi
 2640 0062 9A85     		strh	r2, [r3, #44]	@ movhi
1649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = Size;
 2641              		.loc 1 1649 24 discriminator 2
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 96


 2642 0064 FB68     		ldr	r3, [r7, #12]
 2643 0066 FA88     		ldrh	r2, [r7, #6]	@ movhi
 2644 0068 DA85     		strh	r2, [r3, #46]	@ movhi
1650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pRxData needs to be handled as a uint16_t pointer */
1652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 2645              		.loc 1 1652 21 discriminator 2
 2646 006a FB68     		ldr	r3, [r7, #12]
 2647 006c 9B68     		ldr	r3, [r3, #8]
 2648              		.loc 1 1652 8 discriminator 2
 2649 006e B3F5805F 		cmp	r3, #4096
 2650 0072 08D1     		bne	.L134
 2651              		.loc 1 1652 71 discriminator 1
 2652 0074 FB68     		ldr	r3, [r7, #12]
 2653 0076 1B69     		ldr	r3, [r3, #16]
 2654              		.loc 1 1652 56 discriminator 1
 2655 0078 002B     		cmp	r3, #0
 2656 007a 04D1     		bne	.L134
1653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata8bits  = NULL;
 2657              		.loc 1 1654 19
 2658 007c 0023     		movs	r3, #0
 2659 007e FB61     		str	r3, [r7, #28]
1655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
 2660              		.loc 1 1655 19
 2661 0080 BB68     		ldr	r3, [r7, #8]
 2662 0082 BB61     		str	r3, [r7, #24]
 2663 0084 03E0     		b	.L135
 2664              	.L134:
1656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
1658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata8bits  = pData;
 2665              		.loc 1 1659 19
 2666 0086 BB68     		ldr	r3, [r7, #8]
 2667 0088 FB61     		str	r3, [r7, #28]
1660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata16bits = NULL;
 2668              		.loc 1 1660 19
 2669 008a 0023     		movs	r3, #0
 2670 008c BB61     		str	r3, [r7, #24]
 2671              	.L135:
1661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 2672              		.loc 1 1663 5
 2673 008e FB68     		ldr	r3, [r7, #12]
 2674 0090 0022     		movs	r2, #0
 2675 0092 83F83C20 		strb	r2, [r3, #60]
1664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Initialize output number of received elements */
1666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     *RxLen = 0U;
 2676              		.loc 1 1666 12
 2677 0096 3B68     		ldr	r3, [r7]
 2678 0098 0022     		movs	r2, #0
 2679 009a 1A80     		strh	r2, [r3]	@ movhi
1667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* as long as data have to be received */
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 97


1669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     while (huart->RxXferCount > 0U)
 2680              		.loc 1 1669 11
 2681 009c 74E0     		b	.L136
 2682              	.L145:
1670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Check if IDLE flag is set */
1672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE))
 2683              		.loc 1 1672 11
 2684 009e FB68     		ldr	r3, [r7, #12]
 2685 00a0 1B68     		ldr	r3, [r3]
 2686 00a2 1B68     		ldr	r3, [r3]
 2687 00a4 03F01003 		and	r3, r3, #16
 2688              		.loc 1 1672 10
 2689 00a8 102B     		cmp	r3, #16
 2690 00aa 14D1     		bne	.L137
 2691              	.LBB376:
1673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Clear IDLE flag in ISR */
1675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         __HAL_UART_CLEAR_IDLEFLAG(huart);
 2692              		.loc 1 1675 9
 2693 00ac 0023     		movs	r3, #0
 2694 00ae 3B61     		str	r3, [r7, #16]
 2695 00b0 FB68     		ldr	r3, [r7, #12]
 2696 00b2 1B68     		ldr	r3, [r3]
 2697 00b4 1B68     		ldr	r3, [r3]
 2698 00b6 3B61     		str	r3, [r7, #16]
 2699 00b8 FB68     		ldr	r3, [r7, #12]
 2700 00ba 1B68     		ldr	r3, [r3]
 2701 00bc 5B68     		ldr	r3, [r3, #4]
 2702 00be 3B61     		str	r3, [r7, #16]
 2703 00c0 3B69     		ldr	r3, [r7, #16]
 2704              	.LBE376:
1676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* If Set, but no data ever received, clear flag without exiting loop */
1678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* If Set, and data has already been received, this means Idle Event is valid : End recepti
1679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (*RxLen > 0U)
 2705              		.loc 1 1679 13
 2706 00c2 3B68     		ldr	r3, [r7]
 2707 00c4 1B88     		ldrh	r3, [r3]
 2708              		.loc 1 1679 12
 2709 00c6 002B     		cmp	r3, #0
 2710 00c8 05D0     		beq	.L137
1680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->RxState = HAL_UART_STATE_READY;
 2711              		.loc 1 1681 26
 2712 00ca FB68     		ldr	r3, [r7, #12]
 2713 00cc 2022     		movs	r2, #32
 2714 00ce 83F83E20 		strb	r2, [r3, #62]
1682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_OK;
 2715              		.loc 1 1683 18
 2716 00d2 0023     		movs	r3, #0
 2717 00d4 6DE0     		b	.L132
 2718              	.L137:
1684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 98


1687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Check if RXNE flag is set */
1688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RXNE))
 2719              		.loc 1 1688 11
 2720 00d6 FB68     		ldr	r3, [r7, #12]
 2721 00d8 1B68     		ldr	r3, [r3]
 2722 00da 1B68     		ldr	r3, [r3]
 2723 00dc 03F02003 		and	r3, r3, #32
 2724              		.loc 1 1688 10
 2725 00e0 202B     		cmp	r3, #32
 2726 00e2 3CD1     		bne	.L138
1689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (pdata8bits == NULL)
 2727              		.loc 1 1690 12
 2728 00e4 FB69     		ldr	r3, [r7, #28]
 2729 00e6 002B     		cmp	r3, #0
 2730 00e8 0CD1     		bne	.L139
1691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           *pdata16bits = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
 2731              		.loc 1 1692 42
 2732 00ea FB68     		ldr	r3, [r7, #12]
 2733 00ec 1B68     		ldr	r3, [r3]
 2734              		.loc 1 1692 52
 2735 00ee 5B68     		ldr	r3, [r3, #4]
 2736              		.loc 1 1692 26
 2737 00f0 9BB2     		uxth	r3, r3
 2738 00f2 C3F30803 		ubfx	r3, r3, #0, #9
 2739 00f6 9AB2     		uxth	r2, r3
 2740              		.loc 1 1692 24
 2741 00f8 BB69     		ldr	r3, [r7, #24]
 2742 00fa 1A80     		strh	r2, [r3]	@ movhi
1693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pdata16bits++;
 2743              		.loc 1 1693 22
 2744 00fc BB69     		ldr	r3, [r7, #24]
 2745 00fe 0233     		adds	r3, r3, #2
 2746 0100 BB61     		str	r3, [r7, #24]
 2747 0102 1FE0     		b	.L140
 2748              	.L139:
1694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         else
1696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           if ((huart->Init.WordLength == UART_WORDLENGTH_9B) || ((huart->Init.WordLength == UART_WO
 2749              		.loc 1 1697 27
 2750 0104 FB68     		ldr	r3, [r7, #12]
 2751 0106 9B68     		ldr	r3, [r3, #8]
 2752              		.loc 1 1697 14
 2753 0108 B3F5805F 		cmp	r3, #4096
 2754 010c 07D0     		beq	.L141
 2755              		.loc 1 1697 78 discriminator 1
 2756 010e FB68     		ldr	r3, [r7, #12]
 2757 0110 9B68     		ldr	r3, [r3, #8]
 2758              		.loc 1 1697 62 discriminator 1
 2759 0112 002B     		cmp	r3, #0
 2760 0114 0AD1     		bne	.L142
 2761              		.loc 1 1697 128 discriminator 2
 2762 0116 FB68     		ldr	r3, [r7, #12]
 2763 0118 1B69     		ldr	r3, [r3, #16]
 2764              		.loc 1 1697 113 discriminator 2
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 99


 2765 011a 002B     		cmp	r3, #0
 2766 011c 06D1     		bne	.L142
 2767              	.L141:
1698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           {
1699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
 2768              		.loc 1 1699 42
 2769 011e FB68     		ldr	r3, [r7, #12]
 2770 0120 1B68     		ldr	r3, [r3]
 2771              		.loc 1 1699 52
 2772 0122 5B68     		ldr	r3, [r3, #4]
 2773              		.loc 1 1699 27
 2774 0124 DAB2     		uxtb	r2, r3
 2775              		.loc 1 1699 25
 2776 0126 FB69     		ldr	r3, [r7, #28]
 2777 0128 1A70     		strb	r2, [r3]
 2778 012a 08E0     		b	.L143
 2779              	.L142:
1700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           }
1701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           else
1702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           {
1703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
 2780              		.loc 1 1703 42
 2781 012c FB68     		ldr	r3, [r7, #12]
 2782 012e 1B68     		ldr	r3, [r3]
 2783              		.loc 1 1703 52
 2784 0130 5B68     		ldr	r3, [r3, #4]
 2785              		.loc 1 1703 27
 2786 0132 DBB2     		uxtb	r3, r3
 2787 0134 03F07F03 		and	r3, r3, #127
 2788 0138 DAB2     		uxtb	r2, r3
 2789              		.loc 1 1703 25
 2790 013a FB69     		ldr	r3, [r7, #28]
 2791 013c 1A70     		strb	r2, [r3]
 2792              	.L143:
1704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           }
1705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pdata8bits++;
 2793              		.loc 1 1706 21
 2794 013e FB69     		ldr	r3, [r7, #28]
 2795 0140 0133     		adds	r3, r3, #1
 2796 0142 FB61     		str	r3, [r7, #28]
 2797              	.L140:
1707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Increment number of received elements */
1709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         *RxLen += 1U;
 2798              		.loc 1 1709 16
 2799 0144 3B68     		ldr	r3, [r7]
 2800 0146 1B88     		ldrh	r3, [r3]
 2801 0148 0133     		adds	r3, r3, #1
 2802 014a 9AB2     		uxth	r2, r3
 2803 014c 3B68     		ldr	r3, [r7]
 2804 014e 1A80     		strh	r2, [r3]	@ movhi
1710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxXferCount--;
 2805              		.loc 1 1710 14
 2806 0150 FB68     		ldr	r3, [r7, #12]
 2807 0152 DB8D     		ldrh	r3, [r3, #46]	@ movhi
 2808 0154 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 100


 2809              		.loc 1 1710 27
 2810 0156 013B     		subs	r3, r3, #1
 2811 0158 9AB2     		uxth	r2, r3
 2812 015a FB68     		ldr	r3, [r7, #12]
 2813 015c DA85     		strh	r2, [r3, #46]	@ movhi
 2814              	.L138:
1711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Check for the Timeout */
1714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (Timeout != HAL_MAX_DELAY)
 2815              		.loc 1 1714 10
 2816 015e BB6A     		ldr	r3, [r7, #40]
 2817 0160 B3F1FF3F 		cmp	r3, #-1
 2818 0164 10D0     		beq	.L136
1715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 2819              		.loc 1 1716 15
 2820 0166 FFF7FEFF 		bl	HAL_GetTick
 2821 016a 0246     		mov	r2, r0
 2822              		.loc 1 1716 29
 2823 016c 7B69     		ldr	r3, [r7, #20]
 2824 016e D31A     		subs	r3, r2, r3
 2825              		.loc 1 1716 12
 2826 0170 BA6A     		ldr	r2, [r7, #40]
 2827 0172 9A42     		cmp	r2, r3
 2828 0174 02D3     		bcc	.L144
 2829              		.loc 1 1716 53 discriminator 1
 2830 0176 BB6A     		ldr	r3, [r7, #40]
 2831 0178 002B     		cmp	r3, #0
 2832 017a 05D1     		bne	.L136
 2833              	.L144:
1717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->RxState = HAL_UART_STATE_READY;
 2834              		.loc 1 1718 26
 2835 017c FB68     		ldr	r3, [r7, #12]
 2836 017e 2022     		movs	r2, #32
 2837 0180 83F83E20 		strb	r2, [r3, #62]
1719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 2838              		.loc 1 1720 18
 2839 0184 0323     		movs	r3, #3
 2840 0186 14E0     		b	.L132
 2841              	.L136:
1669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2842              		.loc 1 1669 17
 2843 0188 FB68     		ldr	r3, [r7, #12]
 2844 018a DB8D     		ldrh	r3, [r3, #46]	@ movhi
 2845 018c 9BB2     		uxth	r3, r3
1669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2846              		.loc 1 1669 11
 2847 018e 002B     		cmp	r3, #0
 2848 0190 85D1     		bne	.L145
1721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set number of received elements in output parameter : RxLen */
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 101


1726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     *RxLen = huart->RxXferSize - huart->RxXferCount;
 2849              		.loc 1 1726 19
 2850 0192 FB68     		ldr	r3, [r7, #12]
 2851 0194 9A8D     		ldrh	r2, [r3, #44]
 2852              		.loc 1 1726 39
 2853 0196 FB68     		ldr	r3, [r7, #12]
 2854 0198 DB8D     		ldrh	r3, [r3, #46]	@ movhi
 2855 019a 9BB2     		uxth	r3, r3
 2856              		.loc 1 1726 32
 2857 019c D31A     		subs	r3, r2, r3
 2858 019e 9AB2     		uxth	r2, r3
 2859              		.loc 1 1726 12
 2860 01a0 3B68     		ldr	r3, [r7]
 2861 01a2 1A80     		strh	r2, [r3]	@ movhi
1727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
1728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 2862              		.loc 1 1728 20
 2863 01a4 FB68     		ldr	r3, [r7, #12]
 2864 01a6 2022     		movs	r2, #32
 2865 01a8 83F83E20 		strb	r2, [r3, #62]
1729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 2866              		.loc 1 1730 12
 2867 01ac 0023     		movs	r3, #0
 2868 01ae 00E0     		b	.L132
 2869              	.L129:
1731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 2870              		.loc 1 1734 12
 2871 01b0 0223     		movs	r3, #2
 2872              	.L132:
1735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2873              		.loc 1 1736 1
 2874 01b2 1846     		mov	r0, r3
 2875 01b4 2037     		adds	r7, r7, #32
 2876              	.LCFI88:
 2877              		.cfi_def_cfa_offset 8
 2878 01b6 BD46     		mov	sp, r7
 2879              	.LCFI89:
 2880              		.cfi_def_cfa_register 13
 2881              		@ sp needed
 2882 01b8 80BD     		pop	{r7, pc}
 2883              		.cfi_endproc
 2884              	.LFE232:
 2886              		.section	.text.HAL_UARTEx_ReceiveToIdle_IT,"ax",%progbits
 2887              		.align	1
 2888              		.global	HAL_UARTEx_ReceiveToIdle_IT
 2889              		.syntax unified
 2890              		.thumb
 2891              		.thumb_func
 2892              		.fpu fpv4-sp-d16
 2894              	HAL_UARTEx_ReceiveToIdle_IT:
 2895              	.LFB233:
1737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 102


1738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief Receive an amount of data in interrupt mode till either the expected number of data is r
1740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   Reception is initiated by this function call. Further progress of reception is achieved
1741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         to UART interrupts raised by RXNE and IDLE events. Callback is called at end of recepti
1742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         number of received data elements.
1743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M =
1744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the received data is handled as a set of uint16_t. In this case, Size must indicate the
1745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of uint16_t available through pData.
1746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param huart UART handle.
1747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param pData Pointer to data buffer (uint8_t or uint16_t data elements).
1748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param Size  Amount of data elements (uint8_t or uint16_t) to be received.
1749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UARTEx_ReceiveToIdle_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t S
1752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 2896              		.loc 1 1752 1
 2897              		.cfi_startproc
 2898              		@ args = 0, pretend = 0, frame = 48
 2899              		@ frame_needed = 1, uses_anonymous_args = 0
 2900 0000 80B5     		push	{r7, lr}
 2901              	.LCFI90:
 2902              		.cfi_def_cfa_offset 8
 2903              		.cfi_offset 7, -8
 2904              		.cfi_offset 14, -4
 2905 0002 8CB0     		sub	sp, sp, #48
 2906              	.LCFI91:
 2907              		.cfi_def_cfa_offset 56
 2908 0004 00AF     		add	r7, sp, #0
 2909              	.LCFI92:
 2910              		.cfi_def_cfa_register 7
 2911 0006 F860     		str	r0, [r7, #12]
 2912 0008 B960     		str	r1, [r7, #8]
 2913 000a 1346     		mov	r3, r2
 2914 000c FB80     		strh	r3, [r7, #6]	@ movhi
1753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_StatusTypeDef status;
1754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 2915              		.loc 1 1756 12
 2916 000e FB68     		ldr	r3, [r7, #12]
 2917 0010 93F83E30 		ldrb	r3, [r3, #62]
 2918 0014 DBB2     		uxtb	r3, r3
 2919              		.loc 1 1756 6
 2920 0016 202B     		cmp	r3, #32
 2921 0018 52D1     		bne	.L147
1757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 2922              		.loc 1 1758 8
 2923 001a BB68     		ldr	r3, [r7, #8]
 2924 001c 002B     		cmp	r3, #0
 2925 001e 02D0     		beq	.L148
 2926              		.loc 1 1758 25 discriminator 1
 2927 0020 FB88     		ldrh	r3, [r7, #6]
 2928 0022 002B     		cmp	r3, #0
 2929 0024 01D1     		bne	.L149
 2930              	.L148:
1759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 103


1760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
 2931              		.loc 1 1760 14
 2932 0026 0123     		movs	r3, #1
 2933 0028 4BE0     		b	.L150
 2934              	.L149:
1761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 2935              		.loc 1 1763 5
 2936 002a FB68     		ldr	r3, [r7, #12]
 2937 002c 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 2938 0030 012B     		cmp	r3, #1
 2939 0032 01D1     		bne	.L151
 2940              		.loc 1 1763 5 is_stmt 0 discriminator 1
 2941 0034 0223     		movs	r3, #2
 2942 0036 44E0     		b	.L150
 2943              	.L151:
 2944              		.loc 1 1763 5 discriminator 2
 2945 0038 FB68     		ldr	r3, [r7, #12]
 2946 003a 0122     		movs	r2, #1
 2947 003c 83F83C20 		strb	r2, [r3, #60]
1764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set Reception type to reception till IDLE Event*/
1766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_TOIDLE;
 2948              		.loc 1 1766 26 is_stmt 1 discriminator 2
 2949 0040 FB68     		ldr	r3, [r7, #12]
 2950 0042 0122     		movs	r2, #1
 2951 0044 1A63     		str	r2, [r3, #48]
1767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     status =  UART_Start_Receive_IT(huart, pData, Size);
 2952              		.loc 1 1768 15 discriminator 2
 2953 0046 FB88     		ldrh	r3, [r7, #6]
 2954 0048 1A46     		mov	r2, r3
 2955 004a B968     		ldr	r1, [r7, #8]
 2956 004c F868     		ldr	r0, [r7, #12]
 2957 004e FFF7FEFF 		bl	UART_Start_Receive_IT
 2958 0052 0346     		mov	r3, r0
 2959 0054 87F82F30 		strb	r3, [r7, #47]
1769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Check Rx process has been successfully started */
1771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (status == HAL_OK)
 2960              		.loc 1 1771 8 discriminator 2
 2961 0058 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 2962 005c 002B     		cmp	r3, #0
 2963 005e 2CD1     		bne	.L152
1772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 2964              		.loc 1 1773 16
 2965 0060 FB68     		ldr	r3, [r7, #12]
 2966 0062 1B6B     		ldr	r3, [r3, #48]
 2967              		.loc 1 1773 10
 2968 0064 012B     		cmp	r3, #1
 2969 0066 25D1     		bne	.L153
 2970              	.LBB377:
1774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         __HAL_UART_CLEAR_IDLEFLAG(huart);
 2971              		.loc 1 1775 9
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 104


 2972 0068 0023     		movs	r3, #0
 2973 006a 3B61     		str	r3, [r7, #16]
 2974 006c FB68     		ldr	r3, [r7, #12]
 2975 006e 1B68     		ldr	r3, [r3]
 2976 0070 1B68     		ldr	r3, [r3]
 2977 0072 3B61     		str	r3, [r7, #16]
 2978 0074 FB68     		ldr	r3, [r7, #12]
 2979 0076 1B68     		ldr	r3, [r3]
 2980 0078 5B68     		ldr	r3, [r3, #4]
 2981 007a 3B61     		str	r3, [r7, #16]
 2982 007c 3B69     		ldr	r3, [r7, #16]
 2983              	.L156:
 2984              	.LBE377:
 2985              	.LBB378:
1776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 2986              		.loc 1 1776 9 discriminator 1
 2987 007e FB68     		ldr	r3, [r7, #12]
 2988 0080 1B68     		ldr	r3, [r3]
 2989 0082 0C33     		adds	r3, r3, #12
 2990 0084 BB61     		str	r3, [r7, #24]
 2991              	.LBB379:
 2992              	.LBB380:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2993              		.loc 2 1072 4 discriminator 1
 2994 0086 BB69     		ldr	r3, [r7, #24]
 2995              		.syntax unified
 2996              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2997 0088 53E8003F 		ldrex r3, [r3]
 2998              	@ 0 "" 2
 2999              		.thumb
 3000              		.syntax unified
 3001 008c 7B61     		str	r3, [r7, #20]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3002              		.loc 2 1073 10 discriminator 1
 3003 008e 7B69     		ldr	r3, [r7, #20]
 3004              	.LBE380:
 3005              	.LBE379:
 3006              		.loc 1 1776 9 discriminator 1
 3007 0090 43F01003 		orr	r3, r3, #16
 3008 0094 BB62     		str	r3, [r7, #40]
 3009 0096 FB68     		ldr	r3, [r7, #12]
 3010 0098 1B68     		ldr	r3, [r3]
 3011 009a 0C33     		adds	r3, r3, #12
 3012 009c BA6A     		ldr	r2, [r7, #40]
 3013 009e 7A62     		str	r2, [r7, #36]
 3014 00a0 3B62     		str	r3, [r7, #32]
 3015              	.LBB381:
 3016              	.LBB382:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3017              		.loc 2 1123 4 discriminator 1
 3018 00a2 396A     		ldr	r1, [r7, #32]
 3019 00a4 7A6A     		ldr	r2, [r7, #36]
 3020              		.syntax unified
 3021              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3022 00a6 41E80023 		strex r3, r2, [r1]
 3023              	@ 0 "" 2
 3024              		.thumb
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 105


 3025              		.syntax unified
 3026 00aa FB61     		str	r3, [r7, #28]
 3027              		.loc 2 1124 10 discriminator 1
 3028 00ac FB69     		ldr	r3, [r7, #28]
 3029              	.LBE382:
 3030              	.LBE381:
 3031              		.loc 1 1776 9 discriminator 1
 3032 00ae 002B     		cmp	r3, #0
 3033 00b0 E5D1     		bne	.L156
 3034 00b2 02E0     		b	.L152
 3035              	.L153:
 3036              	.LBE378:
1777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
1779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* In case of errors already pending when reception is started,
1781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Interrupts may have already been raised and lead to reception abortion.
1782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            (Overrun error for instance).
1783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            In such case Reception Type has been reset to HAL_UART_RECEPTION_STANDARD. */
1784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         status = HAL_ERROR;
 3037              		.loc 1 1784 16
 3038 00b4 0123     		movs	r3, #1
 3039 00b6 87F82F30 		strb	r3, [r7, #47]
 3040              	.L152:
1785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return status;
 3041              		.loc 1 1788 12
 3042 00ba 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 3043 00be 00E0     		b	.L150
 3044              	.L147:
1789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 3045              		.loc 1 1792 12
 3046 00c0 0223     		movs	r3, #2
 3047              	.L150:
1793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3048              		.loc 1 1794 1
 3049 00c2 1846     		mov	r0, r3
 3050 00c4 3037     		adds	r7, r7, #48
 3051              	.LCFI93:
 3052              		.cfi_def_cfa_offset 8
 3053 00c6 BD46     		mov	sp, r7
 3054              	.LCFI94:
 3055              		.cfi_def_cfa_register 13
 3056              		@ sp needed
 3057 00c8 80BD     		pop	{r7, pc}
 3058              		.cfi_endproc
 3059              	.LFE233:
 3061              		.section	.text.HAL_UARTEx_ReceiveToIdle_DMA,"ax",%progbits
 3062              		.align	1
 3063              		.global	HAL_UARTEx_ReceiveToIdle_DMA
 3064              		.syntax unified
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 106


 3065              		.thumb
 3066              		.thumb_func
 3067              		.fpu fpv4-sp-d16
 3069              	HAL_UARTEx_ReceiveToIdle_DMA:
 3070              	.LFB234:
1795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief Receive an amount of data in DMA mode till either the expected number of data is receive
1798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   Reception is initiated by this function call. Further progress of reception is achieved
1799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         to DMA services, transferring automatically received data elements in user reception bu
1800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         calling registered callbacks at half/end of reception. UART IDLE events are also used t
1801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         reception phase as ended. In all cases, callback execution will indicate number of rece
1802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1), the received data contain
1803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the parity bit (MSB position).
1804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M =
1805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the received data is handled as a set of uint16_t. In this case, Size must indicate the
1806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of uint16_t available through pData.
1807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param huart UART handle.
1808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param pData Pointer to data buffer (uint8_t or uint16_t data elements).
1809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param Size  Amount of data elements (uint8_t or uint16_t) to be received.
1810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UARTEx_ReceiveToIdle_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t 
1813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3071              		.loc 1 1813 1
 3072              		.cfi_startproc
 3073              		@ args = 0, pretend = 0, frame = 48
 3074              		@ frame_needed = 1, uses_anonymous_args = 0
 3075 0000 80B5     		push	{r7, lr}
 3076              	.LCFI95:
 3077              		.cfi_def_cfa_offset 8
 3078              		.cfi_offset 7, -8
 3079              		.cfi_offset 14, -4
 3080 0002 8CB0     		sub	sp, sp, #48
 3081              	.LCFI96:
 3082              		.cfi_def_cfa_offset 56
 3083 0004 00AF     		add	r7, sp, #0
 3084              	.LCFI97:
 3085              		.cfi_def_cfa_register 7
 3086 0006 F860     		str	r0, [r7, #12]
 3087 0008 B960     		str	r1, [r7, #8]
 3088 000a 1346     		mov	r3, r2
 3089 000c FB80     		strh	r3, [r7, #6]	@ movhi
1814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_StatusTypeDef status;
1815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 3090              		.loc 1 1817 12
 3091 000e FB68     		ldr	r3, [r7, #12]
 3092 0010 93F83E30 		ldrb	r3, [r3, #62]
 3093 0014 DBB2     		uxtb	r3, r3
 3094              		.loc 1 1817 6
 3095 0016 202B     		cmp	r3, #32
 3096 0018 52D1     		bne	.L158
1818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 3097              		.loc 1 1819 8
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 107


 3098 001a BB68     		ldr	r3, [r7, #8]
 3099 001c 002B     		cmp	r3, #0
 3100 001e 02D0     		beq	.L159
 3101              		.loc 1 1819 25 discriminator 1
 3102 0020 FB88     		ldrh	r3, [r7, #6]
 3103 0022 002B     		cmp	r3, #0
 3104 0024 01D1     		bne	.L160
 3105              	.L159:
1820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
 3106              		.loc 1 1821 14
 3107 0026 0123     		movs	r3, #1
 3108 0028 4BE0     		b	.L161
 3109              	.L160:
1822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 3110              		.loc 1 1824 5
 3111 002a FB68     		ldr	r3, [r7, #12]
 3112 002c 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 3113 0030 012B     		cmp	r3, #1
 3114 0032 01D1     		bne	.L162
 3115              		.loc 1 1824 5 is_stmt 0 discriminator 1
 3116 0034 0223     		movs	r3, #2
 3117 0036 44E0     		b	.L161
 3118              	.L162:
 3119              		.loc 1 1824 5 discriminator 2
 3120 0038 FB68     		ldr	r3, [r7, #12]
 3121 003a 0122     		movs	r2, #1
 3122 003c 83F83C20 		strb	r2, [r3, #60]
1825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set Reception type to reception till IDLE Event*/
1827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_TOIDLE;
 3123              		.loc 1 1827 26 is_stmt 1 discriminator 2
 3124 0040 FB68     		ldr	r3, [r7, #12]
 3125 0042 0122     		movs	r2, #1
 3126 0044 1A63     		str	r2, [r3, #48]
1828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     status =  UART_Start_Receive_DMA(huart, pData, Size);
 3127              		.loc 1 1829 15 discriminator 2
 3128 0046 FB88     		ldrh	r3, [r7, #6]
 3129 0048 1A46     		mov	r2, r3
 3130 004a B968     		ldr	r1, [r7, #8]
 3131 004c F868     		ldr	r0, [r7, #12]
 3132 004e FFF7FEFF 		bl	UART_Start_Receive_DMA
 3133 0052 0346     		mov	r3, r0
 3134 0054 87F82F30 		strb	r3, [r7, #47]
1830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Check Rx process has been successfully started */
1832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (status == HAL_OK)
 3135              		.loc 1 1832 8 discriminator 2
 3136 0058 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 3137 005c 002B     		cmp	r3, #0
 3138 005e 2CD1     		bne	.L163
1833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 3139              		.loc 1 1834 16
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 108


 3140 0060 FB68     		ldr	r3, [r7, #12]
 3141 0062 1B6B     		ldr	r3, [r3, #48]
 3142              		.loc 1 1834 10
 3143 0064 012B     		cmp	r3, #1
 3144 0066 25D1     		bne	.L164
 3145              	.LBB383:
1835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         __HAL_UART_CLEAR_IDLEFLAG(huart);
 3146              		.loc 1 1836 9
 3147 0068 0023     		movs	r3, #0
 3148 006a 3B61     		str	r3, [r7, #16]
 3149 006c FB68     		ldr	r3, [r7, #12]
 3150 006e 1B68     		ldr	r3, [r3]
 3151 0070 1B68     		ldr	r3, [r3]
 3152 0072 3B61     		str	r3, [r7, #16]
 3153 0074 FB68     		ldr	r3, [r7, #12]
 3154 0076 1B68     		ldr	r3, [r3]
 3155 0078 5B68     		ldr	r3, [r3, #4]
 3156 007a 3B61     		str	r3, [r7, #16]
 3157 007c 3B69     		ldr	r3, [r7, #16]
 3158              	.L167:
 3159              	.LBE383:
 3160              	.LBB384:
1837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 3161              		.loc 1 1837 9 discriminator 1
 3162 007e FB68     		ldr	r3, [r7, #12]
 3163 0080 1B68     		ldr	r3, [r3]
 3164 0082 0C33     		adds	r3, r3, #12
 3165 0084 BB61     		str	r3, [r7, #24]
 3166              	.LBB385:
 3167              	.LBB386:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3168              		.loc 2 1072 4 discriminator 1
 3169 0086 BB69     		ldr	r3, [r7, #24]
 3170              		.syntax unified
 3171              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3172 0088 53E8003F 		ldrex r3, [r3]
 3173              	@ 0 "" 2
 3174              		.thumb
 3175              		.syntax unified
 3176 008c 7B61     		str	r3, [r7, #20]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3177              		.loc 2 1073 10 discriminator 1
 3178 008e 7B69     		ldr	r3, [r7, #20]
 3179              	.LBE386:
 3180              	.LBE385:
 3181              		.loc 1 1837 9 discriminator 1
 3182 0090 43F01003 		orr	r3, r3, #16
 3183 0094 BB62     		str	r3, [r7, #40]
 3184 0096 FB68     		ldr	r3, [r7, #12]
 3185 0098 1B68     		ldr	r3, [r3]
 3186 009a 0C33     		adds	r3, r3, #12
 3187 009c BA6A     		ldr	r2, [r7, #40]
 3188 009e 7A62     		str	r2, [r7, #36]
 3189 00a0 3B62     		str	r3, [r7, #32]
 3190              	.LBB387:
 3191              	.LBB388:
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 109


1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3192              		.loc 2 1123 4 discriminator 1
 3193 00a2 396A     		ldr	r1, [r7, #32]
 3194 00a4 7A6A     		ldr	r2, [r7, #36]
 3195              		.syntax unified
 3196              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3197 00a6 41E80023 		strex r3, r2, [r1]
 3198              	@ 0 "" 2
 3199              		.thumb
 3200              		.syntax unified
 3201 00aa FB61     		str	r3, [r7, #28]
 3202              		.loc 2 1124 10 discriminator 1
 3203 00ac FB69     		ldr	r3, [r7, #28]
 3204              	.LBE388:
 3205              	.LBE387:
 3206              		.loc 1 1837 9 discriminator 1
 3207 00ae 002B     		cmp	r3, #0
 3208 00b0 E5D1     		bne	.L167
 3209 00b2 02E0     		b	.L163
 3210              	.L164:
 3211              	.LBE384:
1838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
1840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* In case of errors already pending when reception is started,
1842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Interrupts may have already been raised and lead to reception abortion.
1843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            (Overrun error for instance).
1844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            In such case Reception Type has been reset to HAL_UART_RECEPTION_STANDARD. */
1845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         status = HAL_ERROR;
 3212              		.loc 1 1845 16
 3213 00b4 0123     		movs	r3, #1
 3214 00b6 87F82F30 		strb	r3, [r7, #47]
 3215              	.L163:
1846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return status;
 3216              		.loc 1 1849 12
 3217 00ba 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 3218 00be 00E0     		b	.L161
 3219              	.L158:
1850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 3220              		.loc 1 1853 12
 3221 00c0 0223     		movs	r3, #2
 3222              	.L161:
1854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3223              		.loc 1 1855 1
 3224 00c2 1846     		mov	r0, r3
 3225 00c4 3037     		adds	r7, r7, #48
 3226              	.LCFI98:
 3227              		.cfi_def_cfa_offset 8
 3228 00c6 BD46     		mov	sp, r7
 3229              	.LCFI99:
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 110


 3230              		.cfi_def_cfa_register 13
 3231              		@ sp needed
 3232 00c8 80BD     		pop	{r7, pc}
 3233              		.cfi_endproc
 3234              	.LFE234:
 3236              		.section	.text.HAL_UART_Abort,"ax",%progbits
 3237              		.align	1
 3238              		.global	HAL_UART_Abort
 3239              		.syntax unified
 3240              		.thumb
 3241              		.thumb_func
 3242              		.fpu fpv4-sp-d16
 3244              	HAL_UART_Abort:
 3245              	.LFB235:
1856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing transfers (blocking mode).
1859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
1866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort(UART_HandleTypeDef *huart)
1870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3246              		.loc 1 1870 1
 3247              		.cfi_startproc
 3248              		@ args = 0, pretend = 0, frame = 128
 3249              		@ frame_needed = 1, uses_anonymous_args = 0
 3250 0000 80B5     		push	{r7, lr}
 3251              	.LCFI100:
 3252              		.cfi_def_cfa_offset 8
 3253              		.cfi_offset 7, -8
 3254              		.cfi_offset 14, -4
 3255 0002 A0B0     		sub	sp, sp, #128
 3256              	.LCFI101:
 3257              		.cfi_def_cfa_offset 136
 3258 0004 00AF     		add	r7, sp, #0
 3259              	.LCFI102:
 3260              		.cfi_def_cfa_register 7
 3261 0006 7860     		str	r0, [r7, #4]
 3262              	.L171:
 3263              	.LBB389:
1871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USA
 3264              		.loc 1 1872 3 discriminator 1
 3265 0008 7B68     		ldr	r3, [r7, #4]
 3266 000a 1B68     		ldr	r3, [r3]
 3267 000c 0C33     		adds	r3, r3, #12
 3268 000e FB65     		str	r3, [r7, #92]
 3269              	.LBB390:
 3270              	.LBB391:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 111


 3271              		.loc 2 1072 4 discriminator 1
 3272 0010 FB6D     		ldr	r3, [r7, #92]
 3273              		.syntax unified
 3274              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3275 0012 53E8003F 		ldrex r3, [r3]
 3276              	@ 0 "" 2
 3277              		.thumb
 3278              		.syntax unified
 3279 0016 BB65     		str	r3, [r7, #88]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3280              		.loc 2 1073 10 discriminator 1
 3281 0018 BB6D     		ldr	r3, [r7, #88]
 3282              	.LBE391:
 3283              	.LBE390:
 3284              		.loc 1 1872 3 discriminator 1
 3285 001a 23F4F073 		bic	r3, r3, #480
 3286 001e FB67     		str	r3, [r7, #124]
 3287 0020 7B68     		ldr	r3, [r7, #4]
 3288 0022 1B68     		ldr	r3, [r3]
 3289 0024 0C33     		adds	r3, r3, #12
 3290 0026 FA6F     		ldr	r2, [r7, #124]
 3291 0028 BA66     		str	r2, [r7, #104]
 3292 002a 7B66     		str	r3, [r7, #100]
 3293              	.LBB392:
 3294              	.LBB393:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3295              		.loc 2 1123 4 discriminator 1
 3296 002c 796E     		ldr	r1, [r7, #100]
 3297 002e BA6E     		ldr	r2, [r7, #104]
 3298              		.syntax unified
 3299              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3300 0030 41E80023 		strex r3, r2, [r1]
 3301              	@ 0 "" 2
 3302              		.thumb
 3303              		.syntax unified
 3304 0034 3B66     		str	r3, [r7, #96]
 3305              		.loc 2 1124 10 discriminator 1
 3306 0036 3B6E     		ldr	r3, [r7, #96]
 3307              	.LBE393:
 3308              	.LBE392:
 3309              		.loc 1 1872 3 discriminator 1
 3310 0038 002B     		cmp	r3, #0
 3311 003a E5D1     		bne	.L171
 3312              	.L174:
 3313              	.LBE389:
 3314              	.LBB394:
1873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3315              		.loc 1 1873 3 discriminator 1
 3316 003c 7B68     		ldr	r3, [r7, #4]
 3317 003e 1B68     		ldr	r3, [r3]
 3318 0040 1433     		adds	r3, r3, #20
 3319 0042 BB64     		str	r3, [r7, #72]
 3320              	.LBB395:
 3321              	.LBB396:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3322              		.loc 2 1072 4 discriminator 1
 3323 0044 BB6C     		ldr	r3, [r7, #72]
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 112


 3324              		.syntax unified
 3325              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3326 0046 53E8003F 		ldrex r3, [r3]
 3327              	@ 0 "" 2
 3328              		.thumb
 3329              		.syntax unified
 3330 004a 7B64     		str	r3, [r7, #68]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3331              		.loc 2 1073 10 discriminator 1
 3332 004c 7B6C     		ldr	r3, [r7, #68]
 3333              	.LBE396:
 3334              	.LBE395:
 3335              		.loc 1 1873 3 discriminator 1
 3336 004e 23F00103 		bic	r3, r3, #1
 3337 0052 BB67     		str	r3, [r7, #120]
 3338 0054 7B68     		ldr	r3, [r7, #4]
 3339 0056 1B68     		ldr	r3, [r3]
 3340 0058 1433     		adds	r3, r3, #20
 3341 005a BA6F     		ldr	r2, [r7, #120]
 3342 005c 7A65     		str	r2, [r7, #84]
 3343 005e 3B65     		str	r3, [r7, #80]
 3344              	.LBB397:
 3345              	.LBB398:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3346              		.loc 2 1123 4 discriminator 1
 3347 0060 396D     		ldr	r1, [r7, #80]
 3348 0062 7A6D     		ldr	r2, [r7, #84]
 3349              		.syntax unified
 3350              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3351 0064 41E80023 		strex r3, r2, [r1]
 3352              	@ 0 "" 2
 3353              		.thumb
 3354              		.syntax unified
 3355 0068 FB64     		str	r3, [r7, #76]
 3356              		.loc 2 1124 10 discriminator 1
 3357 006a FB6C     		ldr	r3, [r7, #76]
 3358              	.LBE398:
 3359              	.LBE397:
 3360              		.loc 1 1873 3 discriminator 1
 3361 006c 002B     		cmp	r3, #0
 3362 006e E5D1     		bne	.L174
 3363              	.LBE394:
1874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* If Reception till IDLE event was ongoing, disable IDLEIE interrupt */
1876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 3364              		.loc 1 1876 12
 3365 0070 7B68     		ldr	r3, [r7, #4]
 3366 0072 1B6B     		ldr	r3, [r3, #48]
 3367              		.loc 1 1876 6
 3368 0074 012B     		cmp	r3, #1
 3369 0076 19D1     		bne	.L175
 3370              	.L178:
 3371              	.LBB399:
1877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
 3372              		.loc 1 1878 5 discriminator 1
 3373 0078 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 113


 3374 007a 1B68     		ldr	r3, [r3]
 3375 007c 0C33     		adds	r3, r3, #12
 3376 007e 7B63     		str	r3, [r7, #52]
 3377              	.LBB400:
 3378              	.LBB401:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3379              		.loc 2 1072 4 discriminator 1
 3380 0080 7B6B     		ldr	r3, [r7, #52]
 3381              		.syntax unified
 3382              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3383 0082 53E8003F 		ldrex r3, [r3]
 3384              	@ 0 "" 2
 3385              		.thumb
 3386              		.syntax unified
 3387 0086 3B63     		str	r3, [r7, #48]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3388              		.loc 2 1073 10 discriminator 1
 3389 0088 3B6B     		ldr	r3, [r7, #48]
 3390              	.LBE401:
 3391              	.LBE400:
 3392              		.loc 1 1878 5 discriminator 1
 3393 008a 23F01003 		bic	r3, r3, #16
 3394 008e 7B67     		str	r3, [r7, #116]
 3395 0090 7B68     		ldr	r3, [r7, #4]
 3396 0092 1B68     		ldr	r3, [r3]
 3397 0094 0C33     		adds	r3, r3, #12
 3398 0096 7A6F     		ldr	r2, [r7, #116]
 3399 0098 3A64     		str	r2, [r7, #64]
 3400 009a FB63     		str	r3, [r7, #60]
 3401              	.LBB402:
 3402              	.LBB403:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3403              		.loc 2 1123 4 discriminator 1
 3404 009c F96B     		ldr	r1, [r7, #60]
 3405 009e 3A6C     		ldr	r2, [r7, #64]
 3406              		.syntax unified
 3407              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3408 00a0 41E80023 		strex r3, r2, [r1]
 3409              	@ 0 "" 2
 3410              		.thumb
 3411              		.syntax unified
 3412 00a4 BB63     		str	r3, [r7, #56]
 3413              		.loc 2 1124 10 discriminator 1
 3414 00a6 BB6B     		ldr	r3, [r7, #56]
 3415              	.LBE403:
 3416              	.LBE402:
 3417              		.loc 1 1878 5 discriminator 1
 3418 00a8 002B     		cmp	r3, #0
 3419 00aa E5D1     		bne	.L178
 3420              	.L175:
 3421              	.LBE399:
1879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 3422              		.loc 1 1882 7
 3423 00ac 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 114


 3424 00ae 1B68     		ldr	r3, [r3]
 3425 00b0 5B69     		ldr	r3, [r3, #20]
 3426 00b2 03F08003 		and	r3, r3, #128
 3427              		.loc 1 1882 6
 3428 00b6 802B     		cmp	r3, #128
 3429 00b8 36D1     		bne	.L179
 3430              	.L182:
 3431              	.LBB404:
1883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 3432              		.loc 1 1884 5 discriminator 1
 3433 00ba 7B68     		ldr	r3, [r7, #4]
 3434 00bc 1B68     		ldr	r3, [r3]
 3435 00be 1433     		adds	r3, r3, #20
 3436 00c0 3B62     		str	r3, [r7, #32]
 3437              	.LBB405:
 3438              	.LBB406:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3439              		.loc 2 1072 4 discriminator 1
 3440 00c2 3B6A     		ldr	r3, [r7, #32]
 3441              		.syntax unified
 3442              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3443 00c4 53E8003F 		ldrex r3, [r3]
 3444              	@ 0 "" 2
 3445              		.thumb
 3446              		.syntax unified
 3447 00c8 FB61     		str	r3, [r7, #28]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3448              		.loc 2 1073 10 discriminator 1
 3449 00ca FB69     		ldr	r3, [r7, #28]
 3450              	.LBE406:
 3451              	.LBE405:
 3452              		.loc 1 1884 5 discriminator 1
 3453 00cc 23F08003 		bic	r3, r3, #128
 3454 00d0 3B67     		str	r3, [r7, #112]
 3455 00d2 7B68     		ldr	r3, [r7, #4]
 3456 00d4 1B68     		ldr	r3, [r3]
 3457 00d6 1433     		adds	r3, r3, #20
 3458 00d8 3A6F     		ldr	r2, [r7, #112]
 3459 00da FA62     		str	r2, [r7, #44]
 3460 00dc BB62     		str	r3, [r7, #40]
 3461              	.LBB407:
 3462              	.LBB408:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3463              		.loc 2 1123 4 discriminator 1
 3464 00de B96A     		ldr	r1, [r7, #40]
 3465 00e0 FA6A     		ldr	r2, [r7, #44]
 3466              		.syntax unified
 3467              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3468 00e2 41E80023 		strex r3, r2, [r1]
 3469              	@ 0 "" 2
 3470              		.thumb
 3471              		.syntax unified
 3472 00e6 7B62     		str	r3, [r7, #36]
 3473              		.loc 2 1124 10 discriminator 1
 3474 00e8 7B6A     		ldr	r3, [r7, #36]
 3475              	.LBE408:
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 115


 3476              	.LBE407:
 3477              		.loc 1 1884 5 discriminator 1
 3478 00ea 002B     		cmp	r3, #0
 3479 00ec E5D1     		bne	.L182
 3480              	.LBE404:
1885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx stream: use blocking DMA Abort API (no callback) */
1887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 3481              		.loc 1 1887 14
 3482 00ee 7B68     		ldr	r3, [r7, #4]
 3483 00f0 5B6B     		ldr	r3, [r3, #52]
 3484              		.loc 1 1887 8
 3485 00f2 002B     		cmp	r3, #0
 3486 00f4 18D0     		beq	.L179
1888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 3487              		.loc 1 1891 12
 3488 00f6 7B68     		ldr	r3, [r7, #4]
 3489 00f8 5B6B     		ldr	r3, [r3, #52]
 3490              		.loc 1 1891 40
 3491 00fa 0022     		movs	r2, #0
 3492 00fc 1A65     		str	r2, [r3, #80]
1892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
 3493              		.loc 1 1893 11
 3494 00fe 7B68     		ldr	r3, [r7, #4]
 3495 0100 5B6B     		ldr	r3, [r3, #52]
 3496 0102 1846     		mov	r0, r3
 3497 0104 FFF7FEFF 		bl	HAL_DMA_Abort
 3498 0108 0346     		mov	r3, r0
 3499              		.loc 1 1893 10
 3500 010a 002B     		cmp	r3, #0
 3501 010c 0CD0     		beq	.L179
1894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
 3502              		.loc 1 1895 13
 3503 010e 7B68     		ldr	r3, [r7, #4]
 3504 0110 5B6B     		ldr	r3, [r3, #52]
 3505 0112 1846     		mov	r0, r3
 3506 0114 FFF7FEFF 		bl	HAL_DMA_GetError
 3507 0118 0346     		mov	r3, r0
 3508              		.loc 1 1895 12
 3509 011a 202B     		cmp	r3, #32
 3510 011c 04D1     		bne	.L179
1896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Set error code to DMA */
1898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 3511              		.loc 1 1898 28
 3512 011e 7B68     		ldr	r3, [r7, #4]
 3513 0120 1022     		movs	r2, #16
 3514 0122 1A64     		str	r2, [r3, #64]
1899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 3515              		.loc 1 1900 18
 3516 0124 0323     		movs	r3, #3
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 116


 3517 0126 52E0     		b	.L183
 3518              	.L179:
1901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 3519              		.loc 1 1907 7
 3520 0128 7B68     		ldr	r3, [r7, #4]
 3521 012a 1B68     		ldr	r3, [r3]
 3522 012c 5B69     		ldr	r3, [r3, #20]
 3523 012e 03F04003 		and	r3, r3, #64
 3524              		.loc 1 1907 6
 3525 0132 402B     		cmp	r3, #64
 3526 0134 36D1     		bne	.L184
 3527              	.L187:
 3528              	.LBB409:
1908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 3529              		.loc 1 1909 5 discriminator 1
 3530 0136 7B68     		ldr	r3, [r7, #4]
 3531 0138 1B68     		ldr	r3, [r3]
 3532 013a 1433     		adds	r3, r3, #20
 3533 013c FB60     		str	r3, [r7, #12]
 3534              	.LBB410:
 3535              	.LBB411:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3536              		.loc 2 1072 4 discriminator 1
 3537 013e FB68     		ldr	r3, [r7, #12]
 3538              		.syntax unified
 3539              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3540 0140 53E8003F 		ldrex r3, [r3]
 3541              	@ 0 "" 2
 3542              		.thumb
 3543              		.syntax unified
 3544 0144 BB60     		str	r3, [r7, #8]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3545              		.loc 2 1073 10 discriminator 1
 3546 0146 BB68     		ldr	r3, [r7, #8]
 3547              	.LBE411:
 3548              	.LBE410:
 3549              		.loc 1 1909 5 discriminator 1
 3550 0148 23F04003 		bic	r3, r3, #64
 3551 014c FB66     		str	r3, [r7, #108]
 3552 014e 7B68     		ldr	r3, [r7, #4]
 3553 0150 1B68     		ldr	r3, [r3]
 3554 0152 1433     		adds	r3, r3, #20
 3555 0154 FA6E     		ldr	r2, [r7, #108]
 3556 0156 BA61     		str	r2, [r7, #24]
 3557 0158 7B61     		str	r3, [r7, #20]
 3558              	.LBB412:
 3559              	.LBB413:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3560              		.loc 2 1123 4 discriminator 1
 3561 015a 7969     		ldr	r1, [r7, #20]
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 117


 3562 015c BA69     		ldr	r2, [r7, #24]
 3563              		.syntax unified
 3564              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3565 015e 41E80023 		strex r3, r2, [r1]
 3566              	@ 0 "" 2
 3567              		.thumb
 3568              		.syntax unified
 3569 0162 3B61     		str	r3, [r7, #16]
 3570              		.loc 2 1124 10 discriminator 1
 3571 0164 3B69     		ldr	r3, [r7, #16]
 3572              	.LBE413:
 3573              	.LBE412:
 3574              		.loc 1 1909 5 discriminator 1
 3575 0166 002B     		cmp	r3, #0
 3576 0168 E5D1     		bne	.L187
 3577              	.LBE409:
1910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx stream: use blocking DMA Abort API (no callback) */
1912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 3578              		.loc 1 1912 14
 3579 016a 7B68     		ldr	r3, [r7, #4]
 3580 016c 9B6B     		ldr	r3, [r3, #56]
 3581              		.loc 1 1912 8
 3582 016e 002B     		cmp	r3, #0
 3583 0170 18D0     		beq	.L184
1913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 3584              		.loc 1 1916 12
 3585 0172 7B68     		ldr	r3, [r7, #4]
 3586 0174 9B6B     		ldr	r3, [r3, #56]
 3587              		.loc 1 1916 40
 3588 0176 0022     		movs	r2, #0
 3589 0178 1A65     		str	r2, [r3, #80]
1917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
 3590              		.loc 1 1918 11
 3591 017a 7B68     		ldr	r3, [r7, #4]
 3592 017c 9B6B     		ldr	r3, [r3, #56]
 3593 017e 1846     		mov	r0, r3
 3594 0180 FFF7FEFF 		bl	HAL_DMA_Abort
 3595 0184 0346     		mov	r3, r0
 3596              		.loc 1 1918 10
 3597 0186 002B     		cmp	r3, #0
 3598 0188 0CD0     		beq	.L184
1919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
 3599              		.loc 1 1920 13
 3600 018a 7B68     		ldr	r3, [r7, #4]
 3601 018c 9B6B     		ldr	r3, [r3, #56]
 3602 018e 1846     		mov	r0, r3
 3603 0190 FFF7FEFF 		bl	HAL_DMA_GetError
 3604 0194 0346     		mov	r3, r0
 3605              		.loc 1 1920 12
 3606 0196 202B     		cmp	r3, #32
 3607 0198 04D1     		bne	.L184
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 118


1921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Set error code to DMA */
1923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 3608              		.loc 1 1923 28
 3609 019a 7B68     		ldr	r3, [r7, #4]
 3610 019c 1022     		movs	r2, #16
 3611 019e 1A64     		str	r2, [r3, #64]
1924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 3612              		.loc 1 1925 18
 3613 01a0 0323     		movs	r3, #3
 3614 01a2 14E0     		b	.L183
 3615              	.L184:
1926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset Tx and Rx transfer counters */
1932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 3616              		.loc 1 1932 22
 3617 01a4 7B68     		ldr	r3, [r7, #4]
 3618 01a6 0022     		movs	r2, #0
 3619 01a8 DA84     		strh	r2, [r3, #38]	@ movhi
1933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 3620              		.loc 1 1933 22
 3621 01aa 7B68     		ldr	r3, [r7, #4]
 3622 01ac 0022     		movs	r2, #0
 3623 01ae DA85     		strh	r2, [r3, #46]	@ movhi
1934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset ErrorCode */
1936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 3624              		.loc 1 1936 20
 3625 01b0 7B68     		ldr	r3, [r7, #4]
 3626 01b2 0022     		movs	r2, #0
 3627 01b4 1A64     		str	r2, [r3, #64]
1937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->RxState and huart->gState to Ready */
1939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 3628              		.loc 1 1939 18
 3629 01b6 7B68     		ldr	r3, [r7, #4]
 3630 01b8 2022     		movs	r2, #32
 3631 01ba 83F83E20 		strb	r2, [r3, #62]
1940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 3632              		.loc 1 1940 17
 3633 01be 7B68     		ldr	r3, [r7, #4]
 3634 01c0 2022     		movs	r2, #32
 3635 01c2 83F83D20 		strb	r2, [r3, #61]
1941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 3636              		.loc 1 1941 24
 3637 01c6 7B68     		ldr	r3, [r7, #4]
 3638 01c8 0022     		movs	r2, #0
 3639 01ca 1A63     		str	r2, [r3, #48]
1942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 3640              		.loc 1 1943 10
 3641 01cc 0023     		movs	r3, #0
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 119


 3642              	.L183:
1944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3643              		.loc 1 1944 1
 3644 01ce 1846     		mov	r0, r3
 3645 01d0 8037     		adds	r7, r7, #128
 3646              	.LCFI103:
 3647              		.cfi_def_cfa_offset 8
 3648 01d2 BD46     		mov	sp, r7
 3649              	.LCFI104:
 3650              		.cfi_def_cfa_register 13
 3651              		@ sp needed
 3652 01d4 80BD     		pop	{r7, pc}
 3653              		.cfi_endproc
 3654              	.LFE235:
 3656              		.section	.text.HAL_UART_AbortTransmit,"ax",%progbits
 3657              		.align	1
 3658              		.global	HAL_UART_AbortTransmit
 3659              		.syntax unified
 3660              		.thumb
 3661              		.thumb_func
 3662              		.fpu fpv4-sp-d16
 3664              	HAL_UART_AbortTransmit:
 3665              	.LFB236:
1945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (blocking mode).
1948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
1955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit(UART_HandleTypeDef *huart)
1959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3666              		.loc 1 1959 1
 3667              		.cfi_startproc
 3668              		@ args = 0, pretend = 0, frame = 56
 3669              		@ frame_needed = 1, uses_anonymous_args = 0
 3670 0000 80B5     		push	{r7, lr}
 3671              	.LCFI105:
 3672              		.cfi_def_cfa_offset 8
 3673              		.cfi_offset 7, -8
 3674              		.cfi_offset 14, -4
 3675 0002 8EB0     		sub	sp, sp, #56
 3676              	.LCFI106:
 3677              		.cfi_def_cfa_offset 64
 3678 0004 00AF     		add	r7, sp, #0
 3679              	.LCFI107:
 3680              		.cfi_def_cfa_register 7
 3681 0006 7860     		str	r0, [r7, #4]
 3682              	.L191:
 3683              	.LBB414:
1960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 120


1961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 3684              		.loc 1 1961 3 discriminator 1
 3685 0008 7B68     		ldr	r3, [r7, #4]
 3686 000a 1B68     		ldr	r3, [r3]
 3687 000c 0C33     		adds	r3, r3, #12
 3688 000e 3B62     		str	r3, [r7, #32]
 3689              	.LBB415:
 3690              	.LBB416:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3691              		.loc 2 1072 4 discriminator 1
 3692 0010 3B6A     		ldr	r3, [r7, #32]
 3693              		.syntax unified
 3694              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3695 0012 53E8003F 		ldrex r3, [r3]
 3696              	@ 0 "" 2
 3697              		.thumb
 3698              		.syntax unified
 3699 0016 FB61     		str	r3, [r7, #28]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3700              		.loc 2 1073 10 discriminator 1
 3701 0018 FB69     		ldr	r3, [r7, #28]
 3702              	.LBE416:
 3703              	.LBE415:
 3704              		.loc 1 1961 3 discriminator 1
 3705 001a 23F0C003 		bic	r3, r3, #192
 3706 001e 7B63     		str	r3, [r7, #52]
 3707 0020 7B68     		ldr	r3, [r7, #4]
 3708 0022 1B68     		ldr	r3, [r3]
 3709 0024 0C33     		adds	r3, r3, #12
 3710 0026 7A6B     		ldr	r2, [r7, #52]
 3711 0028 FA62     		str	r2, [r7, #44]
 3712 002a BB62     		str	r3, [r7, #40]
 3713              	.LBB417:
 3714              	.LBB418:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3715              		.loc 2 1123 4 discriminator 1
 3716 002c B96A     		ldr	r1, [r7, #40]
 3717 002e FA6A     		ldr	r2, [r7, #44]
 3718              		.syntax unified
 3719              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3720 0030 41E80023 		strex r3, r2, [r1]
 3721              	@ 0 "" 2
 3722              		.thumb
 3723              		.syntax unified
 3724 0034 7B62     		str	r3, [r7, #36]
 3725              		.loc 2 1124 10 discriminator 1
 3726 0036 7B6A     		ldr	r3, [r7, #36]
 3727              	.LBE418:
 3728              	.LBE417:
 3729              		.loc 1 1961 3 discriminator 1
 3730 0038 002B     		cmp	r3, #0
 3731 003a E5D1     		bne	.L191
 3732              	.LBE414:
1962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 3733              		.loc 1 1964 7
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 121


 3734 003c 7B68     		ldr	r3, [r7, #4]
 3735 003e 1B68     		ldr	r3, [r3]
 3736 0040 5B69     		ldr	r3, [r3, #20]
 3737 0042 03F08003 		and	r3, r3, #128
 3738              		.loc 1 1964 6
 3739 0046 802B     		cmp	r3, #128
 3740 0048 36D1     		bne	.L192
 3741              	.L195:
 3742              	.LBB419:
1965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 3743              		.loc 1 1966 5 discriminator 1
 3744 004a 7B68     		ldr	r3, [r7, #4]
 3745 004c 1B68     		ldr	r3, [r3]
 3746 004e 1433     		adds	r3, r3, #20
 3747 0050 FB60     		str	r3, [r7, #12]
 3748              	.LBB420:
 3749              	.LBB421:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3750              		.loc 2 1072 4 discriminator 1
 3751 0052 FB68     		ldr	r3, [r7, #12]
 3752              		.syntax unified
 3753              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3754 0054 53E8003F 		ldrex r3, [r3]
 3755              	@ 0 "" 2
 3756              		.thumb
 3757              		.syntax unified
 3758 0058 BB60     		str	r3, [r7, #8]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3759              		.loc 2 1073 10 discriminator 1
 3760 005a BB68     		ldr	r3, [r7, #8]
 3761              	.LBE421:
 3762              	.LBE420:
 3763              		.loc 1 1966 5 discriminator 1
 3764 005c 23F08003 		bic	r3, r3, #128
 3765 0060 3B63     		str	r3, [r7, #48]
 3766 0062 7B68     		ldr	r3, [r7, #4]
 3767 0064 1B68     		ldr	r3, [r3]
 3768 0066 1433     		adds	r3, r3, #20
 3769 0068 3A6B     		ldr	r2, [r7, #48]
 3770 006a BA61     		str	r2, [r7, #24]
 3771 006c 7B61     		str	r3, [r7, #20]
 3772              	.LBB422:
 3773              	.LBB423:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3774              		.loc 2 1123 4 discriminator 1
 3775 006e 7969     		ldr	r1, [r7, #20]
 3776 0070 BA69     		ldr	r2, [r7, #24]
 3777              		.syntax unified
 3778              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3779 0072 41E80023 		strex r3, r2, [r1]
 3780              	@ 0 "" 2
 3781              		.thumb
 3782              		.syntax unified
 3783 0076 3B61     		str	r3, [r7, #16]
 3784              		.loc 2 1124 10 discriminator 1
 3785 0078 3B69     		ldr	r3, [r7, #16]
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 122


 3786              	.LBE423:
 3787              	.LBE422:
 3788              		.loc 1 1966 5 discriminator 1
 3789 007a 002B     		cmp	r3, #0
 3790 007c E5D1     		bne	.L195
 3791              	.LBE419:
1967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx stream : use blocking DMA Abort API (no callback) */
1969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 3792              		.loc 1 1969 14
 3793 007e 7B68     		ldr	r3, [r7, #4]
 3794 0080 5B6B     		ldr	r3, [r3, #52]
 3795              		.loc 1 1969 8
 3796 0082 002B     		cmp	r3, #0
 3797 0084 18D0     		beq	.L192
1970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 3798              		.loc 1 1973 12
 3799 0086 7B68     		ldr	r3, [r7, #4]
 3800 0088 5B6B     		ldr	r3, [r3, #52]
 3801              		.loc 1 1973 40
 3802 008a 0022     		movs	r2, #0
 3803 008c 1A65     		str	r2, [r3, #80]
1974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
 3804              		.loc 1 1975 11
 3805 008e 7B68     		ldr	r3, [r7, #4]
 3806 0090 5B6B     		ldr	r3, [r3, #52]
 3807 0092 1846     		mov	r0, r3
 3808 0094 FFF7FEFF 		bl	HAL_DMA_Abort
 3809 0098 0346     		mov	r3, r0
 3810              		.loc 1 1975 10
 3811 009a 002B     		cmp	r3, #0
 3812 009c 0CD0     		beq	.L192
1976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
 3813              		.loc 1 1977 13
 3814 009e 7B68     		ldr	r3, [r7, #4]
 3815 00a0 5B6B     		ldr	r3, [r3, #52]
 3816 00a2 1846     		mov	r0, r3
 3817 00a4 FFF7FEFF 		bl	HAL_DMA_GetError
 3818 00a8 0346     		mov	r3, r0
 3819              		.loc 1 1977 12
 3820 00aa 202B     		cmp	r3, #32
 3821 00ac 04D1     		bne	.L192
1978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Set error code to DMA */
1980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 3822              		.loc 1 1980 28
 3823 00ae 7B68     		ldr	r3, [r7, #4]
 3824 00b0 1022     		movs	r2, #16
 3825 00b2 1A64     		str	r2, [r3, #64]
1981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 3826              		.loc 1 1982 18
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 123


 3827 00b4 0323     		movs	r3, #3
 3828 00b6 07E0     		b	.L196
 3829              	.L192:
1983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset Tx transfer counter */
1989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 3830              		.loc 1 1989 22
 3831 00b8 7B68     		ldr	r3, [r7, #4]
 3832 00ba 0022     		movs	r2, #0
 3833 00bc DA84     		strh	r2, [r3, #38]	@ movhi
1990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->gState to Ready */
1992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 3834              		.loc 1 1992 17
 3835 00be 7B68     		ldr	r3, [r7, #4]
 3836 00c0 2022     		movs	r2, #32
 3837 00c2 83F83D20 		strb	r2, [r3, #61]
1993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 3838              		.loc 1 1994 10
 3839 00c6 0023     		movs	r3, #0
 3840              	.L196:
1995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3841              		.loc 1 1995 1
 3842 00c8 1846     		mov	r0, r3
 3843 00ca 3837     		adds	r7, r7, #56
 3844              	.LCFI108:
 3845              		.cfi_def_cfa_offset 8
 3846 00cc BD46     		mov	sp, r7
 3847              	.LCFI109:
 3848              		.cfi_def_cfa_register 13
 3849              		@ sp needed
 3850 00ce 80BD     		pop	{r7, pc}
 3851              		.cfi_endproc
 3852              	.LFE236:
 3854              		.section	.text.HAL_UART_AbortReceive,"ax",%progbits
 3855              		.align	1
 3856              		.global	HAL_UART_AbortReceive
 3857              		.syntax unified
 3858              		.thumb
 3859              		.thumb_func
 3860              		.fpu fpv4-sp-d16
 3862              	HAL_UART_AbortReceive:
 3863              	.LFB237:
1996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (blocking mode).
1999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
2001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
2002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
2003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 124


2005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
2006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
2007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive(UART_HandleTypeDef *huart)
2010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3864              		.loc 1 2010 1
 3865              		.cfi_startproc
 3866              		@ args = 0, pretend = 0, frame = 104
 3867              		@ frame_needed = 1, uses_anonymous_args = 0
 3868 0000 80B5     		push	{r7, lr}
 3869              	.LCFI110:
 3870              		.cfi_def_cfa_offset 8
 3871              		.cfi_offset 7, -8
 3872              		.cfi_offset 14, -4
 3873 0002 9AB0     		sub	sp, sp, #104
 3874              	.LCFI111:
 3875              		.cfi_def_cfa_offset 112
 3876 0004 00AF     		add	r7, sp, #0
 3877              	.LCFI112:
 3878              		.cfi_def_cfa_register 7
 3879 0006 7860     		str	r0, [r7, #4]
 3880              	.L200:
 3881              	.LBB424:
2011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 3882              		.loc 1 2012 3 discriminator 1
 3883 0008 7B68     		ldr	r3, [r7, #4]
 3884 000a 1B68     		ldr	r3, [r3]
 3885 000c 0C33     		adds	r3, r3, #12
 3886 000e BB64     		str	r3, [r7, #72]
 3887              	.LBB425:
 3888              	.LBB426:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3889              		.loc 2 1072 4 discriminator 1
 3890 0010 BB6C     		ldr	r3, [r7, #72]
 3891              		.syntax unified
 3892              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3893 0012 53E8003F 		ldrex r3, [r3]
 3894              	@ 0 "" 2
 3895              		.thumb
 3896              		.syntax unified
 3897 0016 7B64     		str	r3, [r7, #68]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3898              		.loc 2 1073 10 discriminator 1
 3899 0018 7B6C     		ldr	r3, [r7, #68]
 3900              	.LBE426:
 3901              	.LBE425:
 3902              		.loc 1 2012 3 discriminator 1
 3903 001a 23F49073 		bic	r3, r3, #288
 3904 001e 7B66     		str	r3, [r7, #100]
 3905 0020 7B68     		ldr	r3, [r7, #4]
 3906 0022 1B68     		ldr	r3, [r3]
 3907 0024 0C33     		adds	r3, r3, #12
 3908 0026 7A6E     		ldr	r2, [r7, #100]
 3909 0028 7A65     		str	r2, [r7, #84]
 3910 002a 3B65     		str	r3, [r7, #80]
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 125


 3911              	.LBB427:
 3912              	.LBB428:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3913              		.loc 2 1123 4 discriminator 1
 3914 002c 396D     		ldr	r1, [r7, #80]
 3915 002e 7A6D     		ldr	r2, [r7, #84]
 3916              		.syntax unified
 3917              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3918 0030 41E80023 		strex r3, r2, [r1]
 3919              	@ 0 "" 2
 3920              		.thumb
 3921              		.syntax unified
 3922 0034 FB64     		str	r3, [r7, #76]
 3923              		.loc 2 1124 10 discriminator 1
 3924 0036 FB6C     		ldr	r3, [r7, #76]
 3925              	.LBE428:
 3926              	.LBE427:
 3927              		.loc 1 2012 3 discriminator 1
 3928 0038 002B     		cmp	r3, #0
 3929 003a E5D1     		bne	.L200
 3930              	.L203:
 3931              	.LBE424:
 3932              	.LBB429:
2013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3933              		.loc 1 2013 3 discriminator 1
 3934 003c 7B68     		ldr	r3, [r7, #4]
 3935 003e 1B68     		ldr	r3, [r3]
 3936 0040 1433     		adds	r3, r3, #20
 3937 0042 7B63     		str	r3, [r7, #52]
 3938              	.LBB430:
 3939              	.LBB431:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3940              		.loc 2 1072 4 discriminator 1
 3941 0044 7B6B     		ldr	r3, [r7, #52]
 3942              		.syntax unified
 3943              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3944 0046 53E8003F 		ldrex r3, [r3]
 3945              	@ 0 "" 2
 3946              		.thumb
 3947              		.syntax unified
 3948 004a 3B63     		str	r3, [r7, #48]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3949              		.loc 2 1073 10 discriminator 1
 3950 004c 3B6B     		ldr	r3, [r7, #48]
 3951              	.LBE431:
 3952              	.LBE430:
 3953              		.loc 1 2013 3 discriminator 1
 3954 004e 23F00103 		bic	r3, r3, #1
 3955 0052 3B66     		str	r3, [r7, #96]
 3956 0054 7B68     		ldr	r3, [r7, #4]
 3957 0056 1B68     		ldr	r3, [r3]
 3958 0058 1433     		adds	r3, r3, #20
 3959 005a 3A6E     		ldr	r2, [r7, #96]
 3960 005c 3A64     		str	r2, [r7, #64]
 3961 005e FB63     		str	r3, [r7, #60]
 3962              	.LBB432:
 3963              	.LBB433:
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 126


1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3964              		.loc 2 1123 4 discriminator 1
 3965 0060 F96B     		ldr	r1, [r7, #60]
 3966 0062 3A6C     		ldr	r2, [r7, #64]
 3967              		.syntax unified
 3968              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3969 0064 41E80023 		strex r3, r2, [r1]
 3970              	@ 0 "" 2
 3971              		.thumb
 3972              		.syntax unified
 3973 0068 BB63     		str	r3, [r7, #56]
 3974              		.loc 2 1124 10 discriminator 1
 3975 006a BB6B     		ldr	r3, [r7, #56]
 3976              	.LBE433:
 3977              	.LBE432:
 3978              		.loc 1 2013 3 discriminator 1
 3979 006c 002B     		cmp	r3, #0
 3980 006e E5D1     		bne	.L203
 3981              	.LBE429:
2014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* If Reception till IDLE event was ongoing, disable IDLEIE interrupt */
2016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 3982              		.loc 1 2016 12
 3983 0070 7B68     		ldr	r3, [r7, #4]
 3984 0072 1B6B     		ldr	r3, [r3, #48]
 3985              		.loc 1 2016 6
 3986 0074 012B     		cmp	r3, #1
 3987 0076 19D1     		bne	.L204
 3988              	.L207:
 3989              	.LBB434:
2017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
 3990              		.loc 1 2018 5 discriminator 1
 3991 0078 7B68     		ldr	r3, [r7, #4]
 3992 007a 1B68     		ldr	r3, [r3]
 3993 007c 0C33     		adds	r3, r3, #12
 3994 007e 3B62     		str	r3, [r7, #32]
 3995              	.LBB435:
 3996              	.LBB436:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3997              		.loc 2 1072 4 discriminator 1
 3998 0080 3B6A     		ldr	r3, [r7, #32]
 3999              		.syntax unified
 4000              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4001 0082 53E8003F 		ldrex r3, [r3]
 4002              	@ 0 "" 2
 4003              		.thumb
 4004              		.syntax unified
 4005 0086 FB61     		str	r3, [r7, #28]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4006              		.loc 2 1073 10 discriminator 1
 4007 0088 FB69     		ldr	r3, [r7, #28]
 4008              	.LBE436:
 4009              	.LBE435:
 4010              		.loc 1 2018 5 discriminator 1
 4011 008a 23F01003 		bic	r3, r3, #16
 4012 008e FB65     		str	r3, [r7, #92]
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 127


 4013 0090 7B68     		ldr	r3, [r7, #4]
 4014 0092 1B68     		ldr	r3, [r3]
 4015 0094 0C33     		adds	r3, r3, #12
 4016 0096 FA6D     		ldr	r2, [r7, #92]
 4017 0098 FA62     		str	r2, [r7, #44]
 4018 009a BB62     		str	r3, [r7, #40]
 4019              	.LBB437:
 4020              	.LBB438:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4021              		.loc 2 1123 4 discriminator 1
 4022 009c B96A     		ldr	r1, [r7, #40]
 4023 009e FA6A     		ldr	r2, [r7, #44]
 4024              		.syntax unified
 4025              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4026 00a0 41E80023 		strex r3, r2, [r1]
 4027              	@ 0 "" 2
 4028              		.thumb
 4029              		.syntax unified
 4030 00a4 7B62     		str	r3, [r7, #36]
 4031              		.loc 2 1124 10 discriminator 1
 4032 00a6 7B6A     		ldr	r3, [r7, #36]
 4033              	.LBE438:
 4034              	.LBE437:
 4035              		.loc 1 2018 5 discriminator 1
 4036 00a8 002B     		cmp	r3, #0
 4037 00aa E5D1     		bne	.L207
 4038              	.L204:
 4039              	.LBE434:
2019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
2022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 4040              		.loc 1 2022 7
 4041 00ac 7B68     		ldr	r3, [r7, #4]
 4042 00ae 1B68     		ldr	r3, [r3]
 4043 00b0 5B69     		ldr	r3, [r3, #20]
 4044 00b2 03F04003 		and	r3, r3, #64
 4045              		.loc 1 2022 6
 4046 00b6 402B     		cmp	r3, #64
 4047 00b8 36D1     		bne	.L208
 4048              	.L211:
 4049              	.LBB439:
2023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 4050              		.loc 1 2024 5 discriminator 1
 4051 00ba 7B68     		ldr	r3, [r7, #4]
 4052 00bc 1B68     		ldr	r3, [r3]
 4053 00be 1433     		adds	r3, r3, #20
 4054 00c0 FB60     		str	r3, [r7, #12]
 4055              	.LBB440:
 4056              	.LBB441:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4057              		.loc 2 1072 4 discriminator 1
 4058 00c2 FB68     		ldr	r3, [r7, #12]
 4059              		.syntax unified
 4060              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4061 00c4 53E8003F 		ldrex r3, [r3]
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 128


 4062              	@ 0 "" 2
 4063              		.thumb
 4064              		.syntax unified
 4065 00c8 BB60     		str	r3, [r7, #8]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4066              		.loc 2 1073 10 discriminator 1
 4067 00ca BB68     		ldr	r3, [r7, #8]
 4068              	.LBE441:
 4069              	.LBE440:
 4070              		.loc 1 2024 5 discriminator 1
 4071 00cc 23F04003 		bic	r3, r3, #64
 4072 00d0 BB65     		str	r3, [r7, #88]
 4073 00d2 7B68     		ldr	r3, [r7, #4]
 4074 00d4 1B68     		ldr	r3, [r3]
 4075 00d6 1433     		adds	r3, r3, #20
 4076 00d8 BA6D     		ldr	r2, [r7, #88]
 4077 00da BA61     		str	r2, [r7, #24]
 4078 00dc 7B61     		str	r3, [r7, #20]
 4079              	.LBB442:
 4080              	.LBB443:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4081              		.loc 2 1123 4 discriminator 1
 4082 00de 7969     		ldr	r1, [r7, #20]
 4083 00e0 BA69     		ldr	r2, [r7, #24]
 4084              		.syntax unified
 4085              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4086 00e2 41E80023 		strex r3, r2, [r1]
 4087              	@ 0 "" 2
 4088              		.thumb
 4089              		.syntax unified
 4090 00e6 3B61     		str	r3, [r7, #16]
 4091              		.loc 2 1124 10 discriminator 1
 4092 00e8 3B69     		ldr	r3, [r7, #16]
 4093              	.LBE443:
 4094              	.LBE442:
 4095              		.loc 1 2024 5 discriminator 1
 4096 00ea 002B     		cmp	r3, #0
 4097 00ec E5D1     		bne	.L211
 4098              	.LBE439:
2025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx stream : use blocking DMA Abort API (no callback) */
2027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 4099              		.loc 1 2027 14
 4100 00ee 7B68     		ldr	r3, [r7, #4]
 4101 00f0 9B6B     		ldr	r3, [r3, #56]
 4102              		.loc 1 2027 8
 4103 00f2 002B     		cmp	r3, #0
 4104 00f4 18D0     		beq	.L208
2028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
2030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
2031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 4105              		.loc 1 2031 12
 4106 00f6 7B68     		ldr	r3, [r7, #4]
 4107 00f8 9B6B     		ldr	r3, [r3, #56]
 4108              		.loc 1 2031 40
 4109 00fa 0022     		movs	r2, #0
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 129


 4110 00fc 1A65     		str	r2, [r3, #80]
2032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
 4111              		.loc 1 2033 11
 4112 00fe 7B68     		ldr	r3, [r7, #4]
 4113 0100 9B6B     		ldr	r3, [r3, #56]
 4114 0102 1846     		mov	r0, r3
 4115 0104 FFF7FEFF 		bl	HAL_DMA_Abort
 4116 0108 0346     		mov	r3, r0
 4117              		.loc 1 2033 10
 4118 010a 002B     		cmp	r3, #0
 4119 010c 0CD0     		beq	.L208
2034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
 4120              		.loc 1 2035 13
 4121 010e 7B68     		ldr	r3, [r7, #4]
 4122 0110 9B6B     		ldr	r3, [r3, #56]
 4123 0112 1846     		mov	r0, r3
 4124 0114 FFF7FEFF 		bl	HAL_DMA_GetError
 4125 0118 0346     		mov	r3, r0
 4126              		.loc 1 2035 12
 4127 011a 202B     		cmp	r3, #32
 4128 011c 04D1     		bne	.L208
2036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
2037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Set error code to DMA */
2038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 4129              		.loc 1 2038 28
 4130 011e 7B68     		ldr	r3, [r7, #4]
 4131 0120 1022     		movs	r2, #16
 4132 0122 1A64     		str	r2, [r3, #64]
2039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 4133              		.loc 1 2040 18
 4134 0124 0323     		movs	r3, #3
 4135 0126 0AE0     		b	.L212
 4136              	.L208:
2041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
2042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset Rx transfer counter */
2047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 4137              		.loc 1 2047 22
 4138 0128 7B68     		ldr	r3, [r7, #4]
 4139 012a 0022     		movs	r2, #0
 4140 012c DA85     		strh	r2, [r3, #46]	@ movhi
2048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
2050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 4141              		.loc 1 2050 18
 4142 012e 7B68     		ldr	r3, [r7, #4]
 4143 0130 2022     		movs	r2, #32
 4144 0132 83F83E20 		strb	r2, [r3, #62]
2051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 4145              		.loc 1 2051 24
 4146 0136 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 130


 4147 0138 0022     		movs	r2, #0
 4148 013a 1A63     		str	r2, [r3, #48]
2052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 4149              		.loc 1 2053 10
 4150 013c 0023     		movs	r3, #0
 4151              	.L212:
2054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4152              		.loc 1 2054 1
 4153 013e 1846     		mov	r0, r3
 4154 0140 6837     		adds	r7, r7, #104
 4155              	.LCFI113:
 4156              		.cfi_def_cfa_offset 8
 4157 0142 BD46     		mov	sp, r7
 4158              	.LCFI114:
 4159              		.cfi_def_cfa_register 13
 4160              		@ sp needed
 4161 0144 80BD     		pop	{r7, pc}
 4162              		.cfi_endproc
 4163              	.LFE237:
 4165              		.section	.text.HAL_UART_Abort_IT,"ax",%progbits
 4166              		.align	1
 4167              		.global	HAL_UART_Abort_IT
 4168              		.syntax unified
 4169              		.thumb
 4170              		.thumb_func
 4171              		.fpu fpv4-sp-d16
 4173              	HAL_UART_Abort_IT:
 4174              	.LFB238:
2055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing transfers (Interrupt mode).
2058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
2060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
2061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
2062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
2065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
2066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort_IT(UART_HandleTypeDef *huart)
2071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 4175              		.loc 1 2071 1
 4176              		.cfi_startproc
 4177              		@ args = 0, pretend = 0, frame = 136
 4178              		@ frame_needed = 1, uses_anonymous_args = 0
 4179 0000 80B5     		push	{r7, lr}
 4180              	.LCFI115:
 4181              		.cfi_def_cfa_offset 8
 4182              		.cfi_offset 7, -8
 4183              		.cfi_offset 14, -4
 4184 0002 A2B0     		sub	sp, sp, #136
 4185              	.LCFI116:
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 131


 4186              		.cfi_def_cfa_offset 144
 4187 0004 00AF     		add	r7, sp, #0
 4188              	.LCFI117:
 4189              		.cfi_def_cfa_register 7
 4190 0006 7860     		str	r0, [r7, #4]
2072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t AbortCplt = 0x01U;
 4191              		.loc 1 2072 12
 4192 0008 0123     		movs	r3, #1
 4193 000a C7F88430 		str	r3, [r7, #132]
 4194              	.L216:
 4195              	.LBB444:
2073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USA
 4196              		.loc 1 2075 3 discriminator 1
 4197 000e 7B68     		ldr	r3, [r7, #4]
 4198 0010 1B68     		ldr	r3, [r3]
 4199 0012 0C33     		adds	r3, r3, #12
 4200 0014 3B66     		str	r3, [r7, #96]
 4201              	.LBB445:
 4202              	.LBB446:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4203              		.loc 2 1072 4 discriminator 1
 4204 0016 3B6E     		ldr	r3, [r7, #96]
 4205              		.syntax unified
 4206              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4207 0018 53E8003F 		ldrex r3, [r3]
 4208              	@ 0 "" 2
 4209              		.thumb
 4210              		.syntax unified
 4211 001c FB65     		str	r3, [r7, #92]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4212              		.loc 2 1073 10 discriminator 1
 4213 001e FB6D     		ldr	r3, [r7, #92]
 4214              	.LBE446:
 4215              	.LBE445:
 4216              		.loc 1 2075 3 discriminator 1
 4217 0020 23F4F073 		bic	r3, r3, #480
 4218 0024 C7F88030 		str	r3, [r7, #128]
 4219 0028 7B68     		ldr	r3, [r7, #4]
 4220 002a 1B68     		ldr	r3, [r3]
 4221 002c 0C33     		adds	r3, r3, #12
 4222 002e D7F88020 		ldr	r2, [r7, #128]
 4223 0032 FA66     		str	r2, [r7, #108]
 4224 0034 BB66     		str	r3, [r7, #104]
 4225              	.LBB447:
 4226              	.LBB448:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4227              		.loc 2 1123 4 discriminator 1
 4228 0036 B96E     		ldr	r1, [r7, #104]
 4229 0038 FA6E     		ldr	r2, [r7, #108]
 4230              		.syntax unified
 4231              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4232 003a 41E80023 		strex r3, r2, [r1]
 4233              	@ 0 "" 2
 4234              		.thumb
 4235              		.syntax unified
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 132


 4236 003e 7B66     		str	r3, [r7, #100]
 4237              		.loc 2 1124 10 discriminator 1
 4238 0040 7B6E     		ldr	r3, [r7, #100]
 4239              	.LBE448:
 4240              	.LBE447:
 4241              		.loc 1 2075 3 discriminator 1
 4242 0042 002B     		cmp	r3, #0
 4243 0044 E3D1     		bne	.L216
 4244              	.L219:
 4245              	.LBE444:
 4246              	.LBB449:
2076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 4247              		.loc 1 2076 3 discriminator 1
 4248 0046 7B68     		ldr	r3, [r7, #4]
 4249 0048 1B68     		ldr	r3, [r3]
 4250 004a 1433     		adds	r3, r3, #20
 4251 004c FB64     		str	r3, [r7, #76]
 4252              	.LBB450:
 4253              	.LBB451:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4254              		.loc 2 1072 4 discriminator 1
 4255 004e FB6C     		ldr	r3, [r7, #76]
 4256              		.syntax unified
 4257              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4258 0050 53E8003F 		ldrex r3, [r3]
 4259              	@ 0 "" 2
 4260              		.thumb
 4261              		.syntax unified
 4262 0054 BB64     		str	r3, [r7, #72]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4263              		.loc 2 1073 10 discriminator 1
 4264 0056 BB6C     		ldr	r3, [r7, #72]
 4265              	.LBE451:
 4266              	.LBE450:
 4267              		.loc 1 2076 3 discriminator 1
 4268 0058 23F00103 		bic	r3, r3, #1
 4269 005c FB67     		str	r3, [r7, #124]
 4270 005e 7B68     		ldr	r3, [r7, #4]
 4271 0060 1B68     		ldr	r3, [r3]
 4272 0062 1433     		adds	r3, r3, #20
 4273 0064 FA6F     		ldr	r2, [r7, #124]
 4274 0066 BA65     		str	r2, [r7, #88]
 4275 0068 7B65     		str	r3, [r7, #84]
 4276              	.LBB452:
 4277              	.LBB453:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4278              		.loc 2 1123 4 discriminator 1
 4279 006a 796D     		ldr	r1, [r7, #84]
 4280 006c BA6D     		ldr	r2, [r7, #88]
 4281              		.syntax unified
 4282              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4283 006e 41E80023 		strex r3, r2, [r1]
 4284              	@ 0 "" 2
 4285              		.thumb
 4286              		.syntax unified
 4287 0072 3B65     		str	r3, [r7, #80]
 4288              		.loc 2 1124 10 discriminator 1
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 133


 4289 0074 3B6D     		ldr	r3, [r7, #80]
 4290              	.LBE453:
 4291              	.LBE452:
 4292              		.loc 1 2076 3 discriminator 1
 4293 0076 002B     		cmp	r3, #0
 4294 0078 E5D1     		bne	.L219
 4295              	.LBE449:
2077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* If Reception till IDLE event was ongoing, disable IDLEIE interrupt */
2079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 4296              		.loc 1 2079 12
 4297 007a 7B68     		ldr	r3, [r7, #4]
 4298 007c 1B6B     		ldr	r3, [r3, #48]
 4299              		.loc 1 2079 6
 4300 007e 012B     		cmp	r3, #1
 4301 0080 19D1     		bne	.L220
 4302              	.L223:
 4303              	.LBB454:
2080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
 4304              		.loc 1 2081 5 discriminator 1
 4305 0082 7B68     		ldr	r3, [r7, #4]
 4306 0084 1B68     		ldr	r3, [r3]
 4307 0086 0C33     		adds	r3, r3, #12
 4308 0088 BB63     		str	r3, [r7, #56]
 4309              	.LBB455:
 4310              	.LBB456:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4311              		.loc 2 1072 4 discriminator 1
 4312 008a BB6B     		ldr	r3, [r7, #56]
 4313              		.syntax unified
 4314              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4315 008c 53E8003F 		ldrex r3, [r3]
 4316              	@ 0 "" 2
 4317              		.thumb
 4318              		.syntax unified
 4319 0090 7B63     		str	r3, [r7, #52]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4320              		.loc 2 1073 10 discriminator 1
 4321 0092 7B6B     		ldr	r3, [r7, #52]
 4322              	.LBE456:
 4323              	.LBE455:
 4324              		.loc 1 2081 5 discriminator 1
 4325 0094 23F01003 		bic	r3, r3, #16
 4326 0098 BB67     		str	r3, [r7, #120]
 4327 009a 7B68     		ldr	r3, [r7, #4]
 4328 009c 1B68     		ldr	r3, [r3]
 4329 009e 0C33     		adds	r3, r3, #12
 4330 00a0 BA6F     		ldr	r2, [r7, #120]
 4331 00a2 7A64     		str	r2, [r7, #68]
 4332 00a4 3B64     		str	r3, [r7, #64]
 4333              	.LBB457:
 4334              	.LBB458:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4335              		.loc 2 1123 4 discriminator 1
 4336 00a6 396C     		ldr	r1, [r7, #64]
 4337 00a8 7A6C     		ldr	r2, [r7, #68]
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 134


 4338              		.syntax unified
 4339              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4340 00aa 41E80023 		strex r3, r2, [r1]
 4341              	@ 0 "" 2
 4342              		.thumb
 4343              		.syntax unified
 4344 00ae FB63     		str	r3, [r7, #60]
 4345              		.loc 2 1124 10 discriminator 1
 4346 00b0 FB6B     		ldr	r3, [r7, #60]
 4347              	.LBE458:
 4348              	.LBE457:
 4349              		.loc 1 2081 5 discriminator 1
 4350 00b2 002B     		cmp	r3, #0
 4351 00b4 E5D1     		bne	.L223
 4352              	.L220:
 4353              	.LBE454:
2082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to UART Handle, DMA Abort complete callbacks sh
2085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      before any call to DMA Abort functions */
2086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Tx Handle is valid */
2087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->hdmatx != NULL)
 4354              		.loc 1 2087 12
 4355 00b6 7B68     		ldr	r3, [r7, #4]
 4356 00b8 5B6B     		ldr	r3, [r3, #52]
 4357              		.loc 1 2087 6
 4358 00ba 002B     		cmp	r3, #0
 4359 00bc 0FD0     		beq	.L224
2088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
2090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        Otherwise, set it to NULL */
2091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 4360              		.loc 1 2091 9
 4361 00be 7B68     		ldr	r3, [r7, #4]
 4362 00c0 1B68     		ldr	r3, [r3]
 4363 00c2 5B69     		ldr	r3, [r3, #20]
 4364 00c4 03F08003 		and	r3, r3, #128
 4365              		.loc 1 2091 8
 4366 00c8 802B     		cmp	r3, #128
 4367 00ca 04D1     		bne	.L225
2092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxAbortCallback;
 4368              		.loc 1 2093 12
 4369 00cc 7B68     		ldr	r3, [r7, #4]
 4370 00ce 5B6B     		ldr	r3, [r3, #52]
 4371              		.loc 1 2093 40
 4372 00d0 534A     		ldr	r2, .L240
 4373 00d2 1A65     		str	r2, [r3, #80]
 4374 00d4 03E0     		b	.L224
 4375              	.L225:
2094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
2096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 4376              		.loc 1 2097 12
 4377 00d6 7B68     		ldr	r3, [r7, #4]
 4378 00d8 5B6B     		ldr	r3, [r3, #52]
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 135


 4379              		.loc 1 2097 40
 4380 00da 0022     		movs	r2, #0
 4381 00dc 1A65     		str	r2, [r3, #80]
 4382              	.L224:
2098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Rx Handle is valid */
2101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->hdmarx != NULL)
 4383              		.loc 1 2101 12
 4384 00de 7B68     		ldr	r3, [r7, #4]
 4385 00e0 9B6B     		ldr	r3, [r3, #56]
 4386              		.loc 1 2101 6
 4387 00e2 002B     		cmp	r3, #0
 4388 00e4 0FD0     		beq	.L226
2102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
2104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        Otherwise, set it to NULL */
2105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 4389              		.loc 1 2105 9
 4390 00e6 7B68     		ldr	r3, [r7, #4]
 4391 00e8 1B68     		ldr	r3, [r3]
 4392 00ea 5B69     		ldr	r3, [r3, #20]
 4393 00ec 03F04003 		and	r3, r3, #64
 4394              		.loc 1 2105 8
 4395 00f0 402B     		cmp	r3, #64
 4396 00f2 04D1     		bne	.L227
2106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxAbortCallback;
 4397              		.loc 1 2107 12
 4398 00f4 7B68     		ldr	r3, [r7, #4]
 4399 00f6 9B6B     		ldr	r3, [r3, #56]
 4400              		.loc 1 2107 40
 4401 00f8 4A4A     		ldr	r2, .L240+4
 4402 00fa 1A65     		str	r2, [r3, #80]
 4403 00fc 03E0     		b	.L226
 4404              	.L227:
2108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
2110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 4405              		.loc 1 2111 12
 4406 00fe 7B68     		ldr	r3, [r7, #4]
 4407 0100 9B6B     		ldr	r3, [r3, #56]
 4408              		.loc 1 2111 40
 4409 0102 0022     		movs	r2, #0
 4410 0104 1A65     		str	r2, [r3, #80]
 4411              	.L226:
2112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
2116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 4412              		.loc 1 2116 7
 4413 0106 7B68     		ldr	r3, [r7, #4]
 4414 0108 1B68     		ldr	r3, [r3]
 4415 010a 5B69     		ldr	r3, [r3, #20]
 4416 010c 03F08003 		and	r3, r3, #128
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 136


 4417              		.loc 1 2116 6
 4418 0110 802B     		cmp	r3, #128
 4419 0112 2DD1     		bne	.L228
 4420              	.L231:
 4421              	.LBB459:
2117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable DMA Tx at UART level */
2119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 4422              		.loc 1 2119 5 discriminator 1
 4423 0114 7B68     		ldr	r3, [r7, #4]
 4424 0116 1B68     		ldr	r3, [r3]
 4425 0118 1433     		adds	r3, r3, #20
 4426 011a 7B62     		str	r3, [r7, #36]
 4427              	.LBB460:
 4428              	.LBB461:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4429              		.loc 2 1072 4 discriminator 1
 4430 011c 7B6A     		ldr	r3, [r7, #36]
 4431              		.syntax unified
 4432              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4433 011e 53E8003F 		ldrex r3, [r3]
 4434              	@ 0 "" 2
 4435              		.thumb
 4436              		.syntax unified
 4437 0122 3B62     		str	r3, [r7, #32]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4438              		.loc 2 1073 10 discriminator 1
 4439 0124 3B6A     		ldr	r3, [r7, #32]
 4440              	.LBE461:
 4441              	.LBE460:
 4442              		.loc 1 2119 5 discriminator 1
 4443 0126 23F08003 		bic	r3, r3, #128
 4444 012a 7B67     		str	r3, [r7, #116]
 4445 012c 7B68     		ldr	r3, [r7, #4]
 4446 012e 1B68     		ldr	r3, [r3]
 4447 0130 1433     		adds	r3, r3, #20
 4448 0132 7A6F     		ldr	r2, [r7, #116]
 4449 0134 3A63     		str	r2, [r7, #48]
 4450 0136 FB62     		str	r3, [r7, #44]
 4451              	.LBB462:
 4452              	.LBB463:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4453              		.loc 2 1123 4 discriminator 1
 4454 0138 F96A     		ldr	r1, [r7, #44]
 4455 013a 3A6B     		ldr	r2, [r7, #48]
 4456              		.syntax unified
 4457              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4458 013c 41E80023 		strex r3, r2, [r1]
 4459              	@ 0 "" 2
 4460              		.thumb
 4461              		.syntax unified
 4462 0140 BB62     		str	r3, [r7, #40]
 4463              		.loc 2 1124 10 discriminator 1
 4464 0142 BB6A     		ldr	r3, [r7, #40]
 4465              	.LBE463:
 4466              	.LBE462:
 4467              		.loc 1 2119 5 discriminator 1
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 137


 4468 0144 002B     		cmp	r3, #0
 4469 0146 E5D1     		bne	.L231
 4470              	.LBE459:
2120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx stream : use non blocking DMA Abort API (callback) */
2122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 4471              		.loc 1 2122 14
 4472 0148 7B68     		ldr	r3, [r7, #4]
 4473 014a 5B6B     		ldr	r3, [r3, #52]
 4474              		.loc 1 2122 8
 4475 014c 002B     		cmp	r3, #0
 4476 014e 0FD0     		beq	.L228
2123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* UART Tx DMA Abort callback has already been initialised :
2125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Abort DMA TX */
2128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
 4477              		.loc 1 2128 11
 4478 0150 7B68     		ldr	r3, [r7, #4]
 4479 0152 5B6B     		ldr	r3, [r3, #52]
 4480 0154 1846     		mov	r0, r3
 4481 0156 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4482 015a 0346     		mov	r3, r0
 4483              		.loc 1 2128 10
 4484 015c 002B     		cmp	r3, #0
 4485 015e 04D0     		beq	.L232
2129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback = NULL;
 4486              		.loc 1 2130 14
 4487 0160 7B68     		ldr	r3, [r7, #4]
 4488 0162 5B6B     		ldr	r3, [r3, #52]
 4489              		.loc 1 2130 42
 4490 0164 0022     		movs	r2, #0
 4491 0166 1A65     		str	r2, [r3, #80]
 4492 0168 02E0     		b	.L228
 4493              	.L232:
2131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
2133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         AbortCplt = 0x00U;
 4494              		.loc 1 2134 19
 4495 016a 0023     		movs	r3, #0
 4496 016c C7F88430 		str	r3, [r7, #132]
 4497              	.L228:
2135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
2140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 4498              		.loc 1 2140 7
 4499 0170 7B68     		ldr	r3, [r7, #4]
 4500 0172 1B68     		ldr	r3, [r3]
 4501 0174 5B69     		ldr	r3, [r3, #20]
 4502 0176 03F04003 		and	r3, r3, #64
 4503              		.loc 1 2140 6
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 138


 4504 017a 402B     		cmp	r3, #64
 4505 017c 30D1     		bne	.L233
 4506              	.L236:
 4507              	.LBB464:
2141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 4508              		.loc 1 2142 5 discriminator 1
 4509 017e 7B68     		ldr	r3, [r7, #4]
 4510 0180 1B68     		ldr	r3, [r3]
 4511 0182 1433     		adds	r3, r3, #20
 4512 0184 3B61     		str	r3, [r7, #16]
 4513              	.LBB465:
 4514              	.LBB466:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4515              		.loc 2 1072 4 discriminator 1
 4516 0186 3B69     		ldr	r3, [r7, #16]
 4517              		.syntax unified
 4518              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4519 0188 53E8003F 		ldrex r3, [r3]
 4520              	@ 0 "" 2
 4521              		.thumb
 4522              		.syntax unified
 4523 018c FB60     		str	r3, [r7, #12]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4524              		.loc 2 1073 10 discriminator 1
 4525 018e FB68     		ldr	r3, [r7, #12]
 4526              	.LBE466:
 4527              	.LBE465:
 4528              		.loc 1 2142 5 discriminator 1
 4529 0190 23F04003 		bic	r3, r3, #64
 4530 0194 3B67     		str	r3, [r7, #112]
 4531 0196 7B68     		ldr	r3, [r7, #4]
 4532 0198 1B68     		ldr	r3, [r3]
 4533 019a 1433     		adds	r3, r3, #20
 4534 019c 3A6F     		ldr	r2, [r7, #112]
 4535 019e FA61     		str	r2, [r7, #28]
 4536 01a0 BB61     		str	r3, [r7, #24]
 4537              	.LBB467:
 4538              	.LBB468:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4539              		.loc 2 1123 4 discriminator 1
 4540 01a2 B969     		ldr	r1, [r7, #24]
 4541 01a4 FA69     		ldr	r2, [r7, #28]
 4542              		.syntax unified
 4543              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4544 01a6 41E80023 		strex r3, r2, [r1]
 4545              	@ 0 "" 2
 4546              		.thumb
 4547              		.syntax unified
 4548 01aa 7B61     		str	r3, [r7, #20]
 4549              		.loc 2 1124 10 discriminator 1
 4550 01ac 7B69     		ldr	r3, [r7, #20]
 4551              	.LBE468:
 4552              	.LBE467:
 4553              		.loc 1 2142 5 discriminator 1
 4554 01ae 002B     		cmp	r3, #0
 4555 01b0 E5D1     		bne	.L236
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 139


 4556              	.LBE464:
2143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx stream : use non blocking DMA Abort API (callback) */
2145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 4557              		.loc 1 2145 14
 4558 01b2 7B68     		ldr	r3, [r7, #4]
 4559 01b4 9B6B     		ldr	r3, [r3, #56]
 4560              		.loc 1 2145 8
 4561 01b6 002B     		cmp	r3, #0
 4562 01b8 12D0     		beq	.L233
2146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* UART Rx DMA Abort callback has already been initialised :
2148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Abort DMA RX */
2151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 4563              		.loc 1 2151 11
 4564 01ba 7B68     		ldr	r3, [r7, #4]
 4565 01bc 9B6B     		ldr	r3, [r3, #56]
 4566 01be 1846     		mov	r0, r3
 4567 01c0 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4568 01c4 0346     		mov	r3, r0
 4569              		.loc 1 2151 10
 4570 01c6 002B     		cmp	r3, #0
 4571 01c8 07D0     		beq	.L237
2152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback = NULL;
 4572              		.loc 1 2153 14
 4573 01ca 7B68     		ldr	r3, [r7, #4]
 4574 01cc 9B6B     		ldr	r3, [r3, #56]
 4575              		.loc 1 2153 42
 4576 01ce 0022     		movs	r2, #0
 4577 01d0 1A65     		str	r2, [r3, #80]
2154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         AbortCplt = 0x01U;
 4578              		.loc 1 2154 19
 4579 01d2 0123     		movs	r3, #1
 4580 01d4 C7F88430 		str	r3, [r7, #132]
 4581 01d8 02E0     		b	.L233
 4582              	.L237:
2155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
2157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         AbortCplt = 0x00U;
 4583              		.loc 1 2158 19
 4584 01da 0023     		movs	r3, #0
 4585 01dc C7F88430 		str	r3, [r7, #132]
 4586              	.L233:
2159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* if no DMA abort complete callback execution is required => call user Abort Complete callback *
2164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (AbortCplt == 0x01U)
 4587              		.loc 1 2164 6
 4588 01e0 D7F88430 		ldr	r3, [r7, #132]
 4589 01e4 012B     		cmp	r3, #1
 4590 01e6 16D1     		bne	.L238
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 140


2165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reset Tx and Rx transfer counters */
2167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = 0x00U;
 4591              		.loc 1 2167 24
 4592 01e8 7B68     		ldr	r3, [r7, #4]
 4593 01ea 0022     		movs	r2, #0
 4594 01ec DA84     		strh	r2, [r3, #38]	@ movhi
2168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0x00U;
 4595              		.loc 1 2168 24
 4596 01ee 7B68     		ldr	r3, [r7, #4]
 4597 01f0 0022     		movs	r2, #0
 4598 01f2 DA85     		strh	r2, [r3, #46]	@ movhi
2169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reset ErrorCode */
2171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 4599              		.loc 1 2171 22
 4600 01f4 7B68     		ldr	r3, [r7, #4]
 4601 01f6 0022     		movs	r2, #0
 4602 01f8 1A64     		str	r2, [r3, #64]
2172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Restore huart->gState and huart->RxState to Ready */
2174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
 4603              		.loc 1 2174 20
 4604 01fa 7B68     		ldr	r3, [r7, #4]
 4605 01fc 2022     		movs	r2, #32
 4606 01fe 83F83D20 		strb	r2, [r3, #61]
2175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 4607              		.loc 1 2175 20
 4608 0202 7B68     		ldr	r3, [r7, #4]
 4609 0204 2022     		movs	r2, #32
 4610 0206 83F83E20 		strb	r2, [r3, #62]
2176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 4611              		.loc 1 2176 26
 4612 020a 7B68     		ldr	r3, [r7, #4]
 4613 020c 0022     		movs	r2, #0
 4614 020e 1A63     		str	r2, [r3, #48]
2177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call registered Abort complete callback */
2181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->AbortCpltCallback(huart);
2182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call legacy weak Abort complete callback */
2184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_AbortCpltCallback(huart);
 4615              		.loc 1 2184 5
 4616 0210 7868     		ldr	r0, [r7, #4]
 4617 0212 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 4618              	.L238:
2185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 4619              		.loc 1 2188 10
 4620 0216 0023     		movs	r3, #0
2189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4621              		.loc 1 2189 1
 4622 0218 1846     		mov	r0, r3
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 141


 4623 021a 8837     		adds	r7, r7, #136
 4624              	.LCFI118:
 4625              		.cfi_def_cfa_offset 8
 4626 021c BD46     		mov	sp, r7
 4627              	.LCFI119:
 4628              		.cfi_def_cfa_register 13
 4629              		@ sp needed
 4630 021e 80BD     		pop	{r7, pc}
 4631              	.L241:
 4632              		.align	2
 4633              	.L240:
 4634 0220 00000000 		.word	UART_DMATxAbortCallback
 4635 0224 00000000 		.word	UART_DMARxAbortCallback
 4636              		.cfi_endproc
 4637              	.LFE238:
 4639              		.section	.text.HAL_UART_AbortTransmit_IT,"ax",%progbits
 4640              		.align	1
 4641              		.global	HAL_UART_AbortTransmit_IT
 4642              		.syntax unified
 4643              		.thumb
 4644              		.thumb_func
 4645              		.fpu fpv4-sp-d16
 4647              	HAL_UART_AbortTransmit_IT:
 4648              	.LFB239:
2190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (Interrupt mode).
2193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
2195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
2196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
2197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
2200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
2201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit_IT(UART_HandleTypeDef *huart)
2206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 4649              		.loc 1 2206 1
 4650              		.cfi_startproc
 4651              		@ args = 0, pretend = 0, frame = 56
 4652              		@ frame_needed = 1, uses_anonymous_args = 0
 4653 0000 80B5     		push	{r7, lr}
 4654              	.LCFI120:
 4655              		.cfi_def_cfa_offset 8
 4656              		.cfi_offset 7, -8
 4657              		.cfi_offset 14, -4
 4658 0002 8EB0     		sub	sp, sp, #56
 4659              	.LCFI121:
 4660              		.cfi_def_cfa_offset 64
 4661 0004 00AF     		add	r7, sp, #0
 4662              	.LCFI122:
 4663              		.cfi_def_cfa_register 7
 4664 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 142


 4665              	.L245:
 4666              	.LBB469:
2207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
2208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 4667              		.loc 1 2208 3 discriminator 1
 4668 0008 7B68     		ldr	r3, [r7, #4]
 4669 000a 1B68     		ldr	r3, [r3]
 4670 000c 0C33     		adds	r3, r3, #12
 4671 000e 3B62     		str	r3, [r7, #32]
 4672              	.LBB470:
 4673              	.LBB471:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4674              		.loc 2 1072 4 discriminator 1
 4675 0010 3B6A     		ldr	r3, [r7, #32]
 4676              		.syntax unified
 4677              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4678 0012 53E8003F 		ldrex r3, [r3]
 4679              	@ 0 "" 2
 4680              		.thumb
 4681              		.syntax unified
 4682 0016 FB61     		str	r3, [r7, #28]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4683              		.loc 2 1073 10 discriminator 1
 4684 0018 FB69     		ldr	r3, [r7, #28]
 4685              	.LBE471:
 4686              	.LBE470:
 4687              		.loc 1 2208 3 discriminator 1
 4688 001a 23F0C003 		bic	r3, r3, #192
 4689 001e 7B63     		str	r3, [r7, #52]
 4690 0020 7B68     		ldr	r3, [r7, #4]
 4691 0022 1B68     		ldr	r3, [r3]
 4692 0024 0C33     		adds	r3, r3, #12
 4693 0026 7A6B     		ldr	r2, [r7, #52]
 4694 0028 FA62     		str	r2, [r7, #44]
 4695 002a BB62     		str	r3, [r7, #40]
 4696              	.LBB472:
 4697              	.LBB473:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4698              		.loc 2 1123 4 discriminator 1
 4699 002c B96A     		ldr	r1, [r7, #40]
 4700 002e FA6A     		ldr	r2, [r7, #44]
 4701              		.syntax unified
 4702              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4703 0030 41E80023 		strex r3, r2, [r1]
 4704              	@ 0 "" 2
 4705              		.thumb
 4706              		.syntax unified
 4707 0034 7B62     		str	r3, [r7, #36]
 4708              		.loc 2 1124 10 discriminator 1
 4709 0036 7B6A     		ldr	r3, [r7, #36]
 4710              	.LBE473:
 4711              	.LBE472:
 4712              		.loc 1 2208 3 discriminator 1
 4713 0038 002B     		cmp	r3, #0
 4714 003a E5D1     		bne	.L245
 4715              	.LBE469:
2209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 143


2210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
2211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 4716              		.loc 1 2211 7
 4717 003c 7B68     		ldr	r3, [r7, #4]
 4718 003e 1B68     		ldr	r3, [r3]
 4719 0040 5B69     		ldr	r3, [r3, #20]
 4720 0042 03F08003 		and	r3, r3, #128
 4721              		.loc 1 2211 6
 4722 0046 802B     		cmp	r3, #128
 4723 0048 3CD1     		bne	.L246
 4724              	.L249:
 4725              	.LBB474:
2212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 4726              		.loc 1 2213 5 discriminator 1
 4727 004a 7B68     		ldr	r3, [r7, #4]
 4728 004c 1B68     		ldr	r3, [r3]
 4729 004e 1433     		adds	r3, r3, #20
 4730 0050 FB60     		str	r3, [r7, #12]
 4731              	.LBB475:
 4732              	.LBB476:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4733              		.loc 2 1072 4 discriminator 1
 4734 0052 FB68     		ldr	r3, [r7, #12]
 4735              		.syntax unified
 4736              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4737 0054 53E8003F 		ldrex r3, [r3]
 4738              	@ 0 "" 2
 4739              		.thumb
 4740              		.syntax unified
 4741 0058 BB60     		str	r3, [r7, #8]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4742              		.loc 2 1073 10 discriminator 1
 4743 005a BB68     		ldr	r3, [r7, #8]
 4744              	.LBE476:
 4745              	.LBE475:
 4746              		.loc 1 2213 5 discriminator 1
 4747 005c 23F08003 		bic	r3, r3, #128
 4748 0060 3B63     		str	r3, [r7, #48]
 4749 0062 7B68     		ldr	r3, [r7, #4]
 4750 0064 1B68     		ldr	r3, [r3]
 4751 0066 1433     		adds	r3, r3, #20
 4752 0068 3A6B     		ldr	r2, [r7, #48]
 4753 006a BA61     		str	r2, [r7, #24]
 4754 006c 7B61     		str	r3, [r7, #20]
 4755              	.LBB477:
 4756              	.LBB478:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4757              		.loc 2 1123 4 discriminator 1
 4758 006e 7969     		ldr	r1, [r7, #20]
 4759 0070 BA69     		ldr	r2, [r7, #24]
 4760              		.syntax unified
 4761              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4762 0072 41E80023 		strex r3, r2, [r1]
 4763              	@ 0 "" 2
 4764              		.thumb
 4765              		.syntax unified
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 144


 4766 0076 3B61     		str	r3, [r7, #16]
 4767              		.loc 2 1124 10 discriminator 1
 4768 0078 3B69     		ldr	r3, [r7, #16]
 4769              	.LBE478:
 4770              	.LBE477:
 4771              		.loc 1 2213 5 discriminator 1
 4772 007a 002B     		cmp	r3, #0
 4773 007c E5D1     		bne	.L249
 4774              	.LBE474:
2214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx stream : use blocking DMA Abort API (no callback) */
2216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 4775              		.loc 1 2216 14
 4776 007e 7B68     		ldr	r3, [r7, #4]
 4777 0080 5B6B     		ldr	r3, [r3, #52]
 4778              		.loc 1 2216 8
 4779 0082 002B     		cmp	r3, #0
 4780 0084 13D0     		beq	.L250
2217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
2219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxOnlyAbortCallback;
 4781              		.loc 1 2220 12
 4782 0086 7B68     		ldr	r3, [r7, #4]
 4783 0088 5B6B     		ldr	r3, [r3, #52]
 4784              		.loc 1 2220 40
 4785 008a 164A     		ldr	r2, .L253
 4786 008c 1A65     		str	r2, [r3, #80]
2221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Abort DMA TX */
2223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
 4787              		.loc 1 2223 11
 4788 008e 7B68     		ldr	r3, [r7, #4]
 4789 0090 5B6B     		ldr	r3, [r3, #52]
 4790 0092 1846     		mov	r0, r3
 4791 0094 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4792 0098 0346     		mov	r3, r0
 4793              		.loc 1 2223 10
 4794 009a 002B     		cmp	r3, #0
 4795 009c 1CD0     		beq	.L251
2224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Call Directly huart->hdmatx->XferAbortCallback function in case of error */
2226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback(huart->hdmatx);
 4796              		.loc 1 2226 14
 4797 009e 7B68     		ldr	r3, [r7, #4]
 4798 00a0 5B6B     		ldr	r3, [r3, #52]
 4799              		.loc 1 2226 22
 4800 00a2 1B6D     		ldr	r3, [r3, #80]
 4801              		.loc 1 2226 47
 4802 00a4 7A68     		ldr	r2, [r7, #4]
 4803 00a6 526B     		ldr	r2, [r2, #52]
 4804              		.loc 1 2226 9
 4805 00a8 1046     		mov	r0, r2
 4806 00aa 9847     		blx	r3
 4807              	.LVL0:
 4808 00ac 14E0     		b	.L251
 4809              	.L250:
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 145


2227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
2230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Reset Tx transfer counter */
2232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->TxXferCount = 0x00U;
 4810              		.loc 1 2232 26
 4811 00ae 7B68     		ldr	r3, [r7, #4]
 4812 00b0 0022     		movs	r2, #0
 4813 00b2 DA84     		strh	r2, [r3, #38]	@ movhi
2233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Restore huart->gState to Ready */
2235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
 4814              		.loc 1 2235 21
 4815 00b4 7B68     		ldr	r3, [r7, #4]
 4816 00b6 2022     		movs	r2, #32
 4817 00b8 83F83D20 		strb	r2, [r3, #61]
2236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
2238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Call registered Abort Transmit Complete Callback */
2240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->AbortTransmitCpltCallback(huart);
2241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Call legacy weak Abort Transmit Complete Callback */
2243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_UART_AbortTransmitCpltCallback(huart);
 4818              		.loc 1 2243 7
 4819 00bc 7868     		ldr	r0, [r7, #4]
 4820 00be FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 4821 00c2 09E0     		b	.L251
 4822              	.L246:
2244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
2248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reset Tx transfer counter */
2250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = 0x00U;
 4823              		.loc 1 2250 24
 4824 00c4 7B68     		ldr	r3, [r7, #4]
 4825 00c6 0022     		movs	r2, #0
 4826 00c8 DA84     		strh	r2, [r3, #38]	@ movhi
2251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Restore huart->gState to Ready */
2253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 4827              		.loc 1 2253 19
 4828 00ca 7B68     		ldr	r3, [r7, #4]
 4829 00cc 2022     		movs	r2, #32
 4830 00ce 83F83D20 		strb	r2, [r3, #61]
2254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call registered Abort Transmit Complete Callback */
2258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->AbortTransmitCpltCallback(huart);
2259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call legacy weak Abort Transmit Complete Callback */
2261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_AbortTransmitCpltCallback(huart);
 4831              		.loc 1 2261 5
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 146


 4832 00d2 7868     		ldr	r0, [r7, #4]
 4833 00d4 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 4834              	.L251:
2262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 4835              		.loc 1 2265 10
 4836 00d8 0023     		movs	r3, #0
2266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4837              		.loc 1 2266 1
 4838 00da 1846     		mov	r0, r3
 4839 00dc 3837     		adds	r7, r7, #56
 4840              	.LCFI123:
 4841              		.cfi_def_cfa_offset 8
 4842 00de BD46     		mov	sp, r7
 4843              	.LCFI124:
 4844              		.cfi_def_cfa_register 13
 4845              		@ sp needed
 4846 00e0 80BD     		pop	{r7, pc}
 4847              	.L254:
 4848 00e2 00BF     		.align	2
 4849              	.L253:
 4850 00e4 00000000 		.word	UART_DMATxOnlyAbortCallback
 4851              		.cfi_endproc
 4852              	.LFE239:
 4854              		.section	.text.HAL_UART_AbortReceive_IT,"ax",%progbits
 4855              		.align	1
 4856              		.global	HAL_UART_AbortReceive_IT
 4857              		.syntax unified
 4858              		.thumb
 4859              		.thumb_func
 4860              		.fpu fpv4-sp-d16
 4862              	HAL_UART_AbortReceive_IT:
 4863              	.LFB240:
2267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (Interrupt mode).
2270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
2272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
2273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
2274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
2277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
2278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive_IT(UART_HandleTypeDef *huart)
2283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 4864              		.loc 1 2283 1
 4865              		.cfi_startproc
 4866              		@ args = 0, pretend = 0, frame = 104
 4867              		@ frame_needed = 1, uses_anonymous_args = 0
 4868 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 147


 4869              	.LCFI125:
 4870              		.cfi_def_cfa_offset 8
 4871              		.cfi_offset 7, -8
 4872              		.cfi_offset 14, -4
 4873 0002 9AB0     		sub	sp, sp, #104
 4874              	.LCFI126:
 4875              		.cfi_def_cfa_offset 112
 4876 0004 00AF     		add	r7, sp, #0
 4877              	.LCFI127:
 4878              		.cfi_def_cfa_register 7
 4879 0006 7860     		str	r0, [r7, #4]
 4880              	.L258:
 4881              	.LBB479:
2284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 4882              		.loc 1 2285 3 discriminator 1
 4883 0008 7B68     		ldr	r3, [r7, #4]
 4884 000a 1B68     		ldr	r3, [r3]
 4885 000c 0C33     		adds	r3, r3, #12
 4886 000e BB64     		str	r3, [r7, #72]
 4887              	.LBB480:
 4888              	.LBB481:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4889              		.loc 2 1072 4 discriminator 1
 4890 0010 BB6C     		ldr	r3, [r7, #72]
 4891              		.syntax unified
 4892              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4893 0012 53E8003F 		ldrex r3, [r3]
 4894              	@ 0 "" 2
 4895              		.thumb
 4896              		.syntax unified
 4897 0016 7B64     		str	r3, [r7, #68]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4898              		.loc 2 1073 10 discriminator 1
 4899 0018 7B6C     		ldr	r3, [r7, #68]
 4900              	.LBE481:
 4901              	.LBE480:
 4902              		.loc 1 2285 3 discriminator 1
 4903 001a 23F49073 		bic	r3, r3, #288
 4904 001e 7B66     		str	r3, [r7, #100]
 4905 0020 7B68     		ldr	r3, [r7, #4]
 4906 0022 1B68     		ldr	r3, [r3]
 4907 0024 0C33     		adds	r3, r3, #12
 4908 0026 7A6E     		ldr	r2, [r7, #100]
 4909 0028 7A65     		str	r2, [r7, #84]
 4910 002a 3B65     		str	r3, [r7, #80]
 4911              	.LBB482:
 4912              	.LBB483:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4913              		.loc 2 1123 4 discriminator 1
 4914 002c 396D     		ldr	r1, [r7, #80]
 4915 002e 7A6D     		ldr	r2, [r7, #84]
 4916              		.syntax unified
 4917              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4918 0030 41E80023 		strex r3, r2, [r1]
 4919              	@ 0 "" 2
 4920              		.thumb
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 148


 4921              		.syntax unified
 4922 0034 FB64     		str	r3, [r7, #76]
 4923              		.loc 2 1124 10 discriminator 1
 4924 0036 FB6C     		ldr	r3, [r7, #76]
 4925              	.LBE483:
 4926              	.LBE482:
 4927              		.loc 1 2285 3 discriminator 1
 4928 0038 002B     		cmp	r3, #0
 4929 003a E5D1     		bne	.L258
 4930              	.L261:
 4931              	.LBE479:
 4932              	.LBB484:
2286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 4933              		.loc 1 2286 3 discriminator 1
 4934 003c 7B68     		ldr	r3, [r7, #4]
 4935 003e 1B68     		ldr	r3, [r3]
 4936 0040 1433     		adds	r3, r3, #20
 4937 0042 7B63     		str	r3, [r7, #52]
 4938              	.LBB485:
 4939              	.LBB486:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4940              		.loc 2 1072 4 discriminator 1
 4941 0044 7B6B     		ldr	r3, [r7, #52]
 4942              		.syntax unified
 4943              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4944 0046 53E8003F 		ldrex r3, [r3]
 4945              	@ 0 "" 2
 4946              		.thumb
 4947              		.syntax unified
 4948 004a 3B63     		str	r3, [r7, #48]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4949              		.loc 2 1073 10 discriminator 1
 4950 004c 3B6B     		ldr	r3, [r7, #48]
 4951              	.LBE486:
 4952              	.LBE485:
 4953              		.loc 1 2286 3 discriminator 1
 4954 004e 23F00103 		bic	r3, r3, #1
 4955 0052 3B66     		str	r3, [r7, #96]
 4956 0054 7B68     		ldr	r3, [r7, #4]
 4957 0056 1B68     		ldr	r3, [r3]
 4958 0058 1433     		adds	r3, r3, #20
 4959 005a 3A6E     		ldr	r2, [r7, #96]
 4960 005c 3A64     		str	r2, [r7, #64]
 4961 005e FB63     		str	r3, [r7, #60]
 4962              	.LBB487:
 4963              	.LBB488:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4964              		.loc 2 1123 4 discriminator 1
 4965 0060 F96B     		ldr	r1, [r7, #60]
 4966 0062 3A6C     		ldr	r2, [r7, #64]
 4967              		.syntax unified
 4968              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4969 0064 41E80023 		strex r3, r2, [r1]
 4970              	@ 0 "" 2
 4971              		.thumb
 4972              		.syntax unified
 4973 0068 BB63     		str	r3, [r7, #56]
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 149


 4974              		.loc 2 1124 10 discriminator 1
 4975 006a BB6B     		ldr	r3, [r7, #56]
 4976              	.LBE488:
 4977              	.LBE487:
 4978              		.loc 1 2286 3 discriminator 1
 4979 006c 002B     		cmp	r3, #0
 4980 006e E5D1     		bne	.L261
 4981              	.LBE484:
2287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* If Reception till IDLE event was ongoing, disable IDLEIE interrupt */
2289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 4982              		.loc 1 2289 12
 4983 0070 7B68     		ldr	r3, [r7, #4]
 4984 0072 1B6B     		ldr	r3, [r3, #48]
 4985              		.loc 1 2289 6
 4986 0074 012B     		cmp	r3, #1
 4987 0076 19D1     		bne	.L262
 4988              	.L265:
 4989              	.LBB489:
2290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
 4990              		.loc 1 2291 5 discriminator 1
 4991 0078 7B68     		ldr	r3, [r7, #4]
 4992 007a 1B68     		ldr	r3, [r3]
 4993 007c 0C33     		adds	r3, r3, #12
 4994 007e 3B62     		str	r3, [r7, #32]
 4995              	.LBB490:
 4996              	.LBB491:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4997              		.loc 2 1072 4 discriminator 1
 4998 0080 3B6A     		ldr	r3, [r7, #32]
 4999              		.syntax unified
 5000              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5001 0082 53E8003F 		ldrex r3, [r3]
 5002              	@ 0 "" 2
 5003              		.thumb
 5004              		.syntax unified
 5005 0086 FB61     		str	r3, [r7, #28]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5006              		.loc 2 1073 10 discriminator 1
 5007 0088 FB69     		ldr	r3, [r7, #28]
 5008              	.LBE491:
 5009              	.LBE490:
 5010              		.loc 1 2291 5 discriminator 1
 5011 008a 23F01003 		bic	r3, r3, #16
 5012 008e FB65     		str	r3, [r7, #92]
 5013 0090 7B68     		ldr	r3, [r7, #4]
 5014 0092 1B68     		ldr	r3, [r3]
 5015 0094 0C33     		adds	r3, r3, #12
 5016 0096 FA6D     		ldr	r2, [r7, #92]
 5017 0098 FA62     		str	r2, [r7, #44]
 5018 009a BB62     		str	r3, [r7, #40]
 5019              	.LBB492:
 5020              	.LBB493:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5021              		.loc 2 1123 4 discriminator 1
 5022 009c B96A     		ldr	r1, [r7, #40]
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 150


 5023 009e FA6A     		ldr	r2, [r7, #44]
 5024              		.syntax unified
 5025              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5026 00a0 41E80023 		strex r3, r2, [r1]
 5027              	@ 0 "" 2
 5028              		.thumb
 5029              		.syntax unified
 5030 00a4 7B62     		str	r3, [r7, #36]
 5031              		.loc 2 1124 10 discriminator 1
 5032 00a6 7B6A     		ldr	r3, [r7, #36]
 5033              	.LBE493:
 5034              	.LBE492:
 5035              		.loc 1 2291 5 discriminator 1
 5036 00a8 002B     		cmp	r3, #0
 5037 00aa E5D1     		bne	.L265
 5038              	.L262:
 5039              	.LBE489:
2292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
2295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 5040              		.loc 1 2295 7
 5041 00ac 7B68     		ldr	r3, [r7, #4]
 5042 00ae 1B68     		ldr	r3, [r3]
 5043 00b0 5B69     		ldr	r3, [r3, #20]
 5044 00b2 03F04003 		and	r3, r3, #64
 5045              		.loc 1 2295 6
 5046 00b6 402B     		cmp	r3, #64
 5047 00b8 3FD1     		bne	.L266
 5048              	.L269:
 5049              	.LBB494:
2296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 5050              		.loc 1 2297 5 discriminator 1
 5051 00ba 7B68     		ldr	r3, [r7, #4]
 5052 00bc 1B68     		ldr	r3, [r3]
 5053 00be 1433     		adds	r3, r3, #20
 5054 00c0 FB60     		str	r3, [r7, #12]
 5055              	.LBB495:
 5056              	.LBB496:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5057              		.loc 2 1072 4 discriminator 1
 5058 00c2 FB68     		ldr	r3, [r7, #12]
 5059              		.syntax unified
 5060              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5061 00c4 53E8003F 		ldrex r3, [r3]
 5062              	@ 0 "" 2
 5063              		.thumb
 5064              		.syntax unified
 5065 00c8 BB60     		str	r3, [r7, #8]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5066              		.loc 2 1073 10 discriminator 1
 5067 00ca BB68     		ldr	r3, [r7, #8]
 5068              	.LBE496:
 5069              	.LBE495:
 5070              		.loc 1 2297 5 discriminator 1
 5071 00cc 23F04003 		bic	r3, r3, #64
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 151


 5072 00d0 BB65     		str	r3, [r7, #88]
 5073 00d2 7B68     		ldr	r3, [r7, #4]
 5074 00d4 1B68     		ldr	r3, [r3]
 5075 00d6 1433     		adds	r3, r3, #20
 5076 00d8 BA6D     		ldr	r2, [r7, #88]
 5077 00da BA61     		str	r2, [r7, #24]
 5078 00dc 7B61     		str	r3, [r7, #20]
 5079              	.LBB497:
 5080              	.LBB498:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5081              		.loc 2 1123 4 discriminator 1
 5082 00de 7969     		ldr	r1, [r7, #20]
 5083 00e0 BA69     		ldr	r2, [r7, #24]
 5084              		.syntax unified
 5085              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5086 00e2 41E80023 		strex r3, r2, [r1]
 5087              	@ 0 "" 2
 5088              		.thumb
 5089              		.syntax unified
 5090 00e6 3B61     		str	r3, [r7, #16]
 5091              		.loc 2 1124 10 discriminator 1
 5092 00e8 3B69     		ldr	r3, [r7, #16]
 5093              	.LBE498:
 5094              	.LBE497:
 5095              		.loc 1 2297 5 discriminator 1
 5096 00ea 002B     		cmp	r3, #0
 5097 00ec E5D1     		bne	.L269
 5098              	.LBE494:
2298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx stream : use blocking DMA Abort API (no callback) */
2300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 5099              		.loc 1 2300 14
 5100 00ee 7B68     		ldr	r3, [r7, #4]
 5101 00f0 9B6B     		ldr	r3, [r3, #56]
 5102              		.loc 1 2300 8
 5103 00f2 002B     		cmp	r3, #0
 5104 00f4 13D0     		beq	.L270
2301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
2303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxOnlyAbortCallback;
 5105              		.loc 1 2304 12
 5106 00f6 7B68     		ldr	r3, [r7, #4]
 5107 00f8 9B6B     		ldr	r3, [r3, #56]
 5108              		.loc 1 2304 40
 5109 00fa 194A     		ldr	r2, .L273
 5110 00fc 1A65     		str	r2, [r3, #80]
2305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Abort DMA RX */
2307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 5111              		.loc 1 2307 11
 5112 00fe 7B68     		ldr	r3, [r7, #4]
 5113 0100 9B6B     		ldr	r3, [r3, #56]
 5114 0102 1846     		mov	r0, r3
 5115 0104 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 5116 0108 0346     		mov	r3, r0
 5117              		.loc 1 2307 10
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 152


 5118 010a 002B     		cmp	r3, #0
 5119 010c 22D0     		beq	.L271
2308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
2310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback(huart->hdmarx);
 5120              		.loc 1 2310 14
 5121 010e 7B68     		ldr	r3, [r7, #4]
 5122 0110 9B6B     		ldr	r3, [r3, #56]
 5123              		.loc 1 2310 22
 5124 0112 1B6D     		ldr	r3, [r3, #80]
 5125              		.loc 1 2310 47
 5126 0114 7A68     		ldr	r2, [r7, #4]
 5127 0116 926B     		ldr	r2, [r2, #56]
 5128              		.loc 1 2310 9
 5129 0118 1046     		mov	r0, r2
 5130 011a 9847     		blx	r3
 5131              	.LVL1:
 5132 011c 1AE0     		b	.L271
 5133              	.L270:
2311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
2314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Reset Rx transfer counter */
2316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->RxXferCount = 0x00U;
 5134              		.loc 1 2316 26
 5135 011e 7B68     		ldr	r3, [r7, #4]
 5136 0120 0022     		movs	r2, #0
 5137 0122 DA85     		strh	r2, [r3, #46]	@ movhi
2317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Restore huart->RxState to Ready */
2319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 5138              		.loc 1 2319 22
 5139 0124 7B68     		ldr	r3, [r7, #4]
 5140 0126 2022     		movs	r2, #32
 5141 0128 83F83E20 		strb	r2, [r3, #62]
2320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 5142              		.loc 1 2320 28
 5143 012c 7B68     		ldr	r3, [r7, #4]
 5144 012e 0022     		movs	r2, #0
 5145 0130 1A63     		str	r2, [r3, #48]
2321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
2323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Call registered Abort Receive Complete Callback */
2325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->AbortReceiveCpltCallback(huart);
2326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Call legacy weak Abort Receive Complete Callback */
2328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_UART_AbortReceiveCpltCallback(huart);
 5146              		.loc 1 2328 7
 5147 0132 7868     		ldr	r0, [r7, #4]
 5148 0134 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 5149 0138 0CE0     		b	.L271
 5150              	.L266:
2329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 153


2332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
2333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reset Rx transfer counter */
2335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0x00U;
 5151              		.loc 1 2335 24
 5152 013a 7B68     		ldr	r3, [r7, #4]
 5153 013c 0022     		movs	r2, #0
 5154 013e DA85     		strh	r2, [r3, #46]	@ movhi
2336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Restore huart->RxState to Ready */
2338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 5155              		.loc 1 2338 20
 5156 0140 7B68     		ldr	r3, [r7, #4]
 5157 0142 2022     		movs	r2, #32
 5158 0144 83F83E20 		strb	r2, [r3, #62]
2339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 5159              		.loc 1 2339 26
 5160 0148 7B68     		ldr	r3, [r7, #4]
 5161 014a 0022     		movs	r2, #0
 5162 014c 1A63     		str	r2, [r3, #48]
2340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call registered Abort Receive Complete Callback */
2344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->AbortReceiveCpltCallback(huart);
2345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call legacy weak Abort Receive Complete Callback */
2347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_AbortReceiveCpltCallback(huart);
 5163              		.loc 1 2347 5
 5164 014e 7868     		ldr	r0, [r7, #4]
 5165 0150 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 5166              	.L271:
2348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 5167              		.loc 1 2351 10
 5168 0154 0023     		movs	r3, #0
2352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 5169              		.loc 1 2352 1
 5170 0156 1846     		mov	r0, r3
 5171 0158 6837     		adds	r7, r7, #104
 5172              	.LCFI128:
 5173              		.cfi_def_cfa_offset 8
 5174 015a BD46     		mov	sp, r7
 5175              	.LCFI129:
 5176              		.cfi_def_cfa_register 13
 5177              		@ sp needed
 5178 015c 80BD     		pop	{r7, pc}
 5179              	.L274:
 5180 015e 00BF     		.align	2
 5181              	.L273:
 5182 0160 00000000 		.word	UART_DMARxOnlyAbortCallback
 5183              		.cfi_endproc
 5184              	.LFE240:
 5186              		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 5187              		.align	1
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 154


 5188              		.global	HAL_UART_IRQHandler
 5189              		.syntax unified
 5190              		.thumb
 5191              		.thumb_func
 5192              		.fpu fpv4-sp-d16
 5194              	HAL_UART_IRQHandler:
 5195              	.LFB241:
2353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  This function handles UART interrupt request.
2356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
2361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 5196              		.loc 1 2361 1
 5197              		.cfi_startproc
 5198              		@ args = 0, pretend = 0, frame = 232
 5199              		@ frame_needed = 1, uses_anonymous_args = 0
 5200 0000 80B5     		push	{r7, lr}
 5201              	.LCFI130:
 5202              		.cfi_def_cfa_offset 8
 5203              		.cfi_offset 7, -8
 5204              		.cfi_offset 14, -4
 5205 0002 BAB0     		sub	sp, sp, #232
 5206              	.LCFI131:
 5207              		.cfi_def_cfa_offset 240
 5208 0004 00AF     		add	r7, sp, #0
 5209              	.LCFI132:
 5210              		.cfi_def_cfa_register 7
 5211 0006 7860     		str	r0, [r7, #4]
2362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->SR);
 5212              		.loc 1 2362 25
 5213 0008 7B68     		ldr	r3, [r7, #4]
 5214 000a 1B68     		ldr	r3, [r3]
 5215              		.loc 1 2362 12
 5216 000c 1B68     		ldr	r3, [r3]
 5217 000e C7F8E430 		str	r3, [r7, #228]
2363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 5218              		.loc 1 2363 25
 5219 0012 7B68     		ldr	r3, [r7, #4]
 5220 0014 1B68     		ldr	r3, [r3]
 5221              		.loc 1 2363 12
 5222 0016 DB68     		ldr	r3, [r3, #12]
 5223 0018 C7F8E030 		str	r3, [r7, #224]
2364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 5224              		.loc 1 2364 25
 5225 001c 7B68     		ldr	r3, [r7, #4]
 5226 001e 1B68     		ldr	r3, [r3]
 5227              		.loc 1 2364 12
 5228 0020 5B69     		ldr	r3, [r3, #20]
 5229 0022 C7F8DC30 		str	r3, [r7, #220]
2365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t errorflags = 0x00U;
 5230              		.loc 1 2365 12
 5231 0026 0023     		movs	r3, #0
 5232 0028 C7F8D830 		str	r3, [r7, #216]
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 155


2366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 5233              		.loc 1 2366 12
 5234 002c 0023     		movs	r3, #0
 5235 002e C7F8D430 		str	r3, [r7, #212]
2367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* If no error occurs */
2369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   errorflags = (isrflags & (uint32_t)(USART_SR_PE | USART_SR_FE | USART_SR_ORE | USART_SR_NE));
 5236              		.loc 1 2369 14
 5237 0032 D7F8E430 		ldr	r3, [r7, #228]
 5238 0036 03F00F03 		and	r3, r3, #15
 5239 003a C7F8D830 		str	r3, [r7, #216]
2370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (errorflags == RESET)
 5240              		.loc 1 2370 6
 5241 003e D7F8D830 		ldr	r3, [r7, #216]
 5242 0042 002B     		cmp	r3, #0
 5243 0044 0FD1     		bne	.L276
2371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART in mode Receiver -------------------------------------------------*/
2373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 5244              		.loc 1 2373 20
 5245 0046 D7F8E430 		ldr	r3, [r7, #228]
 5246 004a 03F02003 		and	r3, r3, #32
 5247              		.loc 1 2373 8
 5248 004e 002B     		cmp	r3, #0
 5249 0050 09D0     		beq	.L276
 5250              		.loc 1 2373 59 discriminator 1
 5251 0052 D7F8E030 		ldr	r3, [r7, #224]
 5252 0056 03F02003 		and	r3, r3, #32
 5253              		.loc 1 2373 47 discriminator 1
 5254 005a 002B     		cmp	r3, #0
 5255 005c 03D0     		beq	.L276
2374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       UART_Receive_IT(huart);
 5256              		.loc 1 2375 7
 5257 005e 7868     		ldr	r0, [r7, #4]
 5258 0060 FFF7FEFF 		bl	UART_Receive_IT
2376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return;
 5259              		.loc 1 2376 7
 5260 0064 56E2     		b	.L275
 5261              	.L276:
2377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* If some errors occur */
2381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((errorflags != RESET) && (((cr3its & USART_CR3_EIE) != RESET)
 5262              		.loc 1 2381 6
 5263 0066 D7F8D830 		ldr	r3, [r7, #216]
 5264 006a 002B     		cmp	r3, #0
 5265 006c 00F0DE80 		beq	.L278
 5266              		.loc 1 2381 42 discriminator 1
 5267 0070 D7F8DC30 		ldr	r3, [r7, #220]
 5268 0074 03F00103 		and	r3, r3, #1
 5269              		.loc 1 2381 29 discriminator 1
 5270 0078 002B     		cmp	r3, #0
 5271 007a 06D1     		bne	.L279
2382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                                 || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != RESET)))
 5272              		.loc 1 2382 45
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 156


 5273 007c D7F8E030 		ldr	r3, [r7, #224]
 5274 0080 03F49073 		and	r3, r3, #288
 5275              		.loc 1 2382 33
 5276 0084 002B     		cmp	r3, #0
 5277 0086 00F0D180 		beq	.L278
 5278              	.L279:
2383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART parity error interrupt occurred ----------------------------------*/
2385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (((isrflags & USART_SR_PE) != RESET) && ((cr1its & USART_CR1_PEIE) != RESET))
 5279              		.loc 1 2385 20
 5280 008a D7F8E430 		ldr	r3, [r7, #228]
 5281 008e 03F00103 		and	r3, r3, #1
 5282              		.loc 1 2385 8
 5283 0092 002B     		cmp	r3, #0
 5284 0094 0BD0     		beq	.L280
 5285              		.loc 1 2385 57 discriminator 1
 5286 0096 D7F8E030 		ldr	r3, [r7, #224]
 5287 009a 03F48073 		and	r3, r3, #256
 5288              		.loc 1 2385 45 discriminator 1
 5289 009e 002B     		cmp	r3, #0
 5290 00a0 05D0     		beq	.L280
2386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_PE;
 5291              		.loc 1 2387 24
 5292 00a2 7B68     		ldr	r3, [r7, #4]
 5293 00a4 1B6C     		ldr	r3, [r3, #64]
 5294 00a6 43F00102 		orr	r2, r3, #1
 5295 00aa 7B68     		ldr	r3, [r7, #4]
 5296 00ac 1A64     		str	r2, [r3, #64]
 5297              	.L280:
2388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART noise error interrupt occurred -----------------------------------*/
2391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (((isrflags & USART_SR_NE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 5298              		.loc 1 2391 20
 5299 00ae D7F8E430 		ldr	r3, [r7, #228]
 5300 00b2 03F00403 		and	r3, r3, #4
 5301              		.loc 1 2391 8
 5302 00b6 002B     		cmp	r3, #0
 5303 00b8 0BD0     		beq	.L281
 5304              		.loc 1 2391 57 discriminator 1
 5305 00ba D7F8DC30 		ldr	r3, [r7, #220]
 5306 00be 03F00103 		and	r3, r3, #1
 5307              		.loc 1 2391 45 discriminator 1
 5308 00c2 002B     		cmp	r3, #0
 5309 00c4 05D0     		beq	.L281
2392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_NE;
 5310              		.loc 1 2393 24
 5311 00c6 7B68     		ldr	r3, [r7, #4]
 5312 00c8 1B6C     		ldr	r3, [r3, #64]
 5313 00ca 43F00202 		orr	r2, r3, #2
 5314 00ce 7B68     		ldr	r3, [r7, #4]
 5315 00d0 1A64     		str	r2, [r3, #64]
 5316              	.L281:
2394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 157


2396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART frame error interrupt occurred -----------------------------------*/
2397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (((isrflags & USART_SR_FE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 5317              		.loc 1 2397 20
 5318 00d2 D7F8E430 		ldr	r3, [r7, #228]
 5319 00d6 03F00203 		and	r3, r3, #2
 5320              		.loc 1 2397 8
 5321 00da 002B     		cmp	r3, #0
 5322 00dc 0BD0     		beq	.L282
 5323              		.loc 1 2397 57 discriminator 1
 5324 00de D7F8DC30 		ldr	r3, [r7, #220]
 5325 00e2 03F00103 		and	r3, r3, #1
 5326              		.loc 1 2397 45 discriminator 1
 5327 00e6 002B     		cmp	r3, #0
 5328 00e8 05D0     		beq	.L282
2398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_FE;
 5329              		.loc 1 2399 24
 5330 00ea 7B68     		ldr	r3, [r7, #4]
 5331 00ec 1B6C     		ldr	r3, [r3, #64]
 5332 00ee 43F00402 		orr	r2, r3, #4
 5333 00f2 7B68     		ldr	r3, [r7, #4]
 5334 00f4 1A64     		str	r2, [r3, #64]
 5335              	.L282:
2400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART Over-Run interrupt occurred --------------------------------------*/
2403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (((isrflags & USART_SR_ORE) != RESET) && (((cr1its & USART_CR1_RXNEIE) != RESET)
 5336              		.loc 1 2403 20
 5337 00f6 D7F8E430 		ldr	r3, [r7, #228]
 5338 00fa 03F00803 		and	r3, r3, #8
 5339              		.loc 1 2403 8
 5340 00fe 002B     		cmp	r3, #0
 5341 0100 11D0     		beq	.L283
 5342              		.loc 1 2403 59 discriminator 1
 5343 0102 D7F8E030 		ldr	r3, [r7, #224]
 5344 0106 03F02003 		and	r3, r3, #32
 5345              		.loc 1 2403 46 discriminator 1
 5346 010a 002B     		cmp	r3, #0
 5347 010c 05D1     		bne	.L284
2404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                                                  || ((cr3its & USART_CR3_EIE) != RESET)))
 5348              		.loc 1 2404 62
 5349 010e D7F8DC30 		ldr	r3, [r7, #220]
 5350 0112 03F00103 		and	r3, r3, #1
 5351              		.loc 1 2404 50
 5352 0116 002B     		cmp	r3, #0
 5353 0118 05D0     		beq	.L283
 5354              	.L284:
2405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_ORE;
 5355              		.loc 1 2406 24
 5356 011a 7B68     		ldr	r3, [r7, #4]
 5357 011c 1B6C     		ldr	r3, [r3, #64]
 5358 011e 43F00802 		orr	r2, r3, #8
 5359 0122 7B68     		ldr	r3, [r7, #4]
 5360 0124 1A64     		str	r2, [r3, #64]
 5361              	.L283:
2407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 158


2408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call UART Error Call back function if need be --------------------------*/
2410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->ErrorCode != HAL_UART_ERROR_NONE)
 5362              		.loc 1 2410 14
 5363 0126 7B68     		ldr	r3, [r7, #4]
 5364 0128 1B6C     		ldr	r3, [r3, #64]
 5365              		.loc 1 2410 8
 5366 012a 002B     		cmp	r3, #0
 5367 012c 00F0ED81 		beq	.L322
2411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* UART in mode Receiver -----------------------------------------------*/
2413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 5368              		.loc 1 2413 22
 5369 0130 D7F8E430 		ldr	r3, [r7, #228]
 5370 0134 03F02003 		and	r3, r3, #32
 5371              		.loc 1 2413 10
 5372 0138 002B     		cmp	r3, #0
 5373 013a 08D0     		beq	.L286
 5374              		.loc 1 2413 61 discriminator 1
 5375 013c D7F8E030 		ldr	r3, [r7, #224]
 5376 0140 03F02003 		and	r3, r3, #32
 5377              		.loc 1 2413 49 discriminator 1
 5378 0144 002B     		cmp	r3, #0
 5379 0146 02D0     		beq	.L286
2414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         UART_Receive_IT(huart);
 5380              		.loc 1 2415 9
 5381 0148 7868     		ldr	r0, [r7, #4]
 5382 014a FFF7FEFF 		bl	UART_Receive_IT
 5383              	.L286:
2416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* If Overrun error occurs, or if any error occurs in DMA mode reception,
2419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          consider error as blocking */
2420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 5384              		.loc 1 2420 20
 5385 014e 7B68     		ldr	r3, [r7, #4]
 5386 0150 1B68     		ldr	r3, [r3]
 5387 0152 5B69     		ldr	r3, [r3, #20]
 5388 0154 03F04003 		and	r3, r3, #64
 5389 0158 402B     		cmp	r3, #64
 5390 015a 0CBF     		ite	eq
 5391 015c 0123     		moveq	r3, #1
 5392 015e 0023     		movne	r3, #0
 5393 0160 DBB2     		uxtb	r3, r3
 5394              		.loc 1 2420 18
 5395 0162 C7F8D430 		str	r3, [r7, #212]
2421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) || dmarequest)
 5396              		.loc 1 2421 18
 5397 0166 7B68     		ldr	r3, [r7, #4]
 5398 0168 1B6C     		ldr	r3, [r3, #64]
 5399              		.loc 1 2421 30
 5400 016a 03F00803 		and	r3, r3, #8
 5401              		.loc 1 2421 10
 5402 016e 002B     		cmp	r3, #0
 5403 0170 03D1     		bne	.L287
 5404              		.loc 1 2421 62 discriminator 1
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 159


 5405 0172 D7F8D430 		ldr	r3, [r7, #212]
 5406 0176 002B     		cmp	r3, #0
 5407 0178 4FD0     		beq	.L288
 5408              	.L287:
2422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Blocking error : transfer is aborted
2424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Set the UART state ready to be able to start again the process,
2425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
2426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         UART_EndRxTransfer(huart);
 5409              		.loc 1 2426 9
 5410 017a 7868     		ldr	r0, [r7, #4]
 5411 017c FFF7FEFF 		bl	UART_EndRxTransfer
2427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Disable the UART DMA Rx request if enabled */
2429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 5412              		.loc 1 2429 13
 5413 0180 7B68     		ldr	r3, [r7, #4]
 5414 0182 1B68     		ldr	r3, [r3]
 5415 0184 5B69     		ldr	r3, [r3, #20]
 5416 0186 03F04003 		and	r3, r3, #64
 5417              		.loc 1 2429 12
 5418 018a 402B     		cmp	r3, #64
 5419 018c 41D1     		bne	.L289
 5420              	.L292:
 5421              	.LBB499:
2430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
2431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 5422              		.loc 1 2431 11 discriminator 1
 5423 018e 7B68     		ldr	r3, [r7, #4]
 5424 0190 1B68     		ldr	r3, [r3]
 5425 0192 1433     		adds	r3, r3, #20
 5426 0194 C7F89C30 		str	r3, [r7, #156]
 5427              	.LBB500:
 5428              	.LBB501:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5429              		.loc 2 1072 4 discriminator 1
 5430 0198 D7F89C30 		ldr	r3, [r7, #156]
 5431              		.syntax unified
 5432              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5433 019c 53E8003F 		ldrex r3, [r3]
 5434              	@ 0 "" 2
 5435              		.thumb
 5436              		.syntax unified
 5437 01a0 C7F89830 		str	r3, [r7, #152]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5438              		.loc 2 1073 10 discriminator 1
 5439 01a4 D7F89830 		ldr	r3, [r7, #152]
 5440              	.LBE501:
 5441              	.LBE500:
 5442              		.loc 1 2431 11 discriminator 1
 5443 01a8 23F04003 		bic	r3, r3, #64
 5444 01ac C7F8D030 		str	r3, [r7, #208]
 5445 01b0 7B68     		ldr	r3, [r7, #4]
 5446 01b2 1B68     		ldr	r3, [r3]
 5447 01b4 1433     		adds	r3, r3, #20
 5448 01b6 D7F8D020 		ldr	r2, [r7, #208]
 5449 01ba C7F8A820 		str	r2, [r7, #168]
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 160


 5450 01be C7F8A430 		str	r3, [r7, #164]
 5451              	.LBB502:
 5452              	.LBB503:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5453              		.loc 2 1123 4 discriminator 1
 5454 01c2 D7F8A410 		ldr	r1, [r7, #164]
 5455 01c6 D7F8A820 		ldr	r2, [r7, #168]
 5456              		.syntax unified
 5457              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5458 01ca 41E80023 		strex r3, r2, [r1]
 5459              	@ 0 "" 2
 5460              		.thumb
 5461              		.syntax unified
 5462 01ce C7F8A030 		str	r3, [r7, #160]
 5463              		.loc 2 1124 10 discriminator 1
 5464 01d2 D7F8A030 		ldr	r3, [r7, #160]
 5465              	.LBE503:
 5466              	.LBE502:
 5467              		.loc 1 2431 11 discriminator 1
 5468 01d6 002B     		cmp	r3, #0
 5469 01d8 D9D1     		bne	.L292
 5470              	.LBE499:
2432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Abort the UART DMA Rx stream */
2434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           if (huart->hdmarx != NULL)
 5471              		.loc 1 2434 20
 5472 01da 7B68     		ldr	r3, [r7, #4]
 5473 01dc 9B6B     		ldr	r3, [r3, #56]
 5474              		.loc 1 2434 14
 5475 01de 002B     		cmp	r3, #0
 5476 01e0 13D0     		beq	.L293
2435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           {
2436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             /* Set the UART DMA Abort callback :
2437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
2438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
 5477              		.loc 1 2438 18
 5478 01e2 7B68     		ldr	r3, [r7, #4]
 5479 01e4 9B6B     		ldr	r3, [r3, #56]
 5480              		.loc 1 2438 46
 5481 01e6 7D4A     		ldr	r2, .L326
 5482 01e8 1A65     		str	r2, [r3, #80]
2439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 5483              		.loc 1 2439 17
 5484 01ea 7B68     		ldr	r3, [r7, #4]
 5485 01ec 9B6B     		ldr	r3, [r3, #56]
 5486 01ee 1846     		mov	r0, r3
 5487 01f0 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 5488 01f4 0346     		mov	r3, r0
 5489              		.loc 1 2439 16
 5490 01f6 002B     		cmp	r3, #0
 5491 01f8 16D0     		beq	.L323
2440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             {
2441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****               /* Call Directly XferAbortCallback function in case of error */
2442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****               huart->hdmarx->XferAbortCallback(huart->hdmarx);
 5492              		.loc 1 2442 20
 5493 01fa 7B68     		ldr	r3, [r7, #4]
 5494 01fc 9B6B     		ldr	r3, [r3, #56]
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 161


 5495              		.loc 1 2442 28
 5496 01fe 1B6D     		ldr	r3, [r3, #80]
 5497              		.loc 1 2442 53
 5498 0200 7A68     		ldr	r2, [r7, #4]
 5499 0202 926B     		ldr	r2, [r2, #56]
 5500              		.loc 1 2442 15
 5501 0204 1046     		mov	r0, r2
 5502 0206 9847     		blx	r3
 5503              	.LVL2:
2429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 5504              		.loc 1 2429 12
 5505 0208 0EE0     		b	.L323
 5506              	.L293:
2443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             }
2444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           }
2445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           else
2446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           {
2447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             /* Call user error callback */
2448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             /*Call registered error callback*/
2450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             huart->ErrorCallback(huart);
2451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             /*Call legacy weak error callback*/
2453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             HAL_UART_ErrorCallback(huart);
 5507              		.loc 1 2453 13
 5508 020a 7868     		ldr	r0, [r7, #4]
 5509 020c FFF7FEFF 		bl	HAL_UART_ErrorCallback
2429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 5510              		.loc 1 2429 12
 5511 0210 0AE0     		b	.L323
 5512              	.L289:
2454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           }
2456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
2457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         else
2458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
2459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Call user error callback */
2460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /*Call registered error callback*/
2462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->ErrorCallback(huart);
2463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /*Call legacy weak error callback*/
2465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
 5513              		.loc 1 2465 11
 5514 0212 7868     		ldr	r0, [r7, #4]
 5515 0214 FFF7FEFF 		bl	HAL_UART_ErrorCallback
2429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 5516              		.loc 1 2429 12
 5517 0218 06E0     		b	.L323
 5518              	.L288:
2466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
2468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
2470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Non Blocking error : transfer could go on.
2472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Error is notified to user through user error callback */
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 162


2473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /*Call registered error callback*/
2475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCallback(huart);
2476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /*Call legacy weak error callback*/
2478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         HAL_UART_ErrorCallback(huart);
 5519              		.loc 1 2478 9
 5520 021a 7868     		ldr	r0, [r7, #4]
 5521 021c FFF7FEFF 		bl	HAL_UART_ErrorCallback
2479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
 5522              		.loc 1 2481 26
 5523 0220 7B68     		ldr	r3, [r7, #4]
 5524 0222 0022     		movs	r2, #0
 5525 0224 1A64     		str	r2, [r3, #64]
2482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return;
 5526              		.loc 1 2484 5
 5527 0226 70E1     		b	.L322
 5528              	.L323:
2429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 5529              		.loc 1 2429 12
 5530 0228 00BF     		nop
 5531              		.loc 1 2484 5
 5532 022a 6EE1     		b	.L322
 5533              	.L278:
2485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   } /* End if some error occurs */
2486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check current reception Mode :
2488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      If Reception till IDLE event has been selected : */
2489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 5534              		.loc 1 2489 13
 5535 022c 7B68     		ldr	r3, [r7, #4]
 5536 022e 1B6B     		ldr	r3, [r3, #48]
 5537              		.loc 1 2489 6
 5538 0230 012B     		cmp	r3, #1
 5539 0232 40F04A81 		bne	.L295
2490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       && ((isrflags & USART_SR_IDLE) != 0U)
 5540              		.loc 1 2490 21
 5541 0236 D7F8E430 		ldr	r3, [r7, #228]
 5542 023a 03F01003 		and	r3, r3, #16
 5543              		.loc 1 2490 7
 5544 023e 002B     		cmp	r3, #0
 5545 0240 00F04381 		beq	.L295
2491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       && ((cr1its & USART_SR_IDLE) != 0U))
 5546              		.loc 1 2491 19
 5547 0244 D7F8E030 		ldr	r3, [r7, #224]
 5548 0248 03F01003 		and	r3, r3, #16
 5549              		.loc 1 2491 7
 5550 024c 002B     		cmp	r3, #0
 5551 024e 00F03C81 		beq	.L295
 5552              	.LBB504:
2492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_CLEAR_IDLEFLAG(huart);
 5553              		.loc 1 2493 5
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 163


 5554 0252 0023     		movs	r3, #0
 5555 0254 BB60     		str	r3, [r7, #8]
 5556 0256 7B68     		ldr	r3, [r7, #4]
 5557 0258 1B68     		ldr	r3, [r3]
 5558 025a 1B68     		ldr	r3, [r3]
 5559 025c BB60     		str	r3, [r7, #8]
 5560 025e 7B68     		ldr	r3, [r7, #4]
 5561 0260 1B68     		ldr	r3, [r3]
 5562 0262 5B68     		ldr	r3, [r3, #4]
 5563 0264 BB60     		str	r3, [r7, #8]
 5564 0266 BB68     		ldr	r3, [r7, #8]
 5565              	.LBE504:
2494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Check if DMA mode is enabled in UART */
2496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 5566              		.loc 1 2496 9
 5567 0268 7B68     		ldr	r3, [r7, #4]
 5568 026a 1B68     		ldr	r3, [r3]
 5569 026c 5B69     		ldr	r3, [r3, #20]
 5570 026e 03F04003 		and	r3, r3, #64
 5571              		.loc 1 2496 8
 5572 0272 402B     		cmp	r3, #64
 5573 0274 40F0B480 		bne	.L296
 5574              	.LBB505:
2497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* DMA mode enabled */
2499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Check received length : If all expected data are received, do nothing,
2500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          (DMA cplt callback will be called).
2501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          Otherwise, if at least one data has already been received, IDLE event is to be notified to
2502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       uint16_t nb_remaining_rx_data = (uint16_t) __HAL_DMA_GET_COUNTER(huart->hdmarx);
 5575              		.loc 1 2502 50
 5576 0278 7B68     		ldr	r3, [r7, #4]
 5577 027a 9B6B     		ldr	r3, [r3, #56]
 5578 027c 1B68     		ldr	r3, [r3]
 5579 027e 5B68     		ldr	r3, [r3, #4]
 5580              		.loc 1 2502 16
 5581 0280 A7F8BE30 		strh	r3, [r7, #190]	@ movhi
2503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if ((nb_remaining_rx_data > 0U)
 5582              		.loc 1 2503 10
 5583 0284 B7F8BE30 		ldrh	r3, [r7, #190]
 5584 0288 002B     		cmp	r3, #0
 5585 028a 00F04081 		beq	.L324
2504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           && (nb_remaining_rx_data < huart->RxXferSize))
 5586              		.loc 1 2504 43
 5587 028e 7B68     		ldr	r3, [r7, #4]
 5588 0290 9B8D     		ldrh	r3, [r3, #44]
 5589              		.loc 1 2504 11
 5590 0292 B7F8BE20 		ldrh	r2, [r7, #190]
 5591 0296 9A42     		cmp	r2, r3
 5592 0298 80F03981 		bcs	.L324
2505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Reception is not complete */
2507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxXferCount = nb_remaining_rx_data;
 5593              		.loc 1 2507 28
 5594 029c 7B68     		ldr	r3, [r7, #4]
 5595 029e B7F8BE20 		ldrh	r2, [r7, #190]	@ movhi
 5596 02a2 DA85     		strh	r2, [r3, #46]	@ movhi
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 164


2508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* In Normal mode, end DMA xfer and HAL UART Rx process*/
2510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (huart->hdmarx->Init.Mode != DMA_CIRCULAR)
 5597              		.loc 1 2510 18
 5598 02a4 7B68     		ldr	r3, [r7, #4]
 5599 02a6 9B6B     		ldr	r3, [r3, #56]
 5600              		.loc 1 2510 32
 5601 02a8 DB69     		ldr	r3, [r3, #28]
 5602              		.loc 1 2510 12
 5603 02aa B3F5807F 		cmp	r3, #256
 5604 02ae 00F08880 		beq	.L298
 5605              	.L301:
 5606              	.LBB506:
2511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
2512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
2513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 5607              		.loc 1 2513 11 discriminator 1
 5608 02b2 7B68     		ldr	r3, [r7, #4]
 5609 02b4 1B68     		ldr	r3, [r3]
 5610 02b6 0C33     		adds	r3, r3, #12
 5611 02b8 C7F88830 		str	r3, [r7, #136]
 5612              	.LBB507:
 5613              	.LBB508:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5614              		.loc 2 1072 4 discriminator 1
 5615 02bc D7F88830 		ldr	r3, [r7, #136]
 5616              		.syntax unified
 5617              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5618 02c0 53E8003F 		ldrex r3, [r3]
 5619              	@ 0 "" 2
 5620              		.thumb
 5621              		.syntax unified
 5622 02c4 C7F88430 		str	r3, [r7, #132]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5623              		.loc 2 1073 10 discriminator 1
 5624 02c8 D7F88430 		ldr	r3, [r7, #132]
 5625              	.LBE508:
 5626              	.LBE507:
 5627              		.loc 1 2513 11 discriminator 1
 5628 02cc 23F48073 		bic	r3, r3, #256
 5629 02d0 C7F8B830 		str	r3, [r7, #184]
 5630 02d4 7B68     		ldr	r3, [r7, #4]
 5631 02d6 1B68     		ldr	r3, [r3]
 5632 02d8 0C33     		adds	r3, r3, #12
 5633 02da D7F8B820 		ldr	r2, [r7, #184]
 5634 02de C7F89420 		str	r2, [r7, #148]
 5635 02e2 C7F89030 		str	r3, [r7, #144]
 5636              	.LBB509:
 5637              	.LBB510:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5638              		.loc 2 1123 4 discriminator 1
 5639 02e6 D7F89010 		ldr	r1, [r7, #144]
 5640 02ea D7F89420 		ldr	r2, [r7, #148]
 5641              		.syntax unified
 5642              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5643 02ee 41E80023 		strex r3, r2, [r1]
 5644              	@ 0 "" 2
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 165


 5645              		.thumb
 5646              		.syntax unified
 5647 02f2 C7F88C30 		str	r3, [r7, #140]
 5648              		.loc 2 1124 10 discriminator 1
 5649 02f6 D7F88C30 		ldr	r3, [r7, #140]
 5650              	.LBE510:
 5651              	.LBE509:
 5652              		.loc 1 2513 11 discriminator 1
 5653 02fa 002B     		cmp	r3, #0
 5654 02fc D9D1     		bne	.L301
 5655              	.L304:
 5656              	.LBE506:
 5657              	.LBB511:
2514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 5658              		.loc 1 2514 11 discriminator 1
 5659 02fe 7B68     		ldr	r3, [r7, #4]
 5660 0300 1B68     		ldr	r3, [r3]
 5661 0302 1433     		adds	r3, r3, #20
 5662 0304 7B67     		str	r3, [r7, #116]
 5663              	.LBB512:
 5664              	.LBB513:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5665              		.loc 2 1072 4 discriminator 1
 5666 0306 7B6F     		ldr	r3, [r7, #116]
 5667              		.syntax unified
 5668              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5669 0308 53E8003F 		ldrex r3, [r3]
 5670              	@ 0 "" 2
 5671              		.thumb
 5672              		.syntax unified
 5673 030c 3B67     		str	r3, [r7, #112]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5674              		.loc 2 1073 10 discriminator 1
 5675 030e 3B6F     		ldr	r3, [r7, #112]
 5676              	.LBE513:
 5677              	.LBE512:
 5678              		.loc 1 2514 11 discriminator 1
 5679 0310 23F00103 		bic	r3, r3, #1
 5680 0314 C7F8B430 		str	r3, [r7, #180]
 5681 0318 7B68     		ldr	r3, [r7, #4]
 5682 031a 1B68     		ldr	r3, [r3]
 5683 031c 1433     		adds	r3, r3, #20
 5684 031e D7F8B420 		ldr	r2, [r7, #180]
 5685 0322 C7F88020 		str	r2, [r7, #128]
 5686 0326 FB67     		str	r3, [r7, #124]
 5687              	.LBB514:
 5688              	.LBB515:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5689              		.loc 2 1123 4 discriminator 1
 5690 0328 F96F     		ldr	r1, [r7, #124]
 5691 032a D7F88020 		ldr	r2, [r7, #128]
 5692              		.syntax unified
 5693              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5694 032e 41E80023 		strex r3, r2, [r1]
 5695              	@ 0 "" 2
 5696              		.thumb
 5697              		.syntax unified
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 166


 5698 0332 BB67     		str	r3, [r7, #120]
 5699              		.loc 2 1124 10 discriminator 1
 5700 0334 BB6F     		ldr	r3, [r7, #120]
 5701              	.LBE515:
 5702              	.LBE514:
 5703              		.loc 1 2514 11 discriminator 1
 5704 0336 002B     		cmp	r3, #0
 5705 0338 E1D1     		bne	.L304
 5706              	.L307:
 5707              	.LBE511:
 5708              	.LBB516:
2515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Disable the DMA transfer for the receiver request by resetting the DMAR bit
2517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              in the UART CR3 register */
2518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 5709              		.loc 1 2518 11 discriminator 1
 5710 033a 7B68     		ldr	r3, [r7, #4]
 5711 033c 1B68     		ldr	r3, [r3]
 5712 033e 1433     		adds	r3, r3, #20
 5713 0340 3B66     		str	r3, [r7, #96]
 5714              	.LBB517:
 5715              	.LBB518:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5716              		.loc 2 1072 4 discriminator 1
 5717 0342 3B6E     		ldr	r3, [r7, #96]
 5718              		.syntax unified
 5719              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5720 0344 53E8003F 		ldrex r3, [r3]
 5721              	@ 0 "" 2
 5722              		.thumb
 5723              		.syntax unified
 5724 0348 FB65     		str	r3, [r7, #92]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5725              		.loc 2 1073 10 discriminator 1
 5726 034a FB6D     		ldr	r3, [r7, #92]
 5727              	.LBE518:
 5728              	.LBE517:
 5729              		.loc 1 2518 11 discriminator 1
 5730 034c 23F04003 		bic	r3, r3, #64
 5731 0350 C7F8B030 		str	r3, [r7, #176]
 5732 0354 7B68     		ldr	r3, [r7, #4]
 5733 0356 1B68     		ldr	r3, [r3]
 5734 0358 1433     		adds	r3, r3, #20
 5735 035a D7F8B020 		ldr	r2, [r7, #176]
 5736 035e FA66     		str	r2, [r7, #108]
 5737 0360 BB66     		str	r3, [r7, #104]
 5738              	.LBB519:
 5739              	.LBB520:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5740              		.loc 2 1123 4 discriminator 1
 5741 0362 B96E     		ldr	r1, [r7, #104]
 5742 0364 FA6E     		ldr	r2, [r7, #108]
 5743              		.syntax unified
 5744              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5745 0366 41E80023 		strex r3, r2, [r1]
 5746              	@ 0 "" 2
 5747              		.thumb
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 167


 5748              		.syntax unified
 5749 036a 7B66     		str	r3, [r7, #100]
 5750              		.loc 2 1124 10 discriminator 1
 5751 036c 7B6E     		ldr	r3, [r7, #100]
 5752              	.LBE520:
 5753              	.LBE519:
 5754              		.loc 1 2518 11 discriminator 1
 5755 036e 002B     		cmp	r3, #0
 5756 0370 E3D1     		bne	.L307
 5757              	.LBE516:
2519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* At end of Rx process, restore huart->RxState to Ready */
2521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->RxState = HAL_UART_STATE_READY;
 5758              		.loc 1 2521 26
 5759 0372 7B68     		ldr	r3, [r7, #4]
 5760 0374 2022     		movs	r2, #32
 5761 0376 83F83E20 		strb	r2, [r3, #62]
2522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 5762              		.loc 1 2522 32
 5763 037a 7B68     		ldr	r3, [r7, #4]
 5764 037c 0022     		movs	r2, #0
 5765 037e 1A63     		str	r2, [r3, #48]
 5766              	.L310:
 5767              	.LBB521:
2523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 5768              		.loc 1 2524 11 discriminator 1
 5769 0380 7B68     		ldr	r3, [r7, #4]
 5770 0382 1B68     		ldr	r3, [r3]
 5771 0384 0C33     		adds	r3, r3, #12
 5772 0386 FB64     		str	r3, [r7, #76]
 5773              	.LBB522:
 5774              	.LBB523:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5775              		.loc 2 1072 4 discriminator 1
 5776 0388 FB6C     		ldr	r3, [r7, #76]
 5777              		.syntax unified
 5778              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5779 038a 53E8003F 		ldrex r3, [r3]
 5780              	@ 0 "" 2
 5781              		.thumb
 5782              		.syntax unified
 5783 038e BB64     		str	r3, [r7, #72]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5784              		.loc 2 1073 10 discriminator 1
 5785 0390 BB6C     		ldr	r3, [r7, #72]
 5786              	.LBE523:
 5787              	.LBE522:
 5788              		.loc 1 2524 11 discriminator 1
 5789 0392 23F01003 		bic	r3, r3, #16
 5790 0396 C7F8AC30 		str	r3, [r7, #172]
 5791 039a 7B68     		ldr	r3, [r7, #4]
 5792 039c 1B68     		ldr	r3, [r3]
 5793 039e 0C33     		adds	r3, r3, #12
 5794 03a0 D7F8AC20 		ldr	r2, [r7, #172]
 5795 03a4 BA65     		str	r2, [r7, #88]
 5796 03a6 7B65     		str	r3, [r7, #84]
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 168


 5797              	.LBB524:
 5798              	.LBB525:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5799              		.loc 2 1123 4 discriminator 1
 5800 03a8 796D     		ldr	r1, [r7, #84]
 5801 03aa BA6D     		ldr	r2, [r7, #88]
 5802              		.syntax unified
 5803              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5804 03ac 41E80023 		strex r3, r2, [r1]
 5805              	@ 0 "" 2
 5806              		.thumb
 5807              		.syntax unified
 5808 03b0 3B65     		str	r3, [r7, #80]
 5809              		.loc 2 1124 10 discriminator 1
 5810 03b2 3B6D     		ldr	r3, [r7, #80]
 5811              	.LBE525:
 5812              	.LBE524:
 5813              		.loc 1 2524 11 discriminator 1
 5814 03b4 002B     		cmp	r3, #0
 5815 03b6 E3D1     		bne	.L310
 5816              	.LBE521:
2525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Last bytes received, so no need as the abort is immediate */
2527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           (void)HAL_DMA_Abort(huart->hdmarx);
 5817              		.loc 1 2527 17
 5818 03b8 7B68     		ldr	r3, [r7, #4]
 5819 03ba 9B6B     		ldr	r3, [r3, #56]
 5820 03bc 1846     		mov	r0, r3
 5821 03be FFF7FEFF 		bl	HAL_DMA_Abort
 5822              	.L298:
2528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
2529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /*Call registered Rx Event callback*/
2531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
2532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /*Call legacy weak Rx Event callback*/
2534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         HAL_UARTEx_RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
 5823              		.loc 1 2534 49
 5824 03c2 7B68     		ldr	r3, [r7, #4]
 5825 03c4 9A8D     		ldrh	r2, [r3, #44]
 5826              		.loc 1 2534 69
 5827 03c6 7B68     		ldr	r3, [r7, #4]
 5828 03c8 DB8D     		ldrh	r3, [r3, #46]	@ movhi
 5829 03ca 9BB2     		uxth	r3, r3
 5830              		.loc 1 2534 9
 5831 03cc D31A     		subs	r3, r2, r3
 5832 03ce 9BB2     		uxth	r3, r3
 5833 03d0 1946     		mov	r1, r3
 5834 03d2 7868     		ldr	r0, [r7, #4]
 5835 03d4 FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
2535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return;
 5836              		.loc 1 2537 7
 5837 03d8 99E0     		b	.L324
 5838              	.L327:
 5839 03da 00BF     		.align	2
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 169


 5840              	.L326:
 5841 03dc 00000000 		.word	UART_DMAAbortOnError
 5842              	.L296:
 5843              	.LBE505:
 5844              	.LBB526:
2538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
2540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* DMA mode not enabled */
2542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Check received length : If all expected data are received, do nothing.
2543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          Otherwise, if at least one data has already been received, IDLE event is to be notified to
2544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
 5845              		.loc 1 2544 34
 5846 03e0 7B68     		ldr	r3, [r7, #4]
 5847 03e2 9A8D     		ldrh	r2, [r3, #44]
 5848              		.loc 1 2544 54
 5849 03e4 7B68     		ldr	r3, [r7, #4]
 5850 03e6 DB8D     		ldrh	r3, [r3, #46]	@ movhi
 5851 03e8 9BB2     		uxth	r3, r3
 5852              		.loc 1 2544 16
 5853 03ea D31A     		subs	r3, r2, r3
 5854 03ec A7F8CE30 		strh	r3, [r7, #206]	@ movhi
2545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if ((huart->RxXferCount > 0U)
 5855              		.loc 1 2545 17
 5856 03f0 7B68     		ldr	r3, [r7, #4]
 5857 03f2 DB8D     		ldrh	r3, [r3, #46]	@ movhi
 5858 03f4 9BB2     		uxth	r3, r3
 5859              		.loc 1 2545 10
 5860 03f6 002B     		cmp	r3, #0
 5861 03f8 00F08B80 		beq	.L325
2546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           && (nb_rx_data > 0U))
 5862              		.loc 1 2546 11
 5863 03fc B7F8CE30 		ldrh	r3, [r7, #206]
 5864 0400 002B     		cmp	r3, #0
 5865 0402 00F08680 		beq	.L325
 5866              	.L314:
 5867              	.LBB527:
2547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Disable the UART Parity Error Interrupt and RXNE interrupts */
2549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 5868              		.loc 1 2549 9 discriminator 1
 5869 0406 7B68     		ldr	r3, [r7, #4]
 5870 0408 1B68     		ldr	r3, [r3]
 5871 040a 0C33     		adds	r3, r3, #12
 5872 040c BB63     		str	r3, [r7, #56]
 5873              	.LBB528:
 5874              	.LBB529:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5875              		.loc 2 1072 4 discriminator 1
 5876 040e BB6B     		ldr	r3, [r7, #56]
 5877              		.syntax unified
 5878              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5879 0410 53E8003F 		ldrex r3, [r3]
 5880              	@ 0 "" 2
 5881              		.thumb
 5882              		.syntax unified
 5883 0414 7B63     		str	r3, [r7, #52]
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 170


1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5884              		.loc 2 1073 10 discriminator 1
 5885 0416 7B6B     		ldr	r3, [r7, #52]
 5886              	.LBE529:
 5887              	.LBE528:
 5888              		.loc 1 2549 9 discriminator 1
 5889 0418 23F49073 		bic	r3, r3, #288
 5890 041c C7F8C830 		str	r3, [r7, #200]
 5891 0420 7B68     		ldr	r3, [r7, #4]
 5892 0422 1B68     		ldr	r3, [r3]
 5893 0424 0C33     		adds	r3, r3, #12
 5894 0426 D7F8C820 		ldr	r2, [r7, #200]
 5895 042a 7A64     		str	r2, [r7, #68]
 5896 042c 3B64     		str	r3, [r7, #64]
 5897              	.LBB530:
 5898              	.LBB531:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5899              		.loc 2 1123 4 discriminator 1
 5900 042e 396C     		ldr	r1, [r7, #64]
 5901 0430 7A6C     		ldr	r2, [r7, #68]
 5902              		.syntax unified
 5903              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5904 0432 41E80023 		strex r3, r2, [r1]
 5905              	@ 0 "" 2
 5906              		.thumb
 5907              		.syntax unified
 5908 0436 FB63     		str	r3, [r7, #60]
 5909              		.loc 2 1124 10 discriminator 1
 5910 0438 FB6B     		ldr	r3, [r7, #60]
 5911              	.LBE531:
 5912              	.LBE530:
 5913              		.loc 1 2549 9 discriminator 1
 5914 043a 002B     		cmp	r3, #0
 5915 043c E3D1     		bne	.L314
 5916              	.L317:
 5917              	.LBE527:
 5918              	.LBB532:
2550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
2552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 5919              		.loc 1 2552 9 discriminator 1
 5920 043e 7B68     		ldr	r3, [r7, #4]
 5921 0440 1B68     		ldr	r3, [r3]
 5922 0442 1433     		adds	r3, r3, #20
 5923 0444 7B62     		str	r3, [r7, #36]
 5924              	.LBB533:
 5925              	.LBB534:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5926              		.loc 2 1072 4 discriminator 1
 5927 0446 7B6A     		ldr	r3, [r7, #36]
 5928              		.syntax unified
 5929              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5930 0448 53E8003F 		ldrex r3, [r3]
 5931              	@ 0 "" 2
 5932              		.thumb
 5933              		.syntax unified
 5934 044c 3B62     		str	r3, [r7, #32]
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 171


1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5935              		.loc 2 1073 10 discriminator 1
 5936 044e 3B6A     		ldr	r3, [r7, #32]
 5937              	.LBE534:
 5938              	.LBE533:
 5939              		.loc 1 2552 9 discriminator 1
 5940 0450 23F00103 		bic	r3, r3, #1
 5941 0454 C7F8C430 		str	r3, [r7, #196]
 5942 0458 7B68     		ldr	r3, [r7, #4]
 5943 045a 1B68     		ldr	r3, [r3]
 5944 045c 1433     		adds	r3, r3, #20
 5945 045e D7F8C420 		ldr	r2, [r7, #196]
 5946 0462 3A63     		str	r2, [r7, #48]
 5947 0464 FB62     		str	r3, [r7, #44]
 5948              	.LBB535:
 5949              	.LBB536:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5950              		.loc 2 1123 4 discriminator 1
 5951 0466 F96A     		ldr	r1, [r7, #44]
 5952 0468 3A6B     		ldr	r2, [r7, #48]
 5953              		.syntax unified
 5954              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5955 046a 41E80023 		strex r3, r2, [r1]
 5956              	@ 0 "" 2
 5957              		.thumb
 5958              		.syntax unified
 5959 046e BB62     		str	r3, [r7, #40]
 5960              		.loc 2 1124 10 discriminator 1
 5961 0470 BB6A     		ldr	r3, [r7, #40]
 5962              	.LBE536:
 5963              	.LBE535:
 5964              		.loc 1 2552 9 discriminator 1
 5965 0472 002B     		cmp	r3, #0
 5966 0474 E3D1     		bne	.L317
 5967              	.LBE532:
2553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Rx process is completed, restore huart->RxState to Ready */
2555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 5968              		.loc 1 2555 24
 5969 0476 7B68     		ldr	r3, [r7, #4]
 5970 0478 2022     		movs	r2, #32
 5971 047a 83F83E20 		strb	r2, [r3, #62]
2556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 5972              		.loc 1 2556 30
 5973 047e 7B68     		ldr	r3, [r7, #4]
 5974 0480 0022     		movs	r2, #0
 5975 0482 1A63     		str	r2, [r3, #48]
 5976              	.L320:
 5977              	.LBB537:
2557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 5978              		.loc 1 2558 9 discriminator 1
 5979 0484 7B68     		ldr	r3, [r7, #4]
 5980 0486 1B68     		ldr	r3, [r3]
 5981 0488 0C33     		adds	r3, r3, #12
 5982 048a 3B61     		str	r3, [r7, #16]
 5983              	.LBB538:
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 172


 5984              	.LBB539:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5985              		.loc 2 1072 4 discriminator 1
 5986 048c 3B69     		ldr	r3, [r7, #16]
 5987              		.syntax unified
 5988              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5989 048e 53E8003F 		ldrex r3, [r3]
 5990              	@ 0 "" 2
 5991              		.thumb
 5992              		.syntax unified
 5993 0492 FB60     		str	r3, [r7, #12]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5994              		.loc 2 1073 10 discriminator 1
 5995 0494 FB68     		ldr	r3, [r7, #12]
 5996              	.LBE539:
 5997              	.LBE538:
 5998              		.loc 1 2558 9 discriminator 1
 5999 0496 23F01003 		bic	r3, r3, #16
 6000 049a C7F8C030 		str	r3, [r7, #192]
 6001 049e 7B68     		ldr	r3, [r7, #4]
 6002 04a0 1B68     		ldr	r3, [r3]
 6003 04a2 0C33     		adds	r3, r3, #12
 6004 04a4 D7F8C020 		ldr	r2, [r7, #192]
 6005 04a8 FA61     		str	r2, [r7, #28]
 6006 04aa BB61     		str	r3, [r7, #24]
 6007              	.LBB540:
 6008              	.LBB541:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6009              		.loc 2 1123 4 discriminator 1
 6010 04ac B969     		ldr	r1, [r7, #24]
 6011 04ae FA69     		ldr	r2, [r7, #28]
 6012              		.syntax unified
 6013              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6014 04b0 41E80023 		strex r3, r2, [r1]
 6015              	@ 0 "" 2
 6016              		.thumb
 6017              		.syntax unified
 6018 04b4 7B61     		str	r3, [r7, #20]
 6019              		.loc 2 1124 10 discriminator 1
 6020 04b6 7B69     		ldr	r3, [r7, #20]
 6021              	.LBE541:
 6022              	.LBE540:
 6023              		.loc 1 2558 9 discriminator 1
 6024 04b8 002B     		cmp	r3, #0
 6025 04ba E3D1     		bne	.L320
 6026              	.LBE537:
2559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /*Call registered Rx complete callback*/
2561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxEventCallback(huart, nb_rx_data);
2562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /*Call legacy weak Rx Event callback*/
2564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         HAL_UARTEx_RxEventCallback(huart, nb_rx_data);
 6027              		.loc 1 2564 9
 6028 04bc B7F8CE30 		ldrh	r3, [r7, #206]
 6029 04c0 1946     		mov	r1, r3
 6030 04c2 7868     		ldr	r0, [r7, #4]
 6031 04c4 FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 173


2565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return;
 6032              		.loc 1 2567 7
 6033 04c8 23E0     		b	.L325
 6034              	.L295:
 6035              	.LBE526:
2568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
2572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (((isrflags & USART_SR_TXE) != RESET) && ((cr1its & USART_CR1_TXEIE) != RESET))
 6036              		.loc 1 2572 18
 6037 04ca D7F8E430 		ldr	r3, [r7, #228]
 6038 04ce 03F08003 		and	r3, r3, #128
 6039              		.loc 1 2572 6
 6040 04d2 002B     		cmp	r3, #0
 6041 04d4 09D0     		beq	.L321
 6042              		.loc 1 2572 56 discriminator 1
 6043 04d6 D7F8E030 		ldr	r3, [r7, #224]
 6044 04da 03F08003 		and	r3, r3, #128
 6045              		.loc 1 2572 44 discriminator 1
 6046 04de 002B     		cmp	r3, #0
 6047 04e0 03D0     		beq	.L321
2573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_Transmit_IT(huart);
 6048              		.loc 1 2574 5
 6049 04e2 7868     		ldr	r0, [r7, #4]
 6050 04e4 FFF7FEFF 		bl	UART_Transmit_IT
2575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return;
 6051              		.loc 1 2575 5
 6052 04e8 14E0     		b	.L275
 6053              	.L321:
2576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* UART in mode Transmitter end --------------------------------------------*/
2579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (((isrflags & USART_SR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
 6054              		.loc 1 2579 18
 6055 04ea D7F8E430 		ldr	r3, [r7, #228]
 6056 04ee 03F04003 		and	r3, r3, #64
 6057              		.loc 1 2579 6
 6058 04f2 002B     		cmp	r3, #0
 6059 04f4 0ED0     		beq	.L275
 6060              		.loc 1 2579 55 discriminator 1
 6061 04f6 D7F8E030 		ldr	r3, [r7, #224]
 6062 04fa 03F04003 		and	r3, r3, #64
 6063              		.loc 1 2579 43 discriminator 1
 6064 04fe 002B     		cmp	r3, #0
 6065 0500 08D0     		beq	.L275
2580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
 6066              		.loc 1 2581 5
 6067 0502 7868     		ldr	r0, [r7, #4]
 6068 0504 FFF7FEFF 		bl	UART_EndTransmit_IT
2582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return;
 6069              		.loc 1 2582 5
 6070 0508 04E0     		b	.L275
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 174


 6071              	.L322:
2484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   } /* End if some error occurs */
 6072              		.loc 1 2484 5
 6073 050a 00BF     		nop
 6074 050c 02E0     		b	.L275
 6075              	.L324:
 6076              	.LBB542:
2537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 6077              		.loc 1 2537 7
 6078 050e 00BF     		nop
 6079 0510 00E0     		b	.L275
 6080              	.L325:
 6081              	.LBE542:
 6082              	.LBB543:
2567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 6083              		.loc 1 2567 7
 6084 0512 00BF     		nop
 6085              	.L275:
 6086              	.LBE543:
2583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 6087              		.loc 1 2584 1
 6088 0514 E837     		adds	r7, r7, #232
 6089              	.LCFI133:
 6090              		.cfi_def_cfa_offset 8
 6091 0516 BD46     		mov	sp, r7
 6092              	.LCFI134:
 6093              		.cfi_def_cfa_register 13
 6094              		@ sp needed
 6095 0518 80BD     		pop	{r7, pc}
 6096              		.cfi_endproc
 6097              	.LFE241:
 6099 051a 00BF     		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 6100              		.align	1
 6101              		.weak	HAL_UART_TxCpltCallback
 6102              		.syntax unified
 6103              		.thumb
 6104              		.thumb_func
 6105              		.fpu fpv4-sp-d16
 6107              	HAL_UART_TxCpltCallback:
 6108              	.LFB242:
2585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Tx Transfer completed callbacks.
2588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
2593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 6109              		.loc 1 2593 1
 6110              		.cfi_startproc
 6111              		@ args = 0, pretend = 0, frame = 8
 6112              		@ frame_needed = 1, uses_anonymous_args = 0
 6113              		@ link register save eliminated.
 6114 0000 80B4     		push	{r7}
 6115              	.LCFI135:
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 175


 6116              		.cfi_def_cfa_offset 4
 6117              		.cfi_offset 7, -4
 6118 0002 83B0     		sub	sp, sp, #12
 6119              	.LCFI136:
 6120              		.cfi_def_cfa_offset 16
 6121 0004 00AF     		add	r7, sp, #0
 6122              	.LCFI137:
 6123              		.cfi_def_cfa_register 7
 6124 0006 7860     		str	r0, [r7, #4]
2594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_TxCpltCallback could be implemented in the user file
2598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 6125              		.loc 1 2599 1
 6126 0008 00BF     		nop
 6127 000a 0C37     		adds	r7, r7, #12
 6128              	.LCFI138:
 6129              		.cfi_def_cfa_offset 4
 6130 000c BD46     		mov	sp, r7
 6131              	.LCFI139:
 6132              		.cfi_def_cfa_register 13
 6133              		@ sp needed
 6134 000e 5DF8047B 		ldr	r7, [sp], #4
 6135              	.LCFI140:
 6136              		.cfi_restore 7
 6137              		.cfi_def_cfa_offset 0
 6138 0012 7047     		bx	lr
 6139              		.cfi_endproc
 6140              	.LFE242:
 6142              		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 6143              		.align	1
 6144              		.weak	HAL_UART_TxHalfCpltCallback
 6145              		.syntax unified
 6146              		.thumb
 6147              		.thumb_func
 6148              		.fpu fpv4-sp-d16
 6150              	HAL_UART_TxHalfCpltCallback:
 6151              	.LFB243:
2600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callbacks.
2603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
2608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 6152              		.loc 1 2608 1
 6153              		.cfi_startproc
 6154              		@ args = 0, pretend = 0, frame = 8
 6155              		@ frame_needed = 1, uses_anonymous_args = 0
 6156              		@ link register save eliminated.
 6157 0000 80B4     		push	{r7}
 6158              	.LCFI141:
 6159              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 176


 6160              		.cfi_offset 7, -4
 6161 0002 83B0     		sub	sp, sp, #12
 6162              	.LCFI142:
 6163              		.cfi_def_cfa_offset 16
 6164 0004 00AF     		add	r7, sp, #0
 6165              	.LCFI143:
 6166              		.cfi_def_cfa_register 7
 6167 0006 7860     		str	r0, [r7, #4]
2609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_TxHalfCpltCallback could be implemented in the user file
2613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 6168              		.loc 1 2614 1
 6169 0008 00BF     		nop
 6170 000a 0C37     		adds	r7, r7, #12
 6171              	.LCFI144:
 6172              		.cfi_def_cfa_offset 4
 6173 000c BD46     		mov	sp, r7
 6174              	.LCFI145:
 6175              		.cfi_def_cfa_register 13
 6176              		@ sp needed
 6177 000e 5DF8047B 		ldr	r7, [sp], #4
 6178              	.LCFI146:
 6179              		.cfi_restore 7
 6180              		.cfi_def_cfa_offset 0
 6181 0012 7047     		bx	lr
 6182              		.cfi_endproc
 6183              	.LFE243:
 6185              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 6186              		.align	1
 6187              		.weak	HAL_UART_RxCpltCallback
 6188              		.syntax unified
 6189              		.thumb
 6190              		.thumb_func
 6191              		.fpu fpv4-sp-d16
 6193              	HAL_UART_RxCpltCallback:
 6194              	.LFB244:
2615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Rx Transfer completed callbacks.
2618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
2623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 6195              		.loc 1 2623 1
 6196              		.cfi_startproc
 6197              		@ args = 0, pretend = 0, frame = 8
 6198              		@ frame_needed = 1, uses_anonymous_args = 0
 6199              		@ link register save eliminated.
 6200 0000 80B4     		push	{r7}
 6201              	.LCFI147:
 6202              		.cfi_def_cfa_offset 4
 6203              		.cfi_offset 7, -4
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 177


 6204 0002 83B0     		sub	sp, sp, #12
 6205              	.LCFI148:
 6206              		.cfi_def_cfa_offset 16
 6207 0004 00AF     		add	r7, sp, #0
 6208              	.LCFI149:
 6209              		.cfi_def_cfa_register 7
 6210 0006 7860     		str	r0, [r7, #4]
2624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_RxCpltCallback could be implemented in the user file
2628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 6211              		.loc 1 2629 1
 6212 0008 00BF     		nop
 6213 000a 0C37     		adds	r7, r7, #12
 6214              	.LCFI150:
 6215              		.cfi_def_cfa_offset 4
 6216 000c BD46     		mov	sp, r7
 6217              	.LCFI151:
 6218              		.cfi_def_cfa_register 13
 6219              		@ sp needed
 6220 000e 5DF8047B 		ldr	r7, [sp], #4
 6221              	.LCFI152:
 6222              		.cfi_restore 7
 6223              		.cfi_def_cfa_offset 0
 6224 0012 7047     		bx	lr
 6225              		.cfi_endproc
 6226              	.LFE244:
 6228              		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 6229              		.align	1
 6230              		.weak	HAL_UART_RxHalfCpltCallback
 6231              		.syntax unified
 6232              		.thumb
 6233              		.thumb_func
 6234              		.fpu fpv4-sp-d16
 6236              	HAL_UART_RxHalfCpltCallback:
 6237              	.LFB245:
2630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callbacks.
2633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
2638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 6238              		.loc 1 2638 1
 6239              		.cfi_startproc
 6240              		@ args = 0, pretend = 0, frame = 8
 6241              		@ frame_needed = 1, uses_anonymous_args = 0
 6242              		@ link register save eliminated.
 6243 0000 80B4     		push	{r7}
 6244              	.LCFI153:
 6245              		.cfi_def_cfa_offset 4
 6246              		.cfi_offset 7, -4
 6247 0002 83B0     		sub	sp, sp, #12
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 178


 6248              	.LCFI154:
 6249              		.cfi_def_cfa_offset 16
 6250 0004 00AF     		add	r7, sp, #0
 6251              	.LCFI155:
 6252              		.cfi_def_cfa_register 7
 6253 0006 7860     		str	r0, [r7, #4]
2639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_RxHalfCpltCallback could be implemented in the user file
2643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 6254              		.loc 1 2644 1
 6255 0008 00BF     		nop
 6256 000a 0C37     		adds	r7, r7, #12
 6257              	.LCFI156:
 6258              		.cfi_def_cfa_offset 4
 6259 000c BD46     		mov	sp, r7
 6260              	.LCFI157:
 6261              		.cfi_def_cfa_register 13
 6262              		@ sp needed
 6263 000e 5DF8047B 		ldr	r7, [sp], #4
 6264              	.LCFI158:
 6265              		.cfi_restore 7
 6266              		.cfi_def_cfa_offset 0
 6267 0012 7047     		bx	lr
 6268              		.cfi_endproc
 6269              	.LFE245:
 6271              		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 6272              		.align	1
 6273              		.weak	HAL_UART_ErrorCallback
 6274              		.syntax unified
 6275              		.thumb
 6276              		.thumb_func
 6277              		.fpu fpv4-sp-d16
 6279              	HAL_UART_ErrorCallback:
 6280              	.LFB246:
2645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART error callbacks.
2648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
2653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 6281              		.loc 1 2653 1
 6282              		.cfi_startproc
 6283              		@ args = 0, pretend = 0, frame = 8
 6284              		@ frame_needed = 1, uses_anonymous_args = 0
 6285              		@ link register save eliminated.
 6286 0000 80B4     		push	{r7}
 6287              	.LCFI159:
 6288              		.cfi_def_cfa_offset 4
 6289              		.cfi_offset 7, -4
 6290 0002 83B0     		sub	sp, sp, #12
 6291              	.LCFI160:
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 179


 6292              		.cfi_def_cfa_offset 16
 6293 0004 00AF     		add	r7, sp, #0
 6294              	.LCFI161:
 6295              		.cfi_def_cfa_register 7
 6296 0006 7860     		str	r0, [r7, #4]
2654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_ErrorCallback could be implemented in the user file
2658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 6297              		.loc 1 2659 1
 6298 0008 00BF     		nop
 6299 000a 0C37     		adds	r7, r7, #12
 6300              	.LCFI162:
 6301              		.cfi_def_cfa_offset 4
 6302 000c BD46     		mov	sp, r7
 6303              	.LCFI163:
 6304              		.cfi_def_cfa_register 13
 6305              		@ sp needed
 6306 000e 5DF8047B 		ldr	r7, [sp], #4
 6307              	.LCFI164:
 6308              		.cfi_restore 7
 6309              		.cfi_def_cfa_offset 0
 6310 0012 7047     		bx	lr
 6311              		.cfi_endproc
 6312              	.LFE246:
 6314              		.section	.text.HAL_UART_AbortCpltCallback,"ax",%progbits
 6315              		.align	1
 6316              		.weak	HAL_UART_AbortCpltCallback
 6317              		.syntax unified
 6318              		.thumb
 6319              		.thumb_func
 6320              		.fpu fpv4-sp-d16
 6322              	HAL_UART_AbortCpltCallback:
 6323              	.LFB247:
2660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_AbortCpltCallback(UART_HandleTypeDef *huart)
2667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 6324              		.loc 1 2667 1
 6325              		.cfi_startproc
 6326              		@ args = 0, pretend = 0, frame = 8
 6327              		@ frame_needed = 1, uses_anonymous_args = 0
 6328              		@ link register save eliminated.
 6329 0000 80B4     		push	{r7}
 6330              	.LCFI165:
 6331              		.cfi_def_cfa_offset 4
 6332              		.cfi_offset 7, -4
 6333 0002 83B0     		sub	sp, sp, #12
 6334              	.LCFI166:
 6335              		.cfi_def_cfa_offset 16
 6336 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 180


 6337              	.LCFI167:
 6338              		.cfi_def_cfa_register 7
 6339 0006 7860     		str	r0, [r7, #4]
2668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             the HAL_UART_AbortCpltCallback can be implemented in the user file.
2673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 6340              		.loc 1 2674 1
 6341 0008 00BF     		nop
 6342 000a 0C37     		adds	r7, r7, #12
 6343              	.LCFI168:
 6344              		.cfi_def_cfa_offset 4
 6345 000c BD46     		mov	sp, r7
 6346              	.LCFI169:
 6347              		.cfi_def_cfa_register 13
 6348              		@ sp needed
 6349 000e 5DF8047B 		ldr	r7, [sp], #4
 6350              	.LCFI170:
 6351              		.cfi_restore 7
 6352              		.cfi_def_cfa_offset 0
 6353 0012 7047     		bx	lr
 6354              		.cfi_endproc
 6355              	.LFE247:
 6357              		.section	.text.HAL_UART_AbortTransmitCpltCallback,"ax",%progbits
 6358              		.align	1
 6359              		.weak	HAL_UART_AbortTransmitCpltCallback
 6360              		.syntax unified
 6361              		.thumb
 6362              		.thumb_func
 6363              		.fpu fpv4-sp-d16
 6365              	HAL_UART_AbortTransmitCpltCallback:
 6366              	.LFB248:
2675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_AbortTransmitCpltCallback(UART_HandleTypeDef *huart)
2682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 6367              		.loc 1 2682 1
 6368              		.cfi_startproc
 6369              		@ args = 0, pretend = 0, frame = 8
 6370              		@ frame_needed = 1, uses_anonymous_args = 0
 6371              		@ link register save eliminated.
 6372 0000 80B4     		push	{r7}
 6373              	.LCFI171:
 6374              		.cfi_def_cfa_offset 4
 6375              		.cfi_offset 7, -4
 6376 0002 83B0     		sub	sp, sp, #12
 6377              	.LCFI172:
 6378              		.cfi_def_cfa_offset 16
 6379 0004 00AF     		add	r7, sp, #0
 6380              	.LCFI173:
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 181


 6381              		.cfi_def_cfa_register 7
 6382 0006 7860     		str	r0, [r7, #4]
2683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             the HAL_UART_AbortTransmitCpltCallback can be implemented in the user file.
2688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 6383              		.loc 1 2689 1
 6384 0008 00BF     		nop
 6385 000a 0C37     		adds	r7, r7, #12
 6386              	.LCFI174:
 6387              		.cfi_def_cfa_offset 4
 6388 000c BD46     		mov	sp, r7
 6389              	.LCFI175:
 6390              		.cfi_def_cfa_register 13
 6391              		@ sp needed
 6392 000e 5DF8047B 		ldr	r7, [sp], #4
 6393              	.LCFI176:
 6394              		.cfi_restore 7
 6395              		.cfi_def_cfa_offset 0
 6396 0012 7047     		bx	lr
 6397              		.cfi_endproc
 6398              	.LFE248:
 6400              		.section	.text.HAL_UART_AbortReceiveCpltCallback,"ax",%progbits
 6401              		.align	1
 6402              		.weak	HAL_UART_AbortReceiveCpltCallback
 6403              		.syntax unified
 6404              		.thumb
 6405              		.thumb_func
 6406              		.fpu fpv4-sp-d16
 6408              	HAL_UART_AbortReceiveCpltCallback:
 6409              	.LFB249:
2690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART Abort Receive Complete callback.
2693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_AbortReceiveCpltCallback(UART_HandleTypeDef *huart)
2697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 6410              		.loc 1 2697 1
 6411              		.cfi_startproc
 6412              		@ args = 0, pretend = 0, frame = 8
 6413              		@ frame_needed = 1, uses_anonymous_args = 0
 6414              		@ link register save eliminated.
 6415 0000 80B4     		push	{r7}
 6416              	.LCFI177:
 6417              		.cfi_def_cfa_offset 4
 6418              		.cfi_offset 7, -4
 6419 0002 83B0     		sub	sp, sp, #12
 6420              	.LCFI178:
 6421              		.cfi_def_cfa_offset 16
 6422 0004 00AF     		add	r7, sp, #0
 6423              	.LCFI179:
 6424              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 182


 6425 0006 7860     		str	r0, [r7, #4]
2698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             the HAL_UART_AbortReceiveCpltCallback can be implemented in the user file.
2703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 6426              		.loc 1 2704 1
 6427 0008 00BF     		nop
 6428 000a 0C37     		adds	r7, r7, #12
 6429              	.LCFI180:
 6430              		.cfi_def_cfa_offset 4
 6431 000c BD46     		mov	sp, r7
 6432              	.LCFI181:
 6433              		.cfi_def_cfa_register 13
 6434              		@ sp needed
 6435 000e 5DF8047B 		ldr	r7, [sp], #4
 6436              	.LCFI182:
 6437              		.cfi_restore 7
 6438              		.cfi_def_cfa_offset 0
 6439 0012 7047     		bx	lr
 6440              		.cfi_endproc
 6441              	.LFE249:
 6443              		.section	.text.HAL_UARTEx_RxEventCallback,"ax",%progbits
 6444              		.align	1
 6445              		.weak	HAL_UARTEx_RxEventCallback
 6446              		.syntax unified
 6447              		.thumb
 6448              		.thumb_func
 6449              		.fpu fpv4-sp-d16
 6451              	HAL_UARTEx_RxEventCallback:
 6452              	.LFB250:
2705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Reception Event Callback (Rx event notification called after use of advanced reception 
2708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle
2709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Number of data available in application reception buffer (indicates a position in
2710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               reception buffer until which, data are available)
2711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UARTEx_RxEventCallback(UART_HandleTypeDef *huart, uint16_t Size)
2714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 6453              		.loc 1 2714 1
 6454              		.cfi_startproc
 6455              		@ args = 0, pretend = 0, frame = 8
 6456              		@ frame_needed = 1, uses_anonymous_args = 0
 6457              		@ link register save eliminated.
 6458 0000 80B4     		push	{r7}
 6459              	.LCFI183:
 6460              		.cfi_def_cfa_offset 4
 6461              		.cfi_offset 7, -4
 6462 0002 83B0     		sub	sp, sp, #12
 6463              	.LCFI184:
 6464              		.cfi_def_cfa_offset 16
 6465 0004 00AF     		add	r7, sp, #0
 6466              	.LCFI185:
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 183


 6467              		.cfi_def_cfa_register 7
 6468 0006 7860     		str	r0, [r7, #4]
 6469 0008 0B46     		mov	r3, r1
 6470 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(Size);
2718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             the HAL_UARTEx_RxEventCallback can be implemented in the user file.
2721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 6471              		.loc 1 2722 1
 6472 000c 00BF     		nop
 6473 000e 0C37     		adds	r7, r7, #12
 6474              	.LCFI186:
 6475              		.cfi_def_cfa_offset 4
 6476 0010 BD46     		mov	sp, r7
 6477              	.LCFI187:
 6478              		.cfi_def_cfa_register 13
 6479              		@ sp needed
 6480 0012 5DF8047B 		ldr	r7, [sp], #4
 6481              	.LCFI188:
 6482              		.cfi_restore 7
 6483              		.cfi_def_cfa_offset 0
 6484 0016 7047     		bx	lr
 6485              		.cfi_endproc
 6486              	.LFE250:
 6488              		.section	.text.HAL_LIN_SendBreak,"ax",%progbits
 6489              		.align	1
 6490              		.global	HAL_LIN_SendBreak
 6491              		.syntax unified
 6492              		.thumb
 6493              		.thumb_func
 6494              		.fpu fpv4-sp-d16
 6496              	HAL_LIN_SendBreak:
 6497              	.LFB251:
2723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
2726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions
2729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *  @brief   UART control functions
2730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
2731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @verbatim
2732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
2733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                       ##### Peripheral Control functions #####
2734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
2735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   [..]
2736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART:
2737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_LIN_SendBreak() API can be helpful to transmit the break character.
2738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_MultiProcessor_EnterMuteMode() API can be helpful to enter the UART in mute mode.
2739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_MultiProcessor_ExitMuteMode() API can be helpful to exit the UART mute mode by software
2740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_HalfDuplex_EnableTransmitter() API to enable the UART transmitter and disables the UART
2741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_HalfDuplex_EnableReceiver() API to enable the UART receiver and disables the UART trans
2742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 184


2743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @endverbatim
2744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
2745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Transmits break characters.
2749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_SendBreak(UART_HandleTypeDef *huart)
2754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 6498              		.loc 1 2754 1
 6499              		.cfi_startproc
 6500              		@ args = 0, pretend = 0, frame = 32
 6501              		@ frame_needed = 1, uses_anonymous_args = 0
 6502              		@ link register save eliminated.
 6503 0000 80B4     		push	{r7}
 6504              	.LCFI189:
 6505              		.cfi_def_cfa_offset 4
 6506              		.cfi_offset 7, -4
 6507 0002 89B0     		sub	sp, sp, #36
 6508              	.LCFI190:
 6509              		.cfi_def_cfa_offset 40
 6510 0004 00AF     		add	r7, sp, #0
 6511              	.LCFI191:
 6512              		.cfi_def_cfa_register 7
 6513 0006 7860     		str	r0, [r7, #4]
2755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
2756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
2757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
2759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 6514              		.loc 1 2759 3
 6515 0008 7B68     		ldr	r3, [r7, #4]
 6516 000a 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 6517 000e 012B     		cmp	r3, #1
 6518 0010 01D1     		bne	.L338
 6519              		.loc 1 2759 3 is_stmt 0 discriminator 1
 6520 0012 0223     		movs	r3, #2
 6521 0014 2AE0     		b	.L339
 6522              	.L338:
 6523              		.loc 1 2759 3 discriminator 2
 6524 0016 7B68     		ldr	r3, [r7, #4]
 6525 0018 0122     		movs	r2, #1
 6526 001a 83F83C20 		strb	r2, [r3, #60]
2760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 6527              		.loc 1 2761 17 is_stmt 1 discriminator 2
 6528 001e 7B68     		ldr	r3, [r7, #4]
 6529 0020 2422     		movs	r2, #36
 6530 0022 83F83D20 		strb	r2, [r3, #61]
 6531              	.L342:
 6532              	.LBB544:
2762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Send break characters */
2764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_SBK);
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 185


 6533              		.loc 1 2764 3 discriminator 1
 6534 0026 7B68     		ldr	r3, [r7, #4]
 6535 0028 1B68     		ldr	r3, [r3]
 6536 002a 0C33     		adds	r3, r3, #12
 6537 002c FB60     		str	r3, [r7, #12]
 6538              	.LBB545:
 6539              	.LBB546:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6540              		.loc 2 1072 4 discriminator 1
 6541 002e FB68     		ldr	r3, [r7, #12]
 6542              		.syntax unified
 6543              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6544 0030 53E8003F 		ldrex r3, [r3]
 6545              	@ 0 "" 2
 6546              		.thumb
 6547              		.syntax unified
 6548 0034 BB60     		str	r3, [r7, #8]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 6549              		.loc 2 1073 10 discriminator 1
 6550 0036 BB68     		ldr	r3, [r7, #8]
 6551              	.LBE546:
 6552              	.LBE545:
 6553              		.loc 1 2764 3 discriminator 1
 6554 0038 43F00103 		orr	r3, r3, #1
 6555 003c FB61     		str	r3, [r7, #28]
 6556 003e 7B68     		ldr	r3, [r7, #4]
 6557 0040 1B68     		ldr	r3, [r3]
 6558 0042 0C33     		adds	r3, r3, #12
 6559 0044 FA69     		ldr	r2, [r7, #28]
 6560 0046 BA61     		str	r2, [r7, #24]
 6561 0048 7B61     		str	r3, [r7, #20]
 6562              	.LBB547:
 6563              	.LBB548:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6564              		.loc 2 1123 4 discriminator 1
 6565 004a 7969     		ldr	r1, [r7, #20]
 6566 004c BA69     		ldr	r2, [r7, #24]
 6567              		.syntax unified
 6568              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6569 004e 41E80023 		strex r3, r2, [r1]
 6570              	@ 0 "" 2
 6571              		.thumb
 6572              		.syntax unified
 6573 0052 3B61     		str	r3, [r7, #16]
 6574              		.loc 2 1124 10 discriminator 1
 6575 0054 3B69     		ldr	r3, [r7, #16]
 6576              	.LBE548:
 6577              	.LBE547:
 6578              		.loc 1 2764 3 discriminator 1
 6579 0056 002B     		cmp	r3, #0
 6580 0058 E5D1     		bne	.L342
 6581              	.LBE544:
2765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 6582              		.loc 1 2766 17
 6583 005a 7B68     		ldr	r3, [r7, #4]
 6584 005c 2022     		movs	r2, #32
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 186


 6585 005e 83F83D20 		strb	r2, [r3, #61]
2767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
2769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 6586              		.loc 1 2769 3
 6587 0062 7B68     		ldr	r3, [r7, #4]
 6588 0064 0022     		movs	r2, #0
 6589 0066 83F83C20 		strb	r2, [r3, #60]
2770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 6590              		.loc 1 2771 10
 6591 006a 0023     		movs	r3, #0
 6592              	.L339:
2772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 6593              		.loc 1 2772 1
 6594 006c 1846     		mov	r0, r3
 6595 006e 2437     		adds	r7, r7, #36
 6596              	.LCFI192:
 6597              		.cfi_def_cfa_offset 4
 6598 0070 BD46     		mov	sp, r7
 6599              	.LCFI193:
 6600              		.cfi_def_cfa_register 13
 6601              		@ sp needed
 6602 0072 5DF8047B 		ldr	r7, [sp], #4
 6603              	.LCFI194:
 6604              		.cfi_restore 7
 6605              		.cfi_def_cfa_offset 0
 6606 0076 7047     		bx	lr
 6607              		.cfi_endproc
 6608              	.LFE251:
 6610              		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 6611              		.align	1
 6612              		.global	HAL_MultiProcessor_EnterMuteMode
 6613              		.syntax unified
 6614              		.thumb
 6615              		.thumb_func
 6616              		.fpu fpv4-sp-d16
 6618              	HAL_MultiProcessor_EnterMuteMode:
 6619              	.LFB252:
2773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Enters the UART in mute mode.
2776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
2781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 6620              		.loc 1 2781 1
 6621              		.cfi_startproc
 6622              		@ args = 0, pretend = 0, frame = 32
 6623              		@ frame_needed = 1, uses_anonymous_args = 0
 6624              		@ link register save eliminated.
 6625 0000 80B4     		push	{r7}
 6626              	.LCFI195:
 6627              		.cfi_def_cfa_offset 4
 6628              		.cfi_offset 7, -4
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 187


 6629 0002 89B0     		sub	sp, sp, #36
 6630              	.LCFI196:
 6631              		.cfi_def_cfa_offset 40
 6632 0004 00AF     		add	r7, sp, #0
 6633              	.LCFI197:
 6634              		.cfi_def_cfa_register 7
 6635 0006 7860     		str	r0, [r7, #4]
2782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
2783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
2784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
2786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 6636              		.loc 1 2786 3
 6637 0008 7B68     		ldr	r3, [r7, #4]
 6638 000a 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 6639 000e 012B     		cmp	r3, #1
 6640 0010 01D1     		bne	.L344
 6641              		.loc 1 2786 3 is_stmt 0 discriminator 1
 6642 0012 0223     		movs	r3, #2
 6643 0014 2AE0     		b	.L345
 6644              	.L344:
 6645              		.loc 1 2786 3 discriminator 2
 6646 0016 7B68     		ldr	r3, [r7, #4]
 6647 0018 0122     		movs	r2, #1
 6648 001a 83F83C20 		strb	r2, [r3, #60]
2787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 6649              		.loc 1 2788 17 is_stmt 1 discriminator 2
 6650 001e 7B68     		ldr	r3, [r7, #4]
 6651 0020 2422     		movs	r2, #36
 6652 0022 83F83D20 		strb	r2, [r3, #61]
 6653              	.L348:
 6654              	.LBB549:
2789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the USART mute mode  by setting the RWU bit in the CR1 register */
2791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RWU);
 6655              		.loc 1 2791 3 discriminator 1
 6656 0026 7B68     		ldr	r3, [r7, #4]
 6657 0028 1B68     		ldr	r3, [r3]
 6658 002a 0C33     		adds	r3, r3, #12
 6659 002c FB60     		str	r3, [r7, #12]
 6660              	.LBB550:
 6661              	.LBB551:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6662              		.loc 2 1072 4 discriminator 1
 6663 002e FB68     		ldr	r3, [r7, #12]
 6664              		.syntax unified
 6665              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6666 0030 53E8003F 		ldrex r3, [r3]
 6667              	@ 0 "" 2
 6668              		.thumb
 6669              		.syntax unified
 6670 0034 BB60     		str	r3, [r7, #8]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 6671              		.loc 2 1073 10 discriminator 1
 6672 0036 BB68     		ldr	r3, [r7, #8]
 6673              	.LBE551:
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 188


 6674              	.LBE550:
 6675              		.loc 1 2791 3 discriminator 1
 6676 0038 43F00203 		orr	r3, r3, #2
 6677 003c FB61     		str	r3, [r7, #28]
 6678 003e 7B68     		ldr	r3, [r7, #4]
 6679 0040 1B68     		ldr	r3, [r3]
 6680 0042 0C33     		adds	r3, r3, #12
 6681 0044 FA69     		ldr	r2, [r7, #28]
 6682 0046 BA61     		str	r2, [r7, #24]
 6683 0048 7B61     		str	r3, [r7, #20]
 6684              	.LBB552:
 6685              	.LBB553:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6686              		.loc 2 1123 4 discriminator 1
 6687 004a 7969     		ldr	r1, [r7, #20]
 6688 004c BA69     		ldr	r2, [r7, #24]
 6689              		.syntax unified
 6690              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6691 004e 41E80023 		strex r3, r2, [r1]
 6692              	@ 0 "" 2
 6693              		.thumb
 6694              		.syntax unified
 6695 0052 3B61     		str	r3, [r7, #16]
 6696              		.loc 2 1124 10 discriminator 1
 6697 0054 3B69     		ldr	r3, [r7, #16]
 6698              	.LBE553:
 6699              	.LBE552:
 6700              		.loc 1 2791 3 discriminator 1
 6701 0056 002B     		cmp	r3, #0
 6702 0058 E5D1     		bne	.L348
 6703              	.LBE549:
2792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 6704              		.loc 1 2793 17
 6705 005a 7B68     		ldr	r3, [r7, #4]
 6706 005c 2022     		movs	r2, #32
 6707 005e 83F83D20 		strb	r2, [r3, #61]
2794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
2796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 6708              		.loc 1 2796 3
 6709 0062 7B68     		ldr	r3, [r7, #4]
 6710 0064 0022     		movs	r2, #0
 6711 0066 83F83C20 		strb	r2, [r3, #60]
2797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 6712              		.loc 1 2798 10
 6713 006a 0023     		movs	r3, #0
 6714              	.L345:
2799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 6715              		.loc 1 2799 1
 6716 006c 1846     		mov	r0, r3
 6717 006e 2437     		adds	r7, r7, #36
 6718              	.LCFI198:
 6719              		.cfi_def_cfa_offset 4
 6720 0070 BD46     		mov	sp, r7
 6721              	.LCFI199:
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 189


 6722              		.cfi_def_cfa_register 13
 6723              		@ sp needed
 6724 0072 5DF8047B 		ldr	r7, [sp], #4
 6725              	.LCFI200:
 6726              		.cfi_restore 7
 6727              		.cfi_def_cfa_offset 0
 6728 0076 7047     		bx	lr
 6729              		.cfi_endproc
 6730              	.LFE252:
 6732              		.section	.text.HAL_MultiProcessor_ExitMuteMode,"ax",%progbits
 6733              		.align	1
 6734              		.global	HAL_MultiProcessor_ExitMuteMode
 6735              		.syntax unified
 6736              		.thumb
 6737              		.thumb_func
 6738              		.fpu fpv4-sp-d16
 6740              	HAL_MultiProcessor_ExitMuteMode:
 6741              	.LFB253:
2800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Exits the UART mute mode: wake up software.
2803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_ExitMuteMode(UART_HandleTypeDef *huart)
2808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 6742              		.loc 1 2808 1
 6743              		.cfi_startproc
 6744              		@ args = 0, pretend = 0, frame = 32
 6745              		@ frame_needed = 1, uses_anonymous_args = 0
 6746              		@ link register save eliminated.
 6747 0000 80B4     		push	{r7}
 6748              	.LCFI201:
 6749              		.cfi_def_cfa_offset 4
 6750              		.cfi_offset 7, -4
 6751 0002 89B0     		sub	sp, sp, #36
 6752              	.LCFI202:
 6753              		.cfi_def_cfa_offset 40
 6754 0004 00AF     		add	r7, sp, #0
 6755              	.LCFI203:
 6756              		.cfi_def_cfa_register 7
 6757 0006 7860     		str	r0, [r7, #4]
2809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
2810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
2811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
2813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 6758              		.loc 1 2813 3
 6759 0008 7B68     		ldr	r3, [r7, #4]
 6760 000a 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 6761 000e 012B     		cmp	r3, #1
 6762 0010 01D1     		bne	.L350
 6763              		.loc 1 2813 3 is_stmt 0 discriminator 1
 6764 0012 0223     		movs	r3, #2
 6765 0014 2AE0     		b	.L351
 6766              	.L350:
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 190


 6767              		.loc 1 2813 3 discriminator 2
 6768 0016 7B68     		ldr	r3, [r7, #4]
 6769 0018 0122     		movs	r2, #1
 6770 001a 83F83C20 		strb	r2, [r3, #60]
2814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 6771              		.loc 1 2815 17 is_stmt 1 discriminator 2
 6772 001e 7B68     		ldr	r3, [r7, #4]
 6773 0020 2422     		movs	r2, #36
 6774 0022 83F83D20 		strb	r2, [r3, #61]
 6775              	.L354:
 6776              	.LBB554:
2816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the USART mute mode by clearing the RWU bit in the CR1 register */
2818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_RWU);
 6777              		.loc 1 2818 3 discriminator 1
 6778 0026 7B68     		ldr	r3, [r7, #4]
 6779 0028 1B68     		ldr	r3, [r3]
 6780 002a 0C33     		adds	r3, r3, #12
 6781 002c FB60     		str	r3, [r7, #12]
 6782              	.LBB555:
 6783              	.LBB556:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6784              		.loc 2 1072 4 discriminator 1
 6785 002e FB68     		ldr	r3, [r7, #12]
 6786              		.syntax unified
 6787              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6788 0030 53E8003F 		ldrex r3, [r3]
 6789              	@ 0 "" 2
 6790              		.thumb
 6791              		.syntax unified
 6792 0034 BB60     		str	r3, [r7, #8]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 6793              		.loc 2 1073 10 discriminator 1
 6794 0036 BB68     		ldr	r3, [r7, #8]
 6795              	.LBE556:
 6796              	.LBE555:
 6797              		.loc 1 2818 3 discriminator 1
 6798 0038 23F00203 		bic	r3, r3, #2
 6799 003c FB61     		str	r3, [r7, #28]
 6800 003e 7B68     		ldr	r3, [r7, #4]
 6801 0040 1B68     		ldr	r3, [r3]
 6802 0042 0C33     		adds	r3, r3, #12
 6803 0044 FA69     		ldr	r2, [r7, #28]
 6804 0046 BA61     		str	r2, [r7, #24]
 6805 0048 7B61     		str	r3, [r7, #20]
 6806              	.LBB557:
 6807              	.LBB558:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6808              		.loc 2 1123 4 discriminator 1
 6809 004a 7969     		ldr	r1, [r7, #20]
 6810 004c BA69     		ldr	r2, [r7, #24]
 6811              		.syntax unified
 6812              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6813 004e 41E80023 		strex r3, r2, [r1]
 6814              	@ 0 "" 2
 6815              		.thumb
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 191


 6816              		.syntax unified
 6817 0052 3B61     		str	r3, [r7, #16]
 6818              		.loc 2 1124 10 discriminator 1
 6819 0054 3B69     		ldr	r3, [r7, #16]
 6820              	.LBE558:
 6821              	.LBE557:
 6822              		.loc 1 2818 3 discriminator 1
 6823 0056 002B     		cmp	r3, #0
 6824 0058 E5D1     		bne	.L354
 6825              	.LBE554:
2819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 6826              		.loc 1 2820 17
 6827 005a 7B68     		ldr	r3, [r7, #4]
 6828 005c 2022     		movs	r2, #32
 6829 005e 83F83D20 		strb	r2, [r3, #61]
2821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
2823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 6830              		.loc 1 2823 3
 6831 0062 7B68     		ldr	r3, [r7, #4]
 6832 0064 0022     		movs	r2, #0
 6833 0066 83F83C20 		strb	r2, [r3, #60]
2824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 6834              		.loc 1 2825 10
 6835 006a 0023     		movs	r3, #0
 6836              	.L351:
2826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 6837              		.loc 1 2826 1
 6838 006c 1846     		mov	r0, r3
 6839 006e 2437     		adds	r7, r7, #36
 6840              	.LCFI204:
 6841              		.cfi_def_cfa_offset 4
 6842 0070 BD46     		mov	sp, r7
 6843              	.LCFI205:
 6844              		.cfi_def_cfa_register 13
 6845              		@ sp needed
 6846 0072 5DF8047B 		ldr	r7, [sp], #4
 6847              	.LCFI206:
 6848              		.cfi_restore 7
 6849              		.cfi_def_cfa_offset 0
 6850 0076 7047     		bx	lr
 6851              		.cfi_endproc
 6852              	.LFE253:
 6854              		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 6855              		.align	1
 6856              		.global	HAL_HalfDuplex_EnableTransmitter
 6857              		.syntax unified
 6858              		.thumb
 6859              		.thumb_func
 6860              		.fpu fpv4-sp-d16
 6862              	HAL_HalfDuplex_EnableTransmitter:
 6863              	.LFB254:
2827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Enables the UART transmitter and disables the UART receiver.
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 192


2830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
2835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 6864              		.loc 1 2835 1
 6865              		.cfi_startproc
 6866              		@ args = 0, pretend = 0, frame = 16
 6867              		@ frame_needed = 1, uses_anonymous_args = 0
 6868              		@ link register save eliminated.
 6869 0000 80B4     		push	{r7}
 6870              	.LCFI207:
 6871              		.cfi_def_cfa_offset 4
 6872              		.cfi_offset 7, -4
 6873 0002 85B0     		sub	sp, sp, #20
 6874              	.LCFI208:
 6875              		.cfi_def_cfa_offset 24
 6876 0004 00AF     		add	r7, sp, #0
 6877              	.LCFI209:
 6878              		.cfi_def_cfa_register 7
 6879 0006 7860     		str	r0, [r7, #4]
2836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
 6880              		.loc 1 2836 12
 6881 0008 0023     		movs	r3, #0
 6882 000a FB60     		str	r3, [r7, #12]
2837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
2839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 6883              		.loc 1 2839 3
 6884 000c 7B68     		ldr	r3, [r7, #4]
 6885 000e 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 6886 0012 012B     		cmp	r3, #1
 6887 0014 01D1     		bne	.L356
 6888              		.loc 1 2839 3 is_stmt 0 discriminator 1
 6889 0016 0223     		movs	r3, #2
 6890 0018 20E0     		b	.L357
 6891              	.L356:
 6892              		.loc 1 2839 3 discriminator 2
 6893 001a 7B68     		ldr	r3, [r7, #4]
 6894 001c 0122     		movs	r2, #1
 6895 001e 83F83C20 		strb	r2, [r3, #60]
2840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 6896              		.loc 1 2841 17 is_stmt 1 discriminator 2
 6897 0022 7B68     		ldr	r3, [r7, #4]
 6898 0024 2422     		movs	r2, #36
 6899 0026 83F83D20 		strb	r2, [r3, #61]
2842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
2844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg = huart->Instance->CR1;
 6900              		.loc 1 2844 17 discriminator 2
 6901 002a 7B68     		ldr	r3, [r7, #4]
 6902 002c 1B68     		ldr	r3, [r3]
 6903              		.loc 1 2844 10 discriminator 2
 6904 002e DB68     		ldr	r3, [r3, #12]
 6905 0030 FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 193


2845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Clear TE and RE bits */
2847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR1_TE | USART_CR1_RE));
 6906              		.loc 1 2847 10 discriminator 2
 6907 0032 FB68     		ldr	r3, [r7, #12]
 6908 0034 23F00C03 		bic	r3, r3, #12
 6909 0038 FB60     		str	r3, [r7, #12]
2848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
2850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg |= (uint32_t)USART_CR1_TE;
 6910              		.loc 1 2850 10 discriminator 2
 6911 003a FB68     		ldr	r3, [r7, #12]
 6912 003c 43F00803 		orr	r3, r3, #8
 6913 0040 FB60     		str	r3, [r7, #12]
2851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Write to USART CR1 */
2853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   WRITE_REG(huart->Instance->CR1, (uint32_t)tmpreg);
 6914              		.loc 1 2853 3 discriminator 2
 6915 0042 7B68     		ldr	r3, [r7, #4]
 6916 0044 1B68     		ldr	r3, [r3]
 6917 0046 FA68     		ldr	r2, [r7, #12]
 6918 0048 DA60     		str	r2, [r3, #12]
2854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 6919              		.loc 1 2855 17 discriminator 2
 6920 004a 7B68     		ldr	r3, [r7, #4]
 6921 004c 2022     		movs	r2, #32
 6922 004e 83F83D20 		strb	r2, [r3, #61]
2856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
2858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 6923              		.loc 1 2858 3 discriminator 2
 6924 0052 7B68     		ldr	r3, [r7, #4]
 6925 0054 0022     		movs	r2, #0
 6926 0056 83F83C20 		strb	r2, [r3, #60]
2859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 6927              		.loc 1 2860 10 discriminator 2
 6928 005a 0023     		movs	r3, #0
 6929              	.L357:
2861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 6930              		.loc 1 2861 1
 6931 005c 1846     		mov	r0, r3
 6932 005e 1437     		adds	r7, r7, #20
 6933              	.LCFI210:
 6934              		.cfi_def_cfa_offset 4
 6935 0060 BD46     		mov	sp, r7
 6936              	.LCFI211:
 6937              		.cfi_def_cfa_register 13
 6938              		@ sp needed
 6939 0062 5DF8047B 		ldr	r7, [sp], #4
 6940              	.LCFI212:
 6941              		.cfi_restore 7
 6942              		.cfi_def_cfa_offset 0
 6943 0066 7047     		bx	lr
 6944              		.cfi_endproc
 6945              	.LFE254:
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 194


 6947              		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 6948              		.align	1
 6949              		.global	HAL_HalfDuplex_EnableReceiver
 6950              		.syntax unified
 6951              		.thumb
 6952              		.thumb_func
 6953              		.fpu fpv4-sp-d16
 6955              	HAL_HalfDuplex_EnableReceiver:
 6956              	.LFB255:
2862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Enables the UART receiver and disables the UART transmitter.
2865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
2870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 6957              		.loc 1 2870 1
 6958              		.cfi_startproc
 6959              		@ args = 0, pretend = 0, frame = 16
 6960              		@ frame_needed = 1, uses_anonymous_args = 0
 6961              		@ link register save eliminated.
 6962 0000 80B4     		push	{r7}
 6963              	.LCFI213:
 6964              		.cfi_def_cfa_offset 4
 6965              		.cfi_offset 7, -4
 6966 0002 85B0     		sub	sp, sp, #20
 6967              	.LCFI214:
 6968              		.cfi_def_cfa_offset 24
 6969 0004 00AF     		add	r7, sp, #0
 6970              	.LCFI215:
 6971              		.cfi_def_cfa_register 7
 6972 0006 7860     		str	r0, [r7, #4]
2871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
 6973              		.loc 1 2871 12
 6974 0008 0023     		movs	r3, #0
 6975 000a FB60     		str	r3, [r7, #12]
2872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
2874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 6976              		.loc 1 2874 3
 6977 000c 7B68     		ldr	r3, [r7, #4]
 6978 000e 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 6979 0012 012B     		cmp	r3, #1
 6980 0014 01D1     		bne	.L359
 6981              		.loc 1 2874 3 is_stmt 0 discriminator 1
 6982 0016 0223     		movs	r3, #2
 6983 0018 20E0     		b	.L360
 6984              	.L359:
 6985              		.loc 1 2874 3 discriminator 2
 6986 001a 7B68     		ldr	r3, [r7, #4]
 6987 001c 0122     		movs	r2, #1
 6988 001e 83F83C20 		strb	r2, [r3, #60]
2875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 6989              		.loc 1 2876 17 is_stmt 1 discriminator 2
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 195


 6990 0022 7B68     		ldr	r3, [r7, #4]
 6991 0024 2422     		movs	r2, #36
 6992 0026 83F83D20 		strb	r2, [r3, #61]
2877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
2879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg = huart->Instance->CR1;
 6993              		.loc 1 2879 17 discriminator 2
 6994 002a 7B68     		ldr	r3, [r7, #4]
 6995 002c 1B68     		ldr	r3, [r3]
 6996              		.loc 1 2879 10 discriminator 2
 6997 002e DB68     		ldr	r3, [r3, #12]
 6998 0030 FB60     		str	r3, [r7, #12]
2880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Clear TE and RE bits */
2882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR1_TE | USART_CR1_RE));
 6999              		.loc 1 2882 10 discriminator 2
 7000 0032 FB68     		ldr	r3, [r7, #12]
 7001 0034 23F00C03 		bic	r3, r3, #12
 7002 0038 FB60     		str	r3, [r7, #12]
2883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
2885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg |= (uint32_t)USART_CR1_RE;
 7003              		.loc 1 2885 10 discriminator 2
 7004 003a FB68     		ldr	r3, [r7, #12]
 7005 003c 43F00403 		orr	r3, r3, #4
 7006 0040 FB60     		str	r3, [r7, #12]
2886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Write to USART CR1 */
2888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   WRITE_REG(huart->Instance->CR1, (uint32_t)tmpreg);
 7007              		.loc 1 2888 3 discriminator 2
 7008 0042 7B68     		ldr	r3, [r7, #4]
 7009 0044 1B68     		ldr	r3, [r3]
 7010 0046 FA68     		ldr	r2, [r7, #12]
 7011 0048 DA60     		str	r2, [r3, #12]
2889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 7012              		.loc 1 2890 17 discriminator 2
 7013 004a 7B68     		ldr	r3, [r7, #4]
 7014 004c 2022     		movs	r2, #32
 7015 004e 83F83D20 		strb	r2, [r3, #61]
2891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
2893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 7016              		.loc 1 2893 3 discriminator 2
 7017 0052 7B68     		ldr	r3, [r7, #4]
 7018 0054 0022     		movs	r2, #0
 7019 0056 83F83C20 		strb	r2, [r3, #60]
2894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 7020              		.loc 1 2895 10 discriminator 2
 7021 005a 0023     		movs	r3, #0
 7022              	.L360:
2896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 7023              		.loc 1 2896 1
 7024 005c 1846     		mov	r0, r3
 7025 005e 1437     		adds	r7, r7, #20
 7026              	.LCFI216:
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 196


 7027              		.cfi_def_cfa_offset 4
 7028 0060 BD46     		mov	sp, r7
 7029              	.LCFI217:
 7030              		.cfi_def_cfa_register 13
 7031              		@ sp needed
 7032 0062 5DF8047B 		ldr	r7, [sp], #4
 7033              	.LCFI218:
 7034              		.cfi_restore 7
 7035              		.cfi_def_cfa_offset 0
 7036 0066 7047     		bx	lr
 7037              		.cfi_endproc
 7038              	.LFE255:
 7040              		.section	.text.HAL_UART_GetState,"ax",%progbits
 7041              		.align	1
 7042              		.global	HAL_UART_GetState
 7043              		.syntax unified
 7044              		.thumb
 7045              		.thumb_func
 7046              		.fpu fpv4-sp-d16
 7048              	HAL_UART_GetState:
 7049              	.LFB256:
2897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
2900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group4 Peripheral State and Errors functions
2903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *  @brief   UART State and Errors functions
2904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
2905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @verbatim
2906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
2907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                  ##### Peripheral State and Errors functions #####
2908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
2909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  [..]
2910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    This subsection provides a set of functions allowing to return the State of
2911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    UART communication process, return Peripheral Errors occurred during communication
2912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    process
2913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    (+) HAL_UART_GetState() API can be helpful to check in run-time the state of the UART peripheral
2914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    (+) HAL_UART_GetError() check in run-time errors that could be occurred during communication.
2915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @endverbatim
2917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
2918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Returns the UART state.
2922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL state
2925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(UART_HandleTypeDef *huart)
2927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 7050              		.loc 1 2927 1
 7051              		.cfi_startproc
 7052              		@ args = 0, pretend = 0, frame = 16
 7053              		@ frame_needed = 1, uses_anonymous_args = 0
 7054              		@ link register save eliminated.
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 197


 7055 0000 80B4     		push	{r7}
 7056              	.LCFI219:
 7057              		.cfi_def_cfa_offset 4
 7058              		.cfi_offset 7, -4
 7059 0002 85B0     		sub	sp, sp, #20
 7060              	.LCFI220:
 7061              		.cfi_def_cfa_offset 24
 7062 0004 00AF     		add	r7, sp, #0
 7063              	.LCFI221:
 7064              		.cfi_def_cfa_register 7
 7065 0006 7860     		str	r0, [r7, #4]
2928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t temp1 = 0x00U, temp2 = 0x00U;
 7066              		.loc 1 2928 12
 7067 0008 0023     		movs	r3, #0
 7068 000a FB60     		str	r3, [r7, #12]
 7069              		.loc 1 2928 27
 7070 000c 0023     		movs	r3, #0
 7071 000e BB60     		str	r3, [r7, #8]
2929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   temp1 = huart->gState;
 7072              		.loc 1 2929 16
 7073 0010 7B68     		ldr	r3, [r7, #4]
 7074 0012 93F83D30 		ldrb	r3, [r3, #61]
 7075 0016 DBB2     		uxtb	r3, r3
 7076              		.loc 1 2929 9
 7077 0018 FB60     		str	r3, [r7, #12]
2930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   temp2 = huart->RxState;
 7078              		.loc 1 2930 16
 7079 001a 7B68     		ldr	r3, [r7, #4]
 7080 001c 93F83E30 		ldrb	r3, [r3, #62]
 7081 0020 DBB2     		uxtb	r3, r3
 7082              		.loc 1 2930 9
 7083 0022 BB60     		str	r3, [r7, #8]
2931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
 7084              		.loc 1 2932 10
 7085 0024 FB68     		ldr	r3, [r7, #12]
 7086 0026 DAB2     		uxtb	r2, r3
 7087 0028 BB68     		ldr	r3, [r7, #8]
 7088 002a DBB2     		uxtb	r3, r3
 7089 002c 1343     		orrs	r3, r3, r2
 7090 002e DBB2     		uxtb	r3, r3
2933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 7091              		.loc 1 2933 1
 7092 0030 1846     		mov	r0, r3
 7093 0032 1437     		adds	r7, r7, #20
 7094              	.LCFI222:
 7095              		.cfi_def_cfa_offset 4
 7096 0034 BD46     		mov	sp, r7
 7097              	.LCFI223:
 7098              		.cfi_def_cfa_register 13
 7099              		@ sp needed
 7100 0036 5DF8047B 		ldr	r7, [sp], #4
 7101              	.LCFI224:
 7102              		.cfi_restore 7
 7103              		.cfi_def_cfa_offset 0
 7104 003a 7047     		bx	lr
 7105              		.cfi_endproc
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 198


 7106              	.LFE256:
 7108              		.section	.text.HAL_UART_GetError,"ax",%progbits
 7109              		.align	1
 7110              		.global	HAL_UART_GetError
 7111              		.syntax unified
 7112              		.thumb
 7113              		.thumb_func
 7114              		.fpu fpv4-sp-d16
 7116              	HAL_UART_GetError:
 7117              	.LFB257:
2934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Return the UART error code
2937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified UART.
2939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval UART Error Code
2940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** uint32_t HAL_UART_GetError(UART_HandleTypeDef *huart)
2942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 7118              		.loc 1 2942 1
 7119              		.cfi_startproc
 7120              		@ args = 0, pretend = 0, frame = 8
 7121              		@ frame_needed = 1, uses_anonymous_args = 0
 7122              		@ link register save eliminated.
 7123 0000 80B4     		push	{r7}
 7124              	.LCFI225:
 7125              		.cfi_def_cfa_offset 4
 7126              		.cfi_offset 7, -4
 7127 0002 83B0     		sub	sp, sp, #12
 7128              	.LCFI226:
 7129              		.cfi_def_cfa_offset 16
 7130 0004 00AF     		add	r7, sp, #0
 7131              	.LCFI227:
 7132              		.cfi_def_cfa_register 7
 7133 0006 7860     		str	r0, [r7, #4]
2943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return huart->ErrorCode;
 7134              		.loc 1 2943 15
 7135 0008 7B68     		ldr	r3, [r7, #4]
 7136 000a 1B6C     		ldr	r3, [r3, #64]
2944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 7137              		.loc 1 2944 1
 7138 000c 1846     		mov	r0, r3
 7139 000e 0C37     		adds	r7, r7, #12
 7140              	.LCFI228:
 7141              		.cfi_def_cfa_offset 4
 7142 0010 BD46     		mov	sp, r7
 7143              	.LCFI229:
 7144              		.cfi_def_cfa_register 13
 7145              		@ sp needed
 7146 0012 5DF8047B 		ldr	r7, [sp], #4
 7147              	.LCFI230:
 7148              		.cfi_restore 7
 7149              		.cfi_def_cfa_offset 0
 7150 0016 7047     		bx	lr
 7151              		.cfi_endproc
 7152              	.LFE257:
 7154              		.section	.text.UART_DMATransmitCplt,"ax",%progbits
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 199


 7155              		.align	1
 7156              		.syntax unified
 7157              		.thumb
 7158              		.thumb_func
 7159              		.fpu fpv4-sp-d16
 7161              	UART_DMATransmitCplt:
 7162              	.LFB258:
2945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
2948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
2952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Private_Functions UART Private Functions
2955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
2956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initialize the callbacks to their default values.
2960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval none
2962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** void UART_InitCallbacksToDefault(UART_HandleTypeDef *huart)
2965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Init the UART Callback settings */
2967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxHalfCpltCallback        = HAL_UART_TxHalfCpltCallback;        /* Legacy weak TxHalfCpltC
2968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxCpltCallback            = HAL_UART_TxCpltCallback;            /* Legacy weak TxCpltCallb
2969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxHalfCpltCallback        = HAL_UART_RxHalfCpltCallback;        /* Legacy weak RxHalfCpltC
2970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxCpltCallback            = HAL_UART_RxCpltCallback;            /* Legacy weak RxCpltCallb
2971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCallback             = HAL_UART_ErrorCallback;             /* Legacy weak ErrorCallba
2972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortCpltCallback         = HAL_UART_AbortCpltCallback;         /* Legacy weak AbortCpltCa
2973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak AbortTransm
2974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortReceiveCpltCallback  = HAL_UART_AbortReceiveCpltCallback;  /* Legacy weak AbortReceiv
2975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxEventCallback           = HAL_UARTEx_RxEventCallback;         /* Legacy weak RxEventCall
2976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART transmit process complete callback.
2982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
2983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
2984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
2987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 7163              		.loc 1 2987 1
 7164              		.cfi_startproc
 7165              		@ args = 0, pretend = 0, frame = 64
 7166              		@ frame_needed = 1, uses_anonymous_args = 0
 7167 0000 80B5     		push	{r7, lr}
 7168              	.LCFI231:
 7169              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 200


 7170              		.cfi_offset 7, -8
 7171              		.cfi_offset 14, -4
 7172 0002 90B0     		sub	sp, sp, #64
 7173              	.LCFI232:
 7174              		.cfi_def_cfa_offset 72
 7175 0004 00AF     		add	r7, sp, #0
 7176              	.LCFI233:
 7177              		.cfi_def_cfa_register 7
 7178 0006 7860     		str	r0, [r7, #4]
2988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 7179              		.loc 1 2988 23
 7180 0008 7B68     		ldr	r3, [r7, #4]
 7181 000a 9B6B     		ldr	r3, [r3, #56]
 7182 000c FB63     		str	r3, [r7, #60]
2989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Normal mode*/
2990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((hdma->Instance->CR & DMA_SxCR_CIRC) == 0U)
 7183              		.loc 1 2990 12
 7184 000e 7B68     		ldr	r3, [r7, #4]
 7185 0010 1B68     		ldr	r3, [r3]
 7186              		.loc 1 2990 22
 7187 0012 1B68     		ldr	r3, [r3]
 7188              		.loc 1 2990 27
 7189 0014 03F48073 		and	r3, r3, #256
 7190              		.loc 1 2990 6
 7191 0018 002B     		cmp	r3, #0
 7192 001a 37D1     		bne	.L366
2991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = 0x00U;
 7193              		.loc 1 2992 24
 7194 001c FB6B     		ldr	r3, [r7, #60]
 7195 001e 0022     		movs	r2, #0
 7196 0020 DA84     		strh	r2, [r3, #38]	@ movhi
 7197              	.L369:
 7198              	.LBB559:
2993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by setting the DMAT bit
2995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        in the UART CR3 register */
2996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 7199              		.loc 1 2996 5 discriminator 1
 7200 0022 FB6B     		ldr	r3, [r7, #60]
 7201 0024 1B68     		ldr	r3, [r3]
 7202 0026 1433     		adds	r3, r3, #20
 7203 0028 7B62     		str	r3, [r7, #36]
 7204              	.LBB560:
 7205              	.LBB561:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7206              		.loc 2 1072 4 discriminator 1
 7207 002a 7B6A     		ldr	r3, [r7, #36]
 7208              		.syntax unified
 7209              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7210 002c 53E8003F 		ldrex r3, [r3]
 7211              	@ 0 "" 2
 7212              		.thumb
 7213              		.syntax unified
 7214 0030 3B62     		str	r3, [r7, #32]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 7215              		.loc 2 1073 10 discriminator 1
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 201


 7216 0032 3B6A     		ldr	r3, [r7, #32]
 7217              	.LBE561:
 7218              	.LBE560:
 7219              		.loc 1 2996 5 discriminator 1
 7220 0034 23F08003 		bic	r3, r3, #128
 7221 0038 BB63     		str	r3, [r7, #56]
 7222 003a FB6B     		ldr	r3, [r7, #60]
 7223 003c 1B68     		ldr	r3, [r3]
 7224 003e 1433     		adds	r3, r3, #20
 7225 0040 BA6B     		ldr	r2, [r7, #56]
 7226 0042 3A63     		str	r2, [r7, #48]
 7227 0044 FB62     		str	r3, [r7, #44]
 7228              	.LBB562:
 7229              	.LBB563:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7230              		.loc 2 1123 4 discriminator 1
 7231 0046 F96A     		ldr	r1, [r7, #44]
 7232 0048 3A6B     		ldr	r2, [r7, #48]
 7233              		.syntax unified
 7234              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7235 004a 41E80023 		strex r3, r2, [r1]
 7236              	@ 0 "" 2
 7237              		.thumb
 7238              		.syntax unified
 7239 004e BB62     		str	r3, [r7, #40]
 7240              		.loc 2 1124 10 discriminator 1
 7241 0050 BB6A     		ldr	r3, [r7, #40]
 7242              	.LBE563:
 7243              	.LBE562:
 7244              		.loc 1 2996 5 discriminator 1
 7245 0052 002B     		cmp	r3, #0
 7246 0054 E5D1     		bne	.L369
 7247              	.L372:
 7248              	.LBE559:
 7249              	.LBB564:
2997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
2999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 7250              		.loc 1 2999 5 discriminator 1
 7251 0056 FB6B     		ldr	r3, [r7, #60]
 7252 0058 1B68     		ldr	r3, [r3]
 7253 005a 0C33     		adds	r3, r3, #12
 7254 005c 3B61     		str	r3, [r7, #16]
 7255              	.LBB565:
 7256              	.LBB566:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7257              		.loc 2 1072 4 discriminator 1
 7258 005e 3B69     		ldr	r3, [r7, #16]
 7259              		.syntax unified
 7260              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7261 0060 53E8003F 		ldrex r3, [r3]
 7262              	@ 0 "" 2
 7263              		.thumb
 7264              		.syntax unified
 7265 0064 FB60     		str	r3, [r7, #12]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 7266              		.loc 2 1073 10 discriminator 1
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 202


 7267 0066 FB68     		ldr	r3, [r7, #12]
 7268              	.LBE566:
 7269              	.LBE565:
 7270              		.loc 1 2999 5 discriminator 1
 7271 0068 43F04003 		orr	r3, r3, #64
 7272 006c 7B63     		str	r3, [r7, #52]
 7273 006e FB6B     		ldr	r3, [r7, #60]
 7274 0070 1B68     		ldr	r3, [r3]
 7275 0072 0C33     		adds	r3, r3, #12
 7276 0074 7A6B     		ldr	r2, [r7, #52]
 7277 0076 FA61     		str	r2, [r7, #28]
 7278 0078 BB61     		str	r3, [r7, #24]
 7279              	.LBB567:
 7280              	.LBB568:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7281              		.loc 2 1123 4 discriminator 1
 7282 007a B969     		ldr	r1, [r7, #24]
 7283 007c FA69     		ldr	r2, [r7, #28]
 7284              		.syntax unified
 7285              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7286 007e 41E80023 		strex r3, r2, [r1]
 7287              	@ 0 "" 2
 7288              		.thumb
 7289              		.syntax unified
 7290 0082 7B61     		str	r3, [r7, #20]
 7291              		.loc 2 1124 10 discriminator 1
 7292 0084 7B69     		ldr	r3, [r7, #20]
 7293              	.LBE568:
 7294              	.LBE567:
 7295              		.loc 1 2999 5 discriminator 1
 7296 0086 002B     		cmp	r3, #0
 7297 0088 E5D1     		bne	.L372
 7298              	.LBE564:
3000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Circular mode */
3003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
3004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*Call registered Tx complete callback*/
3007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxCpltCallback(huart);
3008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*Call legacy weak Tx complete callback*/
3010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
3011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 7299              		.loc 1 3013 1
 7300 008a 02E0     		b	.L374
 7301              	.L366:
3010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 7302              		.loc 1 3010 5
 7303 008c F86B     		ldr	r0, [r7, #60]
 7304 008e FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 7305              	.L374:
 7306              		.loc 1 3013 1
 7307 0092 00BF     		nop
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 203


 7308 0094 4037     		adds	r7, r7, #64
 7309              	.LCFI234:
 7310              		.cfi_def_cfa_offset 8
 7311 0096 BD46     		mov	sp, r7
 7312              	.LCFI235:
 7313              		.cfi_def_cfa_register 13
 7314              		@ sp needed
 7315 0098 80BD     		pop	{r7, pc}
 7316              		.cfi_endproc
 7317              	.LFE258:
 7319              		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 7320              		.align	1
 7321              		.syntax unified
 7322              		.thumb
 7323              		.thumb_func
 7324              		.fpu fpv4-sp-d16
 7326              	UART_DMATxHalfCplt:
 7327              	.LFB259:
3014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback
3017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
3018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
3019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
3020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
3022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 7328              		.loc 1 3022 1
 7329              		.cfi_startproc
 7330              		@ args = 0, pretend = 0, frame = 16
 7331              		@ frame_needed = 1, uses_anonymous_args = 0
 7332 0000 80B5     		push	{r7, lr}
 7333              	.LCFI236:
 7334              		.cfi_def_cfa_offset 8
 7335              		.cfi_offset 7, -8
 7336              		.cfi_offset 14, -4
 7337 0002 84B0     		sub	sp, sp, #16
 7338              	.LCFI237:
 7339              		.cfi_def_cfa_offset 24
 7340 0004 00AF     		add	r7, sp, #0
 7341              	.LCFI238:
 7342              		.cfi_def_cfa_register 7
 7343 0006 7860     		str	r0, [r7, #4]
3023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 7344              		.loc 1 3023 23
 7345 0008 7B68     		ldr	r3, [r7, #4]
 7346 000a 9B6B     		ldr	r3, [r3, #56]
 7347 000c FB60     		str	r3, [r7, #12]
3024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call registered Tx complete callback*/
3027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxHalfCpltCallback(huart);
3028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call legacy weak Tx complete callback*/
3030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
 7348              		.loc 1 3030 3
 7349 000e F868     		ldr	r0, [r7, #12]
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 204


 7350 0010 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
3031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 7351              		.loc 1 3032 1
 7352 0014 00BF     		nop
 7353 0016 1037     		adds	r7, r7, #16
 7354              	.LCFI239:
 7355              		.cfi_def_cfa_offset 8
 7356 0018 BD46     		mov	sp, r7
 7357              	.LCFI240:
 7358              		.cfi_def_cfa_register 13
 7359              		@ sp needed
 7360 001a 80BD     		pop	{r7, pc}
 7361              		.cfi_endproc
 7362              	.LFE259:
 7364              		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 7365              		.align	1
 7366              		.syntax unified
 7367              		.thumb
 7368              		.thumb_func
 7369              		.fpu fpv4-sp-d16
 7371              	UART_DMAReceiveCplt:
 7372              	.LFB260:
3033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART receive process complete callback.
3036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
3037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
3038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
3039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
3041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 7373              		.loc 1 3041 1
 7374              		.cfi_startproc
 7375              		@ args = 0, pretend = 0, frame = 112
 7376              		@ frame_needed = 1, uses_anonymous_args = 0
 7377 0000 80B5     		push	{r7, lr}
 7378              	.LCFI241:
 7379              		.cfi_def_cfa_offset 8
 7380              		.cfi_offset 7, -8
 7381              		.cfi_offset 14, -4
 7382 0002 9CB0     		sub	sp, sp, #112
 7383              	.LCFI242:
 7384              		.cfi_def_cfa_offset 120
 7385 0004 00AF     		add	r7, sp, #0
 7386              	.LCFI243:
 7387              		.cfi_def_cfa_register 7
 7388 0006 7860     		str	r0, [r7, #4]
3042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 7389              		.loc 1 3042 23
 7390 0008 7B68     		ldr	r3, [r7, #4]
 7391 000a 9B6B     		ldr	r3, [r3, #56]
 7392 000c FB66     		str	r3, [r7, #108]
3043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Normal mode*/
3044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((hdma->Instance->CR & DMA_SxCR_CIRC) == 0U)
 7393              		.loc 1 3044 12
 7394 000e 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 205


 7395 0010 1B68     		ldr	r3, [r3]
 7396              		.loc 1 3044 22
 7397 0012 1B68     		ldr	r3, [r3]
 7398              		.loc 1 3044 27
 7399 0014 03F48073 		and	r3, r3, #256
 7400              		.loc 1 3044 6
 7401 0018 002B     		cmp	r3, #0
 7402 001a 72D1     		bne	.L377
3045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0U;
 7403              		.loc 1 3046 24
 7404 001c FB6E     		ldr	r3, [r7, #108]
 7405 001e 0022     		movs	r2, #0
 7406 0020 DA85     		strh	r2, [r3, #46]	@ movhi
 7407              	.L380:
 7408              	.LBB569:
3047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
3049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 7409              		.loc 1 3049 5 discriminator 1
 7410 0022 FB6E     		ldr	r3, [r7, #108]
 7411 0024 1B68     		ldr	r3, [r3]
 7412 0026 0C33     		adds	r3, r3, #12
 7413 0028 FB64     		str	r3, [r7, #76]
 7414              	.LBB570:
 7415              	.LBB571:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7416              		.loc 2 1072 4 discriminator 1
 7417 002a FB6C     		ldr	r3, [r7, #76]
 7418              		.syntax unified
 7419              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7420 002c 53E8003F 		ldrex r3, [r3]
 7421              	@ 0 "" 2
 7422              		.thumb
 7423              		.syntax unified
 7424 0030 BB64     		str	r3, [r7, #72]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 7425              		.loc 2 1073 10 discriminator 1
 7426 0032 BB6C     		ldr	r3, [r7, #72]
 7427              	.LBE571:
 7428              	.LBE570:
 7429              		.loc 1 3049 5 discriminator 1
 7430 0034 23F48073 		bic	r3, r3, #256
 7431 0038 BB66     		str	r3, [r7, #104]
 7432 003a FB6E     		ldr	r3, [r7, #108]
 7433 003c 1B68     		ldr	r3, [r3]
 7434 003e 0C33     		adds	r3, r3, #12
 7435 0040 BA6E     		ldr	r2, [r7, #104]
 7436 0042 BA65     		str	r2, [r7, #88]
 7437 0044 7B65     		str	r3, [r7, #84]
 7438              	.LBB572:
 7439              	.LBB573:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7440              		.loc 2 1123 4 discriminator 1
 7441 0046 796D     		ldr	r1, [r7, #84]
 7442 0048 BA6D     		ldr	r2, [r7, #88]
 7443              		.syntax unified
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 206


 7444              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7445 004a 41E80023 		strex r3, r2, [r1]
 7446              	@ 0 "" 2
 7447              		.thumb
 7448              		.syntax unified
 7449 004e 3B65     		str	r3, [r7, #80]
 7450              		.loc 2 1124 10 discriminator 1
 7451 0050 3B6D     		ldr	r3, [r7, #80]
 7452              	.LBE573:
 7453              	.LBE572:
 7454              		.loc 1 3049 5 discriminator 1
 7455 0052 002B     		cmp	r3, #0
 7456 0054 E5D1     		bne	.L380
 7457              	.L383:
 7458              	.LBE569:
 7459              	.LBB574:
3050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 7460              		.loc 1 3050 5 discriminator 1
 7461 0056 FB6E     		ldr	r3, [r7, #108]
 7462 0058 1B68     		ldr	r3, [r3]
 7463 005a 1433     		adds	r3, r3, #20
 7464 005c BB63     		str	r3, [r7, #56]
 7465              	.LBB575:
 7466              	.LBB576:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7467              		.loc 2 1072 4 discriminator 1
 7468 005e BB6B     		ldr	r3, [r7, #56]
 7469              		.syntax unified
 7470              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7471 0060 53E8003F 		ldrex r3, [r3]
 7472              	@ 0 "" 2
 7473              		.thumb
 7474              		.syntax unified
 7475 0064 7B63     		str	r3, [r7, #52]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 7476              		.loc 2 1073 10 discriminator 1
 7477 0066 7B6B     		ldr	r3, [r7, #52]
 7478              	.LBE576:
 7479              	.LBE575:
 7480              		.loc 1 3050 5 discriminator 1
 7481 0068 23F00103 		bic	r3, r3, #1
 7482 006c 7B66     		str	r3, [r7, #100]
 7483 006e FB6E     		ldr	r3, [r7, #108]
 7484 0070 1B68     		ldr	r3, [r3]
 7485 0072 1433     		adds	r3, r3, #20
 7486 0074 7A6E     		ldr	r2, [r7, #100]
 7487 0076 7A64     		str	r2, [r7, #68]
 7488 0078 3B64     		str	r3, [r7, #64]
 7489              	.LBB577:
 7490              	.LBB578:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7491              		.loc 2 1123 4 discriminator 1
 7492 007a 396C     		ldr	r1, [r7, #64]
 7493 007c 7A6C     		ldr	r2, [r7, #68]
 7494              		.syntax unified
 7495              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7496 007e 41E80023 		strex r3, r2, [r1]
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 207


 7497              	@ 0 "" 2
 7498              		.thumb
 7499              		.syntax unified
 7500 0082 FB63     		str	r3, [r7, #60]
 7501              		.loc 2 1124 10 discriminator 1
 7502 0084 FB6B     		ldr	r3, [r7, #60]
 7503              	.LBE578:
 7504              	.LBE577:
 7505              		.loc 1 3050 5 discriminator 1
 7506 0086 002B     		cmp	r3, #0
 7507 0088 E5D1     		bne	.L383
 7508              	.L386:
 7509              	.LBE574:
 7510              	.LBB579:
3051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by setting the DMAR bit
3053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        in the UART CR3 register */
3054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 7511              		.loc 1 3054 5 discriminator 1
 7512 008a FB6E     		ldr	r3, [r7, #108]
 7513 008c 1B68     		ldr	r3, [r3]
 7514 008e 1433     		adds	r3, r3, #20
 7515 0090 7B62     		str	r3, [r7, #36]
 7516              	.LBB580:
 7517              	.LBB581:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7518              		.loc 2 1072 4 discriminator 1
 7519 0092 7B6A     		ldr	r3, [r7, #36]
 7520              		.syntax unified
 7521              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7522 0094 53E8003F 		ldrex r3, [r3]
 7523              	@ 0 "" 2
 7524              		.thumb
 7525              		.syntax unified
 7526 0098 3B62     		str	r3, [r7, #32]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 7527              		.loc 2 1073 10 discriminator 1
 7528 009a 3B6A     		ldr	r3, [r7, #32]
 7529              	.LBE581:
 7530              	.LBE580:
 7531              		.loc 1 3054 5 discriminator 1
 7532 009c 23F04003 		bic	r3, r3, #64
 7533 00a0 3B66     		str	r3, [r7, #96]
 7534 00a2 FB6E     		ldr	r3, [r7, #108]
 7535 00a4 1B68     		ldr	r3, [r3]
 7536 00a6 1433     		adds	r3, r3, #20
 7537 00a8 3A6E     		ldr	r2, [r7, #96]
 7538 00aa 3A63     		str	r2, [r7, #48]
 7539 00ac FB62     		str	r3, [r7, #44]
 7540              	.LBB582:
 7541              	.LBB583:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7542              		.loc 2 1123 4 discriminator 1
 7543 00ae F96A     		ldr	r1, [r7, #44]
 7544 00b0 3A6B     		ldr	r2, [r7, #48]
 7545              		.syntax unified
 7546              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 208


 7547 00b2 41E80023 		strex r3, r2, [r1]
 7548              	@ 0 "" 2
 7549              		.thumb
 7550              		.syntax unified
 7551 00b6 BB62     		str	r3, [r7, #40]
 7552              		.loc 2 1124 10 discriminator 1
 7553 00b8 BB6A     		ldr	r3, [r7, #40]
 7554              	.LBE583:
 7555              	.LBE582:
 7556              		.loc 1 3054 5 discriminator 1
 7557 00ba 002B     		cmp	r3, #0
 7558 00bc E5D1     		bne	.L386
 7559              	.LBE579:
3055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
3057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 7560              		.loc 1 3057 20
 7561 00be FB6E     		ldr	r3, [r7, #108]
 7562 00c0 2022     		movs	r2, #32
 7563 00c2 83F83E20 		strb	r2, [r3, #62]
3058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* If Reception till IDLE event has been selected, Disable IDLE Interrupt */
3060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 7564              		.loc 1 3060 14
 7565 00c6 FB6E     		ldr	r3, [r7, #108]
 7566 00c8 1B6B     		ldr	r3, [r3, #48]
 7567              		.loc 1 3060 8
 7568 00ca 012B     		cmp	r3, #1
 7569 00cc 19D1     		bne	.L377
 7570              	.L389:
 7571              	.LBB584:
3061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 7572              		.loc 1 3062 7 discriminator 1
 7573 00ce FB6E     		ldr	r3, [r7, #108]
 7574 00d0 1B68     		ldr	r3, [r3]
 7575 00d2 0C33     		adds	r3, r3, #12
 7576 00d4 3B61     		str	r3, [r7, #16]
 7577              	.LBB585:
 7578              	.LBB586:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7579              		.loc 2 1072 4 discriminator 1
 7580 00d6 3B69     		ldr	r3, [r7, #16]
 7581              		.syntax unified
 7582              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7583 00d8 53E8003F 		ldrex r3, [r3]
 7584              	@ 0 "" 2
 7585              		.thumb
 7586              		.syntax unified
 7587 00dc FB60     		str	r3, [r7, #12]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 7588              		.loc 2 1073 10 discriminator 1
 7589 00de FB68     		ldr	r3, [r7, #12]
 7590              	.LBE586:
 7591              	.LBE585:
 7592              		.loc 1 3062 7 discriminator 1
 7593 00e0 23F01003 		bic	r3, r3, #16
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 209


 7594 00e4 FB65     		str	r3, [r7, #92]
 7595 00e6 FB6E     		ldr	r3, [r7, #108]
 7596 00e8 1B68     		ldr	r3, [r3]
 7597 00ea 0C33     		adds	r3, r3, #12
 7598 00ec FA6D     		ldr	r2, [r7, #92]
 7599 00ee FA61     		str	r2, [r7, #28]
 7600 00f0 BB61     		str	r3, [r7, #24]
 7601              	.LBB587:
 7602              	.LBB588:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7603              		.loc 2 1123 4 discriminator 1
 7604 00f2 B969     		ldr	r1, [r7, #24]
 7605 00f4 FA69     		ldr	r2, [r7, #28]
 7606              		.syntax unified
 7607              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7608 00f6 41E80023 		strex r3, r2, [r1]
 7609              	@ 0 "" 2
 7610              		.thumb
 7611              		.syntax unified
 7612 00fa 7B61     		str	r3, [r7, #20]
 7613              		.loc 2 1124 10 discriminator 1
 7614 00fc 7B69     		ldr	r3, [r7, #20]
 7615              	.LBE588:
 7616              	.LBE587:
 7617              		.loc 1 3062 7 discriminator 1
 7618 00fe 002B     		cmp	r3, #0
 7619 0100 E5D1     		bne	.L389
 7620              	.L377:
 7621              	.LBE584:
3063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check current reception Mode :
3067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      If Reception till IDLE event has been selected : use Rx Event callback */
3068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 7622              		.loc 1 3068 12
 7623 0102 FB6E     		ldr	r3, [r7, #108]
 7624 0104 1B6B     		ldr	r3, [r3, #48]
 7625              		.loc 1 3068 6
 7626 0106 012B     		cmp	r3, #1
 7627 0108 06D1     		bne	.L390
3069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*Call registered Rx Event callback*/
3072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxEventCallback(huart, huart->RxXferSize);
3073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*Call legacy weak Rx Event callback*/
3075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 7628              		.loc 1 3075 5
 7629 010a FB6E     		ldr	r3, [r7, #108]
 7630 010c 9B8D     		ldrh	r3, [r3, #44]
 7631 010e 1946     		mov	r1, r3
 7632 0110 F86E     		ldr	r0, [r7, #108]
 7633 0112 FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
3076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 210


3079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* In other cases : use Rx Complete callback */
3081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*Call registered Rx complete callback*/
3083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxCpltCallback(huart);
3084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*Call legacy weak Rx complete callback*/
3086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_RxCpltCallback(huart);
3087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 7634              		.loc 1 3089 1
 7635 0116 02E0     		b	.L392
 7636              	.L390:
3086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 7637              		.loc 1 3086 5
 7638 0118 F86E     		ldr	r0, [r7, #108]
 7639 011a FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 7640              	.L392:
 7641              		.loc 1 3089 1
 7642 011e 00BF     		nop
 7643 0120 7037     		adds	r7, r7, #112
 7644              	.LCFI244:
 7645              		.cfi_def_cfa_offset 8
 7646 0122 BD46     		mov	sp, r7
 7647              	.LCFI245:
 7648              		.cfi_def_cfa_register 13
 7649              		@ sp needed
 7650 0124 80BD     		pop	{r7, pc}
 7651              		.cfi_endproc
 7652              	.LFE260:
 7654              		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 7655              		.align	1
 7656              		.syntax unified
 7657              		.thumb
 7658              		.thumb_func
 7659              		.fpu fpv4-sp-d16
 7661              	UART_DMARxHalfCplt:
 7662              	.LFB261:
3090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback
3093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
3094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
3095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
3096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
3098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 7663              		.loc 1 3098 1
 7664              		.cfi_startproc
 7665              		@ args = 0, pretend = 0, frame = 16
 7666              		@ frame_needed = 1, uses_anonymous_args = 0
 7667 0000 80B5     		push	{r7, lr}
 7668              	.LCFI246:
 7669              		.cfi_def_cfa_offset 8
 7670              		.cfi_offset 7, -8
 7671              		.cfi_offset 14, -4
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 211


 7672 0002 84B0     		sub	sp, sp, #16
 7673              	.LCFI247:
 7674              		.cfi_def_cfa_offset 24
 7675 0004 00AF     		add	r7, sp, #0
 7676              	.LCFI248:
 7677              		.cfi_def_cfa_register 7
 7678 0006 7860     		str	r0, [r7, #4]
3099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 7679              		.loc 1 3099 23
 7680 0008 7B68     		ldr	r3, [r7, #4]
 7681 000a 9B6B     		ldr	r3, [r3, #56]
 7682 000c FB60     		str	r3, [r7, #12]
3100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check current reception Mode :
3102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      If Reception till IDLE event has been selected : use Rx Event callback */
3103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 7683              		.loc 1 3103 12
 7684 000e FB68     		ldr	r3, [r7, #12]
 7685 0010 1B6B     		ldr	r3, [r3, #48]
 7686              		.loc 1 3103 6
 7687 0012 012B     		cmp	r3, #1
 7688 0014 08D1     		bne	.L394
3104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*Call registered Rx Event callback*/
3107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxEventCallback(huart, huart->RxXferSize / 2U);
3108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*Call legacy weak Rx Event callback*/
3110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize / 2U);
 7689              		.loc 1 3110 44
 7690 0016 FB68     		ldr	r3, [r7, #12]
 7691 0018 9B8D     		ldrh	r3, [r3, #44]
 7692              		.loc 1 3110 5
 7693 001a 5B08     		lsrs	r3, r3, #1
 7694 001c 9BB2     		uxth	r3, r3
 7695 001e 1946     		mov	r1, r3
 7696 0020 F868     		ldr	r0, [r7, #12]
 7697 0022 FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
3111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
3114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* In other cases : use Rx Half Complete callback */
3116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*Call registered Rx Half complete callback*/
3118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxHalfCpltCallback(huart);
3119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*Call legacy weak Rx Half complete callback*/
3121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_RxHalfCpltCallback(huart);
3122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 7698              		.loc 1 3124 1
 7699 0026 02E0     		b	.L396
 7700              	.L394:
3121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 7701              		.loc 1 3121 5
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 212


 7702 0028 F868     		ldr	r0, [r7, #12]
 7703 002a FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
 7704              	.L396:
 7705              		.loc 1 3124 1
 7706 002e 00BF     		nop
 7707 0030 1037     		adds	r7, r7, #16
 7708              	.LCFI249:
 7709              		.cfi_def_cfa_offset 8
 7710 0032 BD46     		mov	sp, r7
 7711              	.LCFI250:
 7712              		.cfi_def_cfa_register 13
 7713              		@ sp needed
 7714 0034 80BD     		pop	{r7, pc}
 7715              		.cfi_endproc
 7716              	.LFE261:
 7718              		.section	.text.UART_DMAError,"ax",%progbits
 7719              		.align	1
 7720              		.syntax unified
 7721              		.thumb
 7722              		.thumb_func
 7723              		.fpu fpv4-sp-d16
 7725              	UART_DMAError:
 7726              	.LFB262:
3125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART communication error callback.
3128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
3129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
3130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
3131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
3133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 7727              		.loc 1 3133 1
 7728              		.cfi_startproc
 7729              		@ args = 0, pretend = 0, frame = 16
 7730              		@ frame_needed = 1, uses_anonymous_args = 0
 7731 0000 80B5     		push	{r7, lr}
 7732              	.LCFI251:
 7733              		.cfi_def_cfa_offset 8
 7734              		.cfi_offset 7, -8
 7735              		.cfi_offset 14, -4
 7736 0002 84B0     		sub	sp, sp, #16
 7737              	.LCFI252:
 7738              		.cfi_def_cfa_offset 24
 7739 0004 00AF     		add	r7, sp, #0
 7740              	.LCFI253:
 7741              		.cfi_def_cfa_register 7
 7742 0006 7860     		str	r0, [r7, #4]
3134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 7743              		.loc 1 3134 12
 7744 0008 0023     		movs	r3, #0
 7745 000a FB60     		str	r3, [r7, #12]
3135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 7746              		.loc 1 3135 23
 7747 000c 7B68     		ldr	r3, [r7, #4]
 7748 000e 9B6B     		ldr	r3, [r3, #56]
 7749 0010 BB60     		str	r3, [r7, #8]
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 213


3136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
3138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
 7750              		.loc 1 3138 16
 7751 0012 BB68     		ldr	r3, [r7, #8]
 7752 0014 1B68     		ldr	r3, [r3]
 7753 0016 5B69     		ldr	r3, [r3, #20]
 7754 0018 03F08003 		and	r3, r3, #128
 7755 001c 802B     		cmp	r3, #128
 7756 001e 0CBF     		ite	eq
 7757 0020 0123     		moveq	r3, #1
 7758 0022 0023     		movne	r3, #0
 7759 0024 DBB2     		uxtb	r3, r3
 7760              		.loc 1 3138 14
 7761 0026 FB60     		str	r3, [r7, #12]
3139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 7762              		.loc 1 3139 13
 7763 0028 BB68     		ldr	r3, [r7, #8]
 7764 002a 93F83D30 		ldrb	r3, [r3, #61]
 7765 002e DBB2     		uxtb	r3, r3
 7766              		.loc 1 3139 6
 7767 0030 212B     		cmp	r3, #33
 7768 0032 08D1     		bne	.L398
 7769              		.loc 1 3139 49 discriminator 1
 7770 0034 FB68     		ldr	r3, [r7, #12]
 7771 0036 002B     		cmp	r3, #0
 7772 0038 05D0     		beq	.L398
3140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = 0x00U;
 7773              		.loc 1 3141 24
 7774 003a BB68     		ldr	r3, [r7, #8]
 7775 003c 0022     		movs	r2, #0
 7776 003e DA84     		strh	r2, [r3, #38]	@ movhi
3142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 7777              		.loc 1 3142 5
 7778 0040 B868     		ldr	r0, [r7, #8]
 7779 0042 FFF7FEFF 		bl	UART_EndTxTransfer
 7780              	.L398:
3143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
3146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 7781              		.loc 1 3146 16
 7782 0046 BB68     		ldr	r3, [r7, #8]
 7783 0048 1B68     		ldr	r3, [r3]
 7784 004a 5B69     		ldr	r3, [r3, #20]
 7785 004c 03F04003 		and	r3, r3, #64
 7786 0050 402B     		cmp	r3, #64
 7787 0052 0CBF     		ite	eq
 7788 0054 0123     		moveq	r3, #1
 7789 0056 0023     		movne	r3, #0
 7790 0058 DBB2     		uxtb	r3, r3
 7791              		.loc 1 3146 14
 7792 005a FB60     		str	r3, [r7, #12]
3147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 7793              		.loc 1 3147 13
 7794 005c BB68     		ldr	r3, [r7, #8]
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 214


 7795 005e 93F83E30 		ldrb	r3, [r3, #62]
 7796 0062 DBB2     		uxtb	r3, r3
 7797              		.loc 1 3147 6
 7798 0064 222B     		cmp	r3, #34
 7799 0066 08D1     		bne	.L399
 7800              		.loc 1 3147 50 discriminator 1
 7801 0068 FB68     		ldr	r3, [r7, #12]
 7802 006a 002B     		cmp	r3, #0
 7803 006c 05D0     		beq	.L399
3148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0x00U;
 7804              		.loc 1 3149 24
 7805 006e BB68     		ldr	r3, [r7, #8]
 7806 0070 0022     		movs	r2, #0
 7807 0072 DA85     		strh	r2, [r3, #46]	@ movhi
3150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 7808              		.loc 1 3150 5
 7809 0074 B868     		ldr	r0, [r7, #8]
 7810 0076 FFF7FEFF 		bl	UART_EndRxTransfer
 7811              	.L399:
3151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode |= HAL_UART_ERROR_DMA;
 7812              		.loc 1 3153 20
 7813 007a BB68     		ldr	r3, [r7, #8]
 7814 007c 1B6C     		ldr	r3, [r3, #64]
 7815 007e 43F01002 		orr	r2, r3, #16
 7816 0082 BB68     		ldr	r3, [r7, #8]
 7817 0084 1A64     		str	r2, [r3, #64]
3154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call registered error callback*/
3156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCallback(huart);
3157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call legacy weak error callback*/
3159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 7818              		.loc 1 3159 3
 7819 0086 B868     		ldr	r0, [r7, #8]
 7820 0088 FFF7FEFF 		bl	HAL_UART_ErrorCallback
3160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 7821              		.loc 1 3161 1
 7822 008c 00BF     		nop
 7823 008e 1037     		adds	r7, r7, #16
 7824              	.LCFI254:
 7825              		.cfi_def_cfa_offset 8
 7826 0090 BD46     		mov	sp, r7
 7827              	.LCFI255:
 7828              		.cfi_def_cfa_register 13
 7829              		@ sp needed
 7830 0092 80BD     		pop	{r7, pc}
 7831              		.cfi_endproc
 7832              	.LFE262:
 7834              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 7835              		.align	1
 7836              		.syntax unified
 7837              		.thumb
 7838              		.thumb_func
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 215


 7839              		.fpu fpv4-sp-d16
 7841              	UART_WaitOnFlagUntilTimeout:
 7842              	.LFB263:
3162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  This function handles UART Communication Timeout. It waits
3165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         until a flag is no longer in the specified status.
3166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
3167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
3168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Flag specifies the UART flag to check.
3169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Status The actual Flag status (SET or RESET).
3170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Tickstart Tick start value
3171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Timeout Timeout duration
3172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
3173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, Flag
3175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                                                      uint32_t Tickstart, uint32_t Timeout)
3176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 7843              		.loc 1 3176 1
 7844              		.cfi_startproc
 7845              		@ args = 4, pretend = 0, frame = 64
 7846              		@ frame_needed = 1, uses_anonymous_args = 0
 7847 0000 80B5     		push	{r7, lr}
 7848              	.LCFI256:
 7849              		.cfi_def_cfa_offset 8
 7850              		.cfi_offset 7, -8
 7851              		.cfi_offset 14, -4
 7852 0002 90B0     		sub	sp, sp, #64
 7853              	.LCFI257:
 7854              		.cfi_def_cfa_offset 72
 7855 0004 00AF     		add	r7, sp, #0
 7856              	.LCFI258:
 7857              		.cfi_def_cfa_register 7
 7858 0006 F860     		str	r0, [r7, #12]
 7859 0008 B960     		str	r1, [r7, #8]
 7860 000a 3B60     		str	r3, [r7]
 7861 000c 1346     		mov	r3, r2
 7862 000e FB71     		strb	r3, [r7, #7]
3177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Wait until flag is set */
3178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 7863              		.loc 1 3178 9
 7864 0010 50E0     		b	.L401
 7865              	.L410:
3179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Check for the Timeout */
3181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (Timeout != HAL_MAX_DELAY)
 7866              		.loc 1 3181 8
 7867 0012 BB6C     		ldr	r3, [r7, #72]
 7868 0014 B3F1FF3F 		cmp	r3, #-1
 7869 0018 4CD0     		beq	.L401
3182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if ((Timeout == 0U) || ((HAL_GetTick() - Tickstart) > Timeout))
 7870              		.loc 1 3183 10
 7871 001a BB6C     		ldr	r3, [r7, #72]
 7872 001c 002B     		cmp	r3, #0
 7873 001e 07D0     		beq	.L405
 7874              		.loc 1 3183 32 discriminator 1
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 216


 7875 0020 FFF7FEFF 		bl	HAL_GetTick
 7876 0024 0246     		mov	r2, r0
 7877              		.loc 1 3183 46 discriminator 1
 7878 0026 3B68     		ldr	r3, [r7]
 7879 0028 D31A     		subs	r3, r2, r3
 7880              		.loc 1 3183 27 discriminator 1
 7881 002a BA6C     		ldr	r2, [r7, #72]
 7882 002c 9A42     		cmp	r2, r3
 7883 002e 41D2     		bcs	.L401
 7884              	.L405:
 7885              	.LBB589:
3184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
3185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for t
3186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE
 7886              		.loc 1 3186 9 discriminator 1
 7887 0030 FB68     		ldr	r3, [r7, #12]
 7888 0032 1B68     		ldr	r3, [r3]
 7889 0034 0C33     		adds	r3, r3, #12
 7890 0036 BB62     		str	r3, [r7, #40]
 7891              	.LBB590:
 7892              	.LBB591:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7893              		.loc 2 1072 4 discriminator 1
 7894 0038 BB6A     		ldr	r3, [r7, #40]
 7895              		.syntax unified
 7896              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7897 003a 53E8003F 		ldrex r3, [r3]
 7898              	@ 0 "" 2
 7899              		.thumb
 7900              		.syntax unified
 7901 003e 7B62     		str	r3, [r7, #36]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 7902              		.loc 2 1073 10 discriminator 1
 7903 0040 7B6A     		ldr	r3, [r7, #36]
 7904              	.LBE591:
 7905              	.LBE590:
 7906              		.loc 1 3186 9 discriminator 1
 7907 0042 23F4D073 		bic	r3, r3, #416
 7908 0046 FB63     		str	r3, [r7, #60]
 7909 0048 FB68     		ldr	r3, [r7, #12]
 7910 004a 1B68     		ldr	r3, [r3]
 7911 004c 0C33     		adds	r3, r3, #12
 7912 004e FA6B     		ldr	r2, [r7, #60]
 7913 0050 7A63     		str	r2, [r7, #52]
 7914 0052 3B63     		str	r3, [r7, #48]
 7915              	.LBB592:
 7916              	.LBB593:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7917              		.loc 2 1123 4 discriminator 1
 7918 0054 396B     		ldr	r1, [r7, #48]
 7919 0056 7A6B     		ldr	r2, [r7, #52]
 7920              		.syntax unified
 7921              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7922 0058 41E80023 		strex r3, r2, [r1]
 7923              	@ 0 "" 2
 7924              		.thumb
 7925              		.syntax unified
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 217


 7926 005c FB62     		str	r3, [r7, #44]
 7927              		.loc 2 1124 10 discriminator 1
 7928 005e FB6A     		ldr	r3, [r7, #44]
 7929              	.LBE593:
 7930              	.LBE592:
 7931              		.loc 1 3186 9 discriminator 1
 7932 0060 002B     		cmp	r3, #0
 7933 0062 E5D1     		bne	.L405
 7934              	.L408:
 7935              	.LBE589:
 7936              	.LBB594:
3187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 7937              		.loc 1 3187 9 discriminator 1
 7938 0064 FB68     		ldr	r3, [r7, #12]
 7939 0066 1B68     		ldr	r3, [r3]
 7940 0068 1433     		adds	r3, r3, #20
 7941 006a 7B61     		str	r3, [r7, #20]
 7942              	.LBB595:
 7943              	.LBB596:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7944              		.loc 2 1072 4 discriminator 1
 7945 006c 7B69     		ldr	r3, [r7, #20]
 7946              		.syntax unified
 7947              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7948 006e 53E8003F 		ldrex r3, [r3]
 7949              	@ 0 "" 2
 7950              		.thumb
 7951              		.syntax unified
 7952 0072 3B61     		str	r3, [r7, #16]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 7953              		.loc 2 1073 10 discriminator 1
 7954 0074 3B69     		ldr	r3, [r7, #16]
 7955              	.LBE596:
 7956              	.LBE595:
 7957              		.loc 1 3187 9 discriminator 1
 7958 0076 23F00103 		bic	r3, r3, #1
 7959 007a BB63     		str	r3, [r7, #56]
 7960 007c FB68     		ldr	r3, [r7, #12]
 7961 007e 1B68     		ldr	r3, [r3]
 7962 0080 1433     		adds	r3, r3, #20
 7963 0082 BA6B     		ldr	r2, [r7, #56]
 7964 0084 3A62     		str	r2, [r7, #32]
 7965 0086 FB61     		str	r3, [r7, #28]
 7966              	.LBB597:
 7967              	.LBB598:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7968              		.loc 2 1123 4 discriminator 1
 7969 0088 F969     		ldr	r1, [r7, #28]
 7970 008a 3A6A     		ldr	r2, [r7, #32]
 7971              		.syntax unified
 7972              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7973 008c 41E80023 		strex r3, r2, [r1]
 7974              	@ 0 "" 2
 7975              		.thumb
 7976              		.syntax unified
 7977 0090 BB61     		str	r3, [r7, #24]
 7978              		.loc 2 1124 10 discriminator 1
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 218


 7979 0092 BB69     		ldr	r3, [r7, #24]
 7980              	.LBE598:
 7981              	.LBE597:
 7982              		.loc 1 3187 9 discriminator 1
 7983 0094 002B     		cmp	r3, #0
 7984 0096 E5D1     		bne	.L408
 7985              	.LBE594:
3188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->gState  = HAL_UART_STATE_READY;
 7986              		.loc 1 3189 24
 7987 0098 FB68     		ldr	r3, [r7, #12]
 7988 009a 2022     		movs	r2, #32
 7989 009c 83F83D20 		strb	r2, [r3, #61]
3190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 7990              		.loc 1 3190 24
 7991 00a0 FB68     		ldr	r3, [r7, #12]
 7992 00a2 2022     		movs	r2, #32
 7993 00a4 83F83E20 		strb	r2, [r3, #62]
3191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Process Unlocked */
3193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         __HAL_UNLOCK(huart);
 7994              		.loc 1 3193 9
 7995 00a8 FB68     		ldr	r3, [r7, #12]
 7996 00aa 0022     		movs	r2, #0
 7997 00ac 83F83C20 		strb	r2, [r3, #60]
3194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         return HAL_TIMEOUT;
 7998              		.loc 1 3195 16
 7999 00b0 0323     		movs	r3, #3
 8000 00b2 0FE0     		b	.L409
 8001              	.L401:
3178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 8002              		.loc 1 3178 11
 8003 00b4 FB68     		ldr	r3, [r7, #12]
 8004 00b6 1B68     		ldr	r3, [r3]
 8005 00b8 1A68     		ldr	r2, [r3]
 8006 00ba BB68     		ldr	r3, [r7, #8]
 8007 00bc 1340     		ands	r3, r3, r2
3178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 8008              		.loc 1 3178 50
 8009 00be BA68     		ldr	r2, [r7, #8]
 8010 00c0 9A42     		cmp	r2, r3
 8011 00c2 0CBF     		ite	eq
 8012 00c4 0123     		moveq	r3, #1
 8013 00c6 0023     		movne	r3, #0
 8014 00c8 DBB2     		uxtb	r3, r3
 8015 00ca 1A46     		mov	r2, r3
3178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 8016              		.loc 1 3178 59
 8017 00cc FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
3178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 8018              		.loc 1 3178 9
 8019 00ce 9A42     		cmp	r2, r3
 8020 00d0 9FD0     		beq	.L410
3196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
3197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 219


3199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 8021              		.loc 1 3199 10
 8022 00d2 0023     		movs	r3, #0
 8023              	.L409:
3200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 8024              		.loc 1 3200 1
 8025 00d4 1846     		mov	r0, r3
 8026 00d6 4037     		adds	r7, r7, #64
 8027              	.LCFI259:
 8028              		.cfi_def_cfa_offset 8
 8029 00d8 BD46     		mov	sp, r7
 8030              	.LCFI260:
 8031              		.cfi_def_cfa_register 13
 8032              		@ sp needed
 8033 00da 80BD     		pop	{r7, pc}
 8034              		.cfi_endproc
 8035              	.LFE263:
 8037              		.section	.text.UART_Start_Receive_IT,"ax",%progbits
 8038              		.align	1
 8039              		.global	UART_Start_Receive_IT
 8040              		.syntax unified
 8041              		.thumb
 8042              		.thumb_func
 8043              		.fpu fpv4-sp-d16
 8045              	UART_Start_Receive_IT:
 8046              	.LFB264:
3201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Start Receive operation in interrupt mode.
3204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This function could be called by all HAL UART API providing reception in Interrupt mode
3205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When calling this function, parameters validity is considered as already checked,
3206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         i.e. Rx State, buffer address, ...
3207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         UART Handle is assumed as Locked.
3208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
3209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
3210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be received.
3211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
3212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef UART_Start_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
3214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 8047              		.loc 1 3214 1
 8048              		.cfi_startproc
 8049              		@ args = 0, pretend = 0, frame = 16
 8050              		@ frame_needed = 1, uses_anonymous_args = 0
 8051              		@ link register save eliminated.
 8052 0000 80B4     		push	{r7}
 8053              	.LCFI261:
 8054              		.cfi_def_cfa_offset 4
 8055              		.cfi_offset 7, -4
 8056 0002 85B0     		sub	sp, sp, #20
 8057              	.LCFI262:
 8058              		.cfi_def_cfa_offset 24
 8059 0004 00AF     		add	r7, sp, #0
 8060              	.LCFI263:
 8061              		.cfi_def_cfa_register 7
 8062 0006 F860     		str	r0, [r7, #12]
 8063 0008 B960     		str	r1, [r7, #8]
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 220


 8064 000a 1346     		mov	r3, r2
 8065 000c FB80     		strh	r3, [r7, #6]	@ movhi
3215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->pRxBuffPtr = pData;
 8066              		.loc 1 3215 21
 8067 000e FB68     		ldr	r3, [r7, #12]
 8068 0010 BA68     		ldr	r2, [r7, #8]
 8069 0012 9A62     		str	r2, [r3, #40]
3216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferSize = Size;
 8070              		.loc 1 3216 21
 8071 0014 FB68     		ldr	r3, [r7, #12]
 8072 0016 FA88     		ldrh	r2, [r7, #6]	@ movhi
 8073 0018 9A85     		strh	r2, [r3, #44]	@ movhi
3217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = Size;
 8074              		.loc 1 3217 22
 8075 001a FB68     		ldr	r3, [r7, #12]
 8076 001c FA88     		ldrh	r2, [r7, #6]	@ movhi
 8077 001e DA85     		strh	r2, [r3, #46]	@ movhi
3218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 8078              		.loc 1 3219 20
 8079 0020 FB68     		ldr	r3, [r7, #12]
 8080 0022 0022     		movs	r2, #0
 8081 0024 1A64     		str	r2, [r3, #64]
3220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_BUSY_RX;
 8082              		.loc 1 3220 18
 8083 0026 FB68     		ldr	r3, [r7, #12]
 8084 0028 2222     		movs	r2, #34
 8085 002a 83F83E20 		strb	r2, [r3, #62]
3221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
3223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 8086              		.loc 1 3223 3
 8087 002e FB68     		ldr	r3, [r7, #12]
 8088 0030 0022     		movs	r2, #0
 8089 0032 83F83C20 		strb	r2, [r3, #60]
3224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->Init.Parity != UART_PARITY_NONE)
 8090              		.loc 1 3225 18
 8091 0036 FB68     		ldr	r3, [r7, #12]
 8092 0038 1B69     		ldr	r3, [r3, #16]
 8093              		.loc 1 3225 6
 8094 003a 002B     		cmp	r3, #0
 8095 003c 07D0     		beq	.L412
3226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
3228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_PE);
 8096              		.loc 1 3228 5
 8097 003e FB68     		ldr	r3, [r7, #12]
 8098 0040 1B68     		ldr	r3, [r3]
 8099 0042 DA68     		ldr	r2, [r3, #12]
 8100 0044 FB68     		ldr	r3, [r7, #12]
 8101 0046 1B68     		ldr	r3, [r3]
 8102 0048 42F48072 		orr	r2, r2, #256
 8103 004c DA60     		str	r2, [r3, #12]
 8104              	.L412:
3229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 221


3231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE_IT(huart, UART_IT_ERR);
 8105              		.loc 1 3232 3
 8106 004e FB68     		ldr	r3, [r7, #12]
 8107 0050 1B68     		ldr	r3, [r3]
 8108 0052 5A69     		ldr	r2, [r3, #20]
 8109 0054 FB68     		ldr	r3, [r7, #12]
 8110 0056 1B68     		ldr	r3, [r3]
 8111 0058 42F00102 		orr	r2, r2, #1
 8112 005c 5A61     		str	r2, [r3, #20]
3233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the UART Data Register not empty Interrupt */
3235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE_IT(huart, UART_IT_RXNE);
 8113              		.loc 1 3235 3
 8114 005e FB68     		ldr	r3, [r7, #12]
 8115 0060 1B68     		ldr	r3, [r3]
 8116 0062 DA68     		ldr	r2, [r3, #12]
 8117 0064 FB68     		ldr	r3, [r7, #12]
 8118 0066 1B68     		ldr	r3, [r3]
 8119 0068 42F02002 		orr	r2, r2, #32
 8120 006c DA60     		str	r2, [r3, #12]
3236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 8121              		.loc 1 3237 10
 8122 006e 0023     		movs	r3, #0
3238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 8123              		.loc 1 3238 1
 8124 0070 1846     		mov	r0, r3
 8125 0072 1437     		adds	r7, r7, #20
 8126              	.LCFI264:
 8127              		.cfi_def_cfa_offset 4
 8128 0074 BD46     		mov	sp, r7
 8129              	.LCFI265:
 8130              		.cfi_def_cfa_register 13
 8131              		@ sp needed
 8132 0076 5DF8047B 		ldr	r7, [sp], #4
 8133              	.LCFI266:
 8134              		.cfi_restore 7
 8135              		.cfi_def_cfa_offset 0
 8136 007a 7047     		bx	lr
 8137              		.cfi_endproc
 8138              	.LFE264:
 8140              		.section	.text.UART_Start_Receive_DMA,"ax",%progbits
 8141              		.align	1
 8142              		.global	UART_Start_Receive_DMA
 8143              		.syntax unified
 8144              		.thumb
 8145              		.thumb_func
 8146              		.fpu fpv4-sp-d16
 8148              	UART_Start_Receive_DMA:
 8149              	.LFB265:
3239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Start Receive operation in DMA mode.
3242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This function could be called by all HAL UART API providing reception in DMA mode.
3243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When calling this function, parameters validity is considered as already checked,
3244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         i.e. Rx State, buffer address, ...
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 222


3245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         UART Handle is assumed as Locked.
3246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
3247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
3248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be received.
3249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
3250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef UART_Start_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
3252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 8150              		.loc 1 3252 1
 8151              		.cfi_startproc
 8152              		@ args = 0, pretend = 0, frame = 96
 8153              		@ frame_needed = 1, uses_anonymous_args = 0
 8154 0000 80B5     		push	{r7, lr}
 8155              	.LCFI267:
 8156              		.cfi_def_cfa_offset 8
 8157              		.cfi_offset 7, -8
 8158              		.cfi_offset 14, -4
 8159 0002 98B0     		sub	sp, sp, #96
 8160              	.LCFI268:
 8161              		.cfi_def_cfa_offset 104
 8162 0004 00AF     		add	r7, sp, #0
 8163              	.LCFI269:
 8164              		.cfi_def_cfa_register 7
 8165 0006 F860     		str	r0, [r7, #12]
 8166 0008 B960     		str	r1, [r7, #8]
 8167 000a 1346     		mov	r3, r2
 8168 000c FB80     		strh	r3, [r7, #6]	@ movhi
3253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t *tmp;
3254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->pRxBuffPtr = pData;
 8169              		.loc 1 3255 21
 8170 000e BA68     		ldr	r2, [r7, #8]
 8171 0010 FB68     		ldr	r3, [r7, #12]
 8172 0012 9A62     		str	r2, [r3, #40]
3256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferSize = Size;
 8173              		.loc 1 3256 21
 8174 0014 FB68     		ldr	r3, [r7, #12]
 8175 0016 FA88     		ldrh	r2, [r7, #6]	@ movhi
 8176 0018 9A85     		strh	r2, [r3, #44]	@ movhi
3257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 8177              		.loc 1 3258 20
 8178 001a FB68     		ldr	r3, [r7, #12]
 8179 001c 0022     		movs	r2, #0
 8180 001e 1A64     		str	r2, [r3, #64]
3259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_BUSY_RX;
 8181              		.loc 1 3259 18
 8182 0020 FB68     		ldr	r3, [r7, #12]
 8183 0022 2222     		movs	r2, #34
 8184 0024 83F83E20 		strb	r2, [r3, #62]
3260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART DMA transfer complete callback */
3262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
 8185              		.loc 1 3262 8
 8186 0028 FB68     		ldr	r3, [r7, #12]
 8187 002a 9B6B     		ldr	r3, [r3, #56]
 8188              		.loc 1 3262 35
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 223


 8189 002c 404A     		ldr	r2, .L426
 8190 002e DA63     		str	r2, [r3, #60]
3263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART DMA Half transfer complete callback */
3265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
 8191              		.loc 1 3265 8
 8192 0030 FB68     		ldr	r3, [r7, #12]
 8193 0032 9B6B     		ldr	r3, [r3, #56]
 8194              		.loc 1 3265 39
 8195 0034 3F4A     		ldr	r2, .L426+4
 8196 0036 1A64     		str	r2, [r3, #64]
3266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the DMA error callback */
3268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->hdmarx->XferErrorCallback = UART_DMAError;
 8197              		.loc 1 3268 8
 8198 0038 FB68     		ldr	r3, [r7, #12]
 8199 003a 9B6B     		ldr	r3, [r3, #56]
 8200              		.loc 1 3268 36
 8201 003c 3E4A     		ldr	r2, .L426+8
 8202 003e DA64     		str	r2, [r3, #76]
3269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the DMA abort callback */
3271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
 8203              		.loc 1 3271 8
 8204 0040 FB68     		ldr	r3, [r7, #12]
 8205 0042 9B6B     		ldr	r3, [r3, #56]
 8206              		.loc 1 3271 36
 8207 0044 0022     		movs	r2, #0
 8208 0046 1A65     		str	r2, [r3, #80]
3272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the DMA stream */
3274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmp = (uint32_t *)&pData;
 8209              		.loc 1 3274 7
 8210 0048 07F10803 		add	r3, r7, #8
 8211 004c FB65     		str	r3, [r7, #92]
3275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->DR, *(uint32_t *)tmp, Size);
 8212              		.loc 1 3275 3
 8213 004e FB68     		ldr	r3, [r7, #12]
 8214 0050 986B     		ldr	r0, [r3, #56]
 8215              		.loc 1 3275 51
 8216 0052 FB68     		ldr	r3, [r7, #12]
 8217 0054 1B68     		ldr	r3, [r3]
 8218              		.loc 1 3275 45
 8219 0056 0433     		adds	r3, r3, #4
 8220              		.loc 1 3275 3
 8221 0058 1946     		mov	r1, r3
 8222 005a FB6D     		ldr	r3, [r7, #92]
 8223 005c 1A68     		ldr	r2, [r3]
 8224 005e FB88     		ldrh	r3, [r7, #6]
 8225 0060 FFF7FEFF 		bl	HAL_DMA_Start_IT
 8226              	.LBB599:
3276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Clear the Overrun flag just before enabling the DMA Rx request: can be mandatory for the secon
3278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_CLEAR_OREFLAG(huart);
 8227              		.loc 1 3278 3
 8228 0064 0023     		movs	r3, #0
 8229 0066 3B61     		str	r3, [r7, #16]
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 224


 8230 0068 FB68     		ldr	r3, [r7, #12]
 8231 006a 1B68     		ldr	r3, [r3]
 8232 006c 1B68     		ldr	r3, [r3]
 8233 006e 3B61     		str	r3, [r7, #16]
 8234 0070 FB68     		ldr	r3, [r7, #12]
 8235 0072 1B68     		ldr	r3, [r3]
 8236 0074 5B68     		ldr	r3, [r3, #4]
 8237 0076 3B61     		str	r3, [r7, #16]
 8238 0078 3B69     		ldr	r3, [r7, #16]
 8239              	.LBE599:
3279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
3281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 8240              		.loc 1 3281 3
 8241 007a FB68     		ldr	r3, [r7, #12]
 8242 007c 0022     		movs	r2, #0
 8243 007e 83F83C20 		strb	r2, [r3, #60]
3282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->Init.Parity != UART_PARITY_NONE)
 8244              		.loc 1 3283 18
 8245 0082 FB68     		ldr	r3, [r7, #12]
 8246 0084 1B69     		ldr	r3, [r3, #16]
 8247              		.loc 1 3283 6
 8248 0086 002B     		cmp	r3, #0
 8249 0088 19D0     		beq	.L421
 8250              	.L418:
 8251              	.LBB600:
3284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
3286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 8252              		.loc 1 3286 5 discriminator 1
 8253 008a FB68     		ldr	r3, [r7, #12]
 8254 008c 1B68     		ldr	r3, [r3]
 8255 008e 0C33     		adds	r3, r3, #12
 8256 0090 3B64     		str	r3, [r7, #64]
 8257              	.LBB601:
 8258              	.LBB602:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8259              		.loc 2 1072 4 discriminator 1
 8260 0092 3B6C     		ldr	r3, [r7, #64]
 8261              		.syntax unified
 8262              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8263 0094 53E8003F 		ldrex r3, [r3]
 8264              	@ 0 "" 2
 8265              		.thumb
 8266              		.syntax unified
 8267 0098 FB63     		str	r3, [r7, #60]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 8268              		.loc 2 1073 10 discriminator 1
 8269 009a FB6B     		ldr	r3, [r7, #60]
 8270              	.LBE602:
 8271              	.LBE601:
 8272              		.loc 1 3286 5 discriminator 1
 8273 009c 43F48073 		orr	r3, r3, #256
 8274 00a0 BB65     		str	r3, [r7, #88]
 8275 00a2 FB68     		ldr	r3, [r7, #12]
 8276 00a4 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 225


 8277 00a6 0C33     		adds	r3, r3, #12
 8278 00a8 BA6D     		ldr	r2, [r7, #88]
 8279 00aa FA64     		str	r2, [r7, #76]
 8280 00ac BB64     		str	r3, [r7, #72]
 8281              	.LBB603:
 8282              	.LBB604:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8283              		.loc 2 1123 4 discriminator 1
 8284 00ae B96C     		ldr	r1, [r7, #72]
 8285 00b0 FA6C     		ldr	r2, [r7, #76]
 8286              		.syntax unified
 8287              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8288 00b2 41E80023 		strex r3, r2, [r1]
 8289              	@ 0 "" 2
 8290              		.thumb
 8291              		.syntax unified
 8292 00b6 7B64     		str	r3, [r7, #68]
 8293              		.loc 2 1124 10 discriminator 1
 8294 00b8 7B6C     		ldr	r3, [r7, #68]
 8295              	.LBE604:
 8296              	.LBE603:
 8297              		.loc 1 3286 5 discriminator 1
 8298 00ba 002B     		cmp	r3, #0
 8299 00bc E5D1     		bne	.L418
 8300              	.L421:
 8301              	.LBE600:
 8302              	.LBB605:
3287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8303              		.loc 1 3290 3 discriminator 1
 8304 00be FB68     		ldr	r3, [r7, #12]
 8305 00c0 1B68     		ldr	r3, [r3]
 8306 00c2 1433     		adds	r3, r3, #20
 8307 00c4 FB62     		str	r3, [r7, #44]
 8308              	.LBB606:
 8309              	.LBB607:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8310              		.loc 2 1072 4 discriminator 1
 8311 00c6 FB6A     		ldr	r3, [r7, #44]
 8312              		.syntax unified
 8313              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8314 00c8 53E8003F 		ldrex r3, [r3]
 8315              	@ 0 "" 2
 8316              		.thumb
 8317              		.syntax unified
 8318 00cc BB62     		str	r3, [r7, #40]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 8319              		.loc 2 1073 10 discriminator 1
 8320 00ce BB6A     		ldr	r3, [r7, #40]
 8321              	.LBE607:
 8322              	.LBE606:
 8323              		.loc 1 3290 3 discriminator 1
 8324 00d0 43F00103 		orr	r3, r3, #1
 8325 00d4 7B65     		str	r3, [r7, #84]
 8326 00d6 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 226


 8327 00d8 1B68     		ldr	r3, [r3]
 8328 00da 1433     		adds	r3, r3, #20
 8329 00dc 7A6D     		ldr	r2, [r7, #84]
 8330 00de BA63     		str	r2, [r7, #56]
 8331 00e0 7B63     		str	r3, [r7, #52]
 8332              	.LBB608:
 8333              	.LBB609:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8334              		.loc 2 1123 4 discriminator 1
 8335 00e2 796B     		ldr	r1, [r7, #52]
 8336 00e4 BA6B     		ldr	r2, [r7, #56]
 8337              		.syntax unified
 8338              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8339 00e6 41E80023 		strex r3, r2, [r1]
 8340              	@ 0 "" 2
 8341              		.thumb
 8342              		.syntax unified
 8343 00ea 3B63     		str	r3, [r7, #48]
 8344              		.loc 2 1124 10 discriminator 1
 8345 00ec 3B6B     		ldr	r3, [r7, #48]
 8346              	.LBE609:
 8347              	.LBE608:
 8348              		.loc 1 3290 3 discriminator 1
 8349 00ee 002B     		cmp	r3, #0
 8350 00f0 E5D1     		bne	.L421
 8351              	.L424:
 8352              	.LBE605:
 8353              	.LBB610:
3291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the DMA transfer for the receiver request by setting the DMAR bit
3293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   in the UART CR3 register */
3294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 8354              		.loc 1 3294 3 discriminator 1
 8355 00f2 FB68     		ldr	r3, [r7, #12]
 8356 00f4 1B68     		ldr	r3, [r3]
 8357 00f6 1433     		adds	r3, r3, #20
 8358 00f8 BB61     		str	r3, [r7, #24]
 8359              	.LBB611:
 8360              	.LBB612:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8361              		.loc 2 1072 4 discriminator 1
 8362 00fa BB69     		ldr	r3, [r7, #24]
 8363              		.syntax unified
 8364              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8365 00fc 53E8003F 		ldrex r3, [r3]
 8366              	@ 0 "" 2
 8367              		.thumb
 8368              		.syntax unified
 8369 0100 7B61     		str	r3, [r7, #20]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 8370              		.loc 2 1073 10 discriminator 1
 8371 0102 7B69     		ldr	r3, [r7, #20]
 8372              	.LBE612:
 8373              	.LBE611:
 8374              		.loc 1 3294 3 discriminator 1
 8375 0104 43F04003 		orr	r3, r3, #64
 8376 0108 3B65     		str	r3, [r7, #80]
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 227


 8377 010a FB68     		ldr	r3, [r7, #12]
 8378 010c 1B68     		ldr	r3, [r3]
 8379 010e 1433     		adds	r3, r3, #20
 8380 0110 3A6D     		ldr	r2, [r7, #80]
 8381 0112 7A62     		str	r2, [r7, #36]
 8382 0114 3B62     		str	r3, [r7, #32]
 8383              	.LBB613:
 8384              	.LBB614:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8385              		.loc 2 1123 4 discriminator 1
 8386 0116 396A     		ldr	r1, [r7, #32]
 8387 0118 7A6A     		ldr	r2, [r7, #36]
 8388              		.syntax unified
 8389              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8390 011a 41E80023 		strex r3, r2, [r1]
 8391              	@ 0 "" 2
 8392              		.thumb
 8393              		.syntax unified
 8394 011e FB61     		str	r3, [r7, #28]
 8395              		.loc 2 1124 10 discriminator 1
 8396 0120 FB69     		ldr	r3, [r7, #28]
 8397              	.LBE614:
 8398              	.LBE613:
 8399              		.loc 1 3294 3 discriminator 1
 8400 0122 002B     		cmp	r3, #0
 8401 0124 E5D1     		bne	.L424
 8402              	.LBE610:
3295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 8403              		.loc 1 3296 10
 8404 0126 0023     		movs	r3, #0
3297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 8405              		.loc 1 3297 1
 8406 0128 1846     		mov	r0, r3
 8407 012a 6037     		adds	r7, r7, #96
 8408              	.LCFI270:
 8409              		.cfi_def_cfa_offset 8
 8410 012c BD46     		mov	sp, r7
 8411              	.LCFI271:
 8412              		.cfi_def_cfa_register 13
 8413              		@ sp needed
 8414 012e 80BD     		pop	{r7, pc}
 8415              	.L427:
 8416              		.align	2
 8417              	.L426:
 8418 0130 00000000 		.word	UART_DMAReceiveCplt
 8419 0134 00000000 		.word	UART_DMARxHalfCplt
 8420 0138 00000000 		.word	UART_DMAError
 8421              		.cfi_endproc
 8422              	.LFE265:
 8424              		.section	.text.UART_EndTxTransfer,"ax",%progbits
 8425              		.align	1
 8426              		.syntax unified
 8427              		.thumb
 8428              		.thumb_func
 8429              		.fpu fpv4-sp-d16
 8431              	UART_EndTxTransfer:
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 228


 8432              	.LFB266:
3298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit compl
3301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
3302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
3303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
3305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 8433              		.loc 1 3305 1
 8434              		.cfi_startproc
 8435              		@ args = 0, pretend = 0, frame = 32
 8436              		@ frame_needed = 1, uses_anonymous_args = 0
 8437              		@ link register save eliminated.
 8438 0000 80B4     		push	{r7}
 8439              	.LCFI272:
 8440              		.cfi_def_cfa_offset 4
 8441              		.cfi_offset 7, -4
 8442 0002 89B0     		sub	sp, sp, #36
 8443              	.LCFI273:
 8444              		.cfi_def_cfa_offset 40
 8445 0004 00AF     		add	r7, sp, #0
 8446              	.LCFI274:
 8447              		.cfi_def_cfa_register 7
 8448 0006 7860     		str	r0, [r7, #4]
 8449              	.L431:
 8450              	.LBB615:
3306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
3307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 8451              		.loc 1 3307 3 discriminator 1
 8452 0008 7B68     		ldr	r3, [r7, #4]
 8453 000a 1B68     		ldr	r3, [r3]
 8454 000c 0C33     		adds	r3, r3, #12
 8455 000e FB60     		str	r3, [r7, #12]
 8456              	.LBB616:
 8457              	.LBB617:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8458              		.loc 2 1072 4 discriminator 1
 8459 0010 FB68     		ldr	r3, [r7, #12]
 8460              		.syntax unified
 8461              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8462 0012 53E8003F 		ldrex r3, [r3]
 8463              	@ 0 "" 2
 8464              		.thumb
 8465              		.syntax unified
 8466 0016 BB60     		str	r3, [r7, #8]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 8467              		.loc 2 1073 10 discriminator 1
 8468 0018 BB68     		ldr	r3, [r7, #8]
 8469              	.LBE617:
 8470              	.LBE616:
 8471              		.loc 1 3307 3 discriminator 1
 8472 001a 23F0C003 		bic	r3, r3, #192
 8473 001e FB61     		str	r3, [r7, #28]
 8474 0020 7B68     		ldr	r3, [r7, #4]
 8475 0022 1B68     		ldr	r3, [r3]
 8476 0024 0C33     		adds	r3, r3, #12
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 229


 8477 0026 FA69     		ldr	r2, [r7, #28]
 8478 0028 BA61     		str	r2, [r7, #24]
 8479 002a 7B61     		str	r3, [r7, #20]
 8480              	.LBB618:
 8481              	.LBB619:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8482              		.loc 2 1123 4 discriminator 1
 8483 002c 7969     		ldr	r1, [r7, #20]
 8484 002e BA69     		ldr	r2, [r7, #24]
 8485              		.syntax unified
 8486              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8487 0030 41E80023 		strex r3, r2, [r1]
 8488              	@ 0 "" 2
 8489              		.thumb
 8490              		.syntax unified
 8491 0034 3B61     		str	r3, [r7, #16]
 8492              		.loc 2 1124 10 discriminator 1
 8493 0036 3B69     		ldr	r3, [r7, #16]
 8494              	.LBE619:
 8495              	.LBE618:
 8496              		.loc 1 3307 3 discriminator 1
 8497 0038 002B     		cmp	r3, #0
 8498 003a E5D1     		bne	.L431
 8499              	.LBE615:
3308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* At end of Tx process, restore huart->gState to Ready */
3310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 8500              		.loc 1 3310 17
 8501 003c 7B68     		ldr	r3, [r7, #4]
 8502 003e 2022     		movs	r2, #32
 8503 0040 83F83D20 		strb	r2, [r3, #61]
3311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 8504              		.loc 1 3311 1
 8505 0044 00BF     		nop
 8506 0046 2437     		adds	r7, r7, #36
 8507              	.LCFI275:
 8508              		.cfi_def_cfa_offset 4
 8509 0048 BD46     		mov	sp, r7
 8510              	.LCFI276:
 8511              		.cfi_def_cfa_register 13
 8512              		@ sp needed
 8513 004a 5DF8047B 		ldr	r7, [sp], #4
 8514              	.LCFI277:
 8515              		.cfi_restore 7
 8516              		.cfi_def_cfa_offset 0
 8517 004e 7047     		bx	lr
 8518              		.cfi_endproc
 8519              	.LFE266:
 8521              		.section	.text.UART_EndRxTransfer,"ax",%progbits
 8522              		.align	1
 8523              		.syntax unified
 8524              		.thumb
 8525              		.thumb_func
 8526              		.fpu fpv4-sp-d16
 8528              	UART_EndRxTransfer:
 8529              	.LFB267:
3312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 230


3313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
3315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
3316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
3317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
3319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 8530              		.loc 1 3319 1
 8531              		.cfi_startproc
 8532              		@ args = 0, pretend = 0, frame = 80
 8533              		@ frame_needed = 1, uses_anonymous_args = 0
 8534              		@ link register save eliminated.
 8535 0000 80B4     		push	{r7}
 8536              	.LCFI278:
 8537              		.cfi_def_cfa_offset 4
 8538              		.cfi_offset 7, -4
 8539 0002 95B0     		sub	sp, sp, #84
 8540              	.LCFI279:
 8541              		.cfi_def_cfa_offset 88
 8542 0004 00AF     		add	r7, sp, #0
 8543              	.LCFI280:
 8544              		.cfi_def_cfa_register 7
 8545 0006 7860     		str	r0, [r7, #4]
 8546              	.L435:
 8547              	.LBB620:
3320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
3321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 8548              		.loc 1 3321 3 discriminator 1
 8549 0008 7B68     		ldr	r3, [r7, #4]
 8550 000a 1B68     		ldr	r3, [r3]
 8551 000c 0C33     		adds	r3, r3, #12
 8552 000e 7B63     		str	r3, [r7, #52]
 8553              	.LBB621:
 8554              	.LBB622:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8555              		.loc 2 1072 4 discriminator 1
 8556 0010 7B6B     		ldr	r3, [r7, #52]
 8557              		.syntax unified
 8558              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8559 0012 53E8003F 		ldrex r3, [r3]
 8560              	@ 0 "" 2
 8561              		.thumb
 8562              		.syntax unified
 8563 0016 3B63     		str	r3, [r7, #48]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 8564              		.loc 2 1073 10 discriminator 1
 8565 0018 3B6B     		ldr	r3, [r7, #48]
 8566              	.LBE622:
 8567              	.LBE621:
 8568              		.loc 1 3321 3 discriminator 1
 8569 001a 23F49073 		bic	r3, r3, #288
 8570 001e FB64     		str	r3, [r7, #76]
 8571 0020 7B68     		ldr	r3, [r7, #4]
 8572 0022 1B68     		ldr	r3, [r3]
 8573 0024 0C33     		adds	r3, r3, #12
 8574 0026 FA6C     		ldr	r2, [r7, #76]
 8575 0028 3A64     		str	r2, [r7, #64]
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 231


 8576 002a FB63     		str	r3, [r7, #60]
 8577              	.LBB623:
 8578              	.LBB624:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8579              		.loc 2 1123 4 discriminator 1
 8580 002c F96B     		ldr	r1, [r7, #60]
 8581 002e 3A6C     		ldr	r2, [r7, #64]
 8582              		.syntax unified
 8583              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8584 0030 41E80023 		strex r3, r2, [r1]
 8585              	@ 0 "" 2
 8586              		.thumb
 8587              		.syntax unified
 8588 0034 BB63     		str	r3, [r7, #56]
 8589              		.loc 2 1124 10 discriminator 1
 8590 0036 BB6B     		ldr	r3, [r7, #56]
 8591              	.LBE624:
 8592              	.LBE623:
 8593              		.loc 1 3321 3 discriminator 1
 8594 0038 002B     		cmp	r3, #0
 8595 003a E5D1     		bne	.L435
 8596              	.L438:
 8597              	.LBE620:
 8598              	.LBB625:
3322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8599              		.loc 1 3322 3 discriminator 1
 8600 003c 7B68     		ldr	r3, [r7, #4]
 8601 003e 1B68     		ldr	r3, [r3]
 8602 0040 1433     		adds	r3, r3, #20
 8603 0042 3B62     		str	r3, [r7, #32]
 8604              	.LBB626:
 8605              	.LBB627:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8606              		.loc 2 1072 4 discriminator 1
 8607 0044 3B6A     		ldr	r3, [r7, #32]
 8608              		.syntax unified
 8609              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8610 0046 53E8003F 		ldrex r3, [r3]
 8611              	@ 0 "" 2
 8612              		.thumb
 8613              		.syntax unified
 8614 004a FB61     		str	r3, [r7, #28]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 8615              		.loc 2 1073 10 discriminator 1
 8616 004c FB69     		ldr	r3, [r7, #28]
 8617              	.LBE627:
 8618              	.LBE626:
 8619              		.loc 1 3322 3 discriminator 1
 8620 004e 23F00103 		bic	r3, r3, #1
 8621 0052 BB64     		str	r3, [r7, #72]
 8622 0054 7B68     		ldr	r3, [r7, #4]
 8623 0056 1B68     		ldr	r3, [r3]
 8624 0058 1433     		adds	r3, r3, #20
 8625 005a BA6C     		ldr	r2, [r7, #72]
 8626 005c FA62     		str	r2, [r7, #44]
 8627 005e BB62     		str	r3, [r7, #40]
 8628              	.LBB628:
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 232


 8629              	.LBB629:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8630              		.loc 2 1123 4 discriminator 1
 8631 0060 B96A     		ldr	r1, [r7, #40]
 8632 0062 FA6A     		ldr	r2, [r7, #44]
 8633              		.syntax unified
 8634              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8635 0064 41E80023 		strex r3, r2, [r1]
 8636              	@ 0 "" 2
 8637              		.thumb
 8638              		.syntax unified
 8639 0068 7B62     		str	r3, [r7, #36]
 8640              		.loc 2 1124 10 discriminator 1
 8641 006a 7B6A     		ldr	r3, [r7, #36]
 8642              	.LBE629:
 8643              	.LBE628:
 8644              		.loc 1 3322 3 discriminator 1
 8645 006c 002B     		cmp	r3, #0
 8646 006e E5D1     		bne	.L438
 8647              	.LBE625:
3323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In case of reception waiting for IDLE event, disable also the IDLE IE interrupt source */
3325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 8648              		.loc 1 3325 12
 8649 0070 7B68     		ldr	r3, [r7, #4]
 8650 0072 1B6B     		ldr	r3, [r3, #48]
 8651              		.loc 1 3325 6
 8652 0074 012B     		cmp	r3, #1
 8653 0076 19D1     		bne	.L439
 8654              	.L442:
 8655              	.LBB630:
3326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8656              		.loc 1 3327 5 discriminator 1
 8657 0078 7B68     		ldr	r3, [r7, #4]
 8658 007a 1B68     		ldr	r3, [r3]
 8659 007c 0C33     		adds	r3, r3, #12
 8660 007e FB60     		str	r3, [r7, #12]
 8661              	.LBB631:
 8662              	.LBB632:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8663              		.loc 2 1072 4 discriminator 1
 8664 0080 FB68     		ldr	r3, [r7, #12]
 8665              		.syntax unified
 8666              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8667 0082 53E8003F 		ldrex r3, [r3]
 8668              	@ 0 "" 2
 8669              		.thumb
 8670              		.syntax unified
 8671 0086 BB60     		str	r3, [r7, #8]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 8672              		.loc 2 1073 10 discriminator 1
 8673 0088 BB68     		ldr	r3, [r7, #8]
 8674              	.LBE632:
 8675              	.LBE631:
 8676              		.loc 1 3327 5 discriminator 1
 8677 008a 23F01003 		bic	r3, r3, #16
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 233


 8678 008e 7B64     		str	r3, [r7, #68]
 8679 0090 7B68     		ldr	r3, [r7, #4]
 8680 0092 1B68     		ldr	r3, [r3]
 8681 0094 0C33     		adds	r3, r3, #12
 8682 0096 7A6C     		ldr	r2, [r7, #68]
 8683 0098 BA61     		str	r2, [r7, #24]
 8684 009a 7B61     		str	r3, [r7, #20]
 8685              	.LBB633:
 8686              	.LBB634:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8687              		.loc 2 1123 4 discriminator 1
 8688 009c 7969     		ldr	r1, [r7, #20]
 8689 009e BA69     		ldr	r2, [r7, #24]
 8690              		.syntax unified
 8691              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8692 00a0 41E80023 		strex r3, r2, [r1]
 8693              	@ 0 "" 2
 8694              		.thumb
 8695              		.syntax unified
 8696 00a4 3B61     		str	r3, [r7, #16]
 8697              		.loc 2 1124 10 discriminator 1
 8698 00a6 3B69     		ldr	r3, [r7, #16]
 8699              	.LBE634:
 8700              	.LBE633:
 8701              		.loc 1 3327 5 discriminator 1
 8702 00a8 002B     		cmp	r3, #0
 8703 00aa E5D1     		bne	.L442
 8704              	.L439:
 8705              	.LBE630:
3328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* At end of Rx process, restore huart->RxState to Ready */
3331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 8706              		.loc 1 3331 18
 8707 00ac 7B68     		ldr	r3, [r7, #4]
 8708 00ae 2022     		movs	r2, #32
 8709 00b0 83F83E20 		strb	r2, [r3, #62]
3332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8710              		.loc 1 3332 24
 8711 00b4 7B68     		ldr	r3, [r7, #4]
 8712 00b6 0022     		movs	r2, #0
 8713 00b8 1A63     		str	r2, [r3, #48]
3333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 8714              		.loc 1 3333 1
 8715 00ba 00BF     		nop
 8716 00bc 5437     		adds	r7, r7, #84
 8717              	.LCFI281:
 8718              		.cfi_def_cfa_offset 4
 8719 00be BD46     		mov	sp, r7
 8720              	.LCFI282:
 8721              		.cfi_def_cfa_register 13
 8722              		@ sp needed
 8723 00c0 5DF8047B 		ldr	r7, [sp], #4
 8724              	.LCFI283:
 8725              		.cfi_restore 7
 8726              		.cfi_def_cfa_offset 0
 8727 00c4 7047     		bx	lr
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 234


 8728              		.cfi_endproc
 8729              	.LFE267:
 8731              		.section	.text.UART_DMAAbortOnError,"ax",%progbits
 8732              		.align	1
 8733              		.syntax unified
 8734              		.thumb
 8735              		.thumb_func
 8736              		.fpu fpv4-sp-d16
 8738              	UART_DMAAbortOnError:
 8739              	.LFB268:
3334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART communication abort callback, when initiated by HAL services on Error
3337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
3338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
3339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
3340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
3341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
3343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 8740              		.loc 1 3343 1
 8741              		.cfi_startproc
 8742              		@ args = 0, pretend = 0, frame = 16
 8743              		@ frame_needed = 1, uses_anonymous_args = 0
 8744 0000 80B5     		push	{r7, lr}
 8745              	.LCFI284:
 8746              		.cfi_def_cfa_offset 8
 8747              		.cfi_offset 7, -8
 8748              		.cfi_offset 14, -4
 8749 0002 84B0     		sub	sp, sp, #16
 8750              	.LCFI285:
 8751              		.cfi_def_cfa_offset 24
 8752 0004 00AF     		add	r7, sp, #0
 8753              	.LCFI286:
 8754              		.cfi_def_cfa_register 7
 8755 0006 7860     		str	r0, [r7, #4]
3344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8756              		.loc 1 3344 23
 8757 0008 7B68     		ldr	r3, [r7, #4]
 8758 000a 9B6B     		ldr	r3, [r3, #56]
 8759 000c FB60     		str	r3, [r7, #12]
3345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 8760              		.loc 1 3345 22
 8761 000e FB68     		ldr	r3, [r7, #12]
 8762 0010 0022     		movs	r2, #0
 8763 0012 DA85     		strh	r2, [r3, #46]	@ movhi
3346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 8764              		.loc 1 3346 22
 8765 0014 FB68     		ldr	r3, [r7, #12]
 8766 0016 0022     		movs	r2, #0
 8767 0018 DA84     		strh	r2, [r3, #38]	@ movhi
3347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call registered error callback*/
3350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCallback(huart);
3351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call legacy weak error callback*/
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 235


3353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 8768              		.loc 1 3353 3
 8769 001a F868     		ldr	r0, [r7, #12]
 8770 001c FFF7FEFF 		bl	HAL_UART_ErrorCallback
3354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 8771              		.loc 1 3355 1
 8772 0020 00BF     		nop
 8773 0022 1037     		adds	r7, r7, #16
 8774              	.LCFI287:
 8775              		.cfi_def_cfa_offset 8
 8776 0024 BD46     		mov	sp, r7
 8777              	.LCFI288:
 8778              		.cfi_def_cfa_register 13
 8779              		@ sp needed
 8780 0026 80BD     		pop	{r7, pc}
 8781              		.cfi_endproc
 8782              	.LFE268:
 8784              		.section	.text.UART_DMATxAbortCallback,"ax",%progbits
 8785              		.align	1
 8786              		.syntax unified
 8787              		.thumb
 8788              		.thumb_func
 8789              		.fpu fpv4-sp-d16
 8791              	UART_DMATxAbortCallback:
 8792              	.LFB269:
3356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user
3359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
3360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         Abort still ongoing for Rx DMA Handle.
3362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
3363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
3364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
3365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
3367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 8793              		.loc 1 3367 1
 8794              		.cfi_startproc
 8795              		@ args = 0, pretend = 0, frame = 16
 8796              		@ frame_needed = 1, uses_anonymous_args = 0
 8797 0000 80B5     		push	{r7, lr}
 8798              	.LCFI289:
 8799              		.cfi_def_cfa_offset 8
 8800              		.cfi_offset 7, -8
 8801              		.cfi_offset 14, -4
 8802 0002 84B0     		sub	sp, sp, #16
 8803              	.LCFI290:
 8804              		.cfi_def_cfa_offset 24
 8805 0004 00AF     		add	r7, sp, #0
 8806              	.LCFI291:
 8807              		.cfi_def_cfa_register 7
 8808 0006 7860     		str	r0, [r7, #4]
3368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8809              		.loc 1 3368 23
 8810 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 236


 8811 000a 9B6B     		ldr	r3, [r3, #56]
 8812 000c FB60     		str	r3, [r7, #12]
3369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->hdmatx->XferAbortCallback = NULL;
 8813              		.loc 1 3370 8
 8814 000e FB68     		ldr	r3, [r7, #12]
 8815 0010 5B6B     		ldr	r3, [r3, #52]
 8816              		.loc 1 3370 36
 8817 0012 0022     		movs	r2, #0
 8818 0014 1A65     		str	r2, [r3, #80]
3371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
3373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->hdmarx != NULL)
 8819              		.loc 1 3373 12
 8820 0016 FB68     		ldr	r3, [r7, #12]
 8821 0018 9B6B     		ldr	r3, [r3, #56]
 8822              		.loc 1 3373 6
 8823 001a 002B     		cmp	r3, #0
 8824 001c 04D0     		beq	.L445
3374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmarx->XferAbortCallback != NULL)
 8825              		.loc 1 3375 14
 8826 001e FB68     		ldr	r3, [r7, #12]
 8827 0020 9B6B     		ldr	r3, [r3, #56]
 8828              		.loc 1 3375 22
 8829 0022 1B6D     		ldr	r3, [r3, #80]
 8830              		.loc 1 3375 8
 8831 0024 002B     		cmp	r3, #0
 8832 0026 17D1     		bne	.L447
 8833              	.L445:
3376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return;
3378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
3382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 8834              		.loc 1 3382 22
 8835 0028 FB68     		ldr	r3, [r7, #12]
 8836 002a 0022     		movs	r2, #0
 8837 002c DA84     		strh	r2, [r3, #38]	@ movhi
3383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 8838              		.loc 1 3383 22
 8839 002e FB68     		ldr	r3, [r7, #12]
 8840 0030 0022     		movs	r2, #0
 8841 0032 DA85     		strh	r2, [r3, #46]	@ movhi
3384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset ErrorCode */
3386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 8842              		.loc 1 3386 20
 8843 0034 FB68     		ldr	r3, [r7, #12]
 8844 0036 0022     		movs	r2, #0
 8845 0038 1A64     		str	r2, [r3, #64]
3387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
3389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
 8846              		.loc 1 3389 18
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 237


 8847 003a FB68     		ldr	r3, [r7, #12]
 8848 003c 2022     		movs	r2, #32
 8849 003e 83F83D20 		strb	r2, [r3, #61]
3390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 8850              		.loc 1 3390 18
 8851 0042 FB68     		ldr	r3, [r7, #12]
 8852 0044 2022     		movs	r2, #32
 8853 0046 83F83E20 		strb	r2, [r3, #62]
3391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8854              		.loc 1 3391 24
 8855 004a FB68     		ldr	r3, [r7, #12]
 8856 004c 0022     		movs	r2, #0
 8857 004e 1A63     		str	r2, [r3, #48]
3392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call user Abort complete callback */
3394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call registered Abort complete callback */
3396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
3397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
3399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
 8858              		.loc 1 3399 3
 8859 0050 F868     		ldr	r0, [r7, #12]
 8860 0052 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 8861 0056 00E0     		b	.L444
 8862              	.L447:
3377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 8863              		.loc 1 3377 7
 8864 0058 00BF     		nop
 8865              	.L444:
3400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 8866              		.loc 1 3401 1
 8867 005a 1037     		adds	r7, r7, #16
 8868              	.LCFI292:
 8869              		.cfi_def_cfa_offset 8
 8870 005c BD46     		mov	sp, r7
 8871              	.LCFI293:
 8872              		.cfi_def_cfa_register 13
 8873              		@ sp needed
 8874 005e 80BD     		pop	{r7, pc}
 8875              		.cfi_endproc
 8876              	.LFE269:
 8878              		.section	.text.UART_DMARxAbortCallback,"ax",%progbits
 8879              		.align	1
 8880              		.syntax unified
 8881              		.thumb
 8882              		.thumb_func
 8883              		.fpu fpv4-sp-d16
 8885              	UART_DMARxAbortCallback:
 8886              	.LFB270:
3402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user
3405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
3406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         Abort still ongoing for Tx DMA Handle.
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 238


3408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
3409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
3410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
3411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
3413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 8887              		.loc 1 3413 1
 8888              		.cfi_startproc
 8889              		@ args = 0, pretend = 0, frame = 16
 8890              		@ frame_needed = 1, uses_anonymous_args = 0
 8891 0000 80B5     		push	{r7, lr}
 8892              	.LCFI294:
 8893              		.cfi_def_cfa_offset 8
 8894              		.cfi_offset 7, -8
 8895              		.cfi_offset 14, -4
 8896 0002 84B0     		sub	sp, sp, #16
 8897              	.LCFI295:
 8898              		.cfi_def_cfa_offset 24
 8899 0004 00AF     		add	r7, sp, #0
 8900              	.LCFI296:
 8901              		.cfi_def_cfa_register 7
 8902 0006 7860     		str	r0, [r7, #4]
3414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8903              		.loc 1 3414 23
 8904 0008 7B68     		ldr	r3, [r7, #4]
 8905 000a 9B6B     		ldr	r3, [r3, #56]
 8906 000c FB60     		str	r3, [r7, #12]
3415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
 8907              		.loc 1 3416 8
 8908 000e FB68     		ldr	r3, [r7, #12]
 8909 0010 9B6B     		ldr	r3, [r3, #56]
 8910              		.loc 1 3416 36
 8911 0012 0022     		movs	r2, #0
 8912 0014 1A65     		str	r2, [r3, #80]
3417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
3419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->hdmatx != NULL)
 8913              		.loc 1 3419 12
 8914 0016 FB68     		ldr	r3, [r7, #12]
 8915 0018 5B6B     		ldr	r3, [r3, #52]
 8916              		.loc 1 3419 6
 8917 001a 002B     		cmp	r3, #0
 8918 001c 04D0     		beq	.L449
3420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmatx->XferAbortCallback != NULL)
 8919              		.loc 1 3421 14
 8920 001e FB68     		ldr	r3, [r7, #12]
 8921 0020 5B6B     		ldr	r3, [r3, #52]
 8922              		.loc 1 3421 22
 8923 0022 1B6D     		ldr	r3, [r3, #80]
 8924              		.loc 1 3421 8
 8925 0024 002B     		cmp	r3, #0
 8926 0026 17D1     		bne	.L451
 8927              	.L449:
3422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return;
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 239


3424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
3428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 8928              		.loc 1 3428 22
 8929 0028 FB68     		ldr	r3, [r7, #12]
 8930 002a 0022     		movs	r2, #0
 8931 002c DA84     		strh	r2, [r3, #38]	@ movhi
3429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 8932              		.loc 1 3429 22
 8933 002e FB68     		ldr	r3, [r7, #12]
 8934 0030 0022     		movs	r2, #0
 8935 0032 DA85     		strh	r2, [r3, #46]	@ movhi
3430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset ErrorCode */
3432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 8936              		.loc 1 3432 20
 8937 0034 FB68     		ldr	r3, [r7, #12]
 8938 0036 0022     		movs	r2, #0
 8939 0038 1A64     		str	r2, [r3, #64]
3433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
3435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
 8940              		.loc 1 3435 18
 8941 003a FB68     		ldr	r3, [r7, #12]
 8942 003c 2022     		movs	r2, #32
 8943 003e 83F83D20 		strb	r2, [r3, #61]
3436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 8944              		.loc 1 3436 18
 8945 0042 FB68     		ldr	r3, [r7, #12]
 8946 0044 2022     		movs	r2, #32
 8947 0046 83F83E20 		strb	r2, [r3, #62]
3437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8948              		.loc 1 3437 24
 8949 004a FB68     		ldr	r3, [r7, #12]
 8950 004c 0022     		movs	r2, #0
 8951 004e 1A63     		str	r2, [r3, #48]
3438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call user Abort complete callback */
3440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call registered Abort complete callback */
3442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
3443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
3445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
 8952              		.loc 1 3445 3
 8953 0050 F868     		ldr	r0, [r7, #12]
 8954 0052 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 8955 0056 00E0     		b	.L448
 8956              	.L451:
3423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 8957              		.loc 1 3423 7
 8958 0058 00BF     		nop
 8959              	.L448:
3446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 240


 8960              		.loc 1 3447 1
 8961 005a 1037     		adds	r7, r7, #16
 8962              	.LCFI297:
 8963              		.cfi_def_cfa_offset 8
 8964 005c BD46     		mov	sp, r7
 8965              	.LCFI298:
 8966              		.cfi_def_cfa_register 13
 8967              		@ sp needed
 8968 005e 80BD     		pop	{r7, pc}
 8969              		.cfi_endproc
 8970              	.LFE270:
 8972              		.section	.text.UART_DMATxOnlyAbortCallback,"ax",%progbits
 8973              		.align	1
 8974              		.syntax unified
 8975              		.thumb
 8976              		.thumb_func
 8977              		.fpu fpv4-sp-d16
 8979              	UART_DMATxOnlyAbortCallback:
 8980              	.LFB271:
3448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user by a call to
3451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         HAL_UART_AbortTransmit_IT API (Abort only Tx transfer)
3452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (This callback is executed at end of DMA Tx Abort procedure following user abort reques
3453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         and leads to user Tx Abort Complete callback execution).
3454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
3455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
3456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
3457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
3459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 8981              		.loc 1 3459 1
 8982              		.cfi_startproc
 8983              		@ args = 0, pretend = 0, frame = 16
 8984              		@ frame_needed = 1, uses_anonymous_args = 0
 8985 0000 80B5     		push	{r7, lr}
 8986              	.LCFI299:
 8987              		.cfi_def_cfa_offset 8
 8988              		.cfi_offset 7, -8
 8989              		.cfi_offset 14, -4
 8990 0002 84B0     		sub	sp, sp, #16
 8991              	.LCFI300:
 8992              		.cfi_def_cfa_offset 24
 8993 0004 00AF     		add	r7, sp, #0
 8994              	.LCFI301:
 8995              		.cfi_def_cfa_register 7
 8996 0006 7860     		str	r0, [r7, #4]
3460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8997              		.loc 1 3460 23
 8998 0008 7B68     		ldr	r3, [r7, #4]
 8999 000a 9B6B     		ldr	r3, [r3, #56]
 9000 000c FB60     		str	r3, [r7, #12]
3461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 9001              		.loc 1 3462 22
 9002 000e FB68     		ldr	r3, [r7, #12]
 9003 0010 0022     		movs	r2, #0
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 241


 9004 0012 DA84     		strh	r2, [r3, #38]	@ movhi
3463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->gState to Ready */
3465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 9005              		.loc 1 3465 17
 9006 0014 FB68     		ldr	r3, [r7, #12]
 9007 0016 2022     		movs	r2, #32
 9008 0018 83F83D20 		strb	r2, [r3, #61]
3466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call user Abort complete callback */
3468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call registered Abort Transmit Complete Callback */
3470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortTransmitCpltCallback(huart);
3471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call legacy weak Abort Transmit Complete Callback */
3473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_AbortTransmitCpltCallback(huart);
 9009              		.loc 1 3473 3
 9010 001c F868     		ldr	r0, [r7, #12]
 9011 001e FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
3474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 9012              		.loc 1 3475 1
 9013 0022 00BF     		nop
 9014 0024 1037     		adds	r7, r7, #16
 9015              	.LCFI302:
 9016              		.cfi_def_cfa_offset 8
 9017 0026 BD46     		mov	sp, r7
 9018              	.LCFI303:
 9019              		.cfi_def_cfa_register 13
 9020              		@ sp needed
 9021 0028 80BD     		pop	{r7, pc}
 9022              		.cfi_endproc
 9023              	.LFE271:
 9025              		.section	.text.UART_DMARxOnlyAbortCallback,"ax",%progbits
 9026              		.align	1
 9027              		.syntax unified
 9028              		.thumb
 9029              		.thumb_func
 9030              		.fpu fpv4-sp-d16
 9032              	UART_DMARxOnlyAbortCallback:
 9033              	.LFB272:
3476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user by a call to
3479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         HAL_UART_AbortReceive_IT API (Abort only Rx transfer)
3480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (This callback is executed at end of DMA Rx Abort procedure following user abort reques
3481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         and leads to user Rx Abort Complete callback execution).
3482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
3483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
3484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
3485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
3487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 9034              		.loc 1 3487 1
 9035              		.cfi_startproc
 9036              		@ args = 0, pretend = 0, frame = 16
 9037              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 242


 9038 0000 80B5     		push	{r7, lr}
 9039              	.LCFI304:
 9040              		.cfi_def_cfa_offset 8
 9041              		.cfi_offset 7, -8
 9042              		.cfi_offset 14, -4
 9043 0002 84B0     		sub	sp, sp, #16
 9044              	.LCFI305:
 9045              		.cfi_def_cfa_offset 24
 9046 0004 00AF     		add	r7, sp, #0
 9047              	.LCFI306:
 9048              		.cfi_def_cfa_register 7
 9049 0006 7860     		str	r0, [r7, #4]
3488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 9050              		.loc 1 3488 23
 9051 0008 7B68     		ldr	r3, [r7, #4]
 9052 000a 9B6B     		ldr	r3, [r3, #56]
 9053 000c FB60     		str	r3, [r7, #12]
3489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 9054              		.loc 1 3490 22
 9055 000e FB68     		ldr	r3, [r7, #12]
 9056 0010 0022     		movs	r2, #0
 9057 0012 DA85     		strh	r2, [r3, #46]	@ movhi
3491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
3493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 9058              		.loc 1 3493 18
 9059 0014 FB68     		ldr	r3, [r7, #12]
 9060 0016 2022     		movs	r2, #32
 9061 0018 83F83E20 		strb	r2, [r3, #62]
3494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 9062              		.loc 1 3494 24
 9063 001c FB68     		ldr	r3, [r7, #12]
 9064 001e 0022     		movs	r2, #0
 9065 0020 1A63     		str	r2, [r3, #48]
3495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call user Abort complete callback */
3497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call registered Abort Receive Complete Callback */
3499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortReceiveCpltCallback(huart);
3500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call legacy weak Abort Receive Complete Callback */
3502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_AbortReceiveCpltCallback(huart);
 9066              		.loc 1 3502 3
 9067 0022 F868     		ldr	r0, [r7, #12]
 9068 0024 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
3503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 9069              		.loc 1 3504 1
 9070 0028 00BF     		nop
 9071 002a 1037     		adds	r7, r7, #16
 9072              	.LCFI307:
 9073              		.cfi_def_cfa_offset 8
 9074 002c BD46     		mov	sp, r7
 9075              	.LCFI308:
 9076              		.cfi_def_cfa_register 13
 9077              		@ sp needed
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 243


 9078 002e 80BD     		pop	{r7, pc}
 9079              		.cfi_endproc
 9080              	.LFE272:
 9082              		.section	.text.UART_Transmit_IT,"ax",%progbits
 9083              		.align	1
 9084              		.syntax unified
 9085              		.thumb
 9086              		.thumb_func
 9087              		.fpu fpv4-sp-d16
 9089              	UART_Transmit_IT:
 9090              	.LFB273:
3505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Sends an amount of data in non blocking mode.
3508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
3509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
3510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
3511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart)
3513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 9091              		.loc 1 3513 1
 9092              		.cfi_startproc
 9093              		@ args = 0, pretend = 0, frame = 16
 9094              		@ frame_needed = 1, uses_anonymous_args = 0
 9095              		@ link register save eliminated.
 9096 0000 80B4     		push	{r7}
 9097              	.LCFI309:
 9098              		.cfi_def_cfa_offset 4
 9099              		.cfi_offset 7, -4
 9100 0002 85B0     		sub	sp, sp, #20
 9101              	.LCFI310:
 9102              		.cfi_def_cfa_offset 24
 9103 0004 00AF     		add	r7, sp, #0
 9104              	.LCFI311:
 9105              		.cfi_def_cfa_register 7
 9106 0006 7860     		str	r0, [r7, #4]
3514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   const uint16_t *tmp;
3515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 9107              		.loc 1 3517 12
 9108 0008 7B68     		ldr	r3, [r7, #4]
 9109 000a 93F83D30 		ldrb	r3, [r3, #61]
 9110 000e DBB2     		uxtb	r3, r3
 9111              		.loc 1 3517 6
 9112 0010 212B     		cmp	r3, #33
 9113 0012 3ED1     		bne	.L455
3518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 9114              		.loc 1 3519 21
 9115 0014 7B68     		ldr	r3, [r7, #4]
 9116 0016 9B68     		ldr	r3, [r3, #8]
 9117              		.loc 1 3519 8
 9118 0018 B3F5805F 		cmp	r3, #4096
 9119 001c 14D1     		bne	.L456
 9120              		.loc 1 3519 71 discriminator 1
 9121 001e 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 244


 9122 0020 1B69     		ldr	r3, [r3, #16]
 9123              		.loc 1 3519 56 discriminator 1
 9124 0022 002B     		cmp	r3, #0
 9125 0024 10D1     		bne	.L456
3520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       tmp = (const uint16_t *) huart->pTxBuffPtr;
 9126              		.loc 1 3521 11
 9127 0026 7B68     		ldr	r3, [r7, #4]
 9128 0028 1B6A     		ldr	r3, [r3, #32]
 9129 002a FB60     		str	r3, [r7, #12]
3522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->DR = (uint16_t)(*tmp & (uint16_t)0x01FF);
 9130              		.loc 1 3522 40
 9131 002c FB68     		ldr	r3, [r7, #12]
 9132 002e 1B88     		ldrh	r3, [r3]
 9133              		.loc 1 3522 29
 9134 0030 1A46     		mov	r2, r3
 9135              		.loc 1 3522 12
 9136 0032 7B68     		ldr	r3, [r7, #4]
 9137 0034 1B68     		ldr	r3, [r3]
 9138              		.loc 1 3522 29
 9139 0036 C2F30802 		ubfx	r2, r2, #0, #9
 9140              		.loc 1 3522 27
 9141 003a 5A60     		str	r2, [r3, #4]
3523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
 9142              		.loc 1 3523 25
 9143 003c 7B68     		ldr	r3, [r7, #4]
 9144 003e 1B6A     		ldr	r3, [r3, #32]
 9145 0040 9A1C     		adds	r2, r3, #2
 9146 0042 7B68     		ldr	r3, [r7, #4]
 9147 0044 1A62     		str	r2, [r3, #32]
 9148 0046 08E0     		b	.L457
 9149              	.L456:
3524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
3526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->DR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0x00FF);
 9150              		.loc 1 3527 45
 9151 0048 7B68     		ldr	r3, [r7, #4]
 9152 004a 1B6A     		ldr	r3, [r3, #32]
 9153              		.loc 1 3527 57
 9154 004c 591C     		adds	r1, r3, #1
 9155 004e 7A68     		ldr	r2, [r7, #4]
 9156 0050 1162     		str	r1, [r2, #32]
 9157              		.loc 1 3527 39
 9158 0052 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 9159              		.loc 1 3527 12
 9160 0054 7B68     		ldr	r3, [r7, #4]
 9161 0056 1B68     		ldr	r3, [r3]
 9162              		.loc 1 3527 27
 9163 0058 5A60     		str	r2, [r3, #4]
 9164              	.L457:
3528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (--huart->TxXferCount == 0U)
 9165              		.loc 1 3530 16
 9166 005a 7B68     		ldr	r3, [r7, #4]
 9167 005c DB8C     		ldrh	r3, [r3, #38]	@ movhi
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 245


 9168 005e 9BB2     		uxth	r3, r3
 9169              		.loc 1 3530 9
 9170 0060 013B     		subs	r3, r3, #1
 9171 0062 9BB2     		uxth	r3, r3
 9172              		.loc 1 3530 8
 9173 0064 7A68     		ldr	r2, [r7, #4]
 9174 0066 1946     		mov	r1, r3	@ movhi
 9175 0068 D184     		strh	r1, [r2, #38]	@ movhi
 9176 006a 002B     		cmp	r3, #0
 9177 006c 0FD1     		bne	.L458
3531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
3533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_TXE);
 9178              		.loc 1 3533 7
 9179 006e 7B68     		ldr	r3, [r7, #4]
 9180 0070 1B68     		ldr	r3, [r3]
 9181 0072 DA68     		ldr	r2, [r3, #12]
 9182 0074 7B68     		ldr	r3, [r7, #4]
 9183 0076 1B68     		ldr	r3, [r3]
 9184 0078 22F08002 		bic	r2, r2, #128
 9185 007c DA60     		str	r2, [r3, #12]
3534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
3536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       __HAL_UART_ENABLE_IT(huart, UART_IT_TC);
 9186              		.loc 1 3536 7
 9187 007e 7B68     		ldr	r3, [r7, #4]
 9188 0080 1B68     		ldr	r3, [r3]
 9189 0082 DA68     		ldr	r2, [r3, #12]
 9190 0084 7B68     		ldr	r3, [r7, #4]
 9191 0086 1B68     		ldr	r3, [r3]
 9192 0088 42F04002 		orr	r2, r2, #64
 9193 008c DA60     		str	r2, [r3, #12]
 9194              	.L458:
3537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 9195              		.loc 1 3538 12
 9196 008e 0023     		movs	r3, #0
 9197 0090 00E0     		b	.L459
 9198              	.L455:
3539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
3541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 9199              		.loc 1 3542 12
 9200 0092 0223     		movs	r3, #2
 9201              	.L459:
3543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 9202              		.loc 1 3544 1
 9203 0094 1846     		mov	r0, r3
 9204 0096 1437     		adds	r7, r7, #20
 9205              	.LCFI312:
 9206              		.cfi_def_cfa_offset 4
 9207 0098 BD46     		mov	sp, r7
 9208              	.LCFI313:
 9209              		.cfi_def_cfa_register 13
 9210              		@ sp needed
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 246


 9211 009a 5DF8047B 		ldr	r7, [sp], #4
 9212              	.LCFI314:
 9213              		.cfi_restore 7
 9214              		.cfi_def_cfa_offset 0
 9215 009e 7047     		bx	lr
 9216              		.cfi_endproc
 9217              	.LFE273:
 9219              		.section	.text.UART_EndTransmit_IT,"ax",%progbits
 9220              		.align	1
 9221              		.syntax unified
 9222              		.thumb
 9223              		.thumb_func
 9224              		.fpu fpv4-sp-d16
 9226              	UART_EndTransmit_IT:
 9227              	.LFB274:
3545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Wraps up transmission in non blocking mode.
3548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
3549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
3550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
3551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart)
3553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 9228              		.loc 1 3553 1
 9229              		.cfi_startproc
 9230              		@ args = 0, pretend = 0, frame = 8
 9231              		@ frame_needed = 1, uses_anonymous_args = 0
 9232 0000 80B5     		push	{r7, lr}
 9233              	.LCFI315:
 9234              		.cfi_def_cfa_offset 8
 9235              		.cfi_offset 7, -8
 9236              		.cfi_offset 14, -4
 9237 0002 82B0     		sub	sp, sp, #8
 9238              	.LCFI316:
 9239              		.cfi_def_cfa_offset 16
 9240 0004 00AF     		add	r7, sp, #0
 9241              	.LCFI317:
 9242              		.cfi_def_cfa_register 7
 9243 0006 7860     		str	r0, [r7, #4]
3554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */
3555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE_IT(huart, UART_IT_TC);
 9244              		.loc 1 3555 3
 9245 0008 7B68     		ldr	r3, [r7, #4]
 9246 000a 1B68     		ldr	r3, [r3]
 9247 000c DA68     		ldr	r2, [r3, #12]
 9248 000e 7B68     		ldr	r3, [r7, #4]
 9249 0010 1B68     		ldr	r3, [r3]
 9250 0012 22F04002 		bic	r2, r2, #64
 9251 0016 DA60     		str	r2, [r3, #12]
3556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
3558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 9252              		.loc 1 3558 17
 9253 0018 7B68     		ldr	r3, [r7, #4]
 9254 001a 2022     		movs	r2, #32
 9255 001c 83F83D20 		strb	r2, [r3, #61]
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 247


3559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call registered Tx complete callback*/
3562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxCpltCallback(huart);
3563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call legacy weak Tx complete callback*/
3565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
 9256              		.loc 1 3565 3
 9257 0020 7868     		ldr	r0, [r7, #4]
 9258 0022 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
3566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 9259              		.loc 1 3568 10
 9260 0026 0023     		movs	r3, #0
3569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 9261              		.loc 1 3569 1
 9262 0028 1846     		mov	r0, r3
 9263 002a 0837     		adds	r7, r7, #8
 9264              	.LCFI318:
 9265              		.cfi_def_cfa_offset 8
 9266 002c BD46     		mov	sp, r7
 9267              	.LCFI319:
 9268              		.cfi_def_cfa_register 13
 9269              		@ sp needed
 9270 002e 80BD     		pop	{r7, pc}
 9271              		.cfi_endproc
 9272              	.LFE274:
 9274              		.section	.text.UART_Receive_IT,"ax",%progbits
 9275              		.align	1
 9276              		.syntax unified
 9277              		.thumb
 9278              		.thumb_func
 9279              		.fpu fpv4-sp-d16
 9281              	UART_Receive_IT:
 9282              	.LFB275:
3570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Receives an amount of data in non blocking mode
3573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
3574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
3575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
3576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart)
3578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 9283              		.loc 1 3578 1
 9284              		.cfi_startproc
 9285              		@ args = 0, pretend = 0, frame = 48
 9286              		@ frame_needed = 1, uses_anonymous_args = 0
 9287 0000 80B5     		push	{r7, lr}
 9288              	.LCFI320:
 9289              		.cfi_def_cfa_offset 8
 9290              		.cfi_offset 7, -8
 9291              		.cfi_offset 14, -4
 9292 0002 8CB0     		sub	sp, sp, #48
 9293              	.LCFI321:
 9294              		.cfi_def_cfa_offset 56
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 248


 9295 0004 00AF     		add	r7, sp, #0
 9296              	.LCFI322:
 9297              		.cfi_def_cfa_register 7
 9298 0006 7860     		str	r0, [r7, #4]
3579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint8_t  *pdata8bits;
3580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t *pdata16bits;
3581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
3583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 9299              		.loc 1 3583 12
 9300 0008 7B68     		ldr	r3, [r7, #4]
 9301 000a 93F83E30 		ldrb	r3, [r3, #62]
 9302 000e DBB2     		uxtb	r3, r3
 9303              		.loc 1 3583 6
 9304 0010 222B     		cmp	r3, #34
 9305 0012 40F0AB80 		bne	.L463
3584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 9306              		.loc 1 3585 21
 9307 0016 7B68     		ldr	r3, [r7, #4]
 9308 0018 9B68     		ldr	r3, [r3, #8]
 9309              		.loc 1 3585 8
 9310 001a B3F5805F 		cmp	r3, #4096
 9311 001e 17D1     		bne	.L464
 9312              		.loc 1 3585 71 discriminator 1
 9313 0020 7B68     		ldr	r3, [r7, #4]
 9314 0022 1B69     		ldr	r3, [r3, #16]
 9315              		.loc 1 3585 56 discriminator 1
 9316 0024 002B     		cmp	r3, #0
 9317 0026 13D1     		bne	.L464
3586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata8bits  = NULL;
 9318              		.loc 1 3587 19
 9319 0028 0023     		movs	r3, #0
 9320 002a FB62     		str	r3, [r7, #44]
3588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata16bits = (uint16_t *) huart->pRxBuffPtr;
 9321              		.loc 1 3588 19
 9322 002c 7B68     		ldr	r3, [r7, #4]
 9323 002e 9B6A     		ldr	r3, [r3, #40]
 9324 0030 BB62     		str	r3, [r7, #40]
3589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       *pdata16bits = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
 9325              		.loc 1 3589 38
 9326 0032 7B68     		ldr	r3, [r7, #4]
 9327 0034 1B68     		ldr	r3, [r3]
 9328              		.loc 1 3589 48
 9329 0036 5B68     		ldr	r3, [r3, #4]
 9330              		.loc 1 3589 22
 9331 0038 9BB2     		uxth	r3, r3
 9332 003a C3F30803 		ubfx	r3, r3, #0, #9
 9333 003e 9AB2     		uxth	r2, r3
 9334              		.loc 1 3589 20
 9335 0040 BB6A     		ldr	r3, [r7, #40]
 9336 0042 1A80     		strh	r2, [r3]	@ movhi
3590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->pRxBuffPtr += 2U;
 9337              		.loc 1 3590 25
 9338 0044 7B68     		ldr	r3, [r7, #4]
 9339 0046 9B6A     		ldr	r3, [r3, #40]
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 249


 9340 0048 9A1C     		adds	r2, r3, #2
 9341 004a 7B68     		ldr	r3, [r7, #4]
 9342 004c 9A62     		str	r2, [r3, #40]
 9343 004e 26E0     		b	.L465
 9344              	.L464:
3591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
3593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata8bits = (uint8_t *) huart->pRxBuffPtr;
 9345              		.loc 1 3594 18
 9346 0050 7B68     		ldr	r3, [r7, #4]
 9347 0052 9B6A     		ldr	r3, [r3, #40]
 9348 0054 FB62     		str	r3, [r7, #44]
3595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata16bits  = NULL;
 9349              		.loc 1 3595 20
 9350 0056 0023     		movs	r3, #0
 9351 0058 BB62     		str	r3, [r7, #40]
3596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) || ((huart->Init.WordLength == UART_WORDLE
 9352              		.loc 1 3597 23
 9353 005a 7B68     		ldr	r3, [r7, #4]
 9354 005c 9B68     		ldr	r3, [r3, #8]
 9355              		.loc 1 3597 10
 9356 005e B3F5805F 		cmp	r3, #4096
 9357 0062 07D0     		beq	.L466
 9358              		.loc 1 3597 74 discriminator 1
 9359 0064 7B68     		ldr	r3, [r7, #4]
 9360 0066 9B68     		ldr	r3, [r3, #8]
 9361              		.loc 1 3597 58 discriminator 1
 9362 0068 002B     		cmp	r3, #0
 9363 006a 0AD1     		bne	.L467
 9364              		.loc 1 3597 124 discriminator 2
 9365 006c 7B68     		ldr	r3, [r7, #4]
 9366 006e 1B69     		ldr	r3, [r3, #16]
 9367              		.loc 1 3597 109 discriminator 2
 9368 0070 002B     		cmp	r3, #0
 9369 0072 06D1     		bne	.L467
 9370              	.L466:
3598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
3599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
 9371              		.loc 1 3599 38
 9372 0074 7B68     		ldr	r3, [r7, #4]
 9373 0076 1B68     		ldr	r3, [r3]
 9374              		.loc 1 3599 48
 9375 0078 5B68     		ldr	r3, [r3, #4]
 9376              		.loc 1 3599 23
 9377 007a DAB2     		uxtb	r2, r3
 9378              		.loc 1 3599 21
 9379 007c FB6A     		ldr	r3, [r7, #44]
 9380 007e 1A70     		strb	r2, [r3]
 9381 0080 08E0     		b	.L468
 9382              	.L467:
3600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
3601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
3602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
3603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
 9383              		.loc 1 3603 38
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 250


 9384 0082 7B68     		ldr	r3, [r7, #4]
 9385 0084 1B68     		ldr	r3, [r3]
 9386              		.loc 1 3603 48
 9387 0086 5B68     		ldr	r3, [r3, #4]
 9388              		.loc 1 3603 23
 9389 0088 DBB2     		uxtb	r3, r3
 9390 008a 03F07F03 		and	r3, r3, #127
 9391 008e DAB2     		uxtb	r2, r3
 9392              		.loc 1 3603 21
 9393 0090 FB6A     		ldr	r3, [r7, #44]
 9394 0092 1A70     		strb	r2, [r3]
 9395              	.L468:
3604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
3605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->pRxBuffPtr += 1U;
 9396              		.loc 1 3605 25
 9397 0094 7B68     		ldr	r3, [r7, #4]
 9398 0096 9B6A     		ldr	r3, [r3, #40]
 9399 0098 5A1C     		adds	r2, r3, #1
 9400 009a 7B68     		ldr	r3, [r7, #4]
 9401 009c 9A62     		str	r2, [r3, #40]
 9402              	.L465:
3606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (--huart->RxXferCount == 0U)
 9403              		.loc 1 3608 16
 9404 009e 7B68     		ldr	r3, [r7, #4]
 9405 00a0 DB8D     		ldrh	r3, [r3, #46]	@ movhi
 9406 00a2 9BB2     		uxth	r3, r3
 9407              		.loc 1 3608 9
 9408 00a4 013B     		subs	r3, r3, #1
 9409 00a6 9BB2     		uxth	r3, r3
 9410              		.loc 1 3608 8
 9411 00a8 7A68     		ldr	r2, [r7, #4]
 9412 00aa 1946     		mov	r1, r3	@ movhi
 9413 00ac D185     		strh	r1, [r2, #46]	@ movhi
 9414 00ae 002B     		cmp	r3, #0
 9415 00b0 5AD1     		bne	.L469
3609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Disable the UART Data Register not empty Interrupt */
3611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_RXNE);
 9416              		.loc 1 3611 7
 9417 00b2 7B68     		ldr	r3, [r7, #4]
 9418 00b4 1B68     		ldr	r3, [r3]
 9419 00b6 DA68     		ldr	r2, [r3, #12]
 9420 00b8 7B68     		ldr	r3, [r7, #4]
 9421 00ba 1B68     		ldr	r3, [r3]
 9422 00bc 22F02002 		bic	r2, r2, #32
 9423 00c0 DA60     		str	r2, [r3, #12]
3612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt */
3614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_PE);
 9424              		.loc 1 3614 7
 9425 00c2 7B68     		ldr	r3, [r7, #4]
 9426 00c4 1B68     		ldr	r3, [r3]
 9427 00c6 DA68     		ldr	r2, [r3, #12]
 9428 00c8 7B68     		ldr	r3, [r7, #4]
 9429 00ca 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 251


 9430 00cc 22F48072 		bic	r2, r2, #256
 9431 00d0 DA60     		str	r2, [r3, #12]
3615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_ERR);
 9432              		.loc 1 3617 7
 9433 00d2 7B68     		ldr	r3, [r7, #4]
 9434 00d4 1B68     		ldr	r3, [r3]
 9435 00d6 5A69     		ldr	r2, [r3, #20]
 9436 00d8 7B68     		ldr	r3, [r7, #4]
 9437 00da 1B68     		ldr	r3, [r3]
 9438 00dc 22F00102 		bic	r2, r2, #1
 9439 00e0 5A61     		str	r2, [r3, #20]
3618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
3620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 9440              		.loc 1 3620 22
 9441 00e2 7B68     		ldr	r3, [r7, #4]
 9442 00e4 2022     		movs	r2, #32
 9443 00e6 83F83E20 		strb	r2, [r3, #62]
3621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Check current reception Mode :
3623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          If Reception till IDLE event has been selected : */
3624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 9444              		.loc 1 3624 16
 9445 00ea 7B68     		ldr	r3, [r7, #4]
 9446 00ec 1B6B     		ldr	r3, [r3, #48]
 9447              		.loc 1 3624 10
 9448 00ee 012B     		cmp	r3, #1
 9449 00f0 35D1     		bne	.L470
3625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
3626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Set reception type to Standard */
3627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 9450              		.loc 1 3627 30
 9451 00f2 7B68     		ldr	r3, [r7, #4]
 9452 00f4 0022     		movs	r2, #0
 9453 00f6 1A63     		str	r2, [r3, #48]
 9454              	.L473:
 9455              	.LBB635:
3628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Disable IDLE interrupt */
3630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 9456              		.loc 1 3630 9 discriminator 1
 9457 00f8 7B68     		ldr	r3, [r7, #4]
 9458 00fa 1B68     		ldr	r3, [r3]
 9459 00fc 0C33     		adds	r3, r3, #12
 9460 00fe 7B61     		str	r3, [r7, #20]
 9461              	.LBB636:
 9462              	.LBB637:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 9463              		.loc 2 1072 4 discriminator 1
 9464 0100 7B69     		ldr	r3, [r7, #20]
 9465              		.syntax unified
 9466              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9467 0102 53E8003F 		ldrex r3, [r3]
 9468              	@ 0 "" 2
 9469              		.thumb
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 252


 9470              		.syntax unified
 9471 0106 3B61     		str	r3, [r7, #16]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 9472              		.loc 2 1073 10 discriminator 1
 9473 0108 3B69     		ldr	r3, [r7, #16]
 9474              	.LBE637:
 9475              	.LBE636:
 9476              		.loc 1 3630 9 discriminator 1
 9477 010a 23F01003 		bic	r3, r3, #16
 9478 010e 7B62     		str	r3, [r7, #36]
 9479 0110 7B68     		ldr	r3, [r7, #4]
 9480 0112 1B68     		ldr	r3, [r3]
 9481 0114 0C33     		adds	r3, r3, #12
 9482 0116 7A6A     		ldr	r2, [r7, #36]
 9483 0118 3A62     		str	r2, [r7, #32]
 9484 011a FB61     		str	r3, [r7, #28]
 9485              	.LBB638:
 9486              	.LBB639:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 9487              		.loc 2 1123 4 discriminator 1
 9488 011c F969     		ldr	r1, [r7, #28]
 9489 011e 3A6A     		ldr	r2, [r7, #32]
 9490              		.syntax unified
 9491              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9492 0120 41E80023 		strex r3, r2, [r1]
 9493              	@ 0 "" 2
 9494              		.thumb
 9495              		.syntax unified
 9496 0124 BB61     		str	r3, [r7, #24]
 9497              		.loc 2 1124 10 discriminator 1
 9498 0126 BB69     		ldr	r3, [r7, #24]
 9499              	.LBE639:
 9500              	.LBE638:
 9501              		.loc 1 3630 9 discriminator 1
 9502 0128 002B     		cmp	r3, #0
 9503 012a E5D1     		bne	.L473
 9504              	.LBE635:
3631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Check if IDLE flag is set */
3633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE))
 9505              		.loc 1 3633 13
 9506 012c 7B68     		ldr	r3, [r7, #4]
 9507 012e 1B68     		ldr	r3, [r3]
 9508 0130 1B68     		ldr	r3, [r3]
 9509 0132 03F01003 		and	r3, r3, #16
 9510              		.loc 1 3633 12
 9511 0136 102B     		cmp	r3, #16
 9512 0138 0AD1     		bne	.L474
 9513              	.LBB640:
3634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
3635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Clear IDLE flag in ISR */
3636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           __HAL_UART_CLEAR_IDLEFLAG(huart);
 9514              		.loc 1 3636 11
 9515 013a 0023     		movs	r3, #0
 9516 013c FB60     		str	r3, [r7, #12]
 9517 013e 7B68     		ldr	r3, [r7, #4]
 9518 0140 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 253


 9519 0142 1B68     		ldr	r3, [r3]
 9520 0144 FB60     		str	r3, [r7, #12]
 9521 0146 7B68     		ldr	r3, [r7, #4]
 9522 0148 1B68     		ldr	r3, [r3]
 9523 014a 5B68     		ldr	r3, [r3, #4]
 9524 014c FB60     		str	r3, [r7, #12]
 9525 014e FB68     		ldr	r3, [r7, #12]
 9526              	.L474:
 9527              	.LBE640:
3637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
3638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /*Call registered Rx Event callback*/
3641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxEventCallback(huart, huart->RxXferSize);
3642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /*Call legacy weak Rx Event callback*/
3644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 9528              		.loc 1 3644 9
 9529 0150 7B68     		ldr	r3, [r7, #4]
 9530 0152 9B8D     		ldrh	r3, [r3, #44]
 9531 0154 1946     		mov	r1, r3
 9532 0156 7868     		ldr	r0, [r7, #4]
 9533 0158 FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
 9534 015c 02E0     		b	.L475
 9535              	.L470:
3645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
3647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
3648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
3649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Standard reception API called */
3650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /*Call registered Rx complete callback*/
3652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxCpltCallback(huart);
3653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /*Call legacy weak Rx complete callback*/
3655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         HAL_UART_RxCpltCallback(huart);
 9536              		.loc 1 3655 9
 9537 015e 7868     		ldr	r0, [r7, #4]
 9538 0160 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 9539              	.L475:
3656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
3658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_OK;
 9540              		.loc 1 3659 14
 9541 0164 0023     		movs	r3, #0
 9542 0166 02E0     		b	.L476
 9543              	.L469:
3660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 9544              		.loc 1 3661 12
 9545 0168 0023     		movs	r3, #0
 9546 016a 00E0     		b	.L476
 9547              	.L463:
3662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
3664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 254


3665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 9548              		.loc 1 3665 12
 9549 016c 0223     		movs	r3, #2
 9550              	.L476:
3666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 9551              		.loc 1 3667 1
 9552 016e 1846     		mov	r0, r3
 9553 0170 3037     		adds	r7, r7, #48
 9554              	.LCFI323:
 9555              		.cfi_def_cfa_offset 8
 9556 0172 BD46     		mov	sp, r7
 9557              	.LCFI324:
 9558              		.cfi_def_cfa_register 13
 9559              		@ sp needed
 9560 0174 80BD     		pop	{r7, pc}
 9561              		.cfi_endproc
 9562              	.LFE275:
 9564              		.global	__aeabi_uldivmod
 9565              		.section	.text.UART_SetConfig,"ax",%progbits
 9566              		.align	1
 9567              		.syntax unified
 9568              		.thumb
 9569              		.thumb_func
 9570              		.fpu fpv4-sp-d16
 9572              	UART_SetConfig:
 9573              	.LFB276:
3668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Configures the UART peripheral.
3671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
3672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
3673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
3674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_SetConfig(UART_HandleTypeDef *huart)
3676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 9574              		.loc 1 3676 1
 9575              		.cfi_startproc
 9576              		@ args = 0, pretend = 0, frame = 256
 9577              		@ frame_needed = 1, uses_anonymous_args = 0
 9578 0000 2DE9B04F 		push	{r4, r5, r7, r8, r9, r10, fp, lr}
 9579              	.LCFI325:
 9580              		.cfi_def_cfa_offset 32
 9581              		.cfi_offset 4, -32
 9582              		.cfi_offset 5, -28
 9583              		.cfi_offset 7, -24
 9584              		.cfi_offset 8, -20
 9585              		.cfi_offset 9, -16
 9586              		.cfi_offset 10, -12
 9587              		.cfi_offset 11, -8
 9588              		.cfi_offset 14, -4
 9589 0004 C0B0     		sub	sp, sp, #256
 9590              	.LCFI326:
 9591              		.cfi_def_cfa_offset 288
 9592 0006 00AF     		add	r7, sp, #0
 9593              	.LCFI327:
 9594              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 255


 9595 0008 C7F8F400 		str	r0, [r7, #244]
3677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmpreg;
3678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t pclk;
3679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
3681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
3682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
3683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
3684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
3685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
3687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits
3688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      according to huart->Init.StopBits value */
3689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 9596              		.loc 1 3689 3
 9597 000c D7F8F430 		ldr	r3, [r7, #244]
 9598 0010 1B68     		ldr	r3, [r3]
 9599 0012 1B69     		ldr	r3, [r3, #16]
 9600 0014 23F44050 		bic	r0, r3, #12288
 9601 0018 D7F8F430 		ldr	r3, [r7, #244]
 9602 001c D968     		ldr	r1, [r3, #12]
 9603 001e D7F8F430 		ldr	r3, [r7, #244]
 9604 0022 1A68     		ldr	r2, [r3]
 9605 0024 40EA0103 		orr	r3, r0, r1
 9606 0028 1361     		str	r3, [r2, #16]
3690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
3692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Configure the UART Word Length, Parity and mode:
3693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      Set the M bits according to huart->Init.WordLength value
3694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      Set PCE and PS bits according to huart->Init.Parity value
3695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      Set TE and RE bits according to huart->Init.Mode value
3696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      Set OVER8 bit according to huart->Init.OverSampling value */
3697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.O
 9607              		.loc 1 3698 33
 9608 002a D7F8F430 		ldr	r3, [r7, #244]
 9609 002e 9A68     		ldr	r2, [r3, #8]
 9610              		.loc 1 3698 58
 9611 0030 D7F8F430 		ldr	r3, [r7, #244]
 9612 0034 1B69     		ldr	r3, [r3, #16]
 9613              		.loc 1 3698 45
 9614 0036 1A43     		orrs	r2, r2, r3
 9615              		.loc 1 3698 79
 9616 0038 D7F8F430 		ldr	r3, [r7, #244]
 9617 003c 5B69     		ldr	r3, [r3, #20]
 9618              		.loc 1 3698 66
 9619 003e 1A43     		orrs	r2, r2, r3
 9620              		.loc 1 3698 98
 9621 0040 D7F8F430 		ldr	r3, [r7, #244]
 9622 0044 DB69     		ldr	r3, [r3, #28]
 9623              		.loc 1 3698 10
 9624 0046 1343     		orrs	r3, r3, r2
 9625 0048 C7F8F830 		str	r3, [r7, #248]
3699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1,
 9626              		.loc 1 3699 3
 9627 004c D7F8F430 		ldr	r3, [r7, #244]
 9628 0050 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 256


 9629 0052 DB68     		ldr	r3, [r3, #12]
 9630 0054 23F41641 		bic	r1, r3, #38400
 9631 0058 21F00C01 		bic	r1, r1, #12
 9632 005c D7F8F430 		ldr	r3, [r7, #244]
 9633 0060 1A68     		ldr	r2, [r3]
 9634 0062 D7F8F830 		ldr	r3, [r7, #248]
 9635 0066 0B43     		orrs	r3, r3, r1
 9636 0068 D360     		str	r3, [r2, #12]
3700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE | 
3701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              tmpreg);
3702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
3704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
3705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 9637              		.loc 1 3705 3
 9638 006a D7F8F430 		ldr	r3, [r7, #244]
 9639 006e 1B68     		ldr	r3, [r3]
 9640 0070 5B69     		ldr	r3, [r3, #20]
 9641 0072 23F44070 		bic	r0, r3, #768
 9642 0076 D7F8F430 		ldr	r3, [r7, #244]
 9643 007a 9969     		ldr	r1, [r3, #24]
 9644 007c D7F8F430 		ldr	r3, [r7, #244]
 9645 0080 1A68     		ldr	r2, [r3]
 9646 0082 40EA0103 		orr	r3, r0, r1
 9647 0086 5361     		str	r3, [r2, #20]
3706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if defined(USART6) && defined(UART9) && defined(UART10)
3709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((huart->Instance == USART1) || (huart->Instance == USART6) || (huart->Instance == UART9) ||
3710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pclk = HAL_RCC_GetPCLK2Freq();
3712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #elif defined(USART6)
3714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((huart->Instance == USART1) || (huart->Instance == USART6))
 9648              		.loc 1 3714 15
 9649 0088 D7F8F430 		ldr	r3, [r7, #244]
 9650 008c 1A68     		ldr	r2, [r3]
 9651              		.loc 1 3714 8
 9652 008e 8F4B     		ldr	r3, .L484
 9653 0090 9A42     		cmp	r2, r3
 9654 0092 05D0     		beq	.L478
 9655              		.loc 1 3714 46 discriminator 1
 9656 0094 D7F8F430 		ldr	r3, [r7, #244]
 9657 0098 1A68     		ldr	r2, [r3]
 9658              		.loc 1 3714 37 discriminator 1
 9659 009a 8D4B     		ldr	r3, .L484+4
 9660 009c 9A42     		cmp	r2, r3
 9661 009e 04D1     		bne	.L479
 9662              	.L478:
3715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pclk = HAL_RCC_GetPCLK2Freq();
 9663              		.loc 1 3716 14
 9664 00a0 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 9665 00a4 C7F8FC00 		str	r0, [r7, #252]
 9666              		.loc 1 3716 12
 9667 00a8 03E0     		b	.L480
 9668              	.L479:
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 257


3717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->Instance == USART1)
3720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pclk = HAL_RCC_GetPCLK2Freq();
3722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USART6 */
3724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
3725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pclk = HAL_RCC_GetPCLK1Freq();
 9669              		.loc 1 3726 14
 9670 00aa FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 9671 00ae C7F8FC00 		str	r0, [r7, #252]
 9672              	.L480:
3727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART BRR Configuration ---------------------*/
3729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 9673              		.loc 1 3729 18
 9674 00b2 D7F8F430 		ldr	r3, [r7, #244]
 9675 00b6 DB69     		ldr	r3, [r3, #28]
 9676              		.loc 1 3729 6
 9677 00b8 B3F5004F 		cmp	r3, #32768
 9678 00bc 40F00C81 		bne	.L481
3730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 9679              		.loc 1 3731 28
 9680 00c0 D7F8FC30 		ldr	r3, [r7, #252]
 9681 00c4 0022     		movs	r2, #0
 9682 00c6 C7F8E830 		str	r3, [r7, #232]
 9683 00ca C7F8EC20 		str	r2, [r7, #236]
 9684 00ce D7E93A45 		ldrd	r4, [r7, #232]
 9685 00d2 2246     		mov	r2, r4
 9686 00d4 2B46     		mov	r3, r5
 9687 00d6 9118     		adds	r1, r2, r2
 9688 00d8 B965     		str	r1, [r7, #88]
 9689 00da 5B41     		adcs	r3, r3, r3
 9690 00dc FB65     		str	r3, [r7, #92]
 9691 00de D7E91623 		ldrd	r2, [r7, #88]
 9692 00e2 2146     		mov	r1, r4
 9693 00e4 12EB0108 		adds	r8, r2, r1
 9694 00e8 2946     		mov	r1, r5
 9695 00ea 43EB0109 		adc	r9, r3, r1
 9696 00ee 4FF00002 		mov	r2, #0
 9697 00f2 4FF00003 		mov	r3, #0
 9698 00f6 4FEAC903 		lsl	r3, r9, #3
 9699 00fa 43EA5873 		orr	r3, r3, r8, lsr #29
 9700 00fe 4FEAC802 		lsl	r2, r8, #3
 9701 0102 9046     		mov	r8, r2
 9702 0104 9946     		mov	r9, r3
 9703 0106 2346     		mov	r3, r4
 9704 0108 18EB0303 		adds	r3, r8, r3
 9705 010c C7F8E030 		str	r3, [r7, #224]
 9706 0110 2B46     		mov	r3, r5
 9707 0112 49EB0303 		adc	r3, r9, r3
 9708 0116 C7F8E430 		str	r3, [r7, #228]
 9709 011a D7F8F430 		ldr	r3, [r7, #244]
 9710 011e 5B68     		ldr	r3, [r3, #4]
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 258


 9711 0120 0022     		movs	r2, #0
 9712 0122 C7F8D830 		str	r3, [r7, #216]
 9713 0126 C7F8DC20 		str	r2, [r7, #220]
 9714 012a D7E93612 		ldrd	r1, [r7, #216]
 9715 012e 0B46     		mov	r3, r1
 9716 0130 DB18     		adds	r3, r3, r3
 9717 0132 3B65     		str	r3, [r7, #80]
 9718 0134 1346     		mov	r3, r2
 9719 0136 42EB0303 		adc	r3, r2, r3
 9720 013a 7B65     		str	r3, [r7, #84]
 9721 013c D7E91423 		ldrd	r2, [r7, #80]
 9722 0140 D7E93801 		ldrd	r0, [r7, #224]
 9723 0144 FFF7FEFF 		bl	__aeabi_uldivmod
 9724 0148 0246     		mov	r2, r0
 9725 014a 0B46     		mov	r3, r1
 9726 014c 614B     		ldr	r3, .L484+8
 9727 014e A3FB0223 		umull	r2, r3, r3, r2
 9728 0152 5B09     		lsrs	r3, r3, #5
 9729 0154 1C01     		lsls	r4, r3, #4
 9730 0156 D7F8FC30 		ldr	r3, [r7, #252]
 9731 015a 0022     		movs	r2, #0
 9732 015c C7F8D030 		str	r3, [r7, #208]
 9733 0160 C7F8D420 		str	r2, [r7, #212]
 9734 0164 D7E93489 		ldrd	r8, [r7, #208]
 9735 0168 4246     		mov	r2, r8
 9736 016a 4B46     		mov	r3, r9
 9737 016c 9118     		adds	r1, r2, r2
 9738 016e B964     		str	r1, [r7, #72]
 9739 0170 5B41     		adcs	r3, r3, r3
 9740 0172 FB64     		str	r3, [r7, #76]
 9741 0174 D7E91223 		ldrd	r2, [r7, #72]
 9742 0178 4146     		mov	r1, r8
 9743 017a 12EB010A 		adds	r10, r2, r1
 9744 017e 4946     		mov	r1, r9
 9745 0180 43EB010B 		adc	fp, r3, r1
 9746 0184 4FF00002 		mov	r2, #0
 9747 0188 4FF00003 		mov	r3, #0
 9748 018c 4FEACB03 		lsl	r3, fp, #3
 9749 0190 43EA5A73 		orr	r3, r3, r10, lsr #29
 9750 0194 4FEACA02 		lsl	r2, r10, #3
 9751 0198 9246     		mov	r10, r2
 9752 019a 9B46     		mov	fp, r3
 9753 019c 4346     		mov	r3, r8
 9754 019e 1AEB0303 		adds	r3, r10, r3
 9755 01a2 C7F8C830 		str	r3, [r7, #200]
 9756 01a6 4B46     		mov	r3, r9
 9757 01a8 4BEB0303 		adc	r3, fp, r3
 9758 01ac C7F8CC30 		str	r3, [r7, #204]
 9759 01b0 D7F8F430 		ldr	r3, [r7, #244]
 9760 01b4 5B68     		ldr	r3, [r3, #4]
 9761 01b6 0022     		movs	r2, #0
 9762 01b8 C7F8C030 		str	r3, [r7, #192]
 9763 01bc C7F8C420 		str	r2, [r7, #196]
 9764 01c0 D7E93012 		ldrd	r1, [r7, #192]
 9765 01c4 0B46     		mov	r3, r1
 9766 01c6 DB18     		adds	r3, r3, r3
 9767 01c8 3B64     		str	r3, [r7, #64]
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 259


 9768 01ca 1346     		mov	r3, r2
 9769 01cc 42EB0303 		adc	r3, r2, r3
 9770 01d0 7B64     		str	r3, [r7, #68]
 9771 01d2 D7E91023 		ldrd	r2, [r7, #64]
 9772 01d6 D7E93201 		ldrd	r0, [r7, #200]
 9773 01da FFF7FEFF 		bl	__aeabi_uldivmod
 9774 01de 0246     		mov	r2, r0
 9775 01e0 0B46     		mov	r3, r1
 9776 01e2 1146     		mov	r1, r2
 9777 01e4 3B4B     		ldr	r3, .L484+8
 9778 01e6 A3FB0123 		umull	r2, r3, r3, r1
 9779 01ea 5B09     		lsrs	r3, r3, #5
 9780 01ec 6422     		movs	r2, #100
 9781 01ee 02FB03F3 		mul	r3, r2, r3
 9782 01f2 CB1A     		subs	r3, r1, r3
 9783 01f4 DB00     		lsls	r3, r3, #3
 9784 01f6 03F13202 		add	r2, r3, #50
 9785 01fa 364B     		ldr	r3, .L484+8
 9786 01fc A3FB0223 		umull	r2, r3, r3, r2
 9787 0200 5B09     		lsrs	r3, r3, #5
 9788 0202 5B00     		lsls	r3, r3, #1
 9789 0204 03F4F873 		and	r3, r3, #496
 9790 0208 1C44     		add	r4, r4, r3
 9791 020a D7F8FC30 		ldr	r3, [r7, #252]
 9792 020e 0022     		movs	r2, #0
 9793 0210 C7F8B830 		str	r3, [r7, #184]
 9794 0214 C7F8BC20 		str	r2, [r7, #188]
 9795 0218 D7E92E89 		ldrd	r8, [r7, #184]
 9796 021c 4246     		mov	r2, r8
 9797 021e 4B46     		mov	r3, r9
 9798 0220 9118     		adds	r1, r2, r2
 9799 0222 B963     		str	r1, [r7, #56]
 9800 0224 5B41     		adcs	r3, r3, r3
 9801 0226 FB63     		str	r3, [r7, #60]
 9802 0228 D7E90E23 		ldrd	r2, [r7, #56]
 9803 022c 4146     		mov	r1, r8
 9804 022e 5118     		adds	r1, r2, r1
 9805 0230 3963     		str	r1, [r7, #48]
 9806 0232 4946     		mov	r1, r9
 9807 0234 4B41     		adcs	r3, r3, r1
 9808 0236 7B63     		str	r3, [r7, #52]
 9809 0238 4FF00002 		mov	r2, #0
 9810 023c 4FF00003 		mov	r3, #0
 9811 0240 D7E90CAB 		ldrd	r10, [r7, #48]
 9812 0244 5946     		mov	r1, fp
 9813 0246 CB00     		lsls	r3, r1, #3
 9814 0248 5146     		mov	r1, r10
 9815 024a 43EA5173 		orr	r3, r3, r1, lsr #29
 9816 024e 5146     		mov	r1, r10
 9817 0250 CA00     		lsls	r2, r1, #3
 9818 0252 1046     		mov	r0, r2
 9819 0254 1946     		mov	r1, r3
 9820 0256 0346     		mov	r3, r0
 9821 0258 4246     		mov	r2, r8
 9822 025a 9B18     		adds	r3, r3, r2
 9823 025c C7F8B030 		str	r3, [r7, #176]
 9824 0260 4B46     		mov	r3, r9
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 260


 9825 0262 0A46     		mov	r2, r1
 9826 0264 42EB0303 		adc	r3, r2, r3
 9827 0268 C7F8B430 		str	r3, [r7, #180]
 9828 026c D7F8F430 		ldr	r3, [r7, #244]
 9829 0270 5B68     		ldr	r3, [r3, #4]
 9830 0272 0022     		movs	r2, #0
 9831 0274 C7F8A830 		str	r3, [r7, #168]
 9832 0278 C7F8AC20 		str	r2, [r7, #172]
 9833 027c D7E92A12 		ldrd	r1, [r7, #168]
 9834 0280 0B46     		mov	r3, r1
 9835 0282 DB18     		adds	r3, r3, r3
 9836 0284 BB62     		str	r3, [r7, #40]
 9837 0286 1346     		mov	r3, r2
 9838 0288 42EB0303 		adc	r3, r2, r3
 9839 028c FB62     		str	r3, [r7, #44]
 9840 028e D7E90A23 		ldrd	r2, [r7, #40]
 9841 0292 D7E92C01 		ldrd	r0, [r7, #176]
 9842 0296 FFF7FEFF 		bl	__aeabi_uldivmod
 9843 029a 0246     		mov	r2, r0
 9844 029c 0B46     		mov	r3, r1
 9845 029e 0D4B     		ldr	r3, .L484+8
 9846 02a0 A3FB0213 		umull	r1, r3, r3, r2
 9847 02a4 5B09     		lsrs	r3, r3, #5
 9848 02a6 6421     		movs	r1, #100
 9849 02a8 01FB03F3 		mul	r3, r1, r3
 9850 02ac D31A     		subs	r3, r2, r3
 9851 02ae DB00     		lsls	r3, r3, #3
 9852 02b0 3233     		adds	r3, r3, #50
 9853 02b2 084A     		ldr	r2, .L484+8
 9854 02b4 A2FB0323 		umull	r2, r3, r2, r3
 9855 02b8 5B09     		lsrs	r3, r3, #5
 9856 02ba 03F00702 		and	r2, r3, #7
 9857              		.loc 1 3731 10
 9858 02be D7F8F430 		ldr	r3, [r7, #244]
 9859 02c2 1B68     		ldr	r3, [r3]
 9860              		.loc 1 3731 28
 9861 02c4 2244     		add	r2, r2, r4
 9862              		.loc 1 3731 26
 9863 02c6 9A60     		str	r2, [r3, #8]
3732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
3734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
3736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 9864              		.loc 1 3737 1
 9865 02c8 05E1     		b	.L483
 9866              	.L485:
 9867 02ca 00BF     		.align	2
 9868              	.L484:
 9869 02cc 00100140 		.word	1073811456
 9870 02d0 00140140 		.word	1073812480
 9871 02d4 1F85EB51 		.word	1374389535
 9872              	.L481:
3735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 9873              		.loc 1 3735 28
 9874 02d8 D7F8FC30 		ldr	r3, [r7, #252]
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 261


 9875 02dc 0022     		movs	r2, #0
 9876 02de C7F8A030 		str	r3, [r7, #160]
 9877 02e2 C7F8A420 		str	r2, [r7, #164]
 9878 02e6 D7E92889 		ldrd	r8, [r7, #160]
 9879 02ea 4246     		mov	r2, r8
 9880 02ec 4B46     		mov	r3, r9
 9881 02ee 9118     		adds	r1, r2, r2
 9882 02f0 3962     		str	r1, [r7, #32]
 9883 02f2 5B41     		adcs	r3, r3, r3
 9884 02f4 7B62     		str	r3, [r7, #36]
 9885 02f6 D7E90823 		ldrd	r2, [r7, #32]
 9886 02fa 4146     		mov	r1, r8
 9887 02fc 5418     		adds	r4, r2, r1
 9888 02fe 4946     		mov	r1, r9
 9889 0300 43EB0105 		adc	r5, r3, r1
 9890 0304 4FF00002 		mov	r2, #0
 9891 0308 4FF00003 		mov	r3, #0
 9892 030c EB00     		lsls	r3, r5, #3
 9893 030e 43EA5473 		orr	r3, r3, r4, lsr #29
 9894 0312 E200     		lsls	r2, r4, #3
 9895 0314 1446     		mov	r4, r2
 9896 0316 1D46     		mov	r5, r3
 9897 0318 4346     		mov	r3, r8
 9898 031a E318     		adds	r3, r4, r3
 9899 031c C7F89830 		str	r3, [r7, #152]
 9900 0320 4B46     		mov	r3, r9
 9901 0322 45EB0303 		adc	r3, r5, r3
 9902 0326 C7F89C30 		str	r3, [r7, #156]
 9903 032a D7F8F430 		ldr	r3, [r7, #244]
 9904 032e 5B68     		ldr	r3, [r3, #4]
 9905 0330 0022     		movs	r2, #0
 9906 0332 C7F89030 		str	r3, [r7, #144]
 9907 0336 C7F89420 		str	r2, [r7, #148]
 9908 033a 4FF00002 		mov	r2, #0
 9909 033e 4FF00003 		mov	r3, #0
 9910 0342 D7E92445 		ldrd	r4, [r7, #144]
 9911 0346 2946     		mov	r1, r5
 9912 0348 8B00     		lsls	r3, r1, #2
 9913 034a 2146     		mov	r1, r4
 9914 034c 43EA9173 		orr	r3, r3, r1, lsr #30
 9915 0350 2146     		mov	r1, r4
 9916 0352 8A00     		lsls	r2, r1, #2
 9917 0354 D7E92601 		ldrd	r0, [r7, #152]
 9918 0358 FFF7FEFF 		bl	__aeabi_uldivmod
 9919 035c 0246     		mov	r2, r0
 9920 035e 0B46     		mov	r3, r1
 9921 0360 604B     		ldr	r3, .L486
 9922 0362 A3FB0223 		umull	r2, r3, r3, r2
 9923 0366 5B09     		lsrs	r3, r3, #5
 9924 0368 1C01     		lsls	r4, r3, #4
 9925 036a D7F8FC30 		ldr	r3, [r7, #252]
 9926 036e 0022     		movs	r2, #0
 9927 0370 C7F88830 		str	r3, [r7, #136]
 9928 0374 C7F88C20 		str	r2, [r7, #140]
 9929 0378 D7E92289 		ldrd	r8, [r7, #136]
 9930 037c 4246     		mov	r2, r8
 9931 037e 4B46     		mov	r3, r9
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 262


 9932 0380 9118     		adds	r1, r2, r2
 9933 0382 B961     		str	r1, [r7, #24]
 9934 0384 5B41     		adcs	r3, r3, r3
 9935 0386 FB61     		str	r3, [r7, #28]
 9936 0388 D7E90623 		ldrd	r2, [r7, #24]
 9937 038c 4146     		mov	r1, r8
 9938 038e 5118     		adds	r1, r2, r1
 9939 0390 3961     		str	r1, [r7, #16]
 9940 0392 4946     		mov	r1, r9
 9941 0394 4B41     		adcs	r3, r3, r1
 9942 0396 7B61     		str	r3, [r7, #20]
 9943 0398 4FF00002 		mov	r2, #0
 9944 039c 4FF00003 		mov	r3, #0
 9945 03a0 D7E904AB 		ldrd	r10, [r7, #16]
 9946 03a4 5946     		mov	r1, fp
 9947 03a6 CB00     		lsls	r3, r1, #3
 9948 03a8 5146     		mov	r1, r10
 9949 03aa 43EA5173 		orr	r3, r3, r1, lsr #29
 9950 03ae 5146     		mov	r1, r10
 9951 03b0 CA00     		lsls	r2, r1, #3
 9952 03b2 1046     		mov	r0, r2
 9953 03b4 1946     		mov	r1, r3
 9954 03b6 0346     		mov	r3, r0
 9955 03b8 4246     		mov	r2, r8
 9956 03ba 9B18     		adds	r3, r3, r2
 9957 03bc C7F88030 		str	r3, [r7, #128]
 9958 03c0 4B46     		mov	r3, r9
 9959 03c2 0A46     		mov	r2, r1
 9960 03c4 42EB0303 		adc	r3, r2, r3
 9961 03c8 C7F88430 		str	r3, [r7, #132]
 9962 03cc D7F8F430 		ldr	r3, [r7, #244]
 9963 03d0 5B68     		ldr	r3, [r3, #4]
 9964 03d2 0022     		movs	r2, #0
 9965 03d4 BB67     		str	r3, [r7, #120]
 9966 03d6 FA67     		str	r2, [r7, #124]
 9967 03d8 4FF00002 		mov	r2, #0
 9968 03dc 4FF00003 		mov	r3, #0
 9969 03e0 D7E91E89 		ldrd	r8, [r7, #120]
 9970 03e4 4946     		mov	r1, r9
 9971 03e6 8B00     		lsls	r3, r1, #2
 9972 03e8 4146     		mov	r1, r8
 9973 03ea 43EA9173 		orr	r3, r3, r1, lsr #30
 9974 03ee 4146     		mov	r1, r8
 9975 03f0 8A00     		lsls	r2, r1, #2
 9976 03f2 D7E92001 		ldrd	r0, [r7, #128]
 9977 03f6 FFF7FEFF 		bl	__aeabi_uldivmod
 9978 03fa 0246     		mov	r2, r0
 9979 03fc 0B46     		mov	r3, r1
 9980 03fe 394B     		ldr	r3, .L486
 9981 0400 A3FB0213 		umull	r1, r3, r3, r2
 9982 0404 5B09     		lsrs	r3, r3, #5
 9983 0406 6421     		movs	r1, #100
 9984 0408 01FB03F3 		mul	r3, r1, r3
 9985 040c D31A     		subs	r3, r2, r3
 9986 040e 1B01     		lsls	r3, r3, #4
 9987 0410 3233     		adds	r3, r3, #50
 9988 0412 344A     		ldr	r2, .L486
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 263


 9989 0414 A2FB0323 		umull	r2, r3, r2, r3
 9990 0418 5B09     		lsrs	r3, r3, #5
 9991 041a 03F0F003 		and	r3, r3, #240
 9992 041e 1C44     		add	r4, r4, r3
 9993 0420 D7F8FC30 		ldr	r3, [r7, #252]
 9994 0424 0022     		movs	r2, #0
 9995 0426 3B67     		str	r3, [r7, #112]
 9996 0428 7A67     		str	r2, [r7, #116]
 9997 042a D7E91C89 		ldrd	r8, [r7, #112]
 9998 042e 4246     		mov	r2, r8
 9999 0430 4B46     		mov	r3, r9
 10000 0432 9118     		adds	r1, r2, r2
 10001 0434 B960     		str	r1, [r7, #8]
 10002 0436 5B41     		adcs	r3, r3, r3
 10003 0438 FB60     		str	r3, [r7, #12]
 10004 043a D7E90223 		ldrd	r2, [r7, #8]
 10005 043e 4146     		mov	r1, r8
 10006 0440 5118     		adds	r1, r2, r1
 10007 0442 3960     		str	r1, [r7]
 10008 0444 4946     		mov	r1, r9
 10009 0446 4B41     		adcs	r3, r3, r1
 10010 0448 7B60     		str	r3, [r7, #4]
 10011 044a 4FF00002 		mov	r2, #0
 10012 044e 4FF00003 		mov	r3, #0
 10013 0452 D7E900AB 		ldrd	r10, [r7]
 10014 0456 5946     		mov	r1, fp
 10015 0458 CB00     		lsls	r3, r1, #3
 10016 045a 5146     		mov	r1, r10
 10017 045c 43EA5173 		orr	r3, r3, r1, lsr #29
 10018 0460 5146     		mov	r1, r10
 10019 0462 CA00     		lsls	r2, r1, #3
 10020 0464 1046     		mov	r0, r2
 10021 0466 1946     		mov	r1, r3
 10022 0468 0346     		mov	r3, r0
 10023 046a 4246     		mov	r2, r8
 10024 046c 9B18     		adds	r3, r3, r2
 10025 046e BB66     		str	r3, [r7, #104]
 10026 0470 4B46     		mov	r3, r9
 10027 0472 0A46     		mov	r2, r1
 10028 0474 42EB0303 		adc	r3, r2, r3
 10029 0478 FB66     		str	r3, [r7, #108]
 10030 047a D7F8F430 		ldr	r3, [r7, #244]
 10031 047e 5B68     		ldr	r3, [r3, #4]
 10032 0480 0022     		movs	r2, #0
 10033 0482 3B66     		str	r3, [r7, #96]
 10034 0484 7A66     		str	r2, [r7, #100]
 10035 0486 4FF00002 		mov	r2, #0
 10036 048a 4FF00003 		mov	r3, #0
 10037 048e D7E91889 		ldrd	r8, [r7, #96]
 10038 0492 4946     		mov	r1, r9
 10039 0494 8B00     		lsls	r3, r1, #2
 10040 0496 4146     		mov	r1, r8
 10041 0498 43EA9173 		orr	r3, r3, r1, lsr #30
 10042 049c 4146     		mov	r1, r8
 10043 049e 8A00     		lsls	r2, r1, #2
 10044 04a0 D7E91A01 		ldrd	r0, [r7, #104]
 10045 04a4 FFF7FEFF 		bl	__aeabi_uldivmod
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 264


 10046 04a8 0246     		mov	r2, r0
 10047 04aa 0B46     		mov	r3, r1
 10048 04ac 0D4B     		ldr	r3, .L486
 10049 04ae A3FB0213 		umull	r1, r3, r3, r2
 10050 04b2 5B09     		lsrs	r3, r3, #5
 10051 04b4 6421     		movs	r1, #100
 10052 04b6 01FB03F3 		mul	r3, r1, r3
 10053 04ba D31A     		subs	r3, r2, r3
 10054 04bc 1B01     		lsls	r3, r3, #4
 10055 04be 3233     		adds	r3, r3, #50
 10056 04c0 084A     		ldr	r2, .L486
 10057 04c2 A2FB0323 		umull	r2, r3, r2, r3
 10058 04c6 5B09     		lsrs	r3, r3, #5
 10059 04c8 03F00F02 		and	r2, r3, #15
3735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 10060              		.loc 1 3735 10
 10061 04cc D7F8F430 		ldr	r3, [r7, #244]
 10062 04d0 1B68     		ldr	r3, [r3]
3735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 10063              		.loc 1 3735 28
 10064 04d2 2244     		add	r2, r2, r4
3735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 10065              		.loc 1 3735 26
 10066 04d4 9A60     		str	r2, [r3, #8]
 10067              	.L483:
 10068              		.loc 1 3737 1
 10069 04d6 00BF     		nop
 10070 04d8 07F58077 		add	r7, r7, #256
 10071              	.LCFI328:
 10072              		.cfi_def_cfa_offset 32
 10073 04dc BD46     		mov	sp, r7
 10074              	.LCFI329:
 10075              		.cfi_def_cfa_register 13
 10076              		@ sp needed
 10077 04de BDE8B08F 		pop	{r4, r5, r7, r8, r9, r10, fp, pc}
 10078              	.L487:
 10079 04e2 00BF     		.align	2
 10080              	.L486:
 10081 04e4 1F85EB51 		.word	1374389535
 10082              		.cfi_endproc
 10083              	.LFE276:
 10085              		.text
 10086              	.Letext0:
 10087              		.file 3 "c:\\arm-gcc\\tools\\gcc-arm-none-eabi-10-2020-q4-major\\arm-none-eabi\\include\\machine\\
 10088              		.file 4 "c:\\arm-gcc\\tools\\gcc-arm-none-eabi-10-2020-q4-major\\arm-none-eabi\\include\\sys\\_std
 10089              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 10090              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 10091              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 10092              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 10093              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 265


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_hal_uart.c
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:18     .text.HAL_UART_Init:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:26     .text.HAL_UART_Init:00000000 HAL_UART_Init
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:647    .text.HAL_UART_MspInit:00000000 HAL_UART_MspInit
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:9572   .text.UART_SetConfig:00000000 UART_SetConfig
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:136    .text.HAL_HalfDuplex_Init:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:143    .text.HAL_HalfDuplex_Init:00000000 HAL_HalfDuplex_Init
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:260    .text.HAL_LIN_Init:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:267    .text.HAL_LIN_Init:00000000 HAL_LIN_Init
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:402    .text.HAL_MultiProcessor_Init:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:409    .text.HAL_MultiProcessor_Init:00000000 HAL_MultiProcessor_Init
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:555    .text.HAL_UART_DeInit:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:562    .text.HAL_UART_DeInit:00000000 HAL_UART_DeInit
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:690    .text.HAL_UART_MspDeInit:00000000 HAL_UART_MspDeInit
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:640    .text.HAL_UART_MspInit:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:683    .text.HAL_UART_MspDeInit:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:726    .text.HAL_UART_Transmit:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:733    .text.HAL_UART_Transmit:00000000 HAL_UART_Transmit
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:7841   .text.UART_WaitOnFlagUntilTimeout:00000000 UART_WaitOnFlagUntilTimeout
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:953    .text.HAL_UART_Receive:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:960    .text.HAL_UART_Receive:00000000 HAL_UART_Receive
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:1204   .text.HAL_UART_Transmit_IT:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:1211   .text.HAL_UART_Transmit_IT:00000000 HAL_UART_Transmit_IT
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:1322   .text.HAL_UART_Receive_IT:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:1329   .text.HAL_UART_Receive_IT:00000000 HAL_UART_Receive_IT
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:8045   .text.UART_Start_Receive_IT:00000000 UART_Start_Receive_IT
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:1413   .text.HAL_UART_Transmit_DMA:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:1420   .text.HAL_UART_Transmit_DMA:00000000 HAL_UART_Transmit_DMA
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:1617   .text.HAL_UART_Transmit_DMA:000000f0 $d
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:7161   .text.UART_DMATransmitCplt:00000000 UART_DMATransmitCplt
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:7326   .text.UART_DMATxHalfCplt:00000000 UART_DMATxHalfCplt
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:7725   .text.UART_DMAError:00000000 UART_DMAError
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:1624   .text.HAL_UART_Receive_DMA:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:1631   .text.HAL_UART_Receive_DMA:00000000 HAL_UART_Receive_DMA
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:8148   .text.UART_Start_Receive_DMA:00000000 UART_Start_Receive_DMA
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:1715   .text.HAL_UART_DMAPause:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:1722   .text.HAL_UART_DMAPause:00000000 HAL_UART_DMAPause
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:2033   .text.HAL_UART_DMAResume:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:2040   .text.HAL_UART_DMAResume:00000000 HAL_UART_DMAResume
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:2336   .text.HAL_UART_DMAStop:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:2343   .text.HAL_UART_DMAStop:00000000 HAL_UART_DMAStop
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:8431   .text.UART_EndTxTransfer:00000000 UART_EndTxTransfer
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:8528   .text.UART_EndRxTransfer:00000000 UART_EndRxTransfer
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:2560   .text.HAL_UARTEx_ReceiveToIdle:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:2567   .text.HAL_UARTEx_ReceiveToIdle:00000000 HAL_UARTEx_ReceiveToIdle
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:2887   .text.HAL_UARTEx_ReceiveToIdle_IT:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:2894   .text.HAL_UARTEx_ReceiveToIdle_IT:00000000 HAL_UARTEx_ReceiveToIdle_IT
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:3062   .text.HAL_UARTEx_ReceiveToIdle_DMA:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:3069   .text.HAL_UARTEx_ReceiveToIdle_DMA:00000000 HAL_UARTEx_ReceiveToIdle_DMA
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:3237   .text.HAL_UART_Abort:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:3244   .text.HAL_UART_Abort:00000000 HAL_UART_Abort
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:3657   .text.HAL_UART_AbortTransmit:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:3664   .text.HAL_UART_AbortTransmit:00000000 HAL_UART_AbortTransmit
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:3855   .text.HAL_UART_AbortReceive:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:3862   .text.HAL_UART_AbortReceive:00000000 HAL_UART_AbortReceive
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:4166   .text.HAL_UART_Abort_IT:00000000 $t
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 266


C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:4173   .text.HAL_UART_Abort_IT:00000000 HAL_UART_Abort_IT
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:6322   .text.HAL_UART_AbortCpltCallback:00000000 HAL_UART_AbortCpltCallback
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:4634   .text.HAL_UART_Abort_IT:00000220 $d
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:8791   .text.UART_DMATxAbortCallback:00000000 UART_DMATxAbortCallback
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:8885   .text.UART_DMARxAbortCallback:00000000 UART_DMARxAbortCallback
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:4640   .text.HAL_UART_AbortTransmit_IT:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:4647   .text.HAL_UART_AbortTransmit_IT:00000000 HAL_UART_AbortTransmit_IT
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:6365   .text.HAL_UART_AbortTransmitCpltCallback:00000000 HAL_UART_AbortTransmitCpltCallback
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:4850   .text.HAL_UART_AbortTransmit_IT:000000e4 $d
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:8979   .text.UART_DMATxOnlyAbortCallback:00000000 UART_DMATxOnlyAbortCallback
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:4855   .text.HAL_UART_AbortReceive_IT:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:4862   .text.HAL_UART_AbortReceive_IT:00000000 HAL_UART_AbortReceive_IT
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:6408   .text.HAL_UART_AbortReceiveCpltCallback:00000000 HAL_UART_AbortReceiveCpltCallback
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:5182   .text.HAL_UART_AbortReceive_IT:00000160 $d
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:9032   .text.UART_DMARxOnlyAbortCallback:00000000 UART_DMARxOnlyAbortCallback
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:5187   .text.HAL_UART_IRQHandler:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:5194   .text.HAL_UART_IRQHandler:00000000 HAL_UART_IRQHandler
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:9281   .text.UART_Receive_IT:00000000 UART_Receive_IT
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:6279   .text.HAL_UART_ErrorCallback:00000000 HAL_UART_ErrorCallback
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:6451   .text.HAL_UARTEx_RxEventCallback:00000000 HAL_UARTEx_RxEventCallback
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:5841   .text.HAL_UART_IRQHandler:000003dc $d
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:8738   .text.UART_DMAAbortOnError:00000000 UART_DMAAbortOnError
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:5846   .text.HAL_UART_IRQHandler:000003e0 $t
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:9089   .text.UART_Transmit_IT:00000000 UART_Transmit_IT
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:9226   .text.UART_EndTransmit_IT:00000000 UART_EndTransmit_IT
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:6100   .text.HAL_UART_TxCpltCallback:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:6107   .text.HAL_UART_TxCpltCallback:00000000 HAL_UART_TxCpltCallback
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:6143   .text.HAL_UART_TxHalfCpltCallback:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:6150   .text.HAL_UART_TxHalfCpltCallback:00000000 HAL_UART_TxHalfCpltCallback
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:6186   .text.HAL_UART_RxCpltCallback:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:6193   .text.HAL_UART_RxCpltCallback:00000000 HAL_UART_RxCpltCallback
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:6229   .text.HAL_UART_RxHalfCpltCallback:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:6236   .text.HAL_UART_RxHalfCpltCallback:00000000 HAL_UART_RxHalfCpltCallback
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:6272   .text.HAL_UART_ErrorCallback:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:6315   .text.HAL_UART_AbortCpltCallback:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:6358   .text.HAL_UART_AbortTransmitCpltCallback:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:6401   .text.HAL_UART_AbortReceiveCpltCallback:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:6444   .text.HAL_UARTEx_RxEventCallback:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:6489   .text.HAL_LIN_SendBreak:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:6496   .text.HAL_LIN_SendBreak:00000000 HAL_LIN_SendBreak
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:6611   .text.HAL_MultiProcessor_EnterMuteMode:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:6618   .text.HAL_MultiProcessor_EnterMuteMode:00000000 HAL_MultiProcessor_EnterMuteMode
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:6733   .text.HAL_MultiProcessor_ExitMuteMode:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:6740   .text.HAL_MultiProcessor_ExitMuteMode:00000000 HAL_MultiProcessor_ExitMuteMode
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:6855   .text.HAL_HalfDuplex_EnableTransmitter:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:6862   .text.HAL_HalfDuplex_EnableTransmitter:00000000 HAL_HalfDuplex_EnableTransmitter
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:6948   .text.HAL_HalfDuplex_EnableReceiver:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:6955   .text.HAL_HalfDuplex_EnableReceiver:00000000 HAL_HalfDuplex_EnableReceiver
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:7041   .text.HAL_UART_GetState:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:7048   .text.HAL_UART_GetState:00000000 HAL_UART_GetState
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:7109   .text.HAL_UART_GetError:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:7116   .text.HAL_UART_GetError:00000000 HAL_UART_GetError
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:7155   .text.UART_DMATransmitCplt:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:7320   .text.UART_DMATxHalfCplt:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:7365   .text.UART_DMAReceiveCplt:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:7371   .text.UART_DMAReceiveCplt:00000000 UART_DMAReceiveCplt
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:7655   .text.UART_DMARxHalfCplt:00000000 $t
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s 			page 267


C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:7661   .text.UART_DMARxHalfCplt:00000000 UART_DMARxHalfCplt
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:7719   .text.UART_DMAError:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:7835   .text.UART_WaitOnFlagUntilTimeout:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:8038   .text.UART_Start_Receive_IT:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:8141   .text.UART_Start_Receive_DMA:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:8418   .text.UART_Start_Receive_DMA:00000130 $d
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:8425   .text.UART_EndTxTransfer:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:8522   .text.UART_EndRxTransfer:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:8732   .text.UART_DMAAbortOnError:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:8785   .text.UART_DMATxAbortCallback:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:8879   .text.UART_DMARxAbortCallback:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:8973   .text.UART_DMATxOnlyAbortCallback:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:9026   .text.UART_DMARxOnlyAbortCallback:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:9083   .text.UART_Transmit_IT:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:9220   .text.UART_EndTransmit_IT:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:9275   .text.UART_Receive_IT:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:9566   .text.UART_SetConfig:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:9869   .text.UART_SetConfig:000002cc $d
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:9874   .text.UART_SetConfig:000002d8 $t
C:\Users\EI\AppData\Local\Temp\ccYZfTDz.s:10081  .text.UART_SetConfig:000004e4 $d

UNDEFINED SYMBOLS
HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_GetError
HAL_DMA_Abort_IT
__aeabi_uldivmod
HAL_RCC_GetPCLK2Freq
HAL_RCC_GetPCLK1Freq
