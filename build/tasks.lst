ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"tasks.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	pxCurrentTCB
  20              		.section	.bss.pxCurrentTCB,"aw",%nobits
  21              		.align	2
  24              	pxCurrentTCB:
  25 0000 00000000 		.space	4
  26              		.section	.bss.pxReadyTasksLists,"aw",%nobits
  27              		.align	2
  30              	pxReadyTasksLists:
  31 0000 00000000 		.space	1120
  31      00000000 
  31      00000000 
  31      00000000 
  31      00000000 
  32              		.section	.bss.xDelayedTaskList1,"aw",%nobits
  33              		.align	2
  36              	xDelayedTaskList1:
  37 0000 00000000 		.space	20
  37      00000000 
  37      00000000 
  37      00000000 
  37      00000000 
  38              		.section	.bss.xDelayedTaskList2,"aw",%nobits
  39              		.align	2
  42              	xDelayedTaskList2:
  43 0000 00000000 		.space	20
  43      00000000 
  43      00000000 
  43      00000000 
  43      00000000 
  44              		.section	.bss.pxDelayedTaskList,"aw",%nobits
  45              		.align	2
  48              	pxDelayedTaskList:
  49 0000 00000000 		.space	4
  50              		.section	.bss.pxOverflowDelayedTaskList,"aw",%nobits
  51              		.align	2
  54              	pxOverflowDelayedTaskList:
  55 0000 00000000 		.space	4
  56              		.section	.bss.xPendingReadyList,"aw",%nobits
  57              		.align	2
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 2


  60              	xPendingReadyList:
  61 0000 00000000 		.space	20
  61      00000000 
  61      00000000 
  61      00000000 
  61      00000000 
  62              		.section	.bss.xTasksWaitingTermination,"aw",%nobits
  63              		.align	2
  66              	xTasksWaitingTermination:
  67 0000 00000000 		.space	20
  67      00000000 
  67      00000000 
  67      00000000 
  67      00000000 
  68              		.section	.bss.uxDeletedTasksWaitingCleanUp,"aw",%nobits
  69              		.align	2
  72              	uxDeletedTasksWaitingCleanUp:
  73 0000 00000000 		.space	4
  74              		.section	.bss.xSuspendedTaskList,"aw",%nobits
  75              		.align	2
  78              	xSuspendedTaskList:
  79 0000 00000000 		.space	20
  79      00000000 
  79      00000000 
  79      00000000 
  79      00000000 
  80              		.section	.bss.uxCurrentNumberOfTasks,"aw",%nobits
  81              		.align	2
  84              	uxCurrentNumberOfTasks:
  85 0000 00000000 		.space	4
  86              		.section	.bss.xTickCount,"aw",%nobits
  87              		.align	2
  90              	xTickCount:
  91 0000 00000000 		.space	4
  92              		.section	.bss.uxTopReadyPriority,"aw",%nobits
  93              		.align	2
  96              	uxTopReadyPriority:
  97 0000 00000000 		.space	4
  98              		.section	.bss.xSchedulerRunning,"aw",%nobits
  99              		.align	2
 102              	xSchedulerRunning:
 103 0000 00000000 		.space	4
 104              		.section	.bss.xPendedTicks,"aw",%nobits
 105              		.align	2
 108              	xPendedTicks:
 109 0000 00000000 		.space	4
 110              		.section	.bss.xYieldPending,"aw",%nobits
 111              		.align	2
 114              	xYieldPending:
 115 0000 00000000 		.space	4
 116              		.section	.bss.xNumOfOverflows,"aw",%nobits
 117              		.align	2
 120              	xNumOfOverflows:
 121 0000 00000000 		.space	4
 122              		.section	.bss.uxTaskNumber,"aw",%nobits
 123              		.align	2
 126              	uxTaskNumber:
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 3


 127 0000 00000000 		.space	4
 128              		.section	.bss.xNextTaskUnblockTime,"aw",%nobits
 129              		.align	2
 132              	xNextTaskUnblockTime:
 133 0000 00000000 		.space	4
 134              		.section	.bss.xIdleTaskHandle,"aw",%nobits
 135              		.align	2
 138              	xIdleTaskHandle:
 139 0000 00000000 		.space	4
 140              		.section	.bss.uxSchedulerSuspended,"aw",%nobits
 141              		.align	2
 144              	uxSchedulerSuspended:
 145 0000 00000000 		.space	4
 146              		.section	.bss.ulTaskSwitchedInTime,"aw",%nobits
 147              		.align	2
 150              	ulTaskSwitchedInTime:
 151 0000 00000000 		.space	4
 152              		.section	.bss.ulTotalRunTime,"aw",%nobits
 153              		.align	2
 156              	ulTotalRunTime:
 157 0000 00000000 		.space	4
 158              		.section	.text.xTaskCreateStatic,"ax",%progbits
 159              		.align	1
 160              		.global	xTaskCreateStatic
 161              		.syntax unified
 162              		.thumb
 163              		.thumb_func
 165              	xTaskCreateStatic:
 166              	.LFB4:
 167              		.file 1 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c"
   1:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * FreeRTOS Kernel V10.3.1
   3:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 4


  28:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Standard includes. */
  29:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include <stdlib.h>
  30:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include <string.h>
  31:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  32:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  33:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** all the API functions to use the MPU wrappers.  That should only be done when
  34:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** task.h is included from an application file. */
  35:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  36:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  37:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* FreeRTOS includes. */
  38:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "FreeRTOS.h"
  39:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "task.h"
  40:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "timers.h"
  41:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "stack_macros.h"
  42:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  43:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Lint e9021, e961 and e750 are suppressed as a MISRA exception justified
  44:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** because the MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined
  45:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** for the header files above, but not in this file, in order to generate the
  46:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** correct privileged Vs unprivileged linkage and placement. */
  47:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750 !e9021. */
  48:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  49:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Set configUSE_STATS_FORMATTING_FUNCTIONS to 2 to include the stats formatting
  50:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** functions but without including stdio.h here. */
  51:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_STATS_FORMATTING_FUNCTIONS == 1 )
  52:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* At the bottom of this file are two optional functions that can be used
  53:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	to generate human readable text from the raw data generated by the
  54:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uxTaskGetSystemState() function.  Note the formatting functions are provided
  55:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	for convenience only, and are NOT considered part of the kernel. */
  56:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#include <stdio.h>
  57:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_STATS_FORMATTING_FUNCTIONS == 1 ) */
  58:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  59:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_PREEMPTION == 0 )
  60:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If the cooperative scheduler is being used then a yield should not be
  61:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	performed just because a higher priority task has been woken. */
  62:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskYIELD_IF_USING_PREEMPTION()
  63:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #else
  64:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskYIELD_IF_USING_PREEMPTION() portYIELD_WITHIN_API()
  65:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
  66:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  67:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Values that can be assigned to the ucNotifyState member of the TCB. */
  68:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define taskNOT_WAITING_NOTIFICATION	( ( uint8_t ) 0 )
  69:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define taskWAITING_NOTIFICATION		( ( uint8_t ) 1 )
  70:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define taskNOTIFICATION_RECEIVED		( ( uint8_t ) 2 )
  71:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  72:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
  73:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The value used to fill the stack of a task when the task is created.  This
  74:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * is used purely for checking the high water mark for tasks.
  75:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
  76:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSTACK_FILL_BYTE	( 0xa5U )
  77:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  78:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Bits used to recored how a task's stack and TCB were allocated. */
  79:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB 		( ( uint8_t ) 0 )
  80:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_ONLY 			( ( uint8_t ) 1 )
  81:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_AND_TCB		( ( uint8_t ) 2 )
  82:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  83:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* If any of the following are set then task stacks are filled with a known
  84:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** value so the high water mark can be determined.  If none of the following are
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 5


  85:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** set then don't fill the stack so there is no unnecessary dependency on memset. */
  86:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( ( configCHECK_FOR_STACK_OVERFLOW > 1 ) || ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTas
  87:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define tskSET_NEW_STACKS_TO_KNOWN_VALUE	1
  88:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #else
  89:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define tskSET_NEW_STACKS_TO_KNOWN_VALUE	0
  90:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
  91:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  92:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
  93:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Macros used by vListTask to indicate which state a task is in.
  94:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
  95:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskRUNNING_CHAR		( 'X' )
  96:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskBLOCKED_CHAR		( 'B' )
  97:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskREADY_CHAR		( 'R' )
  98:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskDELETED_CHAR		( 'D' )
  99:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSUSPENDED_CHAR	( 'S' )
 100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Some kernel aware debuggers require the data the debugger needs access to be
 103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * global, rather than file scope.
 104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #ifdef portREMOVE_STATIC_QUALIFIER
 106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define static
 107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* The name allocated to the Idle task.  This can be overridden by defining
 110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** configIDLE_TASK_NAME in FreeRTOSConfig.h. */
 111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #ifndef configIDLE_TASK_NAME
 112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define configIDLE_TASK_NAME "IDLE"
 113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
 116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 0 then task selection is
 118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	performed in a generic way that is not optimised to any particular
 119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	microcontroller architecture. */
 120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* uxTopReadyPriority holds the priority of the highest priority ready
 122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	state task. */
 123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRECORD_READY_PRIORITY( uxPriority )														\
 124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																									\
 125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( uxPriority ) > uxTopReadyPriority )														\
 126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{																								\
 127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxTopReadyPriority = ( uxPriority );														\
 128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}																								\
 129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /* taskRECORD_READY_PRIORITY */
 130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskSELECT_HIGHEST_PRIORITY_TASK()															\
 134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																									\
 135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTopPriority = uxTopReadyPriority;														\
 136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																										\
 137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Find the highest priority queue that contains ready tasks. */								\
 138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		while( listLIST_IS_EMPTY( &( pxReadyTasksLists[ uxTopPriority ] ) ) )							\
 139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{																								\
 140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( uxTopPriority );																\
 141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			--uxTopPriority;																			\
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 6


 142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}																								\
 143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																										\
 144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* listGET_OWNER_OF_NEXT_ENTRY indexes through the list, so the tasks of						\
 145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the	same priority get an equal share of the processor time. */									\
 146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) );			\
 147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxTopReadyPriority = uxTopPriority;																\
 148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /* taskSELECT_HIGHEST_PRIORITY_TASK */
 149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Define away taskRESET_READY_PRIORITY() and portRESET_READY_PRIORITY() as
 153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	they are only required when a port optimised method of task selection is
 154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	being used. */
 155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRESET_READY_PRIORITY( uxPriority )
 156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define portRESET_READY_PRIORITY( uxPriority, uxTopReadyPriority )
 157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #else /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 1 then task selection is
 161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	performed in a way that is tailored to the particular microcontroller
 162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	architecture being used. */
 163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A port optimised version is provided.  Call the port defined macros. */
 165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRECORD_READY_PRIORITY( uxPriority )	portRECORD_READY_PRIORITY( uxPriority, uxTopReadyP
 166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskSELECT_HIGHEST_PRIORITY_TASK()														\
 170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																								\
 171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTopPriority;																		\
 172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																									\
 173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Find the highest priority list that contains ready tasks. */								\
 174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portGET_HIGHEST_PRIORITY( uxTopPriority, uxTopReadyPriority );								\
 175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ uxTopPriority ] ) ) > 0 );		\
 176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) );		\
 177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /* taskSELECT_HIGHEST_PRIORITY_TASK() */
 178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A port optimised version is provided, call it only if the TCB being reset
 182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	is being referenced from a ready list.  If it is referenced from a delayed
 183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	or suspended list then it won't be in a ready list. */
 184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRESET_READY_PRIORITY( uxPriority )														\
 185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																									\
 186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ ( uxPriority ) ] ) ) == ( UBaseType_t ) 0 )	\
 187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{																								\
 188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portRESET_READY_PRIORITY( ( uxPriority ), ( uxTopReadyPriority ) );							\
 189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}																								\
 190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* pxDelayedTaskList and pxOverflowDelayedTaskList are switched when the tick
 197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** count overflows. */
 198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define taskSWITCH_DELAYED_LISTS()																	\
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 7


 199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {																									\
 200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	List_t *pxTemp;																					\
 201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																									\
 202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* The delayed tasks list should be empty when the lists are switched. */						\
 203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( ( listLIST_IS_EMPTY( pxDelayedTaskList ) ) );										\
 204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																									\
 205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTemp = pxDelayedTaskList;																		\
 206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxDelayedTaskList = pxOverflowDelayedTaskList;													\
 207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = pxTemp;																\
 208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xNumOfOverflows++;																				\
 209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvResetNextTaskUnblockTime();																	\
 210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Place the task represented by pxTCB into the appropriate ready list for
 216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * the task.  It is inserted at the end of the list.
 217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define prvAddTaskToReadyList( pxTCB )																\
 219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	traceMOVED_TASK_TO_READY_STATE( pxTCB );														\
 220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskRECORD_READY_PRIORITY( ( pxTCB )->uxPriority );												\
 221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInsertEnd( &( pxReadyTasksLists[ ( pxTCB )->uxPriority ] ), &( ( pxTCB )->xStateListItem ) );
 222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	tracePOST_MOVED_TASK_TO_READY_STATE( pxTCB )
 223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Several functions take an TaskHandle_t parameter that can optionally be NULL,
 227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * where NULL is used to indicate that the handle of the currently executing
 228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * task should be used in place of the parameter.  This macro simply checks to
 229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * see if the parameter is NULL and returns a pointer to the appropriate TCB.
 230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define prvGetTCBFromHandle( pxHandle ) ( ( ( pxHandle ) == NULL ) ? pxCurrentTCB : ( pxHandle ) )
 232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* The item value of the event list item is normally used to hold the priority
 234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** of the task to which it belongs (coded to allow it to be held in reverse
 235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** priority order).  However, it is occasionally borrowed for other purposes.  It
 236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** is important its value is not updated due to a task priority change while it is
 237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** being used for another purpose.  The following bit definition is used to inform
 238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** the scheduler that the value should not be changed - in which case it is the
 239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** responsibility of whichever module is using the value to ensure it gets set back
 240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** to its original value when it is released. */
 241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_16_BIT_TICKS == 1 )
 242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskEVENT_LIST_ITEM_VALUE_IN_USE	0x8000U
 243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #else
 244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskEVENT_LIST_ITEM_VALUE_IN_USE	0x80000000UL
 245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Task control block.  A task control block (TCB) is allocated for each task,
 249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * and stores task state information, including a pointer to the task's context
 250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * (the task's run time environment, including register values)
 251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** typedef struct tskTaskControlBlock 			/* The old naming convention is used to prevent breaking kern
 253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	volatile StackType_t	*pxTopOfStack;	/*< Points to the location of the last item placed on the task
 255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 8


 256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portUSING_MPU_WRAPPERS == 1 )
 257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xMPU_SETTINGS	xMPUSettings;		/*< The MPU settings are defined as part of the port layer.  THIS MU
 258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	ListItem_t			xStateListItem;	/*< The list that the state list item of a task is reference from den
 261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	ListItem_t			xEventListItem;		/*< Used to reference a task from an event list. */
 262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t			uxPriority;			/*< The priority of the task.  0 is the lowest priority. */
 263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	StackType_t			*pxStack;			/*< Points to the start of the stack. */
 264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	char				pcTaskName[ configMAX_TASK_NAME_LEN ];/*< Descriptive name given to the task when created.
 265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( ( portSTACK_GROWTH > 0 ) || ( configRECORD_STACK_HIGH_ADDRESS == 1 ) )
 267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t		*pxEndOfStack;		/*< Points to the highest valid address for the stack. */
 268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portCRITICAL_NESTING_IN_TCB == 1 )
 271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxCriticalNesting;	/*< Holds the critical section nesting depth for ports that do no
 272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxTCBNumber;		/*< Stores a number that increments each time a TCB is created.  It al
 276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxTaskNumber;		/*< Stores a number specifically for use by third party trace code. *
 277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxBasePriority;		/*< The priority last assigned to the task - used by the priority i
 281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxMutexesHeld;
 282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
 285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		TaskHookFunction_t pxTaskTag;
 286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configNUM_THREAD_LOCAL_STORAGE_POINTERS > 0 )
 289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		void			*pvThreadLocalStoragePointers[ configNUM_THREAD_LOCAL_STORAGE_POINTERS ];
 290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configGENERATE_RUN_TIME_STATS == 1 )
 293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint32_t		ulRunTimeCounter;	/*< Stores the amount of time the task has spent in the Running state
 294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_NEWLIB_REENTRANT == 1 )
 297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Allocate a Newlib reent structure that is specific to this task.
 298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Note Newlib support has been included by popular demand, but is not
 299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		used by the FreeRTOS maintainers themselves.  FreeRTOS is not
 300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		responsible for resulting newlib operation.  User must be familiar with
 301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		newlib and must provide system-wide implementations of the necessary
 302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		stubs. Be warned that (at the time of writing) the current newlib design
 303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		implements a system-wide malloc() that must be provided with locks.
 304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
 306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		for additional information. */
 307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		struct	_reent xNewLib_reent;
 308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configUSE_TASK_NOTIFICATIONS == 1 )
 311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		volatile uint32_t ulNotifiedValue;
 312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		volatile uint8_t ucNotifyState;
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 9


 313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* See the comments in FreeRTOS.h with the definition of
 316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE. */
 317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolida
 318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint8_t	ucStaticallyAllocated; 		/*< Set to pdTRUE if the task is a statically allocated to ensur
 319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
 322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint8_t ucDelayAborted;
 323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configUSE_POSIX_ERRNO == 1 )
 326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		int iTaskErrno;
 327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** } tskTCB;
 330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* The old tskTCB name is maintained above then typedefed to the new TCB_t name
 332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** below to enable the use of older kernel aware debuggers. */
 333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** typedef tskTCB TCB_t;
 334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*lint -save -e956 A manual analysis and inspection has been used to determine
 336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** which static variables must be declared volatile. */
 337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA TCB_t * volatile pxCurrentTCB = NULL;
 338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Lists for ready and blocked tasks. --------------------
 340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** xDelayedTaskList1 and xDelayedTaskList2 could be move to function scople but
 341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** doing so breaks some kernel aware debuggers and debuggers that rely on removing
 342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** the static qualifier. */
 343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t pxReadyTasksLists[ configMAX_PRIORITIES ];/*< Prioritised ready tasks
 344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList1;						/*< Delayed tasks. */
 345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList2;						/*< Delayed tasks (two lists are used - one f
 346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxDelayedTaskList;				/*< Points to the delayed task list 
 347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxOverflowDelayedTaskList;		/*< Points to the delayed task
 348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t xPendingReadyList;						/*< Tasks that have been readied while the sc
 349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( INCLUDE_vTaskDelete == 1 )
 351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static List_t xTasksWaitingTermination;				/*< Tasks that have been deleted - but 
 353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static volatile UBaseType_t uxDeletedTasksWaitingCleanUp = ( UBaseType_t ) 0U;
 354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static List_t xSuspendedTaskList;					/*< Tasks that are currently suspended. */
 360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Global POSIX errno. Its value is changed upon context switching to match
 364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** the errno of the currently running task. */
 365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_POSIX_ERRNO == 1 )
 366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	int FreeRTOS_errno = 0;
 367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Other file private variables. --------------------------------*/
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 10


 370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxCurrentNumberOfTasks 	= ( UBaseType_t ) 0U;
 371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xTickCount 				= ( TickType_t ) configINITIAL_TICK_COUNT
 372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxTopReadyPriority 		= tskIDLE_PRIORITY;
 373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xSchedulerRunning 		= pdFALSE;
 374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xPendedTicks 			= ( TickType_t ) 0U;
 375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xYieldPending 			= pdFALSE;
 376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xNumOfOverflows 			= ( BaseType_t ) 0;
 377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static UBaseType_t uxTaskNumber 					= ( UBaseType_t ) 0U;
 378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xNextTaskUnblockTime		= ( TickType_t ) 0U; /* Initialise
 379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static TaskHandle_t xIdleTaskHandle					= NULL;			/*< Holds the handle of the idle 
 380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Context switches are held pending while the scheduler is suspended.  Also,
 382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** interrupts must not manipulate the xStateListItem of a TCB, or any of the
 383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** lists the xStateListItem can be referenced from, if the scheduler is suspended.
 384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** If an interrupt needs to unblock a task while the scheduler is suspended then it
 385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** moves the task's event list item into the xPendingReadyList, ready for the
 386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** kernel to move the task from the pending ready list into the real ready list
 387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** when the scheduler is unsuspended.  The pending ready list itself can only be
 388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** accessed from a critical section. */
 389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxSchedulerSuspended	= ( UBaseType_t ) pdFALSE;
 390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configGENERATE_RUN_TIME_STATS == 1 )
 392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Do not move these variables to function scope as doing so prevents the
 394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	code working with debuggers that need to remove the static qualifier. */
 395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static uint32_t ulTaskSwitchedInTime = 0UL;	/*< Holds the value of a timer/counter
 396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static uint32_t ulTotalRunTime = 0UL;		/*< Holds the total amount of execution tim
 397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*lint -restore */
 401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Callback function prototypes. --------------------------*/
 405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if(  configCHECK_FOR_STACK_OVERFLOW > 0 )
 406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	extern void vApplicationStackOverflowHook( TaskHandle_t xTask, char *pcTaskName );
 408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TICK_HOOK > 0 )
 412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	extern void vApplicationTickHook( void ); /*lint !e526 Symbol not defined as it is an application 
 414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	extern void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxI
 420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* File private functions. --------------------------------*/
 424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /**
 426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Utility task that simply returns pdTRUE if the task referenced by xTask is
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 11


 427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * currently in the Suspended state, or pdFALSE if the task referenced by xTask
 428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * is in any other state.
 429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
 433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
 435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Utility to ready all the lists used by the scheduler.  This is called
 438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * automatically upon the creation of the first task.
 439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseTaskLists( void ) PRIVILEGED_FUNCTION;
 441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The idle task, which as all tasks is implemented as a never ending loop.
 444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The idle task is automatically created and added to the ready lists upon
 445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * creation of the first user task.
 446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The portTASK_FUNCTION_PROTO() macro is used to allow port/compiler specific
 448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
 449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * void prvIdleTask( void *pvParameters );
 451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static portTASK_FUNCTION_PROTO( prvIdleTask, pvParameters );
 454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Utility to free all memory allocated by the scheduler to hold a TCB,
 457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * including the stack pointed to by the TCB.
 458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This does not free memory allocated by the task itself (i.e. memory
 460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * allocated by calls to pvPortMalloc from within the tasks application code).
 461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
 463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static void prvDeleteTCB( TCB_t *pxTCB ) PRIVILEGED_FUNCTION;
 465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Used only by the idle task.  This checks to see if anything has been placed
 470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * in the list of tasks waiting to be deleted.  If so the task is cleaned up
 471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * and its TCB deleted.
 472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvCheckTasksWaitingTermination( void ) PRIVILEGED_FUNCTION;
 474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The currently executing task is entering the Blocked state.  Add the task to
 477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * either the current or the overflow delayed task list.
 478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockInde
 480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Fills an TaskStatus_t structure with information on each task that is
 483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * referenced from the pxList list (which may be a ready list, a delayed list,
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 12


 484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * a suspended list, etc.).
 485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * THIS FUNCTION IS INTENDED FOR DEBUGGING ONLY, AND SHOULD NOT BE CALLED FROM
 487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * NORMAL APPLICATION CODE.
 488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
 490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t *pxTaskStatusArray, List_t *pxList, 
 492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Searches pxList for a task with name pcNameToQuery - returning a handle to
 497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * the task if it is found, or NULL if the task is not found.
 498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
 500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static TCB_t *prvSearchForNameWithinSingleList( List_t *pxList, const char pcNameToQuery[] ) PRIVI
 502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * When a task is created, the stack of the task is filled with a known value.
 507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This function determines the 'high water mark' of the task stack by
 508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * determining how much of the stack remains at the original preset value.
 509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) || ( INCLUD
 511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static configSTACK_DEPTH_TYPE prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte ) PRIVILEGE
 513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Return the amount of time, in ticks, that will pass before the kernel will
 518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * next move a task from the Blocked state to the Running state.
 519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This conditional compilation should use inequality to 0, not equality to 1.
 521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This is to ensure portSUPPRESS_TICKS_AND_SLEEP() can be called when user
 522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * defined low power mode implementations require configUSE_TICKLESS_IDLE to be
 523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * set to a value other than 1.
 524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
 526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static TickType_t prvGetExpectedIdleTime( void ) PRIVILEGED_FUNCTION;
 528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Set xNextTaskUnblockTime to the time at which the next Blocked state task
 533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * will exit the Blocked state.
 534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvResetNextTaskUnblockTime( void );
 536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
 538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*
 540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	 * Helper function used to pad task names with spaces when printing out
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 13


 541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	 * human readable tables of task information.
 542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	 */
 543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static char *prvWriteNameToBuffer( char *pcBuffer, const char *pcTaskName ) PRIVILEGED_FUNCTION;
 544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Called after a Task_t structure has been allocated either statically or
 549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * dynamically to fill in the structure's members.
 550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const char * const pcName, 		/*lint !e971 Unqualified char types are allowed for strings a
 553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const uint32_t ulStackDepth,
 554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									void * const pvParameters,
 555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									UBaseType_t uxPriority,
 556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									TaskHandle_t * const pxCreatedTask,
 557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									TCB_t *pxNewTCB,
 558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const MemoryRegion_t * const xRegions ) PRIVILEGED_FUNCTION;
 559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Called after a new task has been created and initialised to place the task
 562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * under the control of the scheduler.
 563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB ) PRIVILEGED_FUNCTION;
 565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * freertos_tasks_c_additions_init() should only be called if the user definable
 568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * macro FREERTOS_TASKS_C_ADDITIONS_INIT() is defined, as that is the only macro
 569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * called by the function.
 570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #ifdef FREERTOS_TASKS_C_ADDITIONS_INIT
 572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static void freertos_tasks_c_additions_init( void ) PRIVILEGED_FUNCTION;
 574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskCreateStatic(	TaskFunction_t pxTaskCode,
 582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings an
 583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const uint32_t ulStackDepth,
 584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									void * const pvParameters,
 585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									UBaseType_t uxPriority,
 586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									StackType_t * const puxStackBuffer,
 587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									StaticTask_t * const pxTaskBuffer )
 588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 168              		.loc 1 588 2
 169              		.cfi_startproc
 170              		@ args = 12, pretend = 0, frame = 40
 171              		@ frame_needed = 1, uses_anonymous_args = 0
 172 0000 80B5     		push	{r7, lr}
 173              	.LCFI0:
 174              		.cfi_def_cfa_offset 8
 175              		.cfi_offset 7, -8
 176              		.cfi_offset 14, -4
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 14


 177 0002 8EB0     		sub	sp, sp, #56
 178              	.LCFI1:
 179              		.cfi_def_cfa_offset 64
 180 0004 04AF     		add	r7, sp, #16
 181              	.LCFI2:
 182              		.cfi_def_cfa 7, 48
 183 0006 F860     		str	r0, [r7, #12]
 184 0008 B960     		str	r1, [r7, #8]
 185 000a 7A60     		str	r2, [r7, #4]
 186 000c 3B60     		str	r3, [r7]
 589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xReturn;
 591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( puxStackBuffer != NULL );
 187              		.loc 1 592 3
 188 000e 7B6B     		ldr	r3, [r7, #52]
 189 0010 002B     		cmp	r3, #0
 190 0012 0AD1     		bne	.L2
 191              	.LBB126:
 192              	.LBB127:
 193              		.file 2 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
   1:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FreeRTOS Kernel V10.3.1
   3:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  29:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef PORTMACRO_H
  30:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define PORTMACRO_H
  31:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  32:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef __cplusplus
  33:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern "C" {
  34:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  35:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  36:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 15


  37:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Port specific definitions.
  38:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  39:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * given hardware and compiler.
  41:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  42:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * These settings should not be altered.
  43:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *-----------------------------------------------------------
  44:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  45:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  46:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Type definitions. */
  47:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCHAR		char
  48:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portFLOAT		float
  49:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDOUBLE		double
  50:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portLONG		long
  51:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSHORT		short
  52:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBASE_TYPE	long
  54:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  55:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef long BaseType_t;
  57:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef unsigned long UBaseType_t;
  58:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  59:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint16_t TickType_t;
  61:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #else
  63:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint32_t TickType_t;
  64:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  66:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	not need to be guarded with a critical section. */
  68:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  70:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  71:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  72:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specifics. */
  73:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  77:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  78:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Scheduler utilities. */
  79:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD() 															\
  80:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {																				\
  81:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 																				\
  84:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "isb" );													\
  88:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
  89:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  90:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 16


  94:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  95:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  96:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Critical section management. */
  97:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortEnterCritical( void );
  98:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortExitCritical( void );
  99:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 106:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 107:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 108:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** (which build with all the ports) will build. */
 111:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 114:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 115:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Tickless idle/low power functionality. */
 116:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 120:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 121:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 122:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specific optimisations. */
 123:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 126:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 127:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 129:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Generic helper function. */
 130:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 132:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	uint8_t ucReturn;
 133:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 134:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		return ucReturn;
 136:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 137:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 138:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Check the configuration. */
 139:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#endif
 142:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 143:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 147:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 149:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 17


 151:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 153:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 154:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 155:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef configASSERT
 156:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 159:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 160:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* portNOP() is not required by this port. */
 161:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNOP()
 162:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 163:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portINLINE	__inline
 164:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 165:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portFORCE_INLINE
 166:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 168:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 169:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 170:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 171:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulCurrentInterrupt;
 172:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** BaseType_t xReturn;
 173:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 174:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 175:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 176:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 177:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 178:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 179:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdFALSE;
 180:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 181:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	else
 182:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 183:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdTRUE;
 184:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 185:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 186:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	return xReturn;
 187:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 188:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 189:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 190:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 192:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulNewBASEPRI;
 194:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 194              		.loc 2 195 2
 195              		.syntax unified
 196              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 197 0014 4FF05003 			mov r3, #80												
 198 0018 83F31188 		msr basepri, r3											
 199 001c BFF36F8F 		isb														
 200 0020 BFF34F8F 		dsb														
 201              	
 202              	@ 0 "" 2
 203              		.thumb
 204              		.syntax unified
 205 0024 3B62     		str	r3, [r7, #32]
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 18


 196:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 197:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mov %0, %1												\n"	\
 198:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	msr basepri, %0											\n" \
 199:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	isb														\n" \
 200:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	dsb														\n" \
 201:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 202:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	);
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 206              		.loc 2 203 1
 207 0026 00BF     		nop
 208              	.L3:
 209              	.LBE127:
 210              	.LBE126:
 211              		.loc 1 592 3 discriminator 1
 212 0028 FEE7     		b	.L3
 213              	.L2:
 593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 214              		.loc 1 593 3
 215 002a BB6B     		ldr	r3, [r7, #56]
 216 002c 002B     		cmp	r3, #0
 217 002e 0AD1     		bne	.L4
 218              	.LBB128:
 219              	.LBB129:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 220              		.loc 2 195 2
 221              		.syntax unified
 222              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 223 0030 4FF05003 			mov r3, #80												
 224 0034 83F31188 		msr basepri, r3											
 225 0038 BFF36F8F 		isb														
 226 003c BFF34F8F 		dsb														
 227              	
 228              	@ 0 "" 2
 229              		.thumb
 230              		.syntax unified
 231 0040 FB61     		str	r3, [r7, #28]
 232              		.loc 2 203 1
 233 0042 00BF     		nop
 234              	.L5:
 235              	.LBE129:
 236              	.LBE128:
 237              		.loc 1 593 3 discriminator 2
 238 0044 FEE7     		b	.L5
 239              	.L4:
 240              	.LBB130:
 594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configASSERT_DEFINED == 1 )
 596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Sanity check that the size of the structure used to declare a
 598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			variable of type StaticTask_t equals the size of the real task
 599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			structure. */
 600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			volatile size_t xSize = sizeof( StaticTask_t );
 241              		.loc 1 600 20
 242 0046 6423     		movs	r3, #100
 243 0048 3B61     		str	r3, [r7, #16]
 601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( xSize == sizeof( TCB_t ) );
 244              		.loc 1 601 4
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 19


 245 004a 3B69     		ldr	r3, [r7, #16]
 246 004c 642B     		cmp	r3, #100
 247 004e 0AD0     		beq	.L6
 248              	.LBB131:
 249              	.LBB132:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 250              		.loc 2 195 2
 251              		.syntax unified
 252              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 253 0050 4FF05003 			mov r3, #80												
 254 0054 83F31188 		msr basepri, r3											
 255 0058 BFF36F8F 		isb														
 256 005c BFF34F8F 		dsb														
 257              	
 258              	@ 0 "" 2
 259              		.thumb
 260              		.syntax unified
 261 0060 BB61     		str	r3, [r7, #24]
 262              		.loc 2 203 1
 263 0062 00BF     		nop
 264              	.L7:
 265              	.LBE132:
 266              	.LBE131:
 267              		.loc 1 601 4 discriminator 3
 268 0064 FEE7     		b	.L7
 269              	.L6:
 602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 270              		.loc 1 602 4
 271 0066 3B69     		ldr	r3, [r7, #16]
 272              	.LBE130:
 603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configASSERT_DEFINED */
 605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( pxTaskBuffer != NULL ) && ( puxStackBuffer != NULL ) )
 273              		.loc 1 607 5
 274 0068 BB6B     		ldr	r3, [r7, #56]
 275 006a 002B     		cmp	r3, #0
 276 006c 1ED0     		beq	.L8
 277              		.loc 1 607 32 discriminator 1
 278 006e 7B6B     		ldr	r3, [r7, #52]
 279 0070 002B     		cmp	r3, #0
 280 0072 1BD0     		beq	.L8
 608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The memory used for the task's TCB and stack are passed into this
 610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			function - use them. */
 611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pxTaskBuffer; /*lint !e740 !e9087 Unusual cast is ok as the structures ar
 281              		.loc 1 611 13
 282 0074 BB6B     		ldr	r3, [r7, #56]
 283 0076 7B62     		str	r3, [r7, #36]
 612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 284              		.loc 1 612 22
 285 0078 7B6A     		ldr	r3, [r7, #36]
 286 007a 7A6B     		ldr	r2, [r7, #52]
 287 007c 1A63     		str	r2, [r3, #48]
 613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consoli
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 20


 615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task was created statically in case the task is later deleted. */
 618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 288              		.loc 1 618 37
 289 007e 7B6A     		ldr	r3, [r7, #36]
 290 0080 0222     		movs	r2, #2
 291 0082 83F86120 		strb	r2, [r3, #97]
 619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif /* tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE */
 621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNe
 292              		.loc 1 622 4
 293 0086 0023     		movs	r3, #0
 294 0088 0393     		str	r3, [sp, #12]
 295 008a 7B6A     		ldr	r3, [r7, #36]
 296 008c 0293     		str	r3, [sp, #8]
 297 008e 07F11403 		add	r3, r7, #20
 298 0092 0193     		str	r3, [sp, #4]
 299 0094 3B6B     		ldr	r3, [r7, #48]
 300 0096 0093     		str	r3, [sp]
 301 0098 3B68     		ldr	r3, [r7]
 302 009a 7A68     		ldr	r2, [r7, #4]
 303 009c B968     		ldr	r1, [r7, #8]
 304 009e F868     		ldr	r0, [r7, #12]
 305 00a0 FFF7FEFF 		bl	prvInitialiseNewTask
 623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 306              		.loc 1 623 4
 307 00a4 786A     		ldr	r0, [r7, #36]
 308 00a6 FFF7FEFF 		bl	prvAddNewTaskToReadyList
 309 00aa 01E0     		b	.L9
 310              	.L8:
 624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
 626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = NULL;
 311              		.loc 1 627 12
 312 00ac 0023     		movs	r3, #0
 313 00ae 7B61     		str	r3, [r7, #20]
 314              	.L9:
 628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 315              		.loc 1 630 10
 316 00b0 7B69     		ldr	r3, [r7, #20]
 631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 317              		.loc 1 631 2
 318 00b2 1846     		mov	r0, r3
 319 00b4 2837     		adds	r7, r7, #40
 320              	.LCFI3:
 321              		.cfi_def_cfa_offset 8
 322 00b6 BD46     		mov	sp, r7
 323              	.LCFI4:
 324              		.cfi_def_cfa_register 13
 325              		@ sp needed
 326 00b8 80BD     		pop	{r7, pc}
 327              		.cfi_endproc
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 21


 328              	.LFE4:
 330              		.section	.text.xTaskCreate,"ax",%progbits
 331              		.align	1
 332              		.global	xTaskCreate
 333              		.syntax unified
 334              		.thumb
 335              		.thumb_func
 337              	xTaskCreate:
 338              	.LFB5:
 632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* SUPPORT_STATIC_ALLOCATION */
 634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCreateRestrictedStatic( const TaskParameters_t * const pxTaskDefinition, TaskHandl
 639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskDefinition->puxStackBuffer != NULL );
 644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskDefinition->pxTaskBuffer != NULL );
 645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( pxTaskDefinition->puxStackBuffer != NULL ) && ( pxTaskDefinition->pxTaskBuffer != NULL ) )
 647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends
 649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			on the implementation of the port malloc function and whether or
 650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			not static allocation is being used. */
 651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pxTaskDefinition->pxTaskBuffer;
 652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Store the stack location in the TCB. */
 654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxStack = pxTaskDefinition->puxStackBuffer;
 655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 )
 657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task was created statically in case the task is later deleted. */
 660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif /* tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE */
 663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvInitialiseNewTask(	pxTaskDefinition->pvTaskCode,
 665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxTaskDefinition->pcName,
 666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									( uint32_t ) pxTaskDefinition->usStackDepth,
 667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxTaskDefinition->pvParameters,
 668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxTaskDefinition->uxPriority,
 669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxCreatedTask, pxNewTCB,
 670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxTaskDefinition->xRegions );
 671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdPASS;
 674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) */
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 22


 680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCreateRestricted( const TaskParameters_t * const pxTaskDefinition, TaskHandle_t *p
 685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskDefinition->puxStackBuffer );
 690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTaskDefinition->puxStackBuffer != NULL )
 692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends
 694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			on the implementation of the port malloc function and whether or
 695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			not static allocation is being used. */
 696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxNewTCB != NULL )
 699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Store the stack location in the TCB. */
 701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxStack = pxTaskDefinition->puxStackBuffer;
 702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 )
 704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Tasks can be created statically or dynamically, so note
 706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					this task had a statically allocated stack in case it is
 707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					later deleted.  The TCB was allocated dynamically. */
 708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_ONLY;
 709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif /* tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE */
 711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvInitialiseNewTask(	pxTaskDefinition->pvTaskCode,
 713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->pcName,
 714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										( uint32_t ) pxTaskDefinition->usStackDepth,
 715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->pvParameters,
 716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->uxPriority,
 717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxCreatedTask, pxNewTCB,
 718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->xRegions );
 719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddNewTaskToReadyList( pxNewTCB );
 721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
 722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
 729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCreate(	TaskFunction_t pxTaskCode,
 734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings and 
 735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							const configSTACK_DEPTH_TYPE usStackDepth,
 736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							void * const pvParameters,
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 23


 737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							UBaseType_t uxPriority,
 738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							TaskHandle_t * const pxCreatedTask )
 739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 339              		.loc 1 739 2
 340              		.cfi_startproc
 341              		@ args = 8, pretend = 0, frame = 32
 342              		@ frame_needed = 1, uses_anonymous_args = 0
 343 0000 80B5     		push	{r7, lr}
 344              	.LCFI5:
 345              		.cfi_def_cfa_offset 8
 346              		.cfi_offset 7, -8
 347              		.cfi_offset 14, -4
 348 0002 8CB0     		sub	sp, sp, #48
 349              	.LCFI6:
 350              		.cfi_def_cfa_offset 56
 351 0004 04AF     		add	r7, sp, #16
 352              	.LCFI7:
 353              		.cfi_def_cfa 7, 40
 354 0006 F860     		str	r0, [r7, #12]
 355 0008 B960     		str	r1, [r7, #8]
 356 000a 3B60     		str	r3, [r7]
 357 000c 1346     		mov	r3, r2	@ movhi
 358 000e FB80     		strh	r3, [r7, #6]	@ movhi
 359              	.LBB133:
 740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the stack grows down then allocate the stack then the TCB so the stack
 744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		does not grow into the TCB.  Likewise if the stack grows up then allocate
 745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the TCB then the stack. */
 746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( portSTACK_GROWTH > 0 )
 747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends on
 749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the implementation of the port malloc function and whether or not static
 750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			allocation is being used. */
 751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxNewTCB != NULL )
 754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Allocate space for the stack used by the task being created.
 756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				The base of the stack memory stored in the TCB so the task can
 757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				be deleted later if required. */
 758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( Sta
 759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxNewTCB->pxStack == NULL )
 761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Could not allocate the stack.  Delete the allocated TCB. */
 763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vPortFree( pxNewTCB );
 764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxNewTCB = NULL;
 765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else /* portSTACK_GROWTH */
 769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t *pxStack;
 771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the stack used by the task being created. */
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 24


 773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079
 360              		.loc 1 773 32
 361 0010 FB88     		ldrh	r3, [r7, #6]
 362              		.loc 1 773 14
 363 0012 9B00     		lsls	r3, r3, #2
 364 0014 1846     		mov	r0, r3
 365 0016 FFF7FEFF 		bl	pvPortMalloc
 366 001a 7861     		str	r0, [r7, #20]
 774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxStack != NULL )
 367              		.loc 1 775 6
 368 001c 7B69     		ldr	r3, [r7, #20]
 369 001e 002B     		cmp	r3, #0
 370 0020 0ED0     		beq	.L12
 776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Allocate space for the TCB. */
 778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returne
 371              		.loc 1 778 28
 372 0022 6420     		movs	r0, #100
 373 0024 FFF7FEFF 		bl	pvPortMalloc
 374 0028 F861     		str	r0, [r7, #28]
 779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxNewTCB != NULL )
 375              		.loc 1 780 7
 376 002a FB69     		ldr	r3, [r7, #28]
 377 002c 002B     		cmp	r3, #0
 378 002e 03D0     		beq	.L13
 781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Store the stack location in the TCB. */
 783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxNewTCB->pxStack = pxStack;
 379              		.loc 1 783 24
 380 0030 FB69     		ldr	r3, [r7, #28]
 381 0032 7A69     		ldr	r2, [r7, #20]
 382 0034 1A63     		str	r2, [r3, #48]
 383 0036 05E0     		b	.L14
 384              	.L13:
 784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
 786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The stack cannot be used as the TCB was not created.  Free
 788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					it again. */
 789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vPortFree( pxStack );
 385              		.loc 1 789 6
 386 0038 7869     		ldr	r0, [r7, #20]
 387 003a FFF7FEFF 		bl	vPortFree
 388 003e 01E0     		b	.L14
 389              	.L12:
 790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
 793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB = NULL;
 390              		.loc 1 794 14
 391 0040 0023     		movs	r3, #0
 392 0042 FB61     		str	r3, [r7, #28]
 393              	.L14:
 394              	.LBE133:
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 25


 795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* portSTACK_GROWTH */
 798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxNewTCB != NULL )
 395              		.loc 1 799 5
 396 0044 FB69     		ldr	r3, [r7, #28]
 397 0046 002B     		cmp	r3, #0
 398 0048 17D0     		beq	.L15
 800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e9029 !e731 Macro has been consoli
 802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task was created dynamically in case it is later deleted. */
 805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 399              		.loc 1 805 37
 400 004a FB69     		ldr	r3, [r7, #28]
 401 004c 0022     		movs	r2, #0
 402 004e 83F86120 		strb	r2, [r3, #97]
 806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif /* tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE */
 808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, p
 403              		.loc 1 809 4
 404 0052 FA88     		ldrh	r2, [r7, #6]
 405 0054 0023     		movs	r3, #0
 406 0056 0393     		str	r3, [sp, #12]
 407 0058 FB69     		ldr	r3, [r7, #28]
 408 005a 0293     		str	r3, [sp, #8]
 409 005c FB6A     		ldr	r3, [r7, #44]
 410 005e 0193     		str	r3, [sp, #4]
 411 0060 BB6A     		ldr	r3, [r7, #40]
 412 0062 0093     		str	r3, [sp]
 413 0064 3B68     		ldr	r3, [r7]
 414 0066 B968     		ldr	r1, [r7, #8]
 415 0068 F868     		ldr	r0, [r7, #12]
 416 006a FFF7FEFF 		bl	prvInitialiseNewTask
 810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 417              		.loc 1 810 4
 418 006e F869     		ldr	r0, [r7, #28]
 419 0070 FFF7FEFF 		bl	prvAddNewTaskToReadyList
 811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdPASS;
 420              		.loc 1 811 12
 421 0074 0123     		movs	r3, #1
 422 0076 BB61     		str	r3, [r7, #24]
 423 0078 02E0     		b	.L16
 424              	.L15:
 812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
 814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 425              		.loc 1 815 12
 426 007a 4FF0FF33 		mov	r3, #-1
 427 007e BB61     		str	r3, [r7, #24]
 428              	.L16:
 816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 26


 818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 429              		.loc 1 818 10
 430 0080 BB69     		ldr	r3, [r7, #24]
 819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 431              		.loc 1 819 2
 432 0082 1846     		mov	r0, r3
 433 0084 2037     		adds	r7, r7, #32
 434              	.LCFI8:
 435              		.cfi_def_cfa_offset 8
 436 0086 BD46     		mov	sp, r7
 437              	.LCFI9:
 438              		.cfi_def_cfa_register 13
 439              		@ sp needed
 440 0088 80BD     		pop	{r7, pc}
 441              		.cfi_endproc
 442              	.LFE5:
 444              		.section	.text.prvInitialiseNewTask,"ax",%progbits
 445              		.align	1
 446              		.syntax unified
 447              		.thumb
 448              		.thumb_func
 450              	prvInitialiseNewTask:
 451              	.LFB6:
 820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings an
 826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const uint32_t ulStackDepth,
 827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									void * const pvParameters,
 828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									UBaseType_t uxPriority,
 829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									TaskHandle_t * const pxCreatedTask,
 830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									TCB_t *pxNewTCB,
 831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const MemoryRegion_t * const xRegions )
 832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 452              		.loc 1 832 1
 453              		.cfi_startproc
 454              		@ args = 16, pretend = 0, frame = 32
 455              		@ frame_needed = 1, uses_anonymous_args = 0
 456 0000 80B5     		push	{r7, lr}
 457              	.LCFI10:
 458              		.cfi_def_cfa_offset 8
 459              		.cfi_offset 7, -8
 460              		.cfi_offset 14, -4
 461 0002 88B0     		sub	sp, sp, #32
 462              	.LCFI11:
 463              		.cfi_def_cfa_offset 40
 464 0004 00AF     		add	r7, sp, #0
 465              	.LCFI12:
 466              		.cfi_def_cfa_register 7
 467 0006 F860     		str	r0, [r7, #12]
 468 0008 B960     		str	r1, [r7, #8]
 469 000a 7A60     		str	r2, [r7, #4]
 470 000c 3B60     		str	r3, [r7]
 833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** StackType_t *pxTopOfStack;
 834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t x;
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 27


 835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( portUSING_MPU_WRAPPERS == 1 )
 837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Should the task be created in privileged mode? */
 838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		BaseType_t xRunPrivileged;
 839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( uxPriority & portPRIVILEGE_BIT ) != 0U )
 840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xRunPrivileged = pdTRUE;
 842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
 844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xRunPrivileged = pdFALSE;
 846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxPriority &= ~portPRIVILEGE_BIT;
 848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* portUSING_MPU_WRAPPERS == 1 */
 849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Avoid dependency on memset() if it is not required. */
 851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( tskSET_NEW_STACKS_TO_KNOWN_VALUE == 1 )
 852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Fill the stack with a known value to assist debugging. */
 854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof(
 471              		.loc 1 854 28
 472 000e 3B6B     		ldr	r3, [r7, #48]
 473 0010 186B     		ldr	r0, [r3, #48]
 474              		.loc 1 854 12
 475 0012 7B68     		ldr	r3, [r7, #4]
 476 0014 9B00     		lsls	r3, r3, #2
 477 0016 1A46     		mov	r2, r3
 478 0018 A521     		movs	r1, #165
 479 001a FFF7FEFF 		bl	memset
 855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* tskSET_NEW_STACKS_TO_KNOWN_VALUE */
 857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Calculate the top of stack address.  This depends on whether the stack
 859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	grows from high memory to low (as per the 80x86) or vice versa.
 860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portSTACK_GROWTH is used to make the result positive or negative as required
 861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	by the port. */
 862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( portSTACK_GROWTH < 0 )
 863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 480              		.loc 1 864 29
 481 001e 3B6B     		ldr	r3, [r7, #48]
 482 0020 1A6B     		ldr	r2, [r3, #48]
 483              		.loc 1 864 38
 484 0022 7B68     		ldr	r3, [r7, #4]
 485 0024 03F18043 		add	r3, r3, #1073741824
 486 0028 013B     		subs	r3, r3, #1
 487 002a 9B00     		lsls	r3, r3, #2
 488              		.loc 1 864 16
 489 002c 1344     		add	r3, r3, r2
 490 002e BB61     		str	r3, [r7, #24]
 865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 491              		.loc 1 865 40
 492 0030 BB69     		ldr	r3, [r7, #24]
 493              		.loc 1 865 81
 494 0032 23F00703 		bic	r3, r3, #7
 495              		.loc 1 865 16
 496 0036 BB61     		str	r3, [r7, #24]
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 28


 866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Check the alignment of the calculated top of stack is correct. */
 868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack & ( portPOINTER_SIZE_TYPE ) portBYTE_ALI
 497              		.loc 1 868 3
 498 0038 BB69     		ldr	r3, [r7, #24]
 499 003a 03F00703 		and	r3, r3, #7
 500 003e 002B     		cmp	r3, #0
 501 0040 0AD0     		beq	.L19
 502              	.LBB134:
 503              	.LBB135:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 504              		.loc 2 195 2
 505              		.syntax unified
 506              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 507 0042 4FF05003 			mov r3, #80												
 508 0046 83F31188 		msr basepri, r3											
 509 004a BFF36F8F 		isb														
 510 004e BFF34F8F 		dsb														
 511              	
 512              	@ 0 "" 2
 513              		.thumb
 514              		.syntax unified
 515 0052 7B61     		str	r3, [r7, #20]
 516              		.loc 2 203 1
 517 0054 00BF     		nop
 518              	.L20:
 519              	.LBE135:
 520              	.LBE134:
 521              		.loc 1 868 3 discriminator 1
 522 0056 FEE7     		b	.L20
 523              	.L19:
 869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configRECORD_STACK_HIGH_ADDRESS == 1 )
 871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Also record the stack's high address, which may assist
 873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			debugging. */
 874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxEndOfStack = pxTopOfStack;
 524              		.loc 1 874 27
 525 0058 3B6B     		ldr	r3, [r7, #48]
 526 005a BA69     		ldr	r2, [r7, #24]
 527 005c 5A64     		str	r2, [r3, #68]
 875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configRECORD_STACK_HIGH_ADDRESS */
 877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else /* portSTACK_GROWTH */
 879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = pxNewTCB->pxStack;
 881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Check the alignment of the stack buffer is correct. */
 883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxNewTCB->pxStack & ( portPOINTER_SIZE_TYPE ) portBYT
 884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The other extreme of the stack space is required if stack checking is
 886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		performed. */
 887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pxEndOfStack = pxNewTCB->pxStack + ( ulStackDepth - ( uint32_t ) 1 );
 888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* portSTACK_GROWTH */
 890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 29


 891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Store the task name in the TCB. */
 892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( pcName != NULL )
 528              		.loc 1 892 4
 529 005e BB68     		ldr	r3, [r7, #8]
 530 0060 002B     		cmp	r3, #0
 531 0062 1FD0     		beq	.L21
 893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 532              		.loc 1 894 10
 533 0064 0023     		movs	r3, #0
 534 0066 FB61     		str	r3, [r7, #28]
 535              		.loc 1 894 3
 536 0068 12E0     		b	.L22
 537              	.L25:
 895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 538              		.loc 1 896 38
 539 006a BA68     		ldr	r2, [r7, #8]
 540 006c FB69     		ldr	r3, [r7, #28]
 541 006e 1344     		add	r3, r3, r2
 542 0070 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 543              		.loc 1 896 30
 544 0072 3A6B     		ldr	r2, [r7, #48]
 545 0074 FB69     		ldr	r3, [r7, #28]
 546 0076 1344     		add	r3, r3, r2
 547 0078 3433     		adds	r3, r3, #52
 548 007a 0A46     		mov	r2, r1
 549 007c 1A70     		strb	r2, [r3]
 897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Don't copy all configMAX_TASK_NAME_LEN if the string is shorter than
 899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configMAX_TASK_NAME_LEN characters just in case the memory after the
 900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			string is not accessible (extremely unlikely). */
 901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pcName[ x ] == ( char ) 0x00 )
 550              		.loc 1 901 14
 551 007e BA68     		ldr	r2, [r7, #8]
 552 0080 FB69     		ldr	r3, [r7, #28]
 553 0082 1344     		add	r3, r3, r2
 554 0084 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 555              		.loc 1 901 6
 556 0086 002B     		cmp	r3, #0
 557 0088 06D0     		beq	.L29
 894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 558              		.loc 1 894 77 discriminator 2
 559 008a FB69     		ldr	r3, [r7, #28]
 560 008c 0133     		adds	r3, r3, #1
 561 008e FB61     		str	r3, [r7, #28]
 562              	.L22:
 894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 563              		.loc 1 894 33 discriminator 1
 564 0090 FB69     		ldr	r3, [r7, #28]
 565 0092 0F2B     		cmp	r3, #15
 566 0094 E9D9     		bls	.L25
 567 0096 00E0     		b	.L24
 568              	.L29:
 902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				break;
 569              		.loc 1 903 5
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 30


 570 0098 00BF     		nop
 571              	.L24:
 904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
 906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Ensure the name string is terminated in the case that the string length
 912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		was greater or equal to configMAX_TASK_NAME_LEN. */
 913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 572              		.loc 1 913 55
 573 009a 3B6B     		ldr	r3, [r7, #48]
 574 009c 0022     		movs	r2, #0
 575 009e 83F84320 		strb	r2, [r3, #67]
 576 00a2 03E0     		b	.L26
 577              	.L21:
 914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
 916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The task has not been given a name, so just ensure there is a NULL
 918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		terminator when it is read out. */
 919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 578              		.loc 1 919 29
 579 00a4 3B6B     		ldr	r3, [r7, #48]
 580 00a6 0022     		movs	r2, #0
 581 00a8 83F83420 		strb	r2, [r3, #52]
 582              	.L26:
 920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* This is used as an array index so must ensure it's not too large.  First
 923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	remove the privilege bit if one is present. */
 924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 583              		.loc 1 924 4
 584 00ac BB6A     		ldr	r3, [r7, #40]
 585 00ae 372B     		cmp	r3, #55
 586 00b0 01D9     		bls	.L27
 925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
 587              		.loc 1 926 14
 588 00b2 3723     		movs	r3, #55
 589 00b4 BB62     		str	r3, [r7, #40]
 590              	.L27:
 927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
 929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
 931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxNewTCB->uxPriority = uxPriority;
 591              		.loc 1 933 23
 592 00b6 3B6B     		ldr	r3, [r7, #48]
 593 00b8 BA6A     		ldr	r2, [r7, #40]
 594 00ba DA62     		str	r2, [r3, #44]
 934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 31


 936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxBasePriority = uxPriority;
 595              		.loc 1 936 28
 596 00bc 3B6B     		ldr	r3, [r7, #48]
 597 00be BA6A     		ldr	r2, [r7, #40]
 598 00c0 1A65     		str	r2, [r3, #80]
 937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxMutexesHeld = 0;
 599              		.loc 1 937 27
 600 00c2 3B6B     		ldr	r3, [r7, #48]
 601 00c4 0022     		movs	r2, #0
 602 00c6 5A65     		str	r2, [r3, #84]
 938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_MUTEXES */
 940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 603              		.loc 1 941 2
 604 00c8 3B6B     		ldr	r3, [r7, #48]
 605 00ca 0433     		adds	r3, r3, #4
 606 00cc 1846     		mov	r0, r3
 607 00ce FFF7FEFF 		bl	vListInitialiseItem
 942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 608              		.loc 1 942 2
 609 00d2 3B6B     		ldr	r3, [r7, #48]
 610 00d4 1833     		adds	r3, r3, #24
 611 00d6 1846     		mov	r0, r3
 612 00d8 FFF7FEFF 		bl	vListInitialiseItem
 943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Set the pxNewTCB as a link back from the ListItem_t.  This is so we can get
 945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	back to	the containing TCB from a generic item in a list. */
 946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 613              		.loc 1 946 2
 614 00dc 3B6B     		ldr	r3, [r7, #48]
 615 00de 3A6B     		ldr	r2, [r7, #48]
 616 00e0 1A61     		str	r2, [r3, #16]
 947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Event lists are always in priority order. */
 949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( Ti
 617              		.loc 1 949 2
 618 00e2 BB6A     		ldr	r3, [r7, #40]
 619 00e4 C3F13802 		rsb	r2, r3, #56
 620 00e8 3B6B     		ldr	r3, [r7, #48]
 621 00ea 9A61     		str	r2, [r3, #24]
 950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 622              		.loc 1 950 2
 623 00ec 3B6B     		ldr	r3, [r7, #48]
 624 00ee 3A6B     		ldr	r2, [r7, #48]
 625 00f0 5A62     		str	r2, [r3, #36]
 951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portCRITICAL_NESTING_IN_TCB == 1 )
 953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxCriticalNesting = ( UBaseType_t ) 0U;
 955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* portCRITICAL_NESTING_IN_TCB */
 957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
 959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pxTaskTag = NULL;
 961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 32


 962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_APPLICATION_TASK_TAG */
 963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configGENERATE_RUN_TIME_STATS == 1 )
 965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ulRunTimeCounter = 0UL;
 626              		.loc 1 966 30
 627 00f2 3B6B     		ldr	r3, [r7, #48]
 628 00f4 0022     		movs	r2, #0
 629 00f6 9A65     		str	r2, [r3, #88]
 967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configGENERATE_RUN_TIME_STATS */
 969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portUSING_MPU_WRAPPERS == 1 )
 971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vPortStoreTaskMPUSettings( &( pxNewTCB->xMPUSettings ), xRegions, pxNewTCB->pxStack, ulStackDepth
 973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else
 975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Avoid compiler warning about unreferenced parameter. */
 977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xRegions;
 978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
 982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		for( x = 0; x < ( UBaseType_t ) configNUM_THREAD_LOCAL_STORAGE_POINTERS; x++ )
 984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pvThreadLocalStoragePointers[ x ] = NULL;
 986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_TASK_NOTIFICATIONS == 1 )
 991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ulNotifiedValue = 0;
 630              		.loc 1 992 29
 631 00f8 3B6B     		ldr	r3, [r7, #48]
 632 00fa 0022     		movs	r2, #0
 633 00fc DA65     		str	r2, [r3, #92]
 993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 634              		.loc 1 993 27
 635 00fe 3B6B     		ldr	r3, [r7, #48]
 636 0100 0022     		movs	r2, #0
 637 0102 83F86020 		strb	r2, [r3, #96]
 994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_NEWLIB_REENTRANT == 1 )
 998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Initialise this task's Newlib reent structure.
1000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
1001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		for additional information. */
1002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
1003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
1005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 33


1007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucDelayAborted = pdFALSE;
1009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
1011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Initialize the TCB stack to look as if the task was already running,
1013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	but had been interrupted by the scheduler.  The return address is set
1014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	to the start of the task function. Once the stack has been initialised
1015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the top of stack variable is updated. */
1016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( portUSING_MPU_WRAPPERS == 1 )
1017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the port has capability to detect stack overflow,
1019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pass the stack end address to the stack initialization
1020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		function as well. */
1021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( portHAS_STACK_OVERFLOW_CHECKING == 1 )
1022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( portSTACK_GROWTH < 0 )
1024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB->pxStack, pxTaskCode, pv
1026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#else /* portSTACK_GROWTH */
1028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB->pxEndOfStack, pxTaskCod
1030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif /* portSTACK_GROWTH */
1032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else /* portHAS_STACK_OVERFLOW_CHECKING */
1034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters, xRunPriv
1036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* portHAS_STACK_OVERFLOW_CHECKING */
1038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else /* portUSING_MPU_WRAPPERS */
1040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the port has capability to detect stack overflow,
1042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pass the stack end address to the stack initialization
1043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		function as well. */
1044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( portHAS_STACK_OVERFLOW_CHECKING == 1 )
1045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( portSTACK_GROWTH < 0 )
1047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB->pxStack, pxTaskCode, pv
1049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#else /* portSTACK_GROWTH */
1051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB->pxEndOfStack, pxTaskCod
1053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif /* portSTACK_GROWTH */
1055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else /* portHAS_STACK_OVERFLOW_CHECKING */
1057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 638              		.loc 1 1058 29
 639 0106 3A68     		ldr	r2, [r7]
 640 0108 F968     		ldr	r1, [r7, #12]
 641 010a B869     		ldr	r0, [r7, #24]
 642 010c FFF7FEFF 		bl	pxPortInitialiseStack
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 34


 643 0110 0246     		mov	r2, r0
 644              		.loc 1 1058 27
 645 0112 3B6B     		ldr	r3, [r7, #48]
 646 0114 1A60     		str	r2, [r3]
1059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* portHAS_STACK_OVERFLOW_CHECKING */
1061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* portUSING_MPU_WRAPPERS */
1063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( pxCreatedTask != NULL )
 647              		.loc 1 1064 4
 648 0116 FB6A     		ldr	r3, [r7, #44]
 649 0118 002B     		cmp	r3, #0
 650 011a 02D0     		beq	.L30
1065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Pass the handle out in an anonymous way.  The handle can be used to
1067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		change the created task's priority, delete the created task, etc.*/
1068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 651              		.loc 1 1068 18
 652 011c FB6A     		ldr	r3, [r7, #44]
 653 011e 3A6B     		ldr	r2, [r7, #48]
 654 0120 1A60     		str	r2, [r3]
 655              	.L30:
1069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
1071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
1073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 656              		.loc 1 1074 1
 657 0122 00BF     		nop
 658 0124 2037     		adds	r7, r7, #32
 659              	.LCFI13:
 660              		.cfi_def_cfa_offset 8
 661 0126 BD46     		mov	sp, r7
 662              	.LCFI14:
 663              		.cfi_def_cfa_register 13
 664              		@ sp needed
 665 0128 80BD     		pop	{r7, pc}
 666              		.cfi_endproc
 667              	.LFE6:
 669              		.section	.text.prvAddNewTaskToReadyList,"ax",%progbits
 670              		.align	1
 671              		.syntax unified
 672              		.thumb
 673              		.thumb_func
 675              	prvAddNewTaskToReadyList:
 676              	.LFB7:
1075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
1078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 677              		.loc 1 1078 1
 678              		.cfi_startproc
 679              		@ args = 0, pretend = 0, frame = 8
 680              		@ frame_needed = 1, uses_anonymous_args = 0
 681 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 35


 682              	.LCFI15:
 683              		.cfi_def_cfa_offset 8
 684              		.cfi_offset 7, -8
 685              		.cfi_offset 14, -4
 686 0002 82B0     		sub	sp, sp, #8
 687              	.LCFI16:
 688              		.cfi_def_cfa_offset 16
 689 0004 00AF     		add	r7, sp, #0
 690              	.LCFI17:
 691              		.cfi_def_cfa_register 7
 692 0006 7860     		str	r0, [r7, #4]
1079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
1080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	updated. */
1081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 693              		.loc 1 1081 2
 694 0008 FFF7FEFF 		bl	vPortEnterCritical
1082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxCurrentNumberOfTasks++;
 695              		.loc 1 1083 25
 696 000c 2D4B     		ldr	r3, .L37
 697 000e 1B68     		ldr	r3, [r3]
 698 0010 0133     		adds	r3, r3, #1
 699 0012 2C4A     		ldr	r2, .L37
 700 0014 1360     		str	r3, [r2]
1084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB == NULL )
 701              		.loc 1 1084 20
 702 0016 2C4B     		ldr	r3, .L37+4
 703 0018 1B68     		ldr	r3, [r3]
 704              		.loc 1 1084 5
 705 001a 002B     		cmp	r3, #0
 706 001c 09D1     		bne	.L32
1085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* There are no other tasks, or all the other tasks are in
1087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the suspended state - make this the current task. */
1088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxCurrentTCB = pxNewTCB;
 707              		.loc 1 1088 17
 708 001e 2A4A     		ldr	r2, .L37+4
 709 0020 7B68     		ldr	r3, [r7, #4]
 710 0022 1360     		str	r3, [r2]
1089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 711              		.loc 1 1090 31
 712 0024 274B     		ldr	r3, .L37
 713 0026 1B68     		ldr	r3, [r3]
 714              		.loc 1 1090 6
 715 0028 012B     		cmp	r3, #1
 716 002a 10D1     		bne	.L33
1091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* This is the first task to be created so do the preliminary
1093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				initialisation required.  We will not recover if this call
1094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				fails, but we will report the failure. */
1095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvInitialiseTaskLists();
 717              		.loc 1 1095 5
 718 002c FFF7FEFF 		bl	prvInitialiseTaskLists
 719 0030 0DE0     		b	.L33
 720              	.L32:
1096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 36


1097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1098:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the scheduler is not already running, make this task the
1105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			current task if it is the highest priority task to be created
1106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			so far. */
1107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xSchedulerRunning == pdFALSE )
 721              		.loc 1 1107 26
 722 0032 264B     		ldr	r3, .L37+8
 723 0034 1B68     		ldr	r3, [r3]
 724              		.loc 1 1107 6
 725 0036 002B     		cmp	r3, #0
 726 0038 09D1     		bne	.L33
1108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 727              		.loc 1 1109 21
 728 003a 234B     		ldr	r3, .L37+4
 729 003c 1B68     		ldr	r3, [r3]
 730 003e DA6A     		ldr	r2, [r3, #44]
 731              		.loc 1 1109 45
 732 0040 7B68     		ldr	r3, [r7, #4]
 733 0042 DB6A     		ldr	r3, [r3, #44]
 734              		.loc 1 1109 7
 735 0044 9A42     		cmp	r2, r3
 736 0046 02D8     		bhi	.L33
1110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB = pxNewTCB;
 737              		.loc 1 1111 19
 738 0048 1F4A     		ldr	r2, .L37+4
 739 004a 7B68     		ldr	r3, [r7, #4]
 740 004c 1360     		str	r3, [r2]
 741              	.L33:
1112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxTaskNumber++;
 742              		.loc 1 1124 15
 743 004e 204B     		ldr	r3, .L37+12
 744 0050 1B68     		ldr	r3, [r3]
 745 0052 0133     		adds	r3, r3, #1
 746 0054 1E4A     		ldr	r2, .L37+12
 747 0056 1360     		str	r3, [r2]
1125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TRACE_FACILITY == 1 )
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 37


1127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Add a counter into the TCB for tracing only. */
1129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->uxTCBNumber = uxTaskNumber;
 748              		.loc 1 1129 26
 749 0058 1D4B     		ldr	r3, .L37+12
 750 005a 1A68     		ldr	r2, [r3]
 751 005c 7B68     		ldr	r3, [r7, #4]
 752 005e 9A64     		str	r2, [r3, #72]
1130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_TRACE_FACILITY */
1132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_CREATE( pxNewTCB );
1133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddTaskToReadyList( pxNewTCB );
 753              		.loc 1 1134 3
 754 0060 7B68     		ldr	r3, [r7, #4]
 755 0062 DA6A     		ldr	r2, [r3, #44]
 756 0064 1B4B     		ldr	r3, .L37+16
 757 0066 1B68     		ldr	r3, [r3]
 758 0068 9A42     		cmp	r2, r3
 759 006a 03D9     		bls	.L34
 760              		.loc 1 1134 3 is_stmt 0 discriminator 1
 761 006c 7B68     		ldr	r3, [r7, #4]
 762 006e DB6A     		ldr	r3, [r3, #44]
 763 0070 184A     		ldr	r2, .L37+16
 764 0072 1360     		str	r3, [r2]
 765              	.L34:
 766              		.loc 1 1134 3 discriminator 3
 767 0074 7B68     		ldr	r3, [r7, #4]
 768 0076 DA6A     		ldr	r2, [r3, #44]
 769 0078 1346     		mov	r3, r2
 770 007a 9B00     		lsls	r3, r3, #2
 771 007c 1344     		add	r3, r3, r2
 772 007e 9B00     		lsls	r3, r3, #2
 773 0080 154A     		ldr	r2, .L37+20
 774 0082 1A44     		add	r2, r2, r3
 775 0084 7B68     		ldr	r3, [r7, #4]
 776 0086 0433     		adds	r3, r3, #4
 777 0088 1946     		mov	r1, r3
 778 008a 1046     		mov	r0, r2
 779 008c FFF7FEFF 		bl	vListInsertEnd
1135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portSETUP_TCB( pxNewTCB );
1137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
 780              		.loc 1 1138 2 is_stmt 1 discriminator 3
 781 0090 FFF7FEFF 		bl	vPortExitCritical
1139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( xSchedulerRunning != pdFALSE )
 782              		.loc 1 1140 24 discriminator 3
 783 0094 0D4B     		ldr	r3, .L37+8
 784 0096 1B68     		ldr	r3, [r3]
 785              		.loc 1 1140 4 discriminator 3
 786 0098 002B     		cmp	r3, #0
 787 009a 0ED0     		beq	.L36
1141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the created task is of a higher priority than the current task
1143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		then it should run now. */
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 38


1144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 788              		.loc 1 1144 19
 789 009c 0A4B     		ldr	r3, .L37+4
 790 009e 1B68     		ldr	r3, [r3]
 791 00a0 DA6A     		ldr	r2, [r3, #44]
 792              		.loc 1 1144 42
 793 00a2 7B68     		ldr	r3, [r7, #4]
 794 00a4 DB6A     		ldr	r3, [r3, #44]
 795              		.loc 1 1144 5
 796 00a6 9A42     		cmp	r2, r3
 797 00a8 07D2     		bcs	.L36
1145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskYIELD_IF_USING_PREEMPTION();
 798              		.loc 1 1146 4
 799 00aa 0C4B     		ldr	r3, .L37+24
 800 00ac 4FF08052 		mov	r2, #268435456
 801 00b0 1A60     		str	r2, [r3]
 802              		.syntax unified
 803              	@ 1146 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 804 00b2 BFF34F8F 		dsb
 805              	@ 0 "" 2
 806              	@ 1146 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 807 00b6 BFF36F8F 		isb
 808              	@ 0 "" 2
 809              		.thumb
 810              		.syntax unified
 811              	.L36:
1147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
1154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
1156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 812              		.loc 1 1157 1
 813 00ba 00BF     		nop
 814 00bc 0837     		adds	r7, r7, #8
 815              	.LCFI18:
 816              		.cfi_def_cfa_offset 8
 817 00be BD46     		mov	sp, r7
 818              	.LCFI19:
 819              		.cfi_def_cfa_register 13
 820              		@ sp needed
 821 00c0 80BD     		pop	{r7, pc}
 822              	.L38:
 823 00c2 00BF     		.align	2
 824              	.L37:
 825 00c4 00000000 		.word	uxCurrentNumberOfTasks
 826 00c8 00000000 		.word	pxCurrentTCB
 827 00cc 00000000 		.word	xSchedulerRunning
 828 00d0 00000000 		.word	uxTaskNumber
 829 00d4 00000000 		.word	uxTopReadyPriority
 830 00d8 00000000 		.word	pxReadyTasksLists
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 39


 831 00dc 04ED00E0 		.word	-536810236
 832              		.cfi_endproc
 833              	.LFE7:
 835              		.section	.text.vTaskDelete,"ax",%progbits
 836              		.align	1
 837              		.global	vTaskDelete
 838              		.syntax unified
 839              		.thumb
 840              		.thumb_func
 842              	vTaskDelete:
 843              	.LFB8:
1158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
1161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskDelete( TaskHandle_t xTaskToDelete )
1163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 844              		.loc 1 1163 2
 845              		.cfi_startproc
 846              		@ args = 0, pretend = 0, frame = 16
 847              		@ frame_needed = 1, uses_anonymous_args = 0
 848 0000 80B5     		push	{r7, lr}
 849              	.LCFI20:
 850              		.cfi_def_cfa_offset 8
 851              		.cfi_offset 7, -8
 852              		.cfi_offset 14, -4
 853 0002 84B0     		sub	sp, sp, #16
 854              	.LCFI21:
 855              		.cfi_def_cfa_offset 24
 856 0004 00AF     		add	r7, sp, #0
 857              	.LCFI22:
 858              		.cfi_def_cfa_register 7
 859 0006 7860     		str	r0, [r7, #4]
1164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
 860              		.loc 1 1166 3
 861 0008 FFF7FEFF 		bl	vPortEnterCritical
1167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the calling task that is
1169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			being deleted. */
1170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToDelete );
 862              		.loc 1 1170 12
 863 000c 7B68     		ldr	r3, [r7, #4]
 864 000e 002B     		cmp	r3, #0
 865 0010 02D1     		bne	.L40
 866              		.loc 1 1170 12 is_stmt 0 discriminator 1
 867 0012 2C4B     		ldr	r3, .L49
 868 0014 1B68     		ldr	r3, [r3]
 869 0016 00E0     		b	.L41
 870              	.L40:
 871              		.loc 1 1170 12 discriminator 2
 872 0018 7B68     		ldr	r3, [r7, #4]
 873              	.L41:
 874              		.loc 1 1170 10 is_stmt 1 discriminator 4
 875 001a FB60     		str	r3, [r7, #12]
1171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 40


1172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Remove task from the ready/delayed list. */
1173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 876              		.loc 1 1173 8 discriminator 4
 877 001c FB68     		ldr	r3, [r7, #12]
 878 001e 0433     		adds	r3, r3, #4
 879 0020 1846     		mov	r0, r3
 880 0022 FFF7FEFF 		bl	uxListRemove
1174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskRESET_READY_PRIORITY( pxTCB->uxPriority );
1176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Is the task waiting on an event also? */
1183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 881              		.loc 1 1183 8 discriminator 4
 882 0026 FB68     		ldr	r3, [r7, #12]
 883 0028 9B6A     		ldr	r3, [r3, #40]
 884              		.loc 1 1183 6 discriminator 4
 885 002a 002B     		cmp	r3, #0
 886 002c 04D0     		beq	.L42
1184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 887              		.loc 1 1185 14
 888 002e FB68     		ldr	r3, [r7, #12]
 889 0030 1833     		adds	r3, r3, #24
 890 0032 1846     		mov	r0, r3
 891 0034 FFF7FEFF 		bl	uxListRemove
 892              	.L42:
1186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Increment the uxTaskNumber also so kernel aware debuggers can
1193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			detect that the task lists need re-generating.  This is done before
1194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portPRE_TASK_DELETE_HOOK() as in the Windows port that macro will
1195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			not return. */
1196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxTaskNumber++;
 893              		.loc 1 1196 16
 894 0038 234B     		ldr	r3, .L49+4
 895 003a 1B68     		ldr	r3, [r3]
 896 003c 0133     		adds	r3, r3, #1
 897 003e 224A     		ldr	r2, .L49+4
 898 0040 1360     		str	r3, [r2]
1197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
 899              		.loc 1 1198 14
 900 0042 204B     		ldr	r3, .L49
 901 0044 1B68     		ldr	r3, [r3]
 902              		.loc 1 1198 6
 903 0046 FA68     		ldr	r2, [r7, #12]
 904 0048 9A42     		cmp	r2, r3
 905 004a 0BD1     		bne	.L43
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 41


1199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A task is deleting itself.  This cannot complete within the
1201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task itself, as a context switch to another task is required.
1202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				Place the task in the termination list.  The idle task will
1203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				check the termination list and free up any memory allocated by
1204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the scheduler for the TCB and stack of the deleted task. */
1205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vListInsertEnd( &xTasksWaitingTermination, &( pxTCB->xStateListItem ) );
 906              		.loc 1 1205 5
 907 004c FB68     		ldr	r3, [r7, #12]
 908 004e 0433     		adds	r3, r3, #4
 909 0050 1946     		mov	r1, r3
 910 0052 1E48     		ldr	r0, .L49+8
 911 0054 FFF7FEFF 		bl	vListInsertEnd
1206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Increment the ucTasksDeleted variable so the idle task knows
1208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				there is a task that has been deleted and that it should therefore
1209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				check the xTasksWaitingTermination list. */
1210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				++uxDeletedTasksWaitingCleanUp;
 912              		.loc 1 1210 5
 913 0058 1D4B     		ldr	r3, .L49+12
 914 005a 1B68     		ldr	r3, [r3]
 915 005c 0133     		adds	r3, r3, #1
 916 005e 1C4A     		ldr	r2, .L49+12
 917 0060 1360     		str	r3, [r2]
 918 0062 09E0     		b	.L44
 919              	.L43:
1211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Call the delete hook before portPRE_TASK_DELETE_HOOK() as
1213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portPRE_TASK_DELETE_HOOK() does not return in the Win32 port. */
1214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_DELETE( pxTCB );
1215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The pre-delete hook is primarily for the Windows simulator,
1217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				in which Windows specific clean up operations are performed,
1218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				after which it is not possible to yield away from this task -
1219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				hence xYieldPending is used to latch that a context switch is
1220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				required. */
1221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portPRE_TASK_DELETE_HOOK( pxTCB, &xYieldPending );
1222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxCurrentNumberOfTasks;
 920              		.loc 1 1225 5
 921 0064 1B4B     		ldr	r3, .L49+16
 922 0066 1B68     		ldr	r3, [r3]
 923 0068 013B     		subs	r3, r3, #1
 924 006a 1A4A     		ldr	r2, .L49+16
 925 006c 1360     		str	r3, [r2]
1226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_DELETE( pxTCB );
1227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvDeleteTCB( pxTCB );
 926              		.loc 1 1227 5
 927 006e F868     		ldr	r0, [r7, #12]
 928 0070 FFF7FEFF 		bl	prvDeleteTCB
1228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Reset the next expected unblock time in case it referred to
1230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the task that has just been deleted. */
1231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvResetNextTaskUnblockTime();
 929              		.loc 1 1231 5
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 42


 930 0074 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 931              	.L44:
1232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
 932              		.loc 1 1234 3
 933 0078 FFF7FEFF 		bl	vPortExitCritical
1235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Force a reschedule if it is the currently running task that has just
1237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been deleted. */
1238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
 934              		.loc 1 1238 25
 935 007c 164B     		ldr	r3, .L49+20
 936 007e 1B68     		ldr	r3, [r3]
 937              		.loc 1 1238 5
 938 0080 002B     		cmp	r3, #0
 939 0082 1BD0     		beq	.L48
1239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
 940              		.loc 1 1240 14
 941 0084 0F4B     		ldr	r3, .L49
 942 0086 1B68     		ldr	r3, [r3]
 943              		.loc 1 1240 6
 944 0088 FA68     		ldr	r2, [r7, #12]
 945 008a 9A42     		cmp	r2, r3
 946 008c 16D1     		bne	.L48
1241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( uxSchedulerSuspended == 0 );
 947              		.loc 1 1242 5
 948 008e 134B     		ldr	r3, .L49+24
 949 0090 1B68     		ldr	r3, [r3]
 950 0092 002B     		cmp	r3, #0
 951 0094 0AD0     		beq	.L46
 952              	.LBB136:
 953              	.LBB137:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 954              		.loc 2 195 2
 955              		.syntax unified
 956              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 957 0096 4FF05003 			mov r3, #80												
 958 009a 83F31188 		msr basepri, r3											
 959 009e BFF36F8F 		isb														
 960 00a2 BFF34F8F 		dsb														
 961              	
 962              	@ 0 "" 2
 963              		.thumb
 964              		.syntax unified
 965 00a6 BB60     		str	r3, [r7, #8]
 966              		.loc 2 203 1
 967 00a8 00BF     		nop
 968              	.L47:
 969              	.LBE137:
 970              	.LBE136:
 971              		.loc 1 1242 5 discriminator 1
 972 00aa FEE7     		b	.L47
 973              	.L46:
1243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 43


 974              		.loc 1 1243 5
 975 00ac 0C4B     		ldr	r3, .L49+28
 976 00ae 4FF08052 		mov	r2, #268435456
 977 00b2 1A60     		str	r2, [r3]
 978              		.syntax unified
 979              	@ 1243 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 980 00b4 BFF34F8F 		dsb
 981              	@ 0 "" 2
 982              	@ 1243 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 983 00b8 BFF36F8F 		isb
 984              	@ 0 "" 2
 985              		.thumb
 986              		.syntax unified
 987              	.L48:
1244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 988              		.loc 1 1250 2
 989 00bc 00BF     		nop
 990 00be 1037     		adds	r7, r7, #16
 991              	.LCFI23:
 992              		.cfi_def_cfa_offset 8
 993 00c0 BD46     		mov	sp, r7
 994              	.LCFI24:
 995              		.cfi_def_cfa_register 13
 996              		@ sp needed
 997 00c2 80BD     		pop	{r7, pc}
 998              	.L50:
 999              		.align	2
 1000              	.L49:
 1001 00c4 00000000 		.word	pxCurrentTCB
 1002 00c8 00000000 		.word	uxTaskNumber
 1003 00cc 00000000 		.word	xTasksWaitingTermination
 1004 00d0 00000000 		.word	uxDeletedTasksWaitingCleanUp
 1005 00d4 00000000 		.word	uxCurrentNumberOfTasks
 1006 00d8 00000000 		.word	xSchedulerRunning
 1007 00dc 00000000 		.word	uxSchedulerSuspended
 1008 00e0 04ED00E0 		.word	-536810236
 1009              		.cfi_endproc
 1010              	.LFE8:
 1012              		.section	.text.vTaskDelayUntil,"ax",%progbits
 1013              		.align	1
 1014              		.global	vTaskDelayUntil
 1015              		.syntax unified
 1016              		.thumb
 1017              		.thumb_func
 1019              	vTaskDelayUntil:
 1020              	.LFB9:
1251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelete */
1253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelayUntil == 1 )
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 44


1256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskDelayUntil( TickType_t * const pxPreviousWakeTime, const TickType_t xTimeIncrement )
1258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 1021              		.loc 1 1258 2
 1022              		.cfi_startproc
 1023              		@ args = 0, pretend = 0, frame = 40
 1024              		@ frame_needed = 1, uses_anonymous_args = 0
 1025 0000 80B5     		push	{r7, lr}
 1026              	.LCFI25:
 1027              		.cfi_def_cfa_offset 8
 1028              		.cfi_offset 7, -8
 1029              		.cfi_offset 14, -4
 1030 0002 8AB0     		sub	sp, sp, #40
 1031              	.LCFI26:
 1032              		.cfi_def_cfa_offset 48
 1033 0004 00AF     		add	r7, sp, #0
 1034              	.LCFI27:
 1035              		.cfi_def_cfa_register 7
 1036 0006 7860     		str	r0, [r7, #4]
 1037 0008 3960     		str	r1, [r7]
1259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TickType_t xTimeToWake;
1260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded, xShouldDelay = pdFALSE;
 1038              		.loc 1 1260 30
 1039 000a 0023     		movs	r3, #0
 1040 000c 7B62     		str	r3, [r7, #36]
1261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxPreviousWakeTime );
 1041              		.loc 1 1262 3
 1042 000e 7B68     		ldr	r3, [r7, #4]
 1043 0010 002B     		cmp	r3, #0
 1044 0012 0AD1     		bne	.L52
 1045              	.LBB138:
 1046              	.LBB139:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1047              		.loc 2 195 2
 1048              		.syntax unified
 1049              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1050 0014 4FF05003 			mov r3, #80												
 1051 0018 83F31188 		msr basepri, r3											
 1052 001c BFF36F8F 		isb														
 1053 0020 BFF34F8F 		dsb														
 1054              	
 1055              	@ 0 "" 2
 1056              		.thumb
 1057              		.syntax unified
 1058 0024 7B61     		str	r3, [r7, #20]
 1059              		.loc 2 203 1
 1060 0026 00BF     		nop
 1061              	.L53:
 1062              	.LBE139:
 1063              	.LBE138:
 1064              		.loc 1 1262 3 discriminator 1
 1065 0028 FEE7     		b	.L53
 1066              	.L52:
1263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( xTimeIncrement > 0U ) );
 1067              		.loc 1 1263 3
 1068 002a 3B68     		ldr	r3, [r7]
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 45


 1069 002c 002B     		cmp	r3, #0
 1070 002e 0AD1     		bne	.L54
 1071              	.LBB140:
 1072              	.LBB141:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1073              		.loc 2 195 2
 1074              		.syntax unified
 1075              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1076 0030 4FF05003 			mov r3, #80												
 1077 0034 83F31188 		msr basepri, r3											
 1078 0038 BFF36F8F 		isb														
 1079 003c BFF34F8F 		dsb														
 1080              	
 1081              	@ 0 "" 2
 1082              		.thumb
 1083              		.syntax unified
 1084 0040 3B61     		str	r3, [r7, #16]
 1085              		.loc 2 203 1
 1086 0042 00BF     		nop
 1087              	.L55:
 1088              	.LBE141:
 1089              	.LBE140:
 1090              		.loc 1 1263 3 discriminator 2
 1091 0044 FEE7     		b	.L55
 1092              	.L54:
1264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( uxSchedulerSuspended == 0 );
 1093              		.loc 1 1264 3
 1094 0046 2A4B     		ldr	r3, .L64
 1095 0048 1B68     		ldr	r3, [r3]
 1096 004a 002B     		cmp	r3, #0
 1097 004c 0AD0     		beq	.L56
 1098              	.LBB142:
 1099              	.LBB143:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1100              		.loc 2 195 2
 1101              		.syntax unified
 1102              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1103 004e 4FF05003 			mov r3, #80												
 1104 0052 83F31188 		msr basepri, r3											
 1105 0056 BFF36F8F 		isb														
 1106 005a BFF34F8F 		dsb														
 1107              	
 1108              	@ 0 "" 2
 1109              		.thumb
 1110              		.syntax unified
 1111 005e FB60     		str	r3, [r7, #12]
 1112              		.loc 2 203 1
 1113 0060 00BF     		nop
 1114              	.L57:
 1115              	.LBE143:
 1116              	.LBE142:
 1117              		.loc 1 1264 3 discriminator 3
 1118 0062 FEE7     		b	.L57
 1119              	.L56:
1265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
 1120              		.loc 1 1266 3
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 46


 1121 0064 FFF7FEFF 		bl	vTaskSuspendAll
 1122              	.LBB144:
1267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Minor optimisation.  The tick count cannot change in this
1269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			block. */
1270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			const TickType_t xConstTickCount = xTickCount;
 1123              		.loc 1 1270 21
 1124 0068 224B     		ldr	r3, .L64+4
 1125 006a 1B68     		ldr	r3, [r3]
 1126 006c 3B62     		str	r3, [r7, #32]
1271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Generate the tick time at which the task wants to wake. */
1273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTimeToWake = *pxPreviousWakeTime + xTimeIncrement;
 1127              		.loc 1 1273 18
 1128 006e 7B68     		ldr	r3, [r7, #4]
 1129 0070 1B68     		ldr	r3, [r3]
 1130              		.loc 1 1273 16
 1131 0072 3A68     		ldr	r2, [r7]
 1132 0074 1344     		add	r3, r3, r2
 1133 0076 FB61     		str	r3, [r7, #28]
1274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xConstTickCount < *pxPreviousWakeTime )
 1134              		.loc 1 1275 26
 1135 0078 7B68     		ldr	r3, [r7, #4]
 1136 007a 1B68     		ldr	r3, [r3]
 1137              		.loc 1 1275 6
 1138 007c 3A6A     		ldr	r2, [r7, #32]
 1139 007e 9A42     		cmp	r2, r3
 1140 0080 0BD2     		bcs	.L58
1276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The tick count has overflowed since this function was
1278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				lasted called.  In this case the only time we should ever
1279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				actually delay is if the wake time has also	overflowed,
1280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				and the wake time is greater than the tick time.  When this
1281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				is the case it is as if neither time had overflowed. */
1282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) && ( xTimeToWake > xConstTickCount ) )
 1141              		.loc 1 1282 25
 1142 0082 7B68     		ldr	r3, [r7, #4]
 1143 0084 1B68     		ldr	r3, [r3]
 1144              		.loc 1 1282 7
 1145 0086 FA69     		ldr	r2, [r7, #28]
 1146 0088 9A42     		cmp	r2, r3
 1147 008a 11D2     		bcs	.L59
 1148              		.loc 1 1282 47 discriminator 1
 1149 008c FA69     		ldr	r2, [r7, #28]
 1150 008e 3B6A     		ldr	r3, [r7, #32]
 1151 0090 9A42     		cmp	r2, r3
 1152 0092 0DD9     		bls	.L59
1283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xShouldDelay = pdTRUE;
 1153              		.loc 1 1284 19
 1154 0094 0123     		movs	r3, #1
 1155 0096 7B62     		str	r3, [r7, #36]
 1156 0098 0AE0     		b	.L59
 1157              	.L58:
1285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 47


1287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The tick time has not overflowed.  In this case we will
1294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				delay if either the wake time has overflowed, and/or the
1295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				tick time is less than the wake time. */
1296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) || ( xTimeToWake > xConstTickCount ) )
 1158              		.loc 1 1296 25
 1159 009a 7B68     		ldr	r3, [r7, #4]
 1160 009c 1B68     		ldr	r3, [r3]
 1161              		.loc 1 1296 7
 1162 009e FA69     		ldr	r2, [r7, #28]
 1163 00a0 9A42     		cmp	r2, r3
 1164 00a2 03D3     		bcc	.L60
 1165              		.loc 1 1296 47 discriminator 1
 1166 00a4 FA69     		ldr	r2, [r7, #28]
 1167 00a6 3B6A     		ldr	r3, [r7, #32]
 1168 00a8 9A42     		cmp	r2, r3
 1169 00aa 01D9     		bls	.L59
 1170              	.L60:
1297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xShouldDelay = pdTRUE;
 1171              		.loc 1 1298 19
 1172 00ac 0123     		movs	r3, #1
 1173 00ae 7B62     		str	r3, [r7, #36]
 1174              	.L59:
1299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Update the wake time ready for the next call. */
1307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			*pxPreviousWakeTime = xTimeToWake;
 1175              		.loc 1 1307 24
 1176 00b0 7B68     		ldr	r3, [r7, #4]
 1177 00b2 FA69     		ldr	r2, [r7, #28]
 1178 00b4 1A60     		str	r2, [r3]
1308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xShouldDelay != pdFALSE )
 1179              		.loc 1 1309 6
 1180 00b6 7B6A     		ldr	r3, [r7, #36]
 1181 00b8 002B     		cmp	r3, #0
 1182 00ba 06D0     		beq	.L61
1310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_DELAY_UNTIL( xTimeToWake );
1312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* prvAddCurrentTaskToDelayedList() needs the block time, not
1314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the time to wake, so subtract the current tick count. */
1315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddCurrentTaskToDelayedList( xTimeToWake - xConstTickCount, pdFALSE );
 1183              		.loc 1 1315 5
 1184 00bc FA69     		ldr	r2, [r7, #28]
 1185 00be 3B6A     		ldr	r3, [r7, #32]
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 48


 1186 00c0 D31A     		subs	r3, r2, r3
 1187 00c2 0021     		movs	r1, #0
 1188 00c4 1846     		mov	r0, r3
 1189 00c6 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 1190              	.L61:
 1191              	.LBE144:
1316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xAlreadyYielded = xTaskResumeAll();
 1192              		.loc 1 1322 21
 1193 00ca FFF7FEFF 		bl	xTaskResumeAll
 1194 00ce B861     		str	r0, [r7, #24]
1323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Force a reschedule if xTaskResumeAll has not already done so, we may
1325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		have put ourselves to sleep. */
1326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xAlreadyYielded == pdFALSE )
 1195              		.loc 1 1326 5
 1196 00d0 BB69     		ldr	r3, [r7, #24]
 1197 00d2 002B     		cmp	r3, #0
 1198 00d4 07D1     		bne	.L63
1327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portYIELD_WITHIN_API();
 1199              		.loc 1 1328 4
 1200 00d6 084B     		ldr	r3, .L64+8
 1201 00d8 4FF08052 		mov	r2, #268435456
 1202 00dc 1A60     		str	r2, [r3]
 1203              		.syntax unified
 1204              	@ 1328 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1205 00de BFF34F8F 		dsb
 1206              	@ 0 "" 2
 1207              	@ 1328 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1208 00e2 BFF36F8F 		isb
 1209              	@ 0 "" 2
 1210              		.thumb
 1211              		.syntax unified
 1212              	.L63:
1329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1213              		.loc 1 1334 2
 1214 00e6 00BF     		nop
 1215 00e8 2837     		adds	r7, r7, #40
 1216              	.LCFI28:
 1217              		.cfi_def_cfa_offset 8
 1218 00ea BD46     		mov	sp, r7
 1219              	.LCFI29:
 1220              		.cfi_def_cfa_register 13
 1221              		@ sp needed
 1222 00ec 80BD     		pop	{r7, pc}
 1223              	.L65:
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 49


 1224 00ee 00BF     		.align	2
 1225              	.L64:
 1226 00f0 00000000 		.word	uxSchedulerSuspended
 1227 00f4 00000000 		.word	xTickCount
 1228 00f8 04ED00E0 		.word	-536810236
 1229              		.cfi_endproc
 1230              	.LFE9:
 1232              		.section	.text.vTaskDelay,"ax",%progbits
 1233              		.align	1
 1234              		.global	vTaskDelay
 1235              		.syntax unified
 1236              		.thumb
 1237              		.thumb_func
 1239              	vTaskDelay:
 1240              	.LFB10:
1335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelayUntil */
1337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelay == 1 )
1340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskDelay( const TickType_t xTicksToDelay )
1342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 1241              		.loc 1 1342 2
 1242              		.cfi_startproc
 1243              		@ args = 0, pretend = 0, frame = 16
 1244              		@ frame_needed = 1, uses_anonymous_args = 0
 1245 0000 80B5     		push	{r7, lr}
 1246              	.LCFI30:
 1247              		.cfi_def_cfa_offset 8
 1248              		.cfi_offset 7, -8
 1249              		.cfi_offset 14, -4
 1250 0002 84B0     		sub	sp, sp, #16
 1251              	.LCFI31:
 1252              		.cfi_def_cfa_offset 24
 1253 0004 00AF     		add	r7, sp, #0
 1254              	.LCFI32:
 1255              		.cfi_def_cfa_register 7
 1256 0006 7860     		str	r0, [r7, #4]
1343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
 1257              		.loc 1 1343 13
 1258 0008 0023     		movs	r3, #0
 1259 000a FB60     		str	r3, [r7, #12]
1344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* A delay time of zero just forces a reschedule. */
1346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTicksToDelay > ( TickType_t ) 0U )
 1260              		.loc 1 1346 5
 1261 000c 7B68     		ldr	r3, [r7, #4]
 1262 000e 002B     		cmp	r3, #0
 1263 0010 17D0     		beq	.L67
1347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( uxSchedulerSuspended == 0 );
 1264              		.loc 1 1348 4
 1265 0012 134B     		ldr	r3, .L72
 1266 0014 1B68     		ldr	r3, [r3]
 1267 0016 002B     		cmp	r3, #0
 1268 0018 0AD0     		beq	.L68
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 50


 1269              	.LBB145:
 1270              	.LBB146:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1271              		.loc 2 195 2
 1272              		.syntax unified
 1273              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1274 001a 4FF05003 			mov r3, #80												
 1275 001e 83F31188 		msr basepri, r3											
 1276 0022 BFF36F8F 		isb														
 1277 0026 BFF34F8F 		dsb														
 1278              	
 1279              	@ 0 "" 2
 1280              		.thumb
 1281              		.syntax unified
 1282 002a BB60     		str	r3, [r7, #8]
 1283              		.loc 2 203 1
 1284 002c 00BF     		nop
 1285              	.L69:
 1286              	.LBE146:
 1287              	.LBE145:
 1288              		.loc 1 1348 4 discriminator 1
 1289 002e FEE7     		b	.L69
 1290              	.L68:
1349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 1291              		.loc 1 1349 4
 1292 0030 FFF7FEFF 		bl	vTaskSuspendAll
1350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_DELAY();
1352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A task that is removed from the event list while the
1354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				scheduler is suspended will not get placed in the ready
1355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				list or removed from the blocked list until the scheduler
1356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				is resumed.
1357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				This task cannot be in an event list as it is the currently
1359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				executing task. */
1360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 1293              		.loc 1 1360 5
 1294 0034 0021     		movs	r1, #0
 1295 0036 7868     		ldr	r0, [r7, #4]
 1296 0038 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
1361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xAlreadyYielded = xTaskResumeAll();
 1297              		.loc 1 1362 22
 1298 003c FFF7FEFF 		bl	xTaskResumeAll
 1299 0040 F860     		str	r0, [r7, #12]
 1300              	.L67:
1363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Force a reschedule if xTaskResumeAll has not already done so, we may
1370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		have put ourselves to sleep. */
1371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xAlreadyYielded == pdFALSE )
 1301              		.loc 1 1371 5
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 51


 1302 0042 FB68     		ldr	r3, [r7, #12]
 1303 0044 002B     		cmp	r3, #0
 1304 0046 07D1     		bne	.L71
1372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portYIELD_WITHIN_API();
 1305              		.loc 1 1373 4
 1306 0048 064B     		ldr	r3, .L72+4
 1307 004a 4FF08052 		mov	r2, #268435456
 1308 004e 1A60     		str	r2, [r3]
 1309              		.syntax unified
 1310              	@ 1373 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1311 0050 BFF34F8F 		dsb
 1312              	@ 0 "" 2
 1313              	@ 1373 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1314 0054 BFF36F8F 		isb
 1315              	@ 0 "" 2
 1316              		.thumb
 1317              		.syntax unified
 1318              	.L71:
1374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1319              		.loc 1 1379 2
 1320 0058 00BF     		nop
 1321 005a 1037     		adds	r7, r7, #16
 1322              	.LCFI33:
 1323              		.cfi_def_cfa_offset 8
 1324 005c BD46     		mov	sp, r7
 1325              	.LCFI34:
 1326              		.cfi_def_cfa_register 13
 1327              		@ sp needed
 1328 005e 80BD     		pop	{r7, pc}
 1329              	.L73:
 1330              		.align	2
 1331              	.L72:
 1332 0060 00000000 		.word	uxSchedulerSuspended
 1333 0064 04ED00E0 		.word	-536810236
 1334              		.cfi_endproc
 1335              	.LFE10:
 1337              		.section	.text.eTaskGetState,"ax",%progbits
 1338              		.align	1
 1339              		.global	eTaskGetState
 1340              		.syntax unified
 1341              		.thumb
 1342              		.thumb_func
 1344              	eTaskGetState:
 1345              	.LFB11:
1380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelay */
1382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( ( INCLUDE_eTaskGetState == 1 ) || ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_xTaskAbortDel
1385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eTaskState eTaskGetState( TaskHandle_t xTask )
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 52


1387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 1346              		.loc 1 1387 2
 1347              		.cfi_startproc
 1348              		@ args = 0, pretend = 0, frame = 32
 1349              		@ frame_needed = 1, uses_anonymous_args = 0
 1350 0000 80B5     		push	{r7, lr}
 1351              	.LCFI35:
 1352              		.cfi_def_cfa_offset 8
 1353              		.cfi_offset 7, -8
 1354              		.cfi_offset 14, -4
 1355 0002 88B0     		sub	sp, sp, #32
 1356              	.LCFI36:
 1357              		.cfi_def_cfa_offset 40
 1358 0004 00AF     		add	r7, sp, #0
 1359              	.LCFI37:
 1360              		.cfi_def_cfa_register 7
 1361 0006 7860     		str	r0, [r7, #4]
1388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eTaskState eReturn;
1389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	List_t const * pxStateList, *pxDelayedList, *pxOverflowedDelayedList;
1390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = xTask;
 1362              		.loc 1 1390 22
 1363 0008 7B68     		ldr	r3, [r7, #4]
 1364 000a BB61     		str	r3, [r7, #24]
1391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTCB );
 1365              		.loc 1 1392 3
 1366 000c BB69     		ldr	r3, [r7, #24]
 1367 000e 002B     		cmp	r3, #0
 1368 0010 0AD1     		bne	.L75
 1369              	.LBB147:
 1370              	.LBB148:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1371              		.loc 2 195 2
 1372              		.syntax unified
 1373              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1374 0012 4FF05003 			mov r3, #80												
 1375 0016 83F31188 		msr basepri, r3											
 1376 001a BFF36F8F 		isb														
 1377 001e BFF34F8F 		dsb														
 1378              	
 1379              	@ 0 "" 2
 1380              		.thumb
 1381              		.syntax unified
 1382 0022 BB60     		str	r3, [r7, #8]
 1383              		.loc 2 203 1
 1384 0024 00BF     		nop
 1385              	.L76:
 1386              	.LBE148:
 1387              	.LBE147:
 1388              		.loc 1 1392 3 discriminator 1
 1389 0026 FEE7     		b	.L76
 1390              	.L75:
1393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTCB == pxCurrentTCB )
 1391              		.loc 1 1394 13
 1392 0028 234B     		ldr	r3, .L87
 1393 002a 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 53


 1394              		.loc 1 1394 5
 1395 002c BA69     		ldr	r2, [r7, #24]
 1396 002e 9A42     		cmp	r2, r3
 1397 0030 02D1     		bne	.L77
1395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The task calling this function is querying its own state. */
1397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			eReturn = eRunning;
 1398              		.loc 1 1397 12
 1399 0032 0023     		movs	r3, #0
 1400 0034 FB77     		strb	r3, [r7, #31]
 1401 0036 3AE0     		b	.L78
 1402              	.L77:
1398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
 1403              		.loc 1 1401 4
 1404 0038 FFF7FEFF 		bl	vPortEnterCritical
1402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxStateList = listLIST_ITEM_CONTAINER( &( pxTCB->xStateListItem ) );
 1405              		.loc 1 1403 17
 1406 003c BB69     		ldr	r3, [r7, #24]
 1407 003e 5B69     		ldr	r3, [r3, #20]
 1408 0040 7B61     		str	r3, [r7, #20]
1404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxDelayedList = pxDelayedTaskList;
 1409              		.loc 1 1404 19
 1410 0042 1E4B     		ldr	r3, .L87+4
 1411 0044 1B68     		ldr	r3, [r3]
 1412 0046 3B61     		str	r3, [r7, #16]
1405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxOverflowedDelayedList = pxOverflowDelayedTaskList;
 1413              		.loc 1 1405 29
 1414 0048 1D4B     		ldr	r3, .L87+8
 1415 004a 1B68     		ldr	r3, [r3]
 1416 004c FB60     		str	r3, [r7, #12]
1406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
 1417              		.loc 1 1407 4
 1418 004e FFF7FEFF 		bl	vPortExitCritical
1408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ( pxStateList == pxDelayedList ) || ( pxStateList == pxOverflowedDelayedList ) )
 1419              		.loc 1 1409 6
 1420 0052 7A69     		ldr	r2, [r7, #20]
 1421 0054 3B69     		ldr	r3, [r7, #16]
 1422 0056 9A42     		cmp	r2, r3
 1423 0058 03D0     		beq	.L79
 1424              		.loc 1 1409 41 discriminator 1
 1425 005a 7A69     		ldr	r2, [r7, #20]
 1426 005c FB68     		ldr	r3, [r7, #12]
 1427 005e 9A42     		cmp	r2, r3
 1428 0060 02D1     		bne	.L80
 1429              	.L79:
1410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task being queried is referenced from one of the Blocked
1412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				lists. */
1413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				eReturn = eBlocked;
 1430              		.loc 1 1413 13
 1431 0062 0223     		movs	r3, #2
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 54


 1432 0064 FB77     		strb	r3, [r7, #31]
 1433 0066 22E0     		b	.L78
 1434              	.L80:
1414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( INCLUDE_vTaskSuspend == 1 )
1417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else if( pxStateList == &xSuspendedTaskList )
 1435              		.loc 1 1417 12
 1436 0068 7B69     		ldr	r3, [r7, #20]
 1437 006a 164A     		ldr	r2, .L87+12
 1438 006c 9342     		cmp	r3, r2
 1439 006e 12D1     		bne	.L81
1418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task being queried is referenced from the suspended
1420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					list.  Is it genuinely suspended or is it blocked
1421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					indefinitely? */
1422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL )
 1440              		.loc 1 1422 10
 1441 0070 BB69     		ldr	r3, [r7, #24]
 1442 0072 9B6A     		ldr	r3, [r3, #40]
 1443              		.loc 1 1422 8
 1444 0074 002B     		cmp	r3, #0
 1445 0076 0BD1     		bne	.L82
1423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#if( configUSE_TASK_NOTIFICATIONS == 1 )
1425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
1426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							/* The task does not appear on the event list item of
1427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							and of the RTOS objects, but could still be in the
1428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							blocked state if it is waiting on its notification
1429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							rather than waiting on an object. */
1430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							if( pxTCB->ucNotifyState == taskWAITING_NOTIFICATION )
 1446              		.loc 1 1430 17
 1447 0078 BB69     		ldr	r3, [r7, #24]
 1448 007a 93F86030 		ldrb	r3, [r3, #96]
 1449 007e DBB2     		uxtb	r3, r3
 1450              		.loc 1 1430 10
 1451 0080 012B     		cmp	r3, #1
 1452 0082 02D1     		bne	.L83
1431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
1432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								eReturn = eBlocked;
 1453              		.loc 1 1432 17
 1454 0084 0223     		movs	r3, #2
 1455 0086 FB77     		strb	r3, [r7, #31]
 1456 0088 11E0     		b	.L78
 1457              	.L83:
1433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
1434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							else
1435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
1436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								eReturn = eSuspended;
 1458              		.loc 1 1436 17
 1459 008a 0323     		movs	r3, #3
 1460 008c FB77     		strb	r3, [r7, #31]
 1461 008e 0EE0     		b	.L78
 1462              	.L82:
1437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
1438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
1439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#else
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 55


1440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
1441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							eReturn = eSuspended;
1442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
1443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#endif
1444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						eReturn = eBlocked;
 1463              		.loc 1 1447 15
 1464 0090 0223     		movs	r3, #2
 1465 0092 FB77     		strb	r3, [r7, #31]
 1466 0094 0BE0     		b	.L78
 1467              	.L81:
1448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
1451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( INCLUDE_vTaskDelete == 1 )
1453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else if( ( pxStateList == &xTasksWaitingTermination ) || ( pxStateList == NULL ) )
 1468              		.loc 1 1453 12
 1469 0096 7B69     		ldr	r3, [r7, #20]
 1470 0098 0B4A     		ldr	r2, .L87+16
 1471 009a 9342     		cmp	r3, r2
 1472 009c 02D0     		beq	.L84
 1473              		.loc 1 1453 59 discriminator 1
 1474 009e 7B69     		ldr	r3, [r7, #20]
 1475 00a0 002B     		cmp	r3, #0
 1476 00a2 02D1     		bne	.L85
 1477              	.L84:
1454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task being queried is referenced from the deleted
1456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					tasks list, or it is not referenced from any lists at
1457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					all. */
1458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					eReturn = eDeleted;
 1478              		.loc 1 1458 14
 1479 00a4 0423     		movs	r3, #4
 1480 00a6 FB77     		strb	r3, [r7, #31]
 1481 00a8 01E0     		b	.L78
 1482              	.L85:
1459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
1461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else /*lint !e525 Negative indentation is intended to make use of pre-processor clearer. */
1463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the task is not in any other state, it must be in the
1465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				Ready (including pending ready) state. */
1466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				eReturn = eReady;
 1483              		.loc 1 1466 13
 1484 00aa 0123     		movs	r3, #1
 1485 00ac FB77     		strb	r3, [r7, #31]
 1486              	.L78:
1467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return eReturn;
 1487              		.loc 1 1470 10
 1488 00ae FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 56


1471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
 1489              		.loc 1 1471 2
 1490 00b0 1846     		mov	r0, r3
 1491 00b2 2037     		adds	r7, r7, #32
 1492              	.LCFI38:
 1493              		.cfi_def_cfa_offset 8
 1494 00b4 BD46     		mov	sp, r7
 1495              	.LCFI39:
 1496              		.cfi_def_cfa_register 13
 1497              		@ sp needed
 1498 00b6 80BD     		pop	{r7, pc}
 1499              	.L88:
 1500              		.align	2
 1501              	.L87:
 1502 00b8 00000000 		.word	pxCurrentTCB
 1503 00bc 00000000 		.word	pxDelayedTaskList
 1504 00c0 00000000 		.word	pxOverflowDelayedTaskList
 1505 00c4 00000000 		.word	xSuspendedTaskList
 1506 00c8 00000000 		.word	xTasksWaitingTermination
 1507              		.cfi_endproc
 1508              	.LFE11:
 1510              		.section	.text.uxTaskPriorityGet,"ax",%progbits
 1511              		.align	1
 1512              		.global	uxTaskPriorityGet
 1513              		.syntax unified
 1514              		.thumb
 1515              		.thumb_func
 1517              	uxTaskPriorityGet:
 1518              	.LFB12:
1472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_eTaskGetState */
1474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskPriorityGet( const TaskHandle_t xTask )
1479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 1519              		.loc 1 1479 2
 1520              		.cfi_startproc
 1521              		@ args = 0, pretend = 0, frame = 16
 1522              		@ frame_needed = 1, uses_anonymous_args = 0
 1523 0000 80B5     		push	{r7, lr}
 1524              	.LCFI40:
 1525              		.cfi_def_cfa_offset 8
 1526              		.cfi_offset 7, -8
 1527              		.cfi_offset 14, -4
 1528 0002 84B0     		sub	sp, sp, #16
 1529              	.LCFI41:
 1530              		.cfi_def_cfa_offset 24
 1531 0004 00AF     		add	r7, sp, #0
 1532              	.LCFI42:
 1533              		.cfi_def_cfa_register 7
 1534 0006 7860     		str	r0, [r7, #4]
1480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t const *pxTCB;
1481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
1482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 57


 1535              		.loc 1 1483 3
 1536 0008 FFF7FEFF 		bl	vPortEnterCritical
1484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the priority of the task
1486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			that called uxTaskPriorityGet() that is being queried. */
1487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
 1537              		.loc 1 1487 12
 1538 000c 7B68     		ldr	r3, [r7, #4]
 1539 000e 002B     		cmp	r3, #0
 1540 0010 02D1     		bne	.L90
 1541              		.loc 1 1487 12 is_stmt 0 discriminator 1
 1542 0012 074B     		ldr	r3, .L93
 1543 0014 1B68     		ldr	r3, [r3]
 1544 0016 00E0     		b	.L91
 1545              	.L90:
 1546              		.loc 1 1487 12 discriminator 2
 1547 0018 7B68     		ldr	r3, [r7, #4]
 1548              	.L91:
 1549              		.loc 1 1487 10 is_stmt 1 discriminator 4
 1550 001a FB60     		str	r3, [r7, #12]
1488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1551              		.loc 1 1488 13 discriminator 4
 1552 001c FB68     		ldr	r3, [r7, #12]
 1553 001e DB6A     		ldr	r3, [r3, #44]
 1554 0020 BB60     		str	r3, [r7, #8]
1489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
 1555              		.loc 1 1490 3 discriminator 4
 1556 0022 FFF7FEFF 		bl	vPortExitCritical
1491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
 1557              		.loc 1 1492 10 discriminator 4
 1558 0026 BB68     		ldr	r3, [r7, #8]
1493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1559              		.loc 1 1493 2 discriminator 4
 1560 0028 1846     		mov	r0, r3
 1561 002a 1037     		adds	r7, r7, #16
 1562              	.LCFI43:
 1563              		.cfi_def_cfa_offset 8
 1564 002c BD46     		mov	sp, r7
 1565              	.LCFI44:
 1566              		.cfi_def_cfa_register 13
 1567              		@ sp needed
 1568 002e 80BD     		pop	{r7, pc}
 1569              	.L94:
 1570              		.align	2
 1571              	.L93:
 1572 0030 00000000 		.word	pxCurrentTCB
 1573              		.cfi_endproc
 1574              	.LFE12:
 1576              		.section	.text.uxTaskPriorityGetFromISR,"ax",%progbits
 1577              		.align	1
 1578              		.global	uxTaskPriorityGetFromISR
 1579              		.syntax unified
 1580              		.thumb
 1581              		.thumb_func
 1583              	uxTaskPriorityGetFromISR:
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 58


 1584              	.LFB13:
1494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskPriorityGetFromISR( const TaskHandle_t xTask )
1501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 1585              		.loc 1 1501 2
 1586              		.cfi_startproc
 1587              		@ args = 0, pretend = 0, frame = 32
 1588              		@ frame_needed = 1, uses_anonymous_args = 0
 1589 0000 80B5     		push	{r7, lr}
 1590              	.LCFI45:
 1591              		.cfi_def_cfa_offset 8
 1592              		.cfi_offset 7, -8
 1593              		.cfi_offset 14, -4
 1594 0002 88B0     		sub	sp, sp, #32
 1595              	.LCFI46:
 1596              		.cfi_def_cfa_offset 40
 1597 0004 00AF     		add	r7, sp, #0
 1598              	.LCFI47:
 1599              		.cfi_def_cfa_register 7
 1600 0006 7860     		str	r0, [r7, #4]
1502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t const *pxTCB;
1503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn, uxSavedInterruptState;
1504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
1506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
1507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
1508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
1509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
1511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
1513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
1514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
1515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
1516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
1517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
1518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
1519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
1520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		https://www.freertos.org/RTOS-Cortex-M3-M4.html */
1521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 1601              		.loc 1 1521 3
 1602 0008 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1603              	.LBB149:
 1604              	.LBB150:
 204:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 205:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 206:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 207:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 208:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 209:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 210:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 59


 1605              		.loc 2 211 2
 1606              		.syntax unified
 1607              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1608 000c EFF31182 			mrs r2, basepri											
 1609 0010 4FF05003 		mov r3, #80												
 1610 0014 83F31188 		msr basepri, r3											
 1611 0018 BFF36F8F 		isb														
 1612 001c BFF34F8F 		dsb														
 1613              	
 1614              	@ 0 "" 2
 1615              		.thumb
 1616              		.syntax unified
 1617 0020 3A61     		str	r2, [r7, #16]
 1618 0022 FB60     		str	r3, [r7, #12]
 212:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 213:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mrs %0, basepri											\n" \
 214:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mov %1, %2												\n"	\
 215:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	msr basepri, %1											\n" \
 216:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	isb														\n" \
 217:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	dsb														\n" \
 218:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		:"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "
 219:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	);
 220:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 221:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* This return will not be reached but is necessary to prevent compiler
 222:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	warnings. */
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	return ulOriginalBASEPRI;
 1619              		.loc 2 223 9
 1620 0024 3B69     		ldr	r3, [r7, #16]
 1621              	.LBE150:
 1622              	.LBE149:
1522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptState = portSET_INTERRUPT_MASK_FROM_ISR();
 1623              		.loc 1 1523 27
 1624 0026 FB61     		str	r3, [r7, #28]
1524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the priority of the calling
1526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task that is being queried. */
1527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
 1625              		.loc 1 1527 12
 1626 0028 7B68     		ldr	r3, [r7, #4]
 1627 002a 002B     		cmp	r3, #0
 1628 002c 02D1     		bne	.L97
 1629              		.loc 1 1527 12 is_stmt 0 discriminator 1
 1630 002e 094B     		ldr	r3, .L100
 1631 0030 1B68     		ldr	r3, [r3]
 1632 0032 00E0     		b	.L98
 1633              	.L97:
 1634              		.loc 1 1527 12 discriminator 2
 1635 0034 7B68     		ldr	r3, [r7, #4]
 1636              	.L98:
 1637              		.loc 1 1527 10 is_stmt 1 discriminator 4
 1638 0036 BB61     		str	r3, [r7, #24]
1528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1639              		.loc 1 1528 13 discriminator 4
 1640 0038 BB69     		ldr	r3, [r7, #24]
 1641 003a DB6A     		ldr	r3, [r3, #44]
 1642 003c 7B61     		str	r3, [r7, #20]
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 60


 1643 003e FB69     		ldr	r3, [r7, #28]
 1644 0040 BB60     		str	r3, [r7, #8]
 1645              	.LBB151:
 1646              	.LBB152:
 224:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 225:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 226:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 227:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 228:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 229:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 1647              		.loc 2 229 2 discriminator 4
 1648 0042 BB68     		ldr	r3, [r7, #8]
 1649              		.syntax unified
 1650              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1651 0044 83F31188 			msr basepri, r3	
 1652              	@ 0 "" 2
 230:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 231:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	msr basepri, %0	" :: "r" ( ulNewMaskValue ) : "memory"
 232:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	);
 233:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 1653              		.loc 2 233 1 discriminator 4
 1654              		.thumb
 1655              		.syntax unified
 1656 0048 00BF     		nop
 1657              	.LBE152:
 1658              	.LBE151:
1529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptState );
1531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
 1659              		.loc 1 1532 10 discriminator 4
 1660 004a 7B69     		ldr	r3, [r7, #20]
1533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1661              		.loc 1 1533 2 discriminator 4
 1662 004c 1846     		mov	r0, r3
 1663 004e 2037     		adds	r7, r7, #32
 1664              	.LCFI48:
 1665              		.cfi_def_cfa_offset 8
 1666 0050 BD46     		mov	sp, r7
 1667              	.LCFI49:
 1668              		.cfi_def_cfa_register 13
 1669              		@ sp needed
 1670 0052 80BD     		pop	{r7, pc}
 1671              	.L101:
 1672              		.align	2
 1673              	.L100:
 1674 0054 00000000 		.word	pxCurrentTCB
 1675              		.cfi_endproc
 1676              	.LFE13:
 1678              		.section	.text.vTaskPrioritySet,"ax",%progbits
 1679              		.align	1
 1680              		.global	vTaskPrioritySet
 1681              		.syntax unified
 1682              		.thumb
 1683              		.thumb_func
 1685              	vTaskPrioritySet:
 1686              	.LFB14:
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 61


1534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskPrioritySet == 1 )
1539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskPrioritySet( TaskHandle_t xTask, UBaseType_t uxNewPriority )
1541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 1687              		.loc 1 1541 2
 1688              		.cfi_startproc
 1689              		@ args = 0, pretend = 0, frame = 32
 1690              		@ frame_needed = 1, uses_anonymous_args = 0
 1691 0000 80B5     		push	{r7, lr}
 1692              	.LCFI50:
 1693              		.cfi_def_cfa_offset 8
 1694              		.cfi_offset 7, -8
 1695              		.cfi_offset 14, -4
 1696 0002 88B0     		sub	sp, sp, #32
 1697              	.LCFI51:
 1698              		.cfi_def_cfa_offset 40
 1699 0004 00AF     		add	r7, sp, #0
 1700              	.LCFI52:
 1701              		.cfi_def_cfa_register 7
 1702 0006 7860     		str	r0, [r7, #4]
 1703 0008 3960     		str	r1, [r7]
1542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxCurrentBasePriority, uxPriorityUsedOnEntry;
1544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
 1704              		.loc 1 1544 13
 1705 000a 0023     		movs	r3, #0
 1706 000c FB61     		str	r3, [r7, #28]
1545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( uxNewPriority < configMAX_PRIORITIES ) );
 1707              		.loc 1 1546 3
 1708 000e 3B68     		ldr	r3, [r7]
 1709 0010 372B     		cmp	r3, #55
 1710 0012 0AD9     		bls	.L103
 1711              	.LBB153:
 1712              	.LBB154:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1713              		.loc 2 195 2
 1714              		.syntax unified
 1715              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1716 0014 4FF05003 			mov r3, #80												
 1717 0018 83F31188 		msr basepri, r3											
 1718 001c BFF36F8F 		isb														
 1719 0020 BFF34F8F 		dsb														
 1720              	
 1721              	@ 0 "" 2
 1722              		.thumb
 1723              		.syntax unified
 1724 0024 FB60     		str	r3, [r7, #12]
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1725              		.loc 2 203 1
 1726 0026 00BF     		nop
 1727              	.L104:
 1728              	.LBE154:
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 62


 1729              	.LBE153:
 1730              		.loc 1 1546 3 discriminator 1
 1731 0028 FEE7     		b	.L104
 1732              	.L103:
1547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Ensure the new priority is valid. */
1549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( uxNewPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 1733              		.loc 1 1549 5
 1734 002a 3B68     		ldr	r3, [r7]
 1735 002c 372B     		cmp	r3, #55
 1736 002e 01D9     		bls	.L105
1550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxNewPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
 1737              		.loc 1 1551 18
 1738 0030 3723     		movs	r3, #55
 1739 0032 3B60     		str	r3, [r7]
 1740              	.L105:
1552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
 1741              		.loc 1 1558 3
 1742 0034 FFF7FEFF 		bl	vPortEnterCritical
1559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the priority of the calling
1561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task that is being changed. */
1562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
 1743              		.loc 1 1562 12
 1744 0038 7B68     		ldr	r3, [r7, #4]
 1745 003a 002B     		cmp	r3, #0
 1746 003c 02D1     		bne	.L106
 1747              		.loc 1 1562 12 is_stmt 0 discriminator 1
 1748 003e 3B4B     		ldr	r3, .L115
 1749 0040 1B68     		ldr	r3, [r3]
 1750 0042 00E0     		b	.L107
 1751              	.L106:
 1752              		.loc 1 1562 12 discriminator 2
 1753 0044 7B68     		ldr	r3, [r7, #4]
 1754              	.L107:
 1755              		.loc 1 1562 10 is_stmt 1 discriminator 4
 1756 0046 BB61     		str	r3, [r7, #24]
1563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_PRIORITY_SET( pxTCB, uxNewPriority );
1565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( configUSE_MUTEXES == 1 )
1567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxCurrentBasePriority = pxTCB->uxBasePriority;
 1757              		.loc 1 1568 27 discriminator 4
 1758 0048 BB69     		ldr	r3, [r7, #24]
 1759 004a 1B6D     		ldr	r3, [r3, #80]
 1760 004c 7B61     		str	r3, [r7, #20]
1569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#else
1571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 63


1572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxCurrentBasePriority = pxTCB->uxPriority;
1573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
1575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxCurrentBasePriority != uxNewPriority )
 1761              		.loc 1 1576 6 discriminator 4
 1762 004e 7A69     		ldr	r2, [r7, #20]
 1763 0050 3B68     		ldr	r3, [r7]
 1764 0052 9A42     		cmp	r2, r3
 1765 0054 63D0     		beq	.L108
1577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The priority change may have readied a task of higher
1579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				priority than the calling task. */
1580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxNewPriority > uxCurrentBasePriority )
 1766              		.loc 1 1580 7
 1767 0056 3A68     		ldr	r2, [r7]
 1768 0058 7B69     		ldr	r3, [r7, #20]
 1769 005a 9A42     		cmp	r2, r3
 1770 005c 0DD9     		bls	.L109
1581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB != pxCurrentTCB )
 1771              		.loc 1 1582 16
 1772 005e 334B     		ldr	r3, .L115
 1773 0060 1B68     		ldr	r3, [r3]
 1774              		.loc 1 1582 8
 1775 0062 BA69     		ldr	r2, [r7, #24]
 1776 0064 9A42     		cmp	r2, r3
 1777 0066 0FD0     		beq	.L110
1583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The priority of a task other than the currently
1585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						running task is being raised.  Is the priority being
1586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						raised above that of the running task? */
1587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						if( uxNewPriority >= pxCurrentTCB->uxPriority )
 1778              		.loc 1 1587 40
 1779 0068 304B     		ldr	r3, .L115
 1780 006a 1B68     		ldr	r3, [r3]
 1781 006c DB6A     		ldr	r3, [r3, #44]
 1782              		.loc 1 1587 9
 1783 006e 3A68     		ldr	r2, [r7]
 1784 0070 9A42     		cmp	r2, r3
 1785 0072 09D3     		bcc	.L110
1588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
1589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							xYieldRequired = pdTRUE;
 1786              		.loc 1 1589 23
 1787 0074 0123     		movs	r3, #1
 1788 0076 FB61     		str	r3, [r7, #28]
 1789 0078 06E0     		b	.L110
 1790              	.L109:
1590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
1591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						else
1592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
1593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
1594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
1595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The priority of the running task is being raised,
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 64


1599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						but the running task must already be the highest
1600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						priority task able to run so no yield is required. */
1601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else if( pxTCB == pxCurrentTCB )
 1791              		.loc 1 1603 20
 1792 007a 2C4B     		ldr	r3, .L115
 1793 007c 1B68     		ldr	r3, [r3]
 1794              		.loc 1 1603 12
 1795 007e BA69     		ldr	r2, [r7, #24]
 1796 0080 9A42     		cmp	r2, r3
 1797 0082 01D1     		bne	.L110
1604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Setting the priority of the running task down means
1606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					there may now be another task of higher priority that
1607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					is ready to execute. */
1608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xYieldRequired = pdTRUE;
 1798              		.loc 1 1608 21
 1799 0084 0123     		movs	r3, #1
 1800 0086 FB61     		str	r3, [r7, #28]
 1801              	.L110:
1609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Setting the priority of any other task down does not
1613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					require a yield as the running task must be above the
1614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					new priority of the task being modified. */
1615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Remember the ready list the task might be referenced from
1618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				before its uxPriority member is changed so the
1619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskRESET_READY_PRIORITY() macro can function correctly. */
1620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxPriorityUsedOnEntry = pxTCB->uxPriority;
 1802              		.loc 1 1620 27
 1803 0088 BB69     		ldr	r3, [r7, #24]
 1804 008a DB6A     		ldr	r3, [r3, #44]
 1805 008c 3B61     		str	r3, [r7, #16]
1621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( configUSE_MUTEXES == 1 )
1623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Only change the priority being used if the task is not
1625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					currently using an inherited priority. */
1626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxBasePriority == pxTCB->uxPriority )
 1806              		.loc 1 1626 15
 1807 008e BB69     		ldr	r3, [r7, #24]
 1808 0090 1A6D     		ldr	r2, [r3, #80]
 1809              		.loc 1 1626 40
 1810 0092 BB69     		ldr	r3, [r7, #24]
 1811 0094 DB6A     		ldr	r3, [r3, #44]
 1812              		.loc 1 1626 8
 1813 0096 9A42     		cmp	r2, r3
 1814 0098 02D1     		bne	.L111
1627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB->uxPriority = uxNewPriority;
 1815              		.loc 1 1628 25
 1816 009a BB69     		ldr	r3, [r7, #24]
 1817 009c 3A68     		ldr	r2, [r7]
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 65


 1818 009e DA62     		str	r2, [r3, #44]
 1819              	.L111:
1629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The base priority gets set whatever. */
1636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxBasePriority = uxNewPriority;
 1820              		.loc 1 1636 28
 1821 00a0 BB69     		ldr	r3, [r7, #24]
 1822 00a2 3A68     		ldr	r2, [r7]
 1823 00a4 1A65     		str	r2, [r3, #80]
1637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#else
1639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = uxNewPriority;
1641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
1643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Only reset the event list item value if the value is not
1645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				being used for anything else. */
1646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE 
 1824              		.loc 1 1646 11
 1825 00a6 BB69     		ldr	r3, [r7, #24]
 1826 00a8 9B69     		ldr	r3, [r3, #24]
 1827              		.loc 1 1646 7
 1828 00aa 002B     		cmp	r3, #0
 1829 00ac 04DB     		blt	.L112
1647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITIES - (
 1830              		.loc 1 1648 6
 1831 00ae 3B68     		ldr	r3, [r7]
 1832 00b0 C3F13802 		rsb	r2, r3, #56
 1833 00b4 BB69     		ldr	r3, [r7, #24]
 1834 00b6 9A61     		str	r2, [r3, #24]
 1835              	.L112:
1649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the task is in the blocked or suspended list we need do
1656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				nothing more than change its priority variable. However, if
1657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the task is in a ready list it needs to be removed and placed
1658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				in the list appropriate to its new priority. */
1659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateL
 1836              		.loc 1 1659 9
 1837 00b8 BB69     		ldr	r3, [r7, #24]
 1838 00ba 5969     		ldr	r1, [r3, #20]
 1839 00bc 3A69     		ldr	r2, [r7, #16]
 1840 00be 1346     		mov	r3, r2
 1841 00c0 9B00     		lsls	r3, r3, #2
 1842 00c2 1344     		add	r3, r3, r2
 1843 00c4 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 66


 1844 00c6 1A4A     		ldr	r2, .L115+4
 1845 00c8 1344     		add	r3, r3, r2
 1846              		.loc 1 1659 7
 1847 00ca 9942     		cmp	r1, r3
 1848 00cc 1CD1     		bne	.L113
1660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task is currently in its ready list - remove before
1662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					adding it to it's new ready list.  As we are in a critical
1663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					section we can do this even if the scheduler is suspended. */
1664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 1849              		.loc 1 1664 10
 1850 00ce BB69     		ldr	r3, [r7, #24]
 1851 00d0 0433     		adds	r3, r3, #4
 1852 00d2 1846     		mov	r0, r3
 1853 00d4 FFF7FEFF 		bl	uxListRemove
1665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* It is known that the task is in its ready list so
1667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						there is no need to check again and the port level
1668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						reset macro can be called directly. */
1669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						portRESET_READY_PRIORITY( uxPriorityUsedOnEntry, uxTopReadyPriority );
1670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1854              		.loc 1 1675 6
 1855 00d8 BB69     		ldr	r3, [r7, #24]
 1856 00da DA6A     		ldr	r2, [r3, #44]
 1857 00dc 154B     		ldr	r3, .L115+8
 1858 00de 1B68     		ldr	r3, [r3]
 1859 00e0 9A42     		cmp	r2, r3
 1860 00e2 03D9     		bls	.L114
 1861              		.loc 1 1675 6 is_stmt 0 discriminator 1
 1862 00e4 BB69     		ldr	r3, [r7, #24]
 1863 00e6 DB6A     		ldr	r3, [r3, #44]
 1864 00e8 124A     		ldr	r2, .L115+8
 1865 00ea 1360     		str	r3, [r2]
 1866              	.L114:
 1867              		.loc 1 1675 6 discriminator 3
 1868 00ec BB69     		ldr	r3, [r7, #24]
 1869 00ee DA6A     		ldr	r2, [r3, #44]
 1870 00f0 1346     		mov	r3, r2
 1871 00f2 9B00     		lsls	r3, r3, #2
 1872 00f4 1344     		add	r3, r3, r2
 1873 00f6 9B00     		lsls	r3, r3, #2
 1874 00f8 0D4A     		ldr	r2, .L115+4
 1875 00fa 1A44     		add	r2, r2, r3
 1876 00fc BB69     		ldr	r3, [r7, #24]
 1877 00fe 0433     		adds	r3, r3, #4
 1878 0100 1946     		mov	r1, r3
 1879 0102 1046     		mov	r0, r2
 1880 0104 FFF7FEFF 		bl	vListInsertEnd
 1881              	.L113:
1676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 67


1679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xYieldRequired != pdFALSE )
 1882              		.loc 1 1682 7 is_stmt 1
 1883 0108 FB69     		ldr	r3, [r7, #28]
 1884 010a 002B     		cmp	r3, #0
 1885 010c 07D0     		beq	.L108
1683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
 1886              		.loc 1 1684 6
 1887 010e 0A4B     		ldr	r3, .L115+12
 1888 0110 4FF08052 		mov	r2, #268435456
 1889 0114 1A60     		str	r2, [r3]
 1890              		.syntax unified
 1891              	@ 1684 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1892 0116 BFF34F8F 		dsb
 1893              	@ 0 "" 2
 1894              	@ 1684 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1895 011a BFF36F8F 		isb
 1896              	@ 0 "" 2
 1897              		.thumb
 1898              		.syntax unified
 1899              	.L108:
1685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Remove compiler warning about unused variables when the port
1692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				optimised task selection is not being used. */
1693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxPriorityUsedOnEntry;
1694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
 1900              		.loc 1 1696 3
 1901 011e FFF7FEFF 		bl	vPortExitCritical
1697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1902              		.loc 1 1697 2
 1903 0122 00BF     		nop
 1904 0124 2037     		adds	r7, r7, #32
 1905              	.LCFI53:
 1906              		.cfi_def_cfa_offset 8
 1907 0126 BD46     		mov	sp, r7
 1908              	.LCFI54:
 1909              		.cfi_def_cfa_register 13
 1910              		@ sp needed
 1911 0128 80BD     		pop	{r7, pc}
 1912              	.L116:
 1913 012a 00BF     		.align	2
 1914              	.L115:
 1915 012c 00000000 		.word	pxCurrentTCB
 1916 0130 00000000 		.word	pxReadyTasksLists
 1917 0134 00000000 		.word	uxTopReadyPriority
 1918 0138 04ED00E0 		.word	-536810236
 1919              		.cfi_endproc
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 68


 1920              	.LFE14:
 1922              		.section	.text.vTaskSuspend,"ax",%progbits
 1923              		.align	1
 1924              		.global	vTaskSuspend
 1925              		.syntax unified
 1926              		.thumb
 1927              		.thumb_func
 1929              	vTaskSuspend:
 1930              	.LFB15:
1698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskPrioritySet */
1700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSuspend( TaskHandle_t xTaskToSuspend )
1705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 1931              		.loc 1 1705 2
 1932              		.cfi_startproc
 1933              		@ args = 0, pretend = 0, frame = 16
 1934              		@ frame_needed = 1, uses_anonymous_args = 0
 1935 0000 80B5     		push	{r7, lr}
 1936              	.LCFI55:
 1937              		.cfi_def_cfa_offset 8
 1938              		.cfi_offset 7, -8
 1939              		.cfi_offset 14, -4
 1940 0002 84B0     		sub	sp, sp, #16
 1941              	.LCFI56:
 1942              		.cfi_def_cfa_offset 24
 1943 0004 00AF     		add	r7, sp, #0
 1944              	.LCFI57:
 1945              		.cfi_def_cfa_register 7
 1946 0006 7860     		str	r0, [r7, #4]
1706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
 1947              		.loc 1 1708 3
 1948 0008 FFF7FEFF 		bl	vPortEnterCritical
1709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the running task that is
1711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			being suspended. */
1712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToSuspend );
 1949              		.loc 1 1712 12
 1950 000c 7B68     		ldr	r3, [r7, #4]
 1951 000e 002B     		cmp	r3, #0
 1952 0010 02D1     		bne	.L118
 1953              		.loc 1 1712 12 is_stmt 0 discriminator 1
 1954 0012 304B     		ldr	r3, .L129
 1955 0014 1B68     		ldr	r3, [r3]
 1956 0016 00E0     		b	.L119
 1957              	.L118:
 1958              		.loc 1 1712 12 discriminator 2
 1959 0018 7B68     		ldr	r3, [r7, #4]
 1960              	.L119:
 1961              		.loc 1 1712 10 is_stmt 1 discriminator 4
 1962 001a FB60     		str	r3, [r7, #12]
1713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 69


1714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_SUSPEND( pxTCB );
1715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Remove task from the ready/delayed list and place in the
1717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			suspended list. */
1718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 1963              		.loc 1 1718 8 discriminator 4
 1964 001c FB68     		ldr	r3, [r7, #12]
 1965 001e 0433     		adds	r3, r3, #4
 1966 0020 1846     		mov	r0, r3
 1967 0022 FFF7FEFF 		bl	uxListRemove
1719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskRESET_READY_PRIORITY( pxTCB->uxPriority );
1721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Is the task waiting on an event also? */
1728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 1968              		.loc 1 1728 8 discriminator 4
 1969 0026 FB68     		ldr	r3, [r7, #12]
 1970 0028 9B6A     		ldr	r3, [r3, #40]
 1971              		.loc 1 1728 6 discriminator 4
 1972 002a 002B     		cmp	r3, #0
 1973 002c 04D0     		beq	.L120
1729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 1974              		.loc 1 1730 14
 1975 002e FB68     		ldr	r3, [r7, #12]
 1976 0030 1833     		adds	r3, r3, #24
 1977 0032 1846     		mov	r0, r3
 1978 0034 FFF7FEFF 		bl	uxListRemove
 1979              	.L120:
1731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsertEnd( &xSuspendedTaskList, &( pxTCB->xStateListItem ) );
 1980              		.loc 1 1737 4
 1981 0038 FB68     		ldr	r3, [r7, #12]
 1982 003a 0433     		adds	r3, r3, #4
 1983 003c 1946     		mov	r1, r3
 1984 003e 2648     		ldr	r0, .L129+4
 1985 0040 FFF7FEFF 		bl	vListInsertEnd
1738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( configUSE_TASK_NOTIFICATIONS == 1 )
1740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->ucNotifyState == taskWAITING_NOTIFICATION )
 1986              		.loc 1 1741 14
 1987 0044 FB68     		ldr	r3, [r7, #12]
 1988 0046 93F86030 		ldrb	r3, [r3, #96]
 1989 004a DBB2     		uxtb	r3, r3
 1990              		.loc 1 1741 7
 1991 004c 012B     		cmp	r3, #1
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 70


 1992 004e 03D1     		bne	.L121
1742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task was blocked to wait for a notification, but is
1744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					now suspended, so no notification was received. */
1745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 1993              		.loc 1 1745 27
 1994 0050 FB68     		ldr	r3, [r7, #12]
 1995 0052 0022     		movs	r2, #0
 1996 0054 83F86020 		strb	r2, [r3, #96]
 1997              	.L121:
1746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
1749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
 1998              		.loc 1 1750 3
 1999 0058 FFF7FEFF 		bl	vPortExitCritical
1751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
 2000              		.loc 1 1752 25
 2001 005c 1F4B     		ldr	r3, .L129+8
 2002 005e 1B68     		ldr	r3, [r3]
 2003              		.loc 1 1752 5
 2004 0060 002B     		cmp	r3, #0
 2005 0062 05D0     		beq	.L122
1753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Reset the next expected unblock time in case it referred to the
1755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task that is now in the Suspended state. */
1756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
 2006              		.loc 1 1756 4
 2007 0064 FFF7FEFF 		bl	vPortEnterCritical
1757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvResetNextTaskUnblockTime();
 2008              		.loc 1 1758 5
 2009 0068 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
1759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
 2010              		.loc 1 1760 4
 2011 006c FFF7FEFF 		bl	vPortExitCritical
 2012              	.L122:
1761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTCB == pxCurrentTCB )
 2013              		.loc 1 1767 13
 2014 0070 184B     		ldr	r3, .L129
 2015 0072 1B68     		ldr	r3, [r3]
 2016              		.loc 1 1767 5
 2017 0074 FA68     		ldr	r2, [r7, #12]
 2018 0076 9A42     		cmp	r2, r3
 2019 0078 27D1     		bne	.L128
1768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xSchedulerRunning != pdFALSE )
 2020              		.loc 1 1769 26
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 71


 2021 007a 184B     		ldr	r3, .L129+8
 2022 007c 1B68     		ldr	r3, [r3]
 2023              		.loc 1 1769 6
 2024 007e 002B     		cmp	r3, #0
 2025 0080 17D0     		beq	.L124
1770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The current task has just been suspended. */
1772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( uxSchedulerSuspended == 0 );
 2026              		.loc 1 1772 5
 2027 0082 174B     		ldr	r3, .L129+12
 2028 0084 1B68     		ldr	r3, [r3]
 2029 0086 002B     		cmp	r3, #0
 2030 0088 0AD0     		beq	.L125
 2031              	.LBB155:
 2032              	.LBB156:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2033              		.loc 2 195 2
 2034              		.syntax unified
 2035              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2036 008a 4FF05003 			mov r3, #80												
 2037 008e 83F31188 		msr basepri, r3											
 2038 0092 BFF36F8F 		isb														
 2039 0096 BFF34F8F 		dsb														
 2040              	
 2041              	@ 0 "" 2
 2042              		.thumb
 2043              		.syntax unified
 2044 009a BB60     		str	r3, [r7, #8]
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2045              		.loc 2 203 1
 2046 009c 00BF     		nop
 2047              	.L126:
 2048              	.LBE156:
 2049              	.LBE155:
 2050              		.loc 1 1772 5 discriminator 1
 2051 009e FEE7     		b	.L126
 2052              	.L125:
1773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 2053              		.loc 1 1773 5
 2054 00a0 104B     		ldr	r3, .L129+16
 2055 00a2 4FF08052 		mov	r2, #268435456
 2056 00a6 1A60     		str	r2, [r3]
 2057              		.syntax unified
 2058              	@ 1773 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 2059 00a8 BFF34F8F 		dsb
 2060              	@ 0 "" 2
 2061              	@ 1773 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 2062 00ac BFF36F8F 		isb
 2063              	@ 0 "" 2
1774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The scheduler is not running, but the task that was pointed
1778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				to by pxCurrentTCB has just been suspended and pxCurrentTCB
1779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				must be adjusted to point to a different task. */
1780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == uxCurrentNumberOfTasks ) /*lint !e931 Rig
1781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 72


1782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* No other tasks are ready, so set pxCurrentTCB back to
1783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					NULL so when the next task is created pxCurrentTCB will
1784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					be set to point to it no matter what its relative priority
1785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					is. */
1786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB = NULL;
1787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vTaskSwitchContext();
1791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2064              		.loc 1 1798 2
 2065              		.thumb
 2066              		.syntax unified
 2067 00b0 0BE0     		b	.L128
 2068              	.L124:
1780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2069              		.loc 1 1780 9
 2070 00b2 094B     		ldr	r3, .L129+4
 2071 00b4 1A68     		ldr	r2, [r3]
1780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2072              		.loc 1 1780 56
 2073 00b6 0C4B     		ldr	r3, .L129+20
 2074 00b8 1B68     		ldr	r3, [r3]
1780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2075              		.loc 1 1780 7
 2076 00ba 9A42     		cmp	r2, r3
 2077 00bc 03D1     		bne	.L127
1786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2078              		.loc 1 1786 19
 2079 00be 054B     		ldr	r3, .L129
 2080 00c0 0022     		movs	r2, #0
 2081 00c2 1A60     		str	r2, [r3]
 2082              		.loc 1 1798 2
 2083 00c4 01E0     		b	.L128
 2084              	.L127:
1790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2085              		.loc 1 1790 6
 2086 00c6 FFF7FEFF 		bl	vTaskSwitchContext
 2087              	.L128:
 2088              		.loc 1 1798 2
 2089 00ca 00BF     		nop
 2090 00cc 1037     		adds	r7, r7, #16
 2091              	.LCFI58:
 2092              		.cfi_def_cfa_offset 8
 2093 00ce BD46     		mov	sp, r7
 2094              	.LCFI59:
 2095              		.cfi_def_cfa_register 13
 2096              		@ sp needed
 2097 00d0 80BD     		pop	{r7, pc}
 2098              	.L130:
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 73


 2099 00d2 00BF     		.align	2
 2100              	.L129:
 2101 00d4 00000000 		.word	pxCurrentTCB
 2102 00d8 00000000 		.word	xSuspendedTaskList
 2103 00dc 00000000 		.word	xSchedulerRunning
 2104 00e0 00000000 		.word	uxSchedulerSuspended
 2105 00e4 04ED00E0 		.word	-536810236
 2106 00e8 00000000 		.word	uxCurrentNumberOfTasks
 2107              		.cfi_endproc
 2108              	.LFE15:
 2110              		.section	.text.prvTaskIsTaskSuspended,"ax",%progbits
 2111              		.align	1
 2112              		.syntax unified
 2113              		.thumb
 2114              		.thumb_func
 2116              	prvTaskIsTaskSuspended:
 2117              	.LFB16:
1799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask )
1806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2118              		.loc 1 1806 2
 2119              		.cfi_startproc
 2120              		@ args = 0, pretend = 0, frame = 24
 2121              		@ frame_needed = 1, uses_anonymous_args = 0
 2122              		@ link register save eliminated.
 2123 0000 80B4     		push	{r7}
 2124              	.LCFI60:
 2125              		.cfi_def_cfa_offset 4
 2126              		.cfi_offset 7, -4
 2127 0002 87B0     		sub	sp, sp, #28
 2128              	.LCFI61:
 2129              		.cfi_def_cfa_offset 32
 2130 0004 00AF     		add	r7, sp, #0
 2131              	.LCFI62:
 2132              		.cfi_def_cfa_register 7
 2133 0006 7860     		str	r0, [r7, #4]
1807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
 2134              		.loc 1 1807 13
 2135 0008 0023     		movs	r3, #0
 2136 000a 7B61     		str	r3, [r7, #20]
1808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = xTask;
 2137              		.loc 1 1808 22
 2138 000c 7B68     		ldr	r3, [r7, #4]
 2139 000e 3B61     		str	r3, [r7, #16]
1809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Accesses xPendingReadyList so must be called from a critical
1811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		section. */
1812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* It does not make sense to check if the calling task is suspended. */
1814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTask );
 2140              		.loc 1 1814 3
 2141 0010 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 74


 2142 0012 002B     		cmp	r3, #0
 2143 0014 0AD1     		bne	.L132
 2144              	.LBB157:
 2145              	.LBB158:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2146              		.loc 2 195 2
 2147              		.syntax unified
 2148              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2149 0016 4FF05003 			mov r3, #80												
 2150 001a 83F31188 		msr basepri, r3											
 2151 001e BFF36F8F 		isb														
 2152 0022 BFF34F8F 		dsb														
 2153              	
 2154              	@ 0 "" 2
 2155              		.thumb
 2156              		.syntax unified
 2157 0026 FB60     		str	r3, [r7, #12]
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2158              		.loc 2 203 1
 2159 0028 00BF     		nop
 2160              	.L133:
 2161              	.LBE158:
 2162              	.LBE157:
 2163              		.loc 1 1814 3 discriminator 1
 2164 002a FEE7     		b	.L133
 2165              	.L132:
1815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Is the task being resumed actually in the suspended list? */
1817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listIS_CONTAINED_WITHIN( &xSuspendedTaskList, &( pxTCB->xStateListItem ) ) != pdFALSE )
 2166              		.loc 1 1817 7
 2167 002c 3B69     		ldr	r3, [r7, #16]
 2168 002e 5B69     		ldr	r3, [r3, #20]
 2169              		.loc 1 1817 5
 2170 0030 0A4A     		ldr	r2, .L136
 2171 0032 9342     		cmp	r3, r2
 2172 0034 0AD1     		bne	.L134
1818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Has the task already been resumed from within an ISR? */
1820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listIS_CONTAINED_WITHIN( &xPendingReadyList, &( pxTCB->xEventListItem ) ) == pdFALSE )
 2173              		.loc 1 1820 8
 2174 0036 3B69     		ldr	r3, [r7, #16]
 2175 0038 9B6A     		ldr	r3, [r3, #40]
 2176              		.loc 1 1820 6
 2177 003a 094A     		ldr	r2, .L136+4
 2178 003c 9342     		cmp	r3, r2
 2179 003e 05D0     		beq	.L134
1821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Is it in the suspended list because it is in the	Suspended
1823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				state, or because is is blocked with no timeout? */
1824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( NULL, &( pxTCB->xEventListItem ) ) != pdFALSE ) /*lint !e961.  The
 2180              		.loc 1 1824 9
 2181 0040 3B69     		ldr	r3, [r7, #16]
 2182 0042 9B6A     		ldr	r3, [r3, #40]
 2183              		.loc 1 1824 7
 2184 0044 002B     		cmp	r3, #0
 2185 0046 01D1     		bne	.L134
1825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 75


1826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xReturn = pdTRUE;
 2186              		.loc 1 1826 14
 2187 0048 0123     		movs	r3, #1
 2188 004a 7B61     		str	r3, [r7, #20]
 2189              	.L134:
1827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 2190              		.loc 1 1843 10
 2191 004c 7B69     		ldr	r3, [r7, #20]
1844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
 2192              		.loc 1 1844 2
 2193 004e 1846     		mov	r0, r3
 2194 0050 1C37     		adds	r7, r7, #28
 2195              	.LCFI63:
 2196              		.cfi_def_cfa_offset 4
 2197 0052 BD46     		mov	sp, r7
 2198              	.LCFI64:
 2199              		.cfi_def_cfa_register 13
 2200              		@ sp needed
 2201 0054 5DF8047B 		ldr	r7, [sp], #4
 2202              	.LCFI65:
 2203              		.cfi_restore 7
 2204              		.cfi_def_cfa_offset 0
 2205 0058 7047     		bx	lr
 2206              	.L137:
 2207 005a 00BF     		.align	2
 2208              	.L136:
 2209 005c 00000000 		.word	xSuspendedTaskList
 2210 0060 00000000 		.word	xPendingReadyList
 2211              		.cfi_endproc
 2212              	.LFE16:
 2214              		.section	.text.vTaskResume,"ax",%progbits
 2215              		.align	1
 2216              		.global	vTaskResume
 2217              		.syntax unified
 2218              		.thumb
 2219              		.thumb_func
 2221              	vTaskResume:
 2222              	.LFB17:
1845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 76


1848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskResume( TaskHandle_t xTaskToResume )
1852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2223              		.loc 1 1852 2
 2224              		.cfi_startproc
 2225              		@ args = 0, pretend = 0, frame = 16
 2226              		@ frame_needed = 1, uses_anonymous_args = 0
 2227 0000 80B5     		push	{r7, lr}
 2228              	.LCFI66:
 2229              		.cfi_def_cfa_offset 8
 2230              		.cfi_offset 7, -8
 2231              		.cfi_offset 14, -4
 2232 0002 84B0     		sub	sp, sp, #16
 2233              	.LCFI67:
 2234              		.cfi_def_cfa_offset 24
 2235 0004 00AF     		add	r7, sp, #0
 2236              	.LCFI68:
 2237              		.cfi_def_cfa_register 7
 2238 0006 7860     		str	r0, [r7, #4]
1853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = xTaskToResume;
 2239              		.loc 1 1853 16
 2240 0008 7B68     		ldr	r3, [r7, #4]
 2241 000a FB60     		str	r3, [r7, #12]
1854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* It does not make sense to resume the calling task. */
1856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToResume );
 2242              		.loc 1 1856 3
 2243 000c 7B68     		ldr	r3, [r7, #4]
 2244 000e 002B     		cmp	r3, #0
 2245 0010 0AD1     		bne	.L139
 2246              	.LBB159:
 2247              	.LBB160:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2248              		.loc 2 195 2
 2249              		.syntax unified
 2250              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2251 0012 4FF05003 			mov r3, #80												
 2252 0016 83F31188 		msr basepri, r3											
 2253 001a BFF36F8F 		isb														
 2254 001e BFF34F8F 		dsb														
 2255              	
 2256              	@ 0 "" 2
 2257              		.thumb
 2258              		.syntax unified
 2259 0022 BB60     		str	r3, [r7, #8]
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2260              		.loc 2 203 1
 2261 0024 00BF     		nop
 2262              	.L140:
 2263              	.LBE160:
 2264              	.LBE159:
 2265              		.loc 1 1856 3 discriminator 1
 2266 0026 FEE7     		b	.L140
 2267              	.L139:
1857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 77


1858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The parameter cannot be NULL as it is impossible to resume the
1859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		currently executing task. */
1860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( pxTCB != pxCurrentTCB ) && ( pxTCB != NULL ) )
 2268              		.loc 1 1860 15
 2269 0028 204B     		ldr	r3, .L145
 2270 002a 1B68     		ldr	r3, [r3]
 2271              		.loc 1 1860 5
 2272 002c FA68     		ldr	r2, [r7, #12]
 2273 002e 9A42     		cmp	r2, r3
 2274 0030 38D0     		beq	.L144
 2275              		.loc 1 1860 33 discriminator 1
 2276 0032 FB68     		ldr	r3, [r7, #12]
 2277 0034 002B     		cmp	r3, #0
 2278 0036 35D0     		beq	.L144
1861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
 2279              		.loc 1 1862 4
 2280 0038 FFF7FEFF 		bl	vPortEnterCritical
1863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
 2281              		.loc 1 1864 9
 2282 003c F868     		ldr	r0, [r7, #12]
 2283 003e FFF7FEFF 		bl	prvTaskIsTaskSuspended
 2284 0042 0346     		mov	r3, r0
 2285              		.loc 1 1864 7
 2286 0044 002B     		cmp	r3, #0
 2287 0046 2BD0     		beq	.L142
1865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_RESUME( pxTCB );
1867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The ready list can be accessed even if the scheduler is
1869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					suspended because this is inside a critical section. */
1870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove(  &( pxTCB->xStateListItem ) );
 2288              		.loc 1 1870 15
 2289 0048 FB68     		ldr	r3, [r7, #12]
 2290 004a 0433     		adds	r3, r3, #4
 2291 004c 1846     		mov	r0, r3
 2292 004e FFF7FEFF 		bl	uxListRemove
1871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 2293              		.loc 1 1871 6
 2294 0052 FB68     		ldr	r3, [r7, #12]
 2295 0054 DA6A     		ldr	r2, [r3, #44]
 2296 0056 164B     		ldr	r3, .L145+4
 2297 0058 1B68     		ldr	r3, [r3]
 2298 005a 9A42     		cmp	r2, r3
 2299 005c 03D9     		bls	.L143
 2300              		.loc 1 1871 6 is_stmt 0 discriminator 1
 2301 005e FB68     		ldr	r3, [r7, #12]
 2302 0060 DB6A     		ldr	r3, [r3, #44]
 2303 0062 134A     		ldr	r2, .L145+4
 2304 0064 1360     		str	r3, [r2]
 2305              	.L143:
 2306              		.loc 1 1871 6 discriminator 3
 2307 0066 FB68     		ldr	r3, [r7, #12]
 2308 0068 DA6A     		ldr	r2, [r3, #44]
 2309 006a 1346     		mov	r3, r2
 2310 006c 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 78


 2311 006e 1344     		add	r3, r3, r2
 2312 0070 9B00     		lsls	r3, r3, #2
 2313 0072 104A     		ldr	r2, .L145+8
 2314 0074 1A44     		add	r2, r2, r3
 2315 0076 FB68     		ldr	r3, [r7, #12]
 2316 0078 0433     		adds	r3, r3, #4
 2317 007a 1946     		mov	r1, r3
 2318 007c 1046     		mov	r0, r2
 2319 007e FFF7FEFF 		bl	vListInsertEnd
1872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* A higher priority task may have just been resumed. */
1874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 2320              		.loc 1 1874 15 is_stmt 1 discriminator 3
 2321 0082 FB68     		ldr	r3, [r7, #12]
 2322 0084 DA6A     		ldr	r2, [r3, #44]
 2323              		.loc 1 1874 43 discriminator 3
 2324 0086 094B     		ldr	r3, .L145
 2325 0088 1B68     		ldr	r3, [r3]
 2326 008a DB6A     		ldr	r3, [r3, #44]
 2327              		.loc 1 1874 8 discriminator 3
 2328 008c 9A42     		cmp	r2, r3
 2329 008e 07D3     		bcc	.L142
1875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* This yield may not cause the task just resumed to run,
1877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						but will leave the lists in the correct state for the
1878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						next yield. */
1879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						taskYIELD_IF_USING_PREEMPTION();
 2330              		.loc 1 1879 7
 2331 0090 094B     		ldr	r3, .L145+12
 2332 0092 4FF08052 		mov	r2, #268435456
 2333 0096 1A60     		str	r2, [r3]
 2334              		.syntax unified
 2335              	@ 1879 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 2336 0098 BFF34F8F 		dsb
 2337              	@ 0 "" 2
 2338              	@ 1879 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 2339 009c BFF36F8F 		isb
 2340              	@ 0 "" 2
 2341              		.thumb
 2342              		.syntax unified
 2343              	.L142:
1880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
 2344              		.loc 1 1891 4
 2345 00a0 FFF7FEFF 		bl	vPortExitCritical
 2346              	.L144:
1892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 79


1893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2347              		.loc 1 1897 2
 2348 00a4 00BF     		nop
 2349 00a6 1037     		adds	r7, r7, #16
 2350              	.LCFI69:
 2351              		.cfi_def_cfa_offset 8
 2352 00a8 BD46     		mov	sp, r7
 2353              	.LCFI70:
 2354              		.cfi_def_cfa_register 13
 2355              		@ sp needed
 2356 00aa 80BD     		pop	{r7, pc}
 2357              	.L146:
 2358              		.align	2
 2359              	.L145:
 2360 00ac 00000000 		.word	pxCurrentTCB
 2361 00b0 00000000 		.word	uxTopReadyPriority
 2362 00b4 00000000 		.word	pxReadyTasksLists
 2363 00b8 04ED00E0 		.word	-536810236
 2364              		.cfi_endproc
 2365              	.LFE17:
 2367              		.section	.text.xTaskResumeFromISR,"ax",%progbits
 2368              		.align	1
 2369              		.global	xTaskResumeFromISR
 2370              		.syntax unified
 2371              		.thumb
 2372              		.thumb_func
 2374              	xTaskResumeFromISR:
 2375              	.LFB18:
1898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) )
1904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskResumeFromISR( TaskHandle_t xTaskToResume )
1906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2376              		.loc 1 1906 2
 2377              		.cfi_startproc
 2378              		@ args = 0, pretend = 0, frame = 40
 2379              		@ frame_needed = 1, uses_anonymous_args = 0
 2380 0000 80B5     		push	{r7, lr}
 2381              	.LCFI71:
 2382              		.cfi_def_cfa_offset 8
 2383              		.cfi_offset 7, -8
 2384              		.cfi_offset 14, -4
 2385 0002 8AB0     		sub	sp, sp, #40
 2386              	.LCFI72:
 2387              		.cfi_def_cfa_offset 48
 2388 0004 00AF     		add	r7, sp, #0
 2389              	.LCFI73:
 2390              		.cfi_def_cfa_register 7
 2391 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 80


1907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
 2392              		.loc 1 1907 13
 2393 0008 0023     		movs	r3, #0
 2394 000a 7B62     		str	r3, [r7, #36]
1908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = xTaskToResume;
 2395              		.loc 1 1908 16
 2396 000c 7B68     		ldr	r3, [r7, #4]
 2397 000e 3B62     		str	r3, [r7, #32]
1909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
1910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToResume );
 2398              		.loc 1 1911 3
 2399 0010 7B68     		ldr	r3, [r7, #4]
 2400 0012 002B     		cmp	r3, #0
 2401 0014 0AD1     		bne	.L148
 2402              	.LBB161:
 2403              	.LBB162:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2404              		.loc 2 195 2
 2405              		.syntax unified
 2406              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2407 0016 4FF05003 			mov r3, #80												
 2408 001a 83F31188 		msr basepri, r3											
 2409 001e BFF36F8F 		isb														
 2410 0022 BFF34F8F 		dsb														
 2411              	
 2412              	@ 0 "" 2
 2413              		.thumb
 2414              		.syntax unified
 2415 0026 BB61     		str	r3, [r7, #24]
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2416              		.loc 2 203 1
 2417 0028 00BF     		nop
 2418              	.L149:
 2419              	.LBE162:
 2420              	.LBE161:
 2421              		.loc 1 1911 3 discriminator 1
 2422 002a FEE7     		b	.L149
 2423              	.L148:
1912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
1914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
1915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
1916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
1917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
1919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
1921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
1922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
1923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
1924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
1925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
1926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
1927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
1928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		https://www.freertos.org/RTOS-Cortex-M3-M4.html */
1929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 81


 2424              		.loc 1 1929 3
 2425 002c FFF7FEFF 		bl	vPortValidateInterruptPriority
 2426              	.LBB163:
 2427              	.LBB164:
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2428              		.loc 2 211 2
 2429              		.syntax unified
 2430              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2431 0030 EFF31182 			mrs r2, basepri											
 2432 0034 4FF05003 		mov r3, #80												
 2433 0038 83F31188 		msr basepri, r3											
 2434 003c BFF36F8F 		isb														
 2435 0040 BFF34F8F 		dsb														
 2436              	
 2437              	@ 0 "" 2
 2438              		.thumb
 2439              		.syntax unified
 2440 0044 7A61     		str	r2, [r7, #20]
 2441 0046 3B61     		str	r3, [r7, #16]
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 2442              		.loc 2 223 9
 2443 0048 7B69     		ldr	r3, [r7, #20]
 2444              	.LBE164:
 2445              	.LBE163:
1930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 2446              		.loc 1 1931 28
 2447 004a FB61     		str	r3, [r7, #28]
1932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
 2448              		.loc 1 1933 8
 2449 004c 386A     		ldr	r0, [r7, #32]
 2450 004e FFF7FEFF 		bl	prvTaskIsTaskSuspended
 2451 0052 0346     		mov	r3, r0
 2452              		.loc 1 1933 6
 2453 0054 002B     		cmp	r3, #0
 2454 0056 30D0     		beq	.L151
1934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_RESUME_FROM_ISR( pxTCB );
1936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Check the ready lists can be accessed. */
1938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 2455              		.loc 1 1938 30
 2456 0058 1D4B     		ldr	r3, .L156
 2457 005a 1B68     		ldr	r3, [r3]
 2458              		.loc 1 1938 7
 2459 005c 002B     		cmp	r3, #0
 2460 005e 26D1     		bne	.L152
1939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Ready lists can be accessed so move the task from the
1941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					suspended list to the ready list directly. */
1942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 2461              		.loc 1 1942 15
 2462 0060 3B6A     		ldr	r3, [r7, #32]
 2463 0062 DA6A     		ldr	r2, [r3, #44]
 2464              		.loc 1 1942 43
 2465 0064 1B4B     		ldr	r3, .L156+4
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 82


 2466 0066 1B68     		ldr	r3, [r3]
 2467 0068 DB6A     		ldr	r3, [r3, #44]
 2468              		.loc 1 1942 8
 2469 006a 9A42     		cmp	r2, r3
 2470 006c 01D3     		bcc	.L153
1943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xYieldRequired = pdTRUE;
 2471              		.loc 1 1944 22
 2472 006e 0123     		movs	r3, #1
 2473 0070 7B62     		str	r3, [r7, #36]
 2474              	.L153:
1945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 2475              		.loc 1 1951 15
 2476 0072 3B6A     		ldr	r3, [r7, #32]
 2477 0074 0433     		adds	r3, r3, #4
 2478 0076 1846     		mov	r0, r3
 2479 0078 FFF7FEFF 		bl	uxListRemove
1952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 2480              		.loc 1 1952 6
 2481 007c 3B6A     		ldr	r3, [r7, #32]
 2482 007e DA6A     		ldr	r2, [r3, #44]
 2483 0080 154B     		ldr	r3, .L156+8
 2484 0082 1B68     		ldr	r3, [r3]
 2485 0084 9A42     		cmp	r2, r3
 2486 0086 03D9     		bls	.L154
 2487              		.loc 1 1952 6 is_stmt 0 discriminator 1
 2488 0088 3B6A     		ldr	r3, [r7, #32]
 2489 008a DB6A     		ldr	r3, [r3, #44]
 2490 008c 124A     		ldr	r2, .L156+8
 2491 008e 1360     		str	r3, [r2]
 2492              	.L154:
 2493              		.loc 1 1952 6 discriminator 3
 2494 0090 3B6A     		ldr	r3, [r7, #32]
 2495 0092 DA6A     		ldr	r2, [r3, #44]
 2496 0094 1346     		mov	r3, r2
 2497 0096 9B00     		lsls	r3, r3, #2
 2498 0098 1344     		add	r3, r3, r2
 2499 009a 9B00     		lsls	r3, r3, #2
 2500 009c 0F4A     		ldr	r2, .L156+12
 2501 009e 1A44     		add	r2, r2, r3
 2502 00a0 3B6A     		ldr	r3, [r7, #32]
 2503 00a2 0433     		adds	r3, r3, #4
 2504 00a4 1946     		mov	r1, r3
 2505 00a6 1046     		mov	r0, r2
 2506 00a8 FFF7FEFF 		bl	vListInsertEnd
 2507 00ac 05E0     		b	.L151
 2508              	.L152:
1953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed or ready lists cannot be accessed so the task
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 83


1957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					is held in the pending ready list until the scheduler is
1958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					unsuspended. */
1959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
 2509              		.loc 1 1959 6 is_stmt 1
 2510 00ae 3B6A     		ldr	r3, [r7, #32]
 2511 00b0 1833     		adds	r3, r3, #24
 2512 00b2 1946     		mov	r1, r3
 2513 00b4 0A48     		ldr	r0, .L156+16
 2514 00b6 FFF7FEFF 		bl	vListInsertEnd
 2515              	.L151:
 2516 00ba FB69     		ldr	r3, [r7, #28]
 2517 00bc FB60     		str	r3, [r7, #12]
 2518              	.LBB165:
 2519              	.LBB166:
 229:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2520              		.loc 2 229 2
 2521 00be FB68     		ldr	r3, [r7, #12]
 2522              		.syntax unified
 2523              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2524 00c0 83F31188 			msr basepri, r3	
 2525              	@ 0 "" 2
 2526              		.loc 2 233 1
 2527              		.thumb
 2528              		.syntax unified
 2529 00c4 00BF     		nop
 2530              	.LBE166:
 2531              	.LBE165:
1960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xYieldRequired;
 2532              		.loc 1 1969 10
 2533 00c6 7B6A     		ldr	r3, [r7, #36]
1970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2534              		.loc 1 1970 2
 2535 00c8 1846     		mov	r0, r3
 2536 00ca 2837     		adds	r7, r7, #40
 2537              	.LCFI74:
 2538              		.cfi_def_cfa_offset 8
 2539 00cc BD46     		mov	sp, r7
 2540              	.LCFI75:
 2541              		.cfi_def_cfa_register 13
 2542              		@ sp needed
 2543 00ce 80BD     		pop	{r7, pc}
 2544              	.L157:
 2545              		.align	2
 2546              	.L156:
 2547 00d0 00000000 		.word	uxSchedulerSuspended
 2548 00d4 00000000 		.word	pxCurrentTCB
 2549 00d8 00000000 		.word	uxTopReadyPriority
 2550 00dc 00000000 		.word	pxReadyTasksLists
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 84


 2551 00e0 00000000 		.word	xPendingReadyList
 2552              		.cfi_endproc
 2553              	.LFE18:
 2555              		.section	.rodata
 2556              		.align	2
 2557              	.LC0:
 2558 0000 49444C45 		.ascii	"IDLE\000"
 2558      00
 2559              		.section	.text.vTaskStartScheduler,"ax",%progbits
 2560              		.align	1
 2561              		.global	vTaskStartScheduler
 2562              		.syntax unified
 2563              		.thumb
 2564              		.thumb_func
 2566              	vTaskStartScheduler:
 2567              	.LFB19:
1971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) ) */
1973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskStartScheduler( void )
1976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 2568              		.loc 1 1976 1
 2569              		.cfi_startproc
 2570              		@ args = 0, pretend = 0, frame = 24
 2571              		@ frame_needed = 1, uses_anonymous_args = 0
 2572 0000 80B5     		push	{r7, lr}
 2573              	.LCFI76:
 2574              		.cfi_def_cfa_offset 8
 2575              		.cfi_offset 7, -8
 2576              		.cfi_offset 14, -4
 2577 0002 8AB0     		sub	sp, sp, #40
 2578              	.LCFI77:
 2579              		.cfi_def_cfa_offset 48
 2580 0004 04AF     		add	r7, sp, #16
 2581              	.LCFI78:
 2582              		.cfi_def_cfa 7, 32
 2583              	.LBB167:
1977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
1978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Add the idle task at the lowest priority. */
1980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configSUPPORT_STATIC_ALLOCATION == 1 )
1981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 2584              		.loc 1 1982 17
 2585 0006 0023     		movs	r3, #0
 2586 0008 BB60     		str	r3, [r7, #8]
1983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t *pxIdleTaskStackBuffer = NULL;
 2587              		.loc 1 1983 16
 2588 000a 0023     		movs	r3, #0
 2589 000c 7B60     		str	r3, [r7, #4]
1984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint32_t ulIdleTaskStackSize;
1985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The Idle task is created using user provided RAM - obtain the
1987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		address of the RAM then create the idle task. */
1988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize
 2590              		.loc 1 1988 3
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 85


 2591 000e 3A46     		mov	r2, r7
 2592 0010 391D     		adds	r1, r7, #4
 2593 0012 07F10803 		add	r3, r7, #8
 2594 0016 1846     		mov	r0, r3
 2595 0018 FFF7FEFF 		bl	vApplicationGetIdleTaskMemory
1989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 2596              		.loc 1 1989 21
 2597 001c 3968     		ldr	r1, [r7]
 2598 001e 7B68     		ldr	r3, [r7, #4]
 2599 0020 BA68     		ldr	r2, [r7, #8]
 2600 0022 0292     		str	r2, [sp, #8]
 2601 0024 0193     		str	r3, [sp, #4]
 2602 0026 0023     		movs	r3, #0
 2603 0028 0093     		str	r3, [sp]
 2604 002a 0023     		movs	r3, #0
 2605 002c 0A46     		mov	r2, r1
 2606 002e 2249     		ldr	r1, .L166
 2607 0030 2248     		ldr	r0, .L166+4
 2608 0032 FFF7FEFF 		bl	xTaskCreateStatic
 2609 0036 0346     		mov	r3, r0
 2610              		.loc 1 1989 19
 2611 0038 214A     		ldr	r2, .L166+8
 2612 003a 1360     		str	r3, [r2]
1990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												configIDLE_TASK_NAME,
1991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												ulIdleTaskStackSize,
1992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												( void * ) NULL, /*lint !e961.  The cast is not redundant for all compilers. */
1993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												portPRIVILEGE_BIT, /* In effect ( tskIDLE_PRIORITY | portPRIVILEGE_BIT ), but tskIDLE_P
1994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												pxIdleTaskStackBuffer,
1995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												pxIdleTaskTCBBuffer ); /*lint !e961 MISRA exception, justified as it is not a redundant
1996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xIdleTaskHandle != NULL )
 2613              		.loc 1 1997 23
 2614 003c 204B     		ldr	r3, .L166+8
 2615 003e 1B68     		ldr	r3, [r3]
 2616              		.loc 1 1997 5
 2617 0040 002B     		cmp	r3, #0
 2618 0042 02D0     		beq	.L159
1998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdPASS;
 2619              		.loc 1 1999 12
 2620 0044 0123     		movs	r3, #1
 2621 0046 7B61     		str	r3, [r7, #20]
 2622 0048 01E0     		b	.L160
 2623              	.L159:
2000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFAIL;
 2624              		.loc 1 2003 12
 2625 004a 0023     		movs	r3, #0
 2626 004c 7B61     		str	r3, [r7, #20]
 2627              	.L160:
 2628              	.LBE167:
2004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else
2007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 86


2008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The Idle task is being created using dynamically allocated RAM. */
2009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = xTaskCreate(	prvIdleTask,
2010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								configIDLE_TASK_NAME,
2011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								configMINIMAL_STACK_SIZE,
2012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								( void * ) NULL,
2013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								portPRIVILEGE_BIT, /* In effect ( tskIDLE_PRIORITY | portPRIVILEGE_BIT ), but tskIDLE_PRIOR
2014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								&xIdleTaskHandle ); /*lint !e961 MISRA exception, justified as it is not a redundant explic
2015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configSUPPORT_STATIC_ALLOCATION */
2017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_TIMERS == 1 )
2019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xReturn == pdPASS )
 2629              		.loc 1 2020 5
 2630 004e 7B69     		ldr	r3, [r7, #20]
 2631 0050 012B     		cmp	r3, #1
 2632 0052 02D1     		bne	.L161
2021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = xTimerCreateTimerTask();
 2633              		.loc 1 2022 14
 2634 0054 FFF7FEFF 		bl	xTimerCreateTimerTask
 2635 0058 7861     		str	r0, [r7, #20]
 2636              	.L161:
2023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_TIMERS */
2030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( xReturn == pdPASS )
 2637              		.loc 1 2031 4
 2638 005a 7B69     		ldr	r3, [r7, #20]
 2639 005c 012B     		cmp	r3, #1
 2640 005e 18D1     		bne	.L162
 2641              	.LBB168:
 2642              	.LBB169:
 2643              	.LBB170:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2644              		.loc 2 195 2
 2645              		.syntax unified
 2646              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2647 0060 4FF05003 			mov r3, #80												
 2648 0064 83F31188 		msr basepri, r3											
 2649 0068 BFF36F8F 		isb														
 2650 006c BFF34F8F 		dsb														
 2651              	
 2652              	@ 0 "" 2
 2653              		.thumb
 2654              		.syntax unified
 2655 0070 3B61     		str	r3, [r7, #16]
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2656              		.loc 2 203 1
 2657 0072 00BF     		nop
 2658              	.LBE170:
 2659              	.LBE169:
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 87


2032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* freertos_tasks_c_additions_init() should only be called if the user
2034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		definable macro FREERTOS_TASKS_C_ADDITIONS_INIT() is defined, as that is
2035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the only macro called by the function. */
2036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#ifdef FREERTOS_TASKS_C_ADDITIONS_INIT
2037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			freertos_tasks_c_additions_init();
2039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
2041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Interrupts are turned off here, to ensure a tick does not occur
2043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		before or during the call to xPortStartScheduler().  The stacks of
2044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the created tasks contain a status word with interrupts switched on
2045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		so interrupts will automatically get re-enabled when the first task
2046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		starts to run. */
2047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portDISABLE_INTERRUPTS();
2048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
2050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Switch Newlib's _impure_ptr variable to point to the _reent
2052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			structure specific to the task that will run first.
2053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
2054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			for additional information. */
2055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
2056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
2058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = portMAX_DELAY;
 2660              		.loc 1 2059 24
 2661 0074 134B     		ldr	r3, .L166+12
 2662 0076 4FF0FF32 		mov	r2, #-1
 2663 007a 1A60     		str	r2, [r3]
2060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
 2664              		.loc 1 2060 21
 2665 007c 124B     		ldr	r3, .L166+16
 2666 007e 0122     		movs	r2, #1
 2667 0080 1A60     		str	r2, [r3]
2061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 2668              		.loc 1 2061 14
 2669 0082 124B     		ldr	r3, .L166+20
 2670 0084 0022     		movs	r2, #0
 2671 0086 1A60     		str	r2, [r3]
2062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If configGENERATE_RUN_TIME_STATS is defined then the following
2064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		macro must be defined to configure the timer/counter used to generate
2065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the run time counter time base.   NOTE:  If configGENERATE_RUN_TIME_STATS
2066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is set to 0 and the following line fails to build then ensure you do not
2067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		have portCONFIGURE_TIMER_FOR_RUN_TIME_STATS() defined in your
2068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		FreeRTOSConfig.h file. */
2069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCONFIGURE_TIMER_FOR_RUN_TIME_STATS();
 2672              		.loc 1 2069 3
 2673 0088 FFF7FEFF 		bl	CONFIGURE_TIMER_FOR_RUN_TIME_STATS
2070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
2072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Setting up the timer tick is hardware specific and thus in the
2074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portable interface. */
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 88


2075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xPortStartScheduler() != pdFALSE )
 2674              		.loc 1 2075 7
 2675 008c FFF7FEFF 		bl	xPortStartScheduler
 2676              	.LBE168:
2076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Should not reach here as if the scheduler is running the
2078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			function will not return. */
2079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Should only reach here if a task calls xTaskEndScheduler(). */
2083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
2086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This line will only be reached if the kernel could not be started,
2088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		because there was not enough FreeRTOS heap to create the idle task
2089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		or the timer task. */
2090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
2091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Prevent compiler warnings if INCLUDE_xTaskGetIdleTaskHandle is set to 0,
2094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	meaning xIdleTaskHandle is not used anywhere else. */
2095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) xIdleTaskHandle;
2096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2677              		.loc 1 2096 1
 2678 0090 0EE0     		b	.L165
 2679              	.L162:
2090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2680              		.loc 1 2090 3
 2681 0092 7B69     		ldr	r3, [r7, #20]
 2682 0094 B3F1FF3F 		cmp	r3, #-1
 2683 0098 0AD1     		bne	.L165
 2684              	.LBB171:
 2685              	.LBB172:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2686              		.loc 2 195 2
 2687              		.syntax unified
 2688              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2689 009a 4FF05003 			mov r3, #80												
 2690 009e 83F31188 		msr basepri, r3											
 2691 00a2 BFF36F8F 		isb														
 2692 00a6 BFF34F8F 		dsb														
 2693              	
 2694              	@ 0 "" 2
 2695              		.thumb
 2696              		.syntax unified
 2697 00aa FB60     		str	r3, [r7, #12]
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2698              		.loc 2 203 1
 2699 00ac 00BF     		nop
 2700              	.L164:
 2701              	.LBE172:
 2702              	.LBE171:
2090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2703              		.loc 1 2090 3 discriminator 2
 2704 00ae FEE7     		b	.L164
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 89


 2705              	.L165:
 2706              		.loc 1 2096 1
 2707 00b0 00BF     		nop
 2708 00b2 1837     		adds	r7, r7, #24
 2709              	.LCFI79:
 2710              		.cfi_def_cfa_offset 8
 2711 00b4 BD46     		mov	sp, r7
 2712              	.LCFI80:
 2713              		.cfi_def_cfa_register 13
 2714              		@ sp needed
 2715 00b6 80BD     		pop	{r7, pc}
 2716              	.L167:
 2717              		.align	2
 2718              	.L166:
 2719 00b8 00000000 		.word	.LC0
 2720 00bc 00000000 		.word	prvIdleTask
 2721 00c0 00000000 		.word	xIdleTaskHandle
 2722 00c4 00000000 		.word	xNextTaskUnblockTime
 2723 00c8 00000000 		.word	xSchedulerRunning
 2724 00cc 00000000 		.word	xTickCount
 2725              		.cfi_endproc
 2726              	.LFE19:
 2728              		.section	.text.vTaskEndScheduler,"ax",%progbits
 2729              		.align	1
 2730              		.global	vTaskEndScheduler
 2731              		.syntax unified
 2732              		.thumb
 2733              		.thumb_func
 2735              	vTaskEndScheduler:
 2736              	.LFB20:
2097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2098:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskEndScheduler( void )
2100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 2737              		.loc 1 2100 1
 2738              		.cfi_startproc
 2739              		@ args = 0, pretend = 0, frame = 8
 2740              		@ frame_needed = 1, uses_anonymous_args = 0
 2741 0000 80B5     		push	{r7, lr}
 2742              	.LCFI81:
 2743              		.cfi_def_cfa_offset 8
 2744              		.cfi_offset 7, -8
 2745              		.cfi_offset 14, -4
 2746 0002 82B0     		sub	sp, sp, #8
 2747              	.LCFI82:
 2748              		.cfi_def_cfa_offset 16
 2749 0004 00AF     		add	r7, sp, #0
 2750              	.LCFI83:
 2751              		.cfi_def_cfa_register 7
 2752              	.LBB173:
 2753              	.LBB174:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2754              		.loc 2 195 2
 2755              		.syntax unified
 2756              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2757 0006 4FF05003 			mov r3, #80												
 2758 000a 83F31188 		msr basepri, r3											
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 90


 2759 000e BFF36F8F 		isb														
 2760 0012 BFF34F8F 		dsb														
 2761              	
 2762              	@ 0 "" 2
 2763              		.thumb
 2764              		.syntax unified
 2765 0016 7B60     		str	r3, [r7, #4]
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2766              		.loc 2 203 1
 2767 0018 00BF     		nop
 2768              	.LBE174:
 2769              	.LBE173:
2101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop the scheduler interrupts and call the portable scheduler end
2102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	routine so the original ISRs can be restored if necessary.  The port
2103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	layer must ensure interrupts enable	bit is left in the correct state. */
2104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portDISABLE_INTERRUPTS();
2105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xSchedulerRunning = pdFALSE;
 2770              		.loc 1 2105 20
 2771 001a 044B     		ldr	r3, .L169
 2772 001c 0022     		movs	r2, #0
 2773 001e 1A60     		str	r2, [r3]
2106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vPortEndScheduler();
 2774              		.loc 1 2106 2
 2775 0020 FFF7FEFF 		bl	vPortEndScheduler
2107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2776              		.loc 1 2107 1
 2777 0024 00BF     		nop
 2778 0026 0837     		adds	r7, r7, #8
 2779              	.LCFI84:
 2780              		.cfi_def_cfa_offset 8
 2781 0028 BD46     		mov	sp, r7
 2782              	.LCFI85:
 2783              		.cfi_def_cfa_register 13
 2784              		@ sp needed
 2785 002a 80BD     		pop	{r7, pc}
 2786              	.L170:
 2787              		.align	2
 2788              	.L169:
 2789 002c 00000000 		.word	xSchedulerRunning
 2790              		.cfi_endproc
 2791              	.LFE20:
 2793              		.section	.text.vTaskSuspendAll,"ax",%progbits
 2794              		.align	1
 2795              		.global	vTaskSuspendAll
 2796              		.syntax unified
 2797              		.thumb
 2798              		.thumb_func
 2800              	vTaskSuspendAll:
 2801              	.LFB21:
2108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskSuspendAll( void )
2111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 2802              		.loc 1 2111 1
 2803              		.cfi_startproc
 2804              		@ args = 0, pretend = 0, frame = 0
 2805              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 91


 2806              		@ link register save eliminated.
 2807 0000 80B4     		push	{r7}
 2808              	.LCFI86:
 2809              		.cfi_def_cfa_offset 4
 2810              		.cfi_offset 7, -4
 2811 0002 00AF     		add	r7, sp, #0
 2812              	.LCFI87:
 2813              		.cfi_def_cfa_register 7
2112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required as the variable is of type
2113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t.  Please read Richard Barry's reply in the following link to a
2114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	post in the FreeRTOS support forum before reporting this as a bug! -
2115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	http://goo.gl/wu4acr */
2116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* portSOFRWARE_BARRIER() is only implemented for emulated/simulated ports that
2118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	do not otherwise exhibit real time behaviour. */
2119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portSOFTWARE_BARRIER();
2120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* The scheduler is suspended if uxSchedulerSuspended is non-zero.  An increment
2122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	is used to allow calls to vTaskSuspendAll() to nest. */
2123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	++uxSchedulerSuspended;
 2814              		.loc 1 2123 2
 2815 0004 044B     		ldr	r3, .L172
 2816 0006 1B68     		ldr	r3, [r3]
 2817 0008 0133     		adds	r3, r3, #1
 2818 000a 034A     		ldr	r2, .L172
 2819 000c 1360     		str	r3, [r2]
2124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Enforces ordering for ports and optimised compilers that may otherwise place
2126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the above increment elsewhere. */
2127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portMEMORY_BARRIER();
 2820              		.loc 1 2127 2
2128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2821              		.loc 1 2128 1
 2822 000e 00BF     		nop
 2823 0010 BD46     		mov	sp, r7
 2824              	.LCFI88:
 2825              		.cfi_def_cfa_register 13
 2826              		@ sp needed
 2827 0012 5DF8047B 		ldr	r7, [sp], #4
 2828              	.LCFI89:
 2829              		.cfi_restore 7
 2830              		.cfi_def_cfa_offset 0
 2831 0016 7047     		bx	lr
 2832              	.L173:
 2833              		.align	2
 2834              	.L172:
 2835 0018 00000000 		.word	uxSchedulerSuspended
 2836              		.cfi_endproc
 2837              	.LFE21:
 2839              		.section	.text.prvGetExpectedIdleTime,"ax",%progbits
 2840              		.align	1
 2841              		.syntax unified
 2842              		.thumb
 2843              		.thumb_func
 2845              	prvGetExpectedIdleTime:
 2846              	.LFB22:
2129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 92


2130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
2132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static TickType_t prvGetExpectedIdleTime( void )
2134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2847              		.loc 1 2134 2
 2848              		.cfi_startproc
 2849              		@ args = 0, pretend = 0, frame = 8
 2850              		@ frame_needed = 1, uses_anonymous_args = 0
 2851              		@ link register save eliminated.
 2852 0000 80B4     		push	{r7}
 2853              	.LCFI90:
 2854              		.cfi_def_cfa_offset 4
 2855              		.cfi_offset 7, -4
 2856 0002 83B0     		sub	sp, sp, #12
 2857              	.LCFI91:
 2858              		.cfi_def_cfa_offset 16
 2859 0004 00AF     		add	r7, sp, #0
 2860              	.LCFI92:
 2861              		.cfi_def_cfa_register 7
2135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TickType_t xReturn;
2136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxHigherPriorityReadyTasks = pdFALSE;
 2862              		.loc 1 2136 14
 2863 0006 0023     		movs	r3, #0
 2864 0008 3B60     		str	r3, [r7]
2137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* uxHigherPriorityReadyTasks takes care of the case where
2139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configUSE_PREEMPTION is 0, so there may be tasks above the idle priority
2140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		task that are in the Ready state, even though the idle task is
2141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		running. */
2142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
2143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxTopReadyPriority > tskIDLE_PRIORITY )
 2865              		.loc 1 2144 27
 2866 000a 144B     		ldr	r3, .L181
 2867 000c 1B68     		ldr	r3, [r3]
 2868              		.loc 1 2144 6
 2869 000e 002B     		cmp	r3, #0
 2870 0010 01D0     		beq	.L175
2145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxHigherPriorityReadyTasks = pdTRUE;
 2871              		.loc 1 2146 32
 2872 0012 0123     		movs	r3, #1
 2873 0014 3B60     		str	r3, [r7]
 2874              	.L175:
2147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
2150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			const UBaseType_t uxLeastSignificantBit = ( UBaseType_t ) 0x01;
2152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* When port optimised task selection is used the uxTopReadyPriority
2154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			variable is used as a bit map.  If bits other than the least
2155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			significant bit are set then there are tasks that have a priority
2156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			above the idle priority that are in the Ready state.  This takes
2157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			care of the case where the co-operative scheduler is in use. */
2158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxTopReadyPriority > uxLeastSignificantBit )
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 93


2159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxHigherPriorityReadyTasks = pdTRUE;
2161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
2164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB->uxPriority > tskIDLE_PRIORITY )
 2875              		.loc 1 2165 19
 2876 0016 124B     		ldr	r3, .L181+4
 2877 0018 1B68     		ldr	r3, [r3]
 2878 001a DB6A     		ldr	r3, [r3, #44]
 2879              		.loc 1 2165 5
 2880 001c 002B     		cmp	r3, #0
 2881 001e 02D0     		beq	.L176
2166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = 0;
 2882              		.loc 1 2167 12
 2883 0020 0023     		movs	r3, #0
 2884 0022 7B60     		str	r3, [r7, #4]
 2885 0024 12E0     		b	.L177
 2886              	.L176:
2168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > 1 )
 2887              		.loc 1 2169 12
 2888 0026 0F4B     		ldr	r3, .L181+8
 2889 0028 1B68     		ldr	r3, [r3]
 2890              		.loc 1 2169 10
 2891 002a 012B     		cmp	r3, #1
 2892 002c 02D9     		bls	.L178
2170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* There are other idle priority tasks in the ready state.  If
2172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			time slicing is used then the very next tick interrupt must be
2173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			processed. */
2174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = 0;
 2893              		.loc 1 2174 12
 2894 002e 0023     		movs	r3, #0
 2895 0030 7B60     		str	r3, [r7, #4]
 2896 0032 0BE0     		b	.L177
 2897              	.L178:
2175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else if( uxHigherPriorityReadyTasks != pdFALSE )
 2898              		.loc 1 2176 10
 2899 0034 3B68     		ldr	r3, [r7]
 2900 0036 002B     		cmp	r3, #0
 2901 0038 02D0     		beq	.L179
2177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* There are tasks in the Ready state that have a priority above the
2179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			idle priority.  This path can only be reached if
2180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configUSE_PREEMPTION is 0. */
2181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = 0;
 2902              		.loc 1 2181 12
 2903 003a 0023     		movs	r3, #0
 2904 003c 7B60     		str	r3, [r7, #4]
 2905 003e 05E0     		b	.L177
 2906              	.L179:
2182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 94


2184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = xNextTaskUnblockTime - xTickCount;
 2907              		.loc 1 2185 35
 2908 0040 094B     		ldr	r3, .L181+12
 2909 0042 1A68     		ldr	r2, [r3]
 2910 0044 094B     		ldr	r3, .L181+16
 2911 0046 1B68     		ldr	r3, [r3]
 2912              		.loc 1 2185 12
 2913 0048 D31A     		subs	r3, r2, r3
 2914 004a 7B60     		str	r3, [r7, #4]
 2915              	.L177:
2186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 2916              		.loc 1 2188 10
 2917 004c 7B68     		ldr	r3, [r7, #4]
2189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2918              		.loc 1 2189 2
 2919 004e 1846     		mov	r0, r3
 2920 0050 0C37     		adds	r7, r7, #12
 2921              	.LCFI93:
 2922              		.cfi_def_cfa_offset 4
 2923 0052 BD46     		mov	sp, r7
 2924              	.LCFI94:
 2925              		.cfi_def_cfa_register 13
 2926              		@ sp needed
 2927 0054 5DF8047B 		ldr	r7, [sp], #4
 2928              	.LCFI95:
 2929              		.cfi_restore 7
 2930              		.cfi_def_cfa_offset 0
 2931 0058 7047     		bx	lr
 2932              	.L182:
 2933 005a 00BF     		.align	2
 2934              	.L181:
 2935 005c 00000000 		.word	uxTopReadyPriority
 2936 0060 00000000 		.word	pxCurrentTCB
 2937 0064 00000000 		.word	pxReadyTasksLists
 2938 0068 00000000 		.word	xNextTaskUnblockTime
 2939 006c 00000000 		.word	xTickCount
 2940              		.cfi_endproc
 2941              	.LFE22:
 2943              		.section	.text.xTaskResumeAll,"ax",%progbits
 2944              		.align	1
 2945              		.global	xTaskResumeAll
 2946              		.syntax unified
 2947              		.thumb
 2948              		.thumb_func
 2950              	xTaskResumeAll:
 2951              	.LFB23:
2190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskResumeAll( void )
2195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 2952              		.loc 1 2195 1
 2953              		.cfi_startproc
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 95


 2954              		@ args = 0, pretend = 0, frame = 16
 2955              		@ frame_needed = 1, uses_anonymous_args = 0
 2956 0000 80B5     		push	{r7, lr}
 2957              	.LCFI96:
 2958              		.cfi_def_cfa_offset 8
 2959              		.cfi_offset 7, -8
 2960              		.cfi_offset 14, -4
 2961 0002 84B0     		sub	sp, sp, #16
 2962              	.LCFI97:
 2963              		.cfi_def_cfa_offset 24
 2964 0004 00AF     		add	r7, sp, #0
 2965              	.LCFI98:
 2966              		.cfi_def_cfa_register 7
2196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB = NULL;
 2967              		.loc 1 2196 8
 2968 0006 0023     		movs	r3, #0
 2969 0008 FB60     		str	r3, [r7, #12]
2197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xAlreadyYielded = pdFALSE;
 2970              		.loc 1 2197 12
 2971 000a 0023     		movs	r3, #0
 2972 000c BB60     		str	r3, [r7, #8]
2198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If uxSchedulerSuspended is zero then this function does not match a
2200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	previous call to vTaskSuspendAll(). */
2201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( uxSchedulerSuspended );
 2973              		.loc 1 2201 2
 2974 000e 424B     		ldr	r3, .L195
 2975 0010 1B68     		ldr	r3, [r3]
 2976 0012 002B     		cmp	r3, #0
 2977 0014 0AD1     		bne	.L184
 2978              	.LBB175:
 2979              	.LBB176:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2980              		.loc 2 195 2
 2981              		.syntax unified
 2982              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2983 0016 4FF05003 			mov r3, #80												
 2984 001a 83F31188 		msr basepri, r3											
 2985 001e BFF36F8F 		isb														
 2986 0022 BFF34F8F 		dsb														
 2987              	
 2988              	@ 0 "" 2
 2989              		.thumb
 2990              		.syntax unified
 2991 0026 3B60     		str	r3, [r7]
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2992              		.loc 2 203 1
 2993 0028 00BF     		nop
 2994              	.L185:
 2995              	.LBE176:
 2996              	.LBE175:
 2997              		.loc 1 2201 2 discriminator 1
 2998 002a FEE7     		b	.L185
 2999              	.L184:
2202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* It is possible that an ISR caused a task to be removed from an event
2204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	list while the scheduler was suspended.  If this was the case then the
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 96


2205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	removed task will have been added to the xPendingReadyList.  Once the
2206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	scheduler has been resumed it is safe to move all the pending ready
2207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	tasks from this list into their appropriate ready list. */
2208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 3000              		.loc 1 2208 2
 3001 002c FFF7FEFF 		bl	vPortEnterCritical
2209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		--uxSchedulerSuspended;
 3002              		.loc 1 2210 3
 3003 0030 394B     		ldr	r3, .L195
 3004 0032 1B68     		ldr	r3, [r3]
 3005 0034 013B     		subs	r3, r3, #1
 3006 0036 384A     		ldr	r2, .L195
 3007 0038 1360     		str	r3, [r2]
2211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 3008              		.loc 1 2212 28
 3009 003a 374B     		ldr	r3, .L195
 3010 003c 1B68     		ldr	r3, [r3]
 3011              		.loc 1 2212 5
 3012 003e 002B     		cmp	r3, #0
 3013 0040 62D1     		bne	.L186
2213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 3014              		.loc 1 2214 31
 3015 0042 364B     		ldr	r3, .L195+4
 3016 0044 1B68     		ldr	r3, [r3]
 3017              		.loc 1 2214 6
 3018 0046 002B     		cmp	r3, #0
 3019 0048 5ED0     		beq	.L186
2215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Move any readied tasks from the pending list into the
2217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				appropriate ready list. */
2218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 3020              		.loc 1 2218 10
 3021 004a 2FE0     		b	.L187
 3022              	.L189:
2219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as
 3023              		.loc 1 2220 14
 3024 004c 344B     		ldr	r3, .L195+8
 3025 004e DB68     		ldr	r3, [r3, #12]
 3026              		.loc 1 2220 12
 3027 0050 DB68     		ldr	r3, [r3, #12]
 3028 0052 FB60     		str	r3, [r7, #12]
2221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 3029              		.loc 1 2221 15
 3030 0054 FB68     		ldr	r3, [r7, #12]
 3031 0056 1833     		adds	r3, r3, #24
 3032 0058 1846     		mov	r0, r3
 3033 005a FFF7FEFF 		bl	uxListRemove
2222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 3034              		.loc 1 2222 15
 3035 005e FB68     		ldr	r3, [r7, #12]
 3036 0060 0433     		adds	r3, r3, #4
 3037 0062 1846     		mov	r0, r3
 3038 0064 FFF7FEFF 		bl	uxListRemove
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 97


2223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 3039              		.loc 1 2223 6
 3040 0068 FB68     		ldr	r3, [r7, #12]
 3041 006a DA6A     		ldr	r2, [r3, #44]
 3042 006c 2D4B     		ldr	r3, .L195+12
 3043 006e 1B68     		ldr	r3, [r3]
 3044 0070 9A42     		cmp	r2, r3
 3045 0072 03D9     		bls	.L188
 3046              		.loc 1 2223 6 is_stmt 0 discriminator 1
 3047 0074 FB68     		ldr	r3, [r7, #12]
 3048 0076 DB6A     		ldr	r3, [r3, #44]
 3049 0078 2A4A     		ldr	r2, .L195+12
 3050 007a 1360     		str	r3, [r2]
 3051              	.L188:
 3052              		.loc 1 2223 6 discriminator 3
 3053 007c FB68     		ldr	r3, [r7, #12]
 3054 007e DA6A     		ldr	r2, [r3, #44]
 3055 0080 1346     		mov	r3, r2
 3056 0082 9B00     		lsls	r3, r3, #2
 3057 0084 1344     		add	r3, r3, r2
 3058 0086 9B00     		lsls	r3, r3, #2
 3059 0088 274A     		ldr	r2, .L195+16
 3060 008a 1A44     		add	r2, r2, r3
 3061 008c FB68     		ldr	r3, [r7, #12]
 3062 008e 0433     		adds	r3, r3, #4
 3063 0090 1946     		mov	r1, r3
 3064 0092 1046     		mov	r0, r2
 3065 0094 FFF7FEFF 		bl	vListInsertEnd
2224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If the moved task has a priority higher than the current
2226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					task then a yield must be performed. */
2227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 3066              		.loc 1 2227 15 is_stmt 1 discriminator 3
 3067 0098 FB68     		ldr	r3, [r7, #12]
 3068 009a DA6A     		ldr	r2, [r3, #44]
 3069              		.loc 1 2227 43 discriminator 3
 3070 009c 234B     		ldr	r3, .L195+20
 3071 009e 1B68     		ldr	r3, [r3]
 3072 00a0 DB6A     		ldr	r3, [r3, #44]
 3073              		.loc 1 2227 8 discriminator 3
 3074 00a2 9A42     		cmp	r2, r3
 3075 00a4 02D3     		bcc	.L187
2228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xYieldPending = pdTRUE;
 3076              		.loc 1 2229 21
 3077 00a6 224B     		ldr	r3, .L195+24
 3078 00a8 0122     		movs	r2, #1
 3079 00aa 1A60     		str	r2, [r3]
 3080              	.L187:
2218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3081              		.loc 1 2218 12
 3082 00ac 1C4B     		ldr	r3, .L195+8
 3083 00ae 1B68     		ldr	r3, [r3]
2218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3084              		.loc 1 2218 52
 3085 00b0 002B     		cmp	r3, #0
 3086 00b2 CBD1     		bne	.L189
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 98


2230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB != NULL )
 3087              		.loc 1 2237 7
 3088 00b4 FB68     		ldr	r3, [r7, #12]
 3089 00b6 002B     		cmp	r3, #0
 3090 00b8 01D0     		beq	.L190
2238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* A task was unblocked while the scheduler was suspended,
2240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					which may have prevented the next unblock time from being
2241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					re-calculated, in which case re-calculate it now.  Mainly
2242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					important for low power tickless implementations, where
2243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					this can prevent an unnecessary exit from low power
2244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					state. */
2245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvResetNextTaskUnblockTime();
 3091              		.loc 1 2245 6
 3092 00ba FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 3093              	.L190:
 3094              	.LBB177:
2246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If any ticks occurred while the scheduler was suspended then
2249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				they should be processed now.  This ensures the tick count does
2250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				not	slip, and that any delayed tasks are resumed at the correct
2251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				time. */
2252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 3095              		.loc 1 2253 17
 3096 00be 1D4B     		ldr	r3, .L195+28
 3097 00c0 1B68     		ldr	r3, [r3]
 3098 00c2 7B60     		str	r3, [r7, #4]
2254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( xPendedCounts > ( TickType_t ) 0U )
 3099              		.loc 1 2255 8
 3100 00c4 7B68     		ldr	r3, [r7, #4]
 3101 00c6 002B     		cmp	r3, #0
 3102 00c8 10D0     		beq	.L191
 3103              	.L193:
2256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						do
2258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
2259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							if( xTaskIncrementTick() != pdFALSE )
 3104              		.loc 1 2259 12
 3105 00ca FFF7FEFF 		bl	xTaskIncrementTick
 3106 00ce 0346     		mov	r3, r0
 3107              		.loc 1 2259 10
 3108 00d0 002B     		cmp	r3, #0
 3109 00d2 02D0     		beq	.L192
2260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
2261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								xYieldPending = pdTRUE;
 3110              		.loc 1 2261 23
 3111 00d4 164B     		ldr	r3, .L195+24
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 99


 3112 00d6 0122     		movs	r2, #1
 3113 00d8 1A60     		str	r2, [r3]
 3114              	.L192:
2262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
2263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							else
2264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
2265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								mtCOVERAGE_TEST_MARKER();
2266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
2267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							--xPendedCounts;
 3115              		.loc 1 2267 8
 3116 00da 7B68     		ldr	r3, [r7, #4]
 3117 00dc 013B     		subs	r3, r3, #1
 3118 00de 7B60     		str	r3, [r7, #4]
2268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						} while( xPendedCounts > ( TickType_t ) 0U );
 3119              		.loc 1 2268 30
 3120 00e0 7B68     		ldr	r3, [r7, #4]
 3121 00e2 002B     		cmp	r3, #0
 3122 00e4 F1D1     		bne	.L193
2269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xPendedTicks = 0;
 3123              		.loc 1 2270 20
 3124 00e6 134B     		ldr	r3, .L195+28
 3125 00e8 0022     		movs	r2, #0
 3126 00ea 1A60     		str	r2, [r3]
 3127              	.L191:
 3128              	.LBE177:
2271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xYieldPending != pdFALSE )
 3129              		.loc 1 2278 23
 3130 00ec 104B     		ldr	r3, .L195+24
 3131 00ee 1B68     		ldr	r3, [r3]
 3132              		.loc 1 2278 7
 3133 00f0 002B     		cmp	r3, #0
 3134 00f2 09D0     		beq	.L186
2279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#if( configUSE_PREEMPTION != 0 )
2281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xAlreadyYielded = pdTRUE;
 3135              		.loc 1 2282 23
 3136 00f4 0123     		movs	r3, #1
 3137 00f6 BB60     		str	r3, [r7, #8]
2283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#endif
2285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
 3138              		.loc 1 2285 6
 3139 00f8 0F4B     		ldr	r3, .L195+32
 3140 00fa 4FF08052 		mov	r2, #268435456
 3141 00fe 1A60     		str	r2, [r3]
 3142              		.syntax unified
 3143              	@ 2285 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3144 0100 BFF34F8F 		dsb
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 100


 3145              	@ 0 "" 2
 3146              	@ 2285 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3147 0104 BFF36F8F 		isb
 3148              	@ 0 "" 2
 3149              		.thumb
 3150              		.syntax unified
 3151              	.L186:
2286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
2288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
2290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
 3152              		.loc 1 2298 2
 3153 0108 FFF7FEFF 		bl	vPortExitCritical
2299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xAlreadyYielded;
 3154              		.loc 1 2300 9
 3155 010c BB68     		ldr	r3, [r7, #8]
2301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3156              		.loc 1 2301 1
 3157 010e 1846     		mov	r0, r3
 3158 0110 1037     		adds	r7, r7, #16
 3159              	.LCFI99:
 3160              		.cfi_def_cfa_offset 8
 3161 0112 BD46     		mov	sp, r7
 3162              	.LCFI100:
 3163              		.cfi_def_cfa_register 13
 3164              		@ sp needed
 3165 0114 80BD     		pop	{r7, pc}
 3166              	.L196:
 3167 0116 00BF     		.align	2
 3168              	.L195:
 3169 0118 00000000 		.word	uxSchedulerSuspended
 3170 011c 00000000 		.word	uxCurrentNumberOfTasks
 3171 0120 00000000 		.word	xPendingReadyList
 3172 0124 00000000 		.word	uxTopReadyPriority
 3173 0128 00000000 		.word	pxReadyTasksLists
 3174 012c 00000000 		.word	pxCurrentTCB
 3175 0130 00000000 		.word	xYieldPending
 3176 0134 00000000 		.word	xPendedTicks
 3177 0138 04ED00E0 		.word	-536810236
 3178              		.cfi_endproc
 3179              	.LFE23:
 3181              		.section	.text.xTaskGetTickCount,"ax",%progbits
 3182              		.align	1
 3183              		.global	xTaskGetTickCount
 3184              		.syntax unified
 3185              		.thumb
 3186              		.thumb_func
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 101


 3188              	xTaskGetTickCount:
 3189              	.LFB24:
2302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTaskGetTickCount( void )
2305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 3190              		.loc 1 2305 1
 3191              		.cfi_startproc
 3192              		@ args = 0, pretend = 0, frame = 8
 3193              		@ frame_needed = 1, uses_anonymous_args = 0
 3194              		@ link register save eliminated.
 3195 0000 80B4     		push	{r7}
 3196              	.LCFI101:
 3197              		.cfi_def_cfa_offset 4
 3198              		.cfi_offset 7, -4
 3199 0002 83B0     		sub	sp, sp, #12
 3200              	.LCFI102:
 3201              		.cfi_def_cfa_offset 16
 3202 0004 00AF     		add	r7, sp, #0
 3203              	.LCFI103:
 3204              		.cfi_def_cfa_register 7
2306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTicks;
2307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Critical section required if running on a 16 bit processor. */
2309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portTICK_TYPE_ENTER_CRITICAL();
2310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTicks = xTickCount;
 3205              		.loc 1 2311 10
 3206 0006 054B     		ldr	r3, .L199
 3207 0008 1B68     		ldr	r3, [r3]
 3208 000a 7B60     		str	r3, [r7, #4]
2312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portTICK_TYPE_EXIT_CRITICAL();
2314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xTicks;
 3209              		.loc 1 2315 9
 3210 000c 7B68     		ldr	r3, [r7, #4]
2316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3211              		.loc 1 2316 1
 3212 000e 1846     		mov	r0, r3
 3213 0010 0C37     		adds	r7, r7, #12
 3214              	.LCFI104:
 3215              		.cfi_def_cfa_offset 4
 3216 0012 BD46     		mov	sp, r7
 3217              	.LCFI105:
 3218              		.cfi_def_cfa_register 13
 3219              		@ sp needed
 3220 0014 5DF8047B 		ldr	r7, [sp], #4
 3221              	.LCFI106:
 3222              		.cfi_restore 7
 3223              		.cfi_def_cfa_offset 0
 3224 0018 7047     		bx	lr
 3225              	.L200:
 3226 001a 00BF     		.align	2
 3227              	.L199:
 3228 001c 00000000 		.word	xTickCount
 3229              		.cfi_endproc
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 102


 3230              	.LFE24:
 3232              		.section	.text.xTaskGetTickCountFromISR,"ax",%progbits
 3233              		.align	1
 3234              		.global	xTaskGetTickCountFromISR
 3235              		.syntax unified
 3236              		.thumb
 3237              		.thumb_func
 3239              	xTaskGetTickCountFromISR:
 3240              	.LFB25:
2317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTaskGetTickCountFromISR( void )
2320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 3241              		.loc 1 2320 1
 3242              		.cfi_startproc
 3243              		@ args = 0, pretend = 0, frame = 8
 3244              		@ frame_needed = 1, uses_anonymous_args = 0
 3245 0000 80B5     		push	{r7, lr}
 3246              	.LCFI107:
 3247              		.cfi_def_cfa_offset 8
 3248              		.cfi_offset 7, -8
 3249              		.cfi_offset 14, -4
 3250 0002 82B0     		sub	sp, sp, #8
 3251              	.LCFI108:
 3252              		.cfi_def_cfa_offset 16
 3253 0004 00AF     		add	r7, sp, #0
 3254              	.LCFI109:
 3255              		.cfi_def_cfa_register 7
2321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xReturn;
2322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxSavedInterruptStatus;
2323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
2325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
2326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	above the maximum system call priority are kept permanently enabled, even
2327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
2328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
2329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
2330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
2331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	assigned a priority above the configured maximum system call priority.
2332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
2333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	that have been assigned a priority at or (logically) below the maximum
2334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
2335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
2336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	More information (albeit Cortex-M specific) is provided on the following
2337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	link: https://www.freertos.org/RTOS-Cortex-M3-M4.html */
2338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 3256              		.loc 1 2338 2
 3257 0006 FFF7FEFF 		bl	vPortValidateInterruptPriority
2339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uxSavedInterruptStatus = portTICK_TYPE_SET_INTERRUPT_MASK_FROM_ISR();
 3258              		.loc 1 2340 25
 3259 000a 0023     		movs	r3, #0
 3260 000c 7B60     		str	r3, [r7, #4]
2341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = xTickCount;
 3261              		.loc 1 2342 11
 3262 000e 044B     		ldr	r3, .L203
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 103


 3263 0010 1B68     		ldr	r3, [r3]
 3264 0012 3B60     		str	r3, [r7]
2343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portTICK_TYPE_CLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
2345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xReturn;
 3265              		.loc 1 2346 9
 3266 0014 3B68     		ldr	r3, [r7]
2347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3267              		.loc 1 2347 1
 3268 0016 1846     		mov	r0, r3
 3269 0018 0837     		adds	r7, r7, #8
 3270              	.LCFI110:
 3271              		.cfi_def_cfa_offset 8
 3272 001a BD46     		mov	sp, r7
 3273              	.LCFI111:
 3274              		.cfi_def_cfa_register 13
 3275              		@ sp needed
 3276 001c 80BD     		pop	{r7, pc}
 3277              	.L204:
 3278 001e 00BF     		.align	2
 3279              	.L203:
 3280 0020 00000000 		.word	xTickCount
 3281              		.cfi_endproc
 3282              	.LFE25:
 3284              		.section	.text.uxTaskGetNumberOfTasks,"ax",%progbits
 3285              		.align	1
 3286              		.global	uxTaskGetNumberOfTasks
 3287              		.syntax unified
 3288              		.thumb
 3289              		.thumb_func
 3291              	uxTaskGetNumberOfTasks:
 3292              	.LFB26:
2348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxTaskGetNumberOfTasks( void )
2351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 3293              		.loc 1 2351 1
 3294              		.cfi_startproc
 3295              		@ args = 0, pretend = 0, frame = 0
 3296              		@ frame_needed = 1, uses_anonymous_args = 0
 3297              		@ link register save eliminated.
 3298 0000 80B4     		push	{r7}
 3299              	.LCFI112:
 3300              		.cfi_def_cfa_offset 4
 3301              		.cfi_offset 7, -4
 3302 0002 00AF     		add	r7, sp, #0
 3303              	.LCFI113:
 3304              		.cfi_def_cfa_register 7
2352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required because the variables are of type
2353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t. */
2354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return uxCurrentNumberOfTasks;
 3305              		.loc 1 2354 9
 3306 0004 034B     		ldr	r3, .L207
 3307 0006 1B68     		ldr	r3, [r3]
2355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3308              		.loc 1 2355 1
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 104


 3309 0008 1846     		mov	r0, r3
 3310 000a BD46     		mov	sp, r7
 3311              	.LCFI114:
 3312              		.cfi_def_cfa_register 13
 3313              		@ sp needed
 3314 000c 5DF8047B 		ldr	r7, [sp], #4
 3315              	.LCFI115:
 3316              		.cfi_restore 7
 3317              		.cfi_def_cfa_offset 0
 3318 0010 7047     		bx	lr
 3319              	.L208:
 3320 0012 00BF     		.align	2
 3321              	.L207:
 3322 0014 00000000 		.word	uxCurrentNumberOfTasks
 3323              		.cfi_endproc
 3324              	.LFE26:
 3326              		.section	.text.pcTaskGetName,"ax",%progbits
 3327              		.align	1
 3328              		.global	pcTaskGetName
 3329              		.syntax unified
 3330              		.thumb
 3331              		.thumb_func
 3333              	pcTaskGetName:
 3334              	.LFB27:
2356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** char *pcTaskGetName( TaskHandle_t xTaskToQuery ) /*lint !e971 Unqualified char types are allowed fo
2359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 3335              		.loc 1 2359 1
 3336              		.cfi_startproc
 3337              		@ args = 0, pretend = 0, frame = 16
 3338              		@ frame_needed = 1, uses_anonymous_args = 0
 3339              		@ link register save eliminated.
 3340 0000 80B4     		push	{r7}
 3341              	.LCFI116:
 3342              		.cfi_def_cfa_offset 4
 3343              		.cfi_offset 7, -4
 3344 0002 85B0     		sub	sp, sp, #20
 3345              	.LCFI117:
 3346              		.cfi_def_cfa_offset 24
 3347 0004 00AF     		add	r7, sp, #0
 3348              	.LCFI118:
 3349              		.cfi_def_cfa_register 7
 3350 0006 7860     		str	r0, [r7, #4]
2360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB;
2361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If null is passed in here then the name of the calling task is being
2363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	queried. */
2364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTCB = prvGetTCBFromHandle( xTaskToQuery );
 3351              		.loc 1 2364 10
 3352 0008 7B68     		ldr	r3, [r7, #4]
 3353 000a 002B     		cmp	r3, #0
 3354 000c 02D1     		bne	.L210
 3355              		.loc 1 2364 10 is_stmt 0 discriminator 1
 3356 000e 0D4B     		ldr	r3, .L215
 3357 0010 1B68     		ldr	r3, [r3]
 3358 0012 00E0     		b	.L211
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 105


 3359              	.L210:
 3360              		.loc 1 2364 10 discriminator 2
 3361 0014 7B68     		ldr	r3, [r7, #4]
 3362              	.L211:
 3363              		.loc 1 2364 8 is_stmt 1 discriminator 4
 3364 0016 FB60     		str	r3, [r7, #12]
2365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
 3365              		.loc 1 2365 2 discriminator 4
 3366 0018 FB68     		ldr	r3, [r7, #12]
 3367 001a 002B     		cmp	r3, #0
 3368 001c 0AD1     		bne	.L212
 3369              	.LBB178:
 3370              	.LBB179:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3371              		.loc 2 195 2
 3372              		.syntax unified
 3373              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3374 001e 4FF05003 			mov r3, #80												
 3375 0022 83F31188 		msr basepri, r3											
 3376 0026 BFF36F8F 		isb														
 3377 002a BFF34F8F 		dsb														
 3378              	
 3379              	@ 0 "" 2
 3380              		.thumb
 3381              		.syntax unified
 3382 002e BB60     		str	r3, [r7, #8]
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3383              		.loc 2 203 1
 3384 0030 00BF     		nop
 3385              	.L213:
 3386              	.LBE179:
 3387              	.LBE178:
 3388              		.loc 1 2365 2 discriminator 1
 3389 0032 FEE7     		b	.L213
 3390              	.L212:
2366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 3391              		.loc 1 2366 9
 3392 0034 FB68     		ldr	r3, [r7, #12]
 3393 0036 3433     		adds	r3, r3, #52
2367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3394              		.loc 1 2367 1
 3395 0038 1846     		mov	r0, r3
 3396 003a 1437     		adds	r7, r7, #20
 3397              	.LCFI119:
 3398              		.cfi_def_cfa_offset 4
 3399 003c BD46     		mov	sp, r7
 3400              	.LCFI120:
 3401              		.cfi_def_cfa_register 13
 3402              		@ sp needed
 3403 003e 5DF8047B 		ldr	r7, [sp], #4
 3404              	.LCFI121:
 3405              		.cfi_restore 7
 3406              		.cfi_def_cfa_offset 0
 3407 0042 7047     		bx	lr
 3408              	.L216:
 3409              		.align	2
 3410              	.L215:
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 106


 3411 0044 00000000 		.word	pxCurrentTCB
 3412              		.cfi_endproc
 3413              	.LFE27:
 3415              		.section	.text.uxTaskGetSystemState,"ax",%progbits
 3416              		.align	1
 3417              		.global	uxTaskGetSystemState
 3418              		.syntax unified
 3419              		.thumb
 3420              		.thumb_func
 3422              	uxTaskGetSystemState:
 3423              	.LFB28:
2368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static TCB_t *prvSearchForNameWithinSingleList( List_t *pxList, const char pcNameToQuery[] )
2373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNextTCB, *pxFirstTCB, *pxReturn = NULL;
2375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t x;
2376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	char cNextChar;
2377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xBreakLoop;
2378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This function is called with the scheduler suspended. */
2380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
2382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList );  /*lint !e9079 void * is used as this macro i
2384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			do
2386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList ); /*lint !e9079 void * is used as this macro is
2388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Check each character in the name looking for a match or
2390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mismatch. */
2391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xBreakLoop = pdFALSE;
2392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
2393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					cNextChar = pxNextTCB->pcTaskName[ x ];
2395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( cNextChar != pcNameToQuery[ x ] )
2397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Characters didn't match. */
2399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xBreakLoop = pdTRUE;
2400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else if( cNextChar == ( char ) 0x00 )
2402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Both strings terminated, a match must have been
2404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						found. */
2405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxReturn = pxNextTCB;
2406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xBreakLoop = pdTRUE;
2407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( xBreakLoop != pdFALSE )
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 107


2414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break;
2416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxReturn != NULL )
2420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The handle has been found. */
2422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
2423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			} while( pxNextTCB != pxFirstTCB );
2426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return pxReturn;
2433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskGetHandle( const char *pcNameToQuery ) /*lint !e971 Unqualified char types are a
2441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxQueue = configMAX_PRIORITIES;
2443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t* pxTCB;
2444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Task names will be truncated to configMAX_TASK_NAME_LEN - 1 bytes. */
2446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( strlen( pcNameToQuery ) < configMAX_TASK_NAME_LEN );
2447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
2449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Search the ready lists. */
2451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			do
2452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxQueue--;
2454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) &( pxReadyTasksLists[ uxQueue ] ), pcNam
2455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB != NULL )
2457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Found the handle. */
2459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
2460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the casts
2463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Search the delayed lists. */
2465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == NULL )
2466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxDelayedTaskList, pcNameToQuery );
2468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == NULL )
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 108


2471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxOverflowDelayedTaskList, pcNameToQuery
2473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( INCLUDE_vTaskSuspend == 1 )
2476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB == NULL )
2478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Search the suspended list. */
2480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = prvSearchForNameWithinSingleList( &xSuspendedTaskList, pcNameToQuery );
2481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
2484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( INCLUDE_vTaskDelete == 1 )
2486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB == NULL )
2488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Search the deleted list. */
2490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = prvSearchForNameWithinSingleList( &xTasksWaitingTermination, pcNameToQuery );
2491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
2494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xTaskResumeAll();
2496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return pxTCB;
2498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskGetSystemState( TaskStatus_t * const pxTaskStatusArray, const UBaseType_t uxArra
2506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3424              		.loc 1 2506 2
 3425              		.cfi_startproc
 3426              		@ args = 0, pretend = 0, frame = 24
 3427              		@ frame_needed = 1, uses_anonymous_args = 0
 3428 0000 80B5     		push	{r7, lr}
 3429              	.LCFI122:
 3430              		.cfi_def_cfa_offset 8
 3431              		.cfi_offset 7, -8
 3432              		.cfi_offset 14, -4
 3433 0002 86B0     		sub	sp, sp, #24
 3434              	.LCFI123:
 3435              		.cfi_def_cfa_offset 32
 3436 0004 00AF     		add	r7, sp, #0
 3437              	.LCFI124:
 3438              		.cfi_def_cfa_register 7
 3439 0006 F860     		str	r0, [r7, #12]
 3440 0008 B960     		str	r1, [r7, #8]
 3441 000a 7A60     		str	r2, [r7, #4]
2507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTask = 0, uxQueue = configMAX_PRIORITIES;
 3442              		.loc 1 2507 14
 3443 000c 0023     		movs	r3, #0
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 109


 3444 000e 7B61     		str	r3, [r7, #20]
 3445              		.loc 1 2507 26
 3446 0010 3823     		movs	r3, #56
 3447 0012 3B61     		str	r3, [r7, #16]
2508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
 3448              		.loc 1 2509 3
 3449 0014 FFF7FEFF 		bl	vTaskSuspendAll
2510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Is there a space in the array for each task in the system? */
2512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxArraySize >= uxCurrentNumberOfTasks )
 3450              		.loc 1 2512 20
 3451 0018 3B4B     		ldr	r3, .L221
 3452 001a 1B68     		ldr	r3, [r3]
 3453              		.loc 1 2512 6
 3454 001c BA68     		ldr	r2, [r7, #8]
 3455 001e 9A42     		cmp	r2, r3
 3456 0020 6BD3     		bcc	.L218
 3457              	.L219:
2513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Fill in an TaskStatus_t structure with information on each
2515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task in the Ready state. */
2516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				do
2517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxQueue--;
 3458              		.loc 1 2518 13 discriminator 1
 3459 0022 3B69     		ldr	r3, [r7, #16]
 3460 0024 013B     		subs	r3, r3, #1
 3461 0026 3B61     		str	r3, [r7, #16]
2519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &( pxReadyTasksLists
 3462              		.loc 1 2519 66 discriminator 1
 3463 0028 7A69     		ldr	r2, [r7, #20]
 3464 002a 1346     		mov	r3, r2
 3465 002c DB00     		lsls	r3, r3, #3
 3466 002e 1344     		add	r3, r3, r2
 3467 0030 9B00     		lsls	r3, r3, #2
 3468 0032 1A46     		mov	r2, r3
 3469              		.loc 1 2519 46 discriminator 1
 3470 0034 FB68     		ldr	r3, [r7, #12]
 3471 0036 9818     		adds	r0, r3, r2
 3472              		.loc 1 2519 16 discriminator 1
 3473 0038 3A69     		ldr	r2, [r7, #16]
 3474 003a 1346     		mov	r3, r2
 3475 003c 9B00     		lsls	r3, r3, #2
 3476 003e 1344     		add	r3, r3, r2
 3477 0040 9B00     		lsls	r3, r3, #2
 3478 0042 324A     		ldr	r2, .L221+4
 3479 0044 1344     		add	r3, r3, r2
 3480 0046 0122     		movs	r2, #1
 3481 0048 1946     		mov	r1, r3
 3482 004a FFF7FEFF 		bl	prvListTasksWithinSingleList
 3483 004e 0246     		mov	r2, r0
 3484              		.loc 1 2519 13 discriminator 1
 3485 0050 7B69     		ldr	r3, [r7, #20]
 3486 0052 1344     		add	r3, r3, r2
 3487 0054 7B61     		str	r3, [r7, #20]
2520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 110


2521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the cast
 3488              		.loc 1 2521 22 discriminator 1
 3489 0056 3B69     		ldr	r3, [r7, #16]
 3490 0058 002B     		cmp	r3, #0
 3491 005a E2D1     		bne	.L219
2522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Fill in an TaskStatus_t structure with information on each
2524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task in the Blocked state. */
2525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxDelaye
 3492              		.loc 1 2525 65
 3493 005c 7A69     		ldr	r2, [r7, #20]
 3494 005e 1346     		mov	r3, r2
 3495 0060 DB00     		lsls	r3, r3, #3
 3496 0062 1344     		add	r3, r3, r2
 3497 0064 9B00     		lsls	r3, r3, #2
 3498 0066 1A46     		mov	r2, r3
 3499              		.loc 1 2525 45
 3500 0068 FB68     		ldr	r3, [r7, #12]
 3501 006a 1344     		add	r3, r3, r2
 3502              		.loc 1 2525 15
 3503 006c 284A     		ldr	r2, .L221+8
 3504 006e 1168     		ldr	r1, [r2]
 3505 0070 0222     		movs	r2, #2
 3506 0072 1846     		mov	r0, r3
 3507 0074 FFF7FEFF 		bl	prvListTasksWithinSingleList
 3508 0078 0246     		mov	r2, r0
 3509              		.loc 1 2525 12
 3510 007a 7B69     		ldr	r3, [r7, #20]
 3511 007c 1344     		add	r3, r3, r2
 3512 007e 7B61     		str	r3, [r7, #20]
2526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxOverfl
 3513              		.loc 1 2526 65
 3514 0080 7A69     		ldr	r2, [r7, #20]
 3515 0082 1346     		mov	r3, r2
 3516 0084 DB00     		lsls	r3, r3, #3
 3517 0086 1344     		add	r3, r3, r2
 3518 0088 9B00     		lsls	r3, r3, #2
 3519 008a 1A46     		mov	r2, r3
 3520              		.loc 1 2526 45
 3521 008c FB68     		ldr	r3, [r7, #12]
 3522 008e 1344     		add	r3, r3, r2
 3523              		.loc 1 2526 15
 3524 0090 204A     		ldr	r2, .L221+12
 3525 0092 1168     		ldr	r1, [r2]
 3526 0094 0222     		movs	r2, #2
 3527 0096 1846     		mov	r0, r3
 3528 0098 FFF7FEFF 		bl	prvListTasksWithinSingleList
 3529 009c 0246     		mov	r2, r0
 3530              		.loc 1 2526 12
 3531 009e 7B69     		ldr	r3, [r7, #20]
 3532 00a0 1344     		add	r3, r3, r2
 3533 00a2 7B61     		str	r3, [r7, #20]
2527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if( INCLUDE_vTaskDelete == 1 )
2529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Fill in an TaskStatus_t structure with information on
2531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					each task that has been deleted but not yet cleaned up. */
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 111


2532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xTasksWaitingTermin
 3534              		.loc 1 2532 66
 3535 00a4 7A69     		ldr	r2, [r7, #20]
 3536 00a6 1346     		mov	r3, r2
 3537 00a8 DB00     		lsls	r3, r3, #3
 3538 00aa 1344     		add	r3, r3, r2
 3539 00ac 9B00     		lsls	r3, r3, #2
 3540 00ae 1A46     		mov	r2, r3
 3541              		.loc 1 2532 46
 3542 00b0 FB68     		ldr	r3, [r7, #12]
 3543 00b2 1344     		add	r3, r3, r2
 3544              		.loc 1 2532 16
 3545 00b4 0422     		movs	r2, #4
 3546 00b6 1849     		ldr	r1, .L221+16
 3547 00b8 1846     		mov	r0, r3
 3548 00ba FFF7FEFF 		bl	prvListTasksWithinSingleList
 3549 00be 0246     		mov	r2, r0
 3550              		.loc 1 2532 13
 3551 00c0 7B69     		ldr	r3, [r7, #20]
 3552 00c2 1344     		add	r3, r3, r2
 3553 00c4 7B61     		str	r3, [r7, #20]
2533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
2535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( INCLUDE_vTaskSuspend == 1 )
2537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Fill in an TaskStatus_t structure with information on
2539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					each task in the Suspended state. */
2540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xSuspendedTaskList,
 3554              		.loc 1 2540 66
 3555 00c6 7A69     		ldr	r2, [r7, #20]
 3556 00c8 1346     		mov	r3, r2
 3557 00ca DB00     		lsls	r3, r3, #3
 3558 00cc 1344     		add	r3, r3, r2
 3559 00ce 9B00     		lsls	r3, r3, #2
 3560 00d0 1A46     		mov	r2, r3
 3561              		.loc 1 2540 46
 3562 00d2 FB68     		ldr	r3, [r7, #12]
 3563 00d4 1344     		add	r3, r3, r2
 3564              		.loc 1 2540 16
 3565 00d6 0322     		movs	r2, #3
 3566 00d8 1049     		ldr	r1, .L221+20
 3567 00da 1846     		mov	r0, r3
 3568 00dc FFF7FEFF 		bl	prvListTasksWithinSingleList
 3569 00e0 0246     		mov	r2, r0
 3570              		.loc 1 2540 13
 3571 00e2 7B69     		ldr	r3, [r7, #20]
 3572 00e4 1344     		add	r3, r3, r2
 3573 00e6 7B61     		str	r3, [r7, #20]
2541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
2543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( configGENERATE_RUN_TIME_STATS == 1)
2545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pulTotalRunTime != NULL )
 3574              		.loc 1 2546 8
 3575 00e8 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 112


 3576 00ea 002B     		cmp	r3, #0
 3577 00ec 05D0     		beq	.L218
 3578              	.LBB180:
2547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
2549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							portALT_GET_RUN_TIME_COUNTER_VALUE( ( *pulTotalRunTime ) );
2550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#else
2551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							*pulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
 3579              		.loc 1 2551 27
 3580 00ee FFF7FEFF 		bl	GET_RUN_TIME_COUNTER_VALUE
 3581 00f2 0346     		mov	r3, r0
 3582 00f4 1A46     		mov	r2, r3
 3583              		.loc 1 2551 25
 3584 00f6 7B68     		ldr	r3, [r7, #4]
 3585 00f8 1A60     		str	r2, [r3]
 3586              	.L218:
 3587              	.LBE180:
2552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#endif
2553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#else
2556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pulTotalRunTime != NULL )
2558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						*pulTotalRunTime = 0;
2560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
2563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xTaskResumeAll();
 3588              		.loc 1 2569 12
 3589 00fa FFF7FEFF 		bl	xTaskResumeAll
2570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxTask;
 3590              		.loc 1 2571 10
 3591 00fe 7B69     		ldr	r3, [r7, #20]
2572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3592              		.loc 1 2572 2
 3593 0100 1846     		mov	r0, r3
 3594 0102 1837     		adds	r7, r7, #24
 3595              	.LCFI125:
 3596              		.cfi_def_cfa_offset 8
 3597 0104 BD46     		mov	sp, r7
 3598              	.LCFI126:
 3599              		.cfi_def_cfa_register 13
 3600              		@ sp needed
 3601 0106 80BD     		pop	{r7, pc}
 3602              	.L222:
 3603              		.align	2
 3604              	.L221:
 3605 0108 00000000 		.word	uxCurrentNumberOfTasks
 3606 010c 00000000 		.word	pxReadyTasksLists
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 113


 3607 0110 00000000 		.word	pxDelayedTaskList
 3608 0114 00000000 		.word	pxOverflowDelayedTaskList
 3609 0118 00000000 		.word	xTasksWaitingTermination
 3610 011c 00000000 		.word	xSuspendedTaskList
 3611              		.cfi_endproc
 3612              	.LFE28:
 3614              		.section	.text.vTaskStepTick,"ax",%progbits
 3615              		.align	1
 3616              		.global	vTaskStepTick
 3617              		.syntax unified
 3618              		.thumb
 3619              		.thumb_func
 3621              	vTaskStepTick:
 3622              	.LFB29:
2573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
2575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetIdleTaskHandle == 1 )
2578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskGetIdleTaskHandle( void )
2580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTaskGetIdleTaskHandle() is called before the scheduler has been
2582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		started, then xIdleTaskHandle will be NULL. */
2583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( xIdleTaskHandle != NULL ) );
2584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xIdleTaskHandle;
2585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskGetIdleTaskHandle */
2588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* This conditional compilation should use inequality to 0, not equality to 1.
2591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** This is to ensure vTaskStepTick() is available when user defined low power mode
2592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** implementations require configUSE_TICKLESS_IDLE to be set to a value other than
2593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 1. */
2594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
2595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskStepTick( const TickType_t xTicksToJump )
2597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3623              		.loc 1 2597 2
 3624              		.cfi_startproc
 3625              		@ args = 0, pretend = 0, frame = 16
 3626              		@ frame_needed = 1, uses_anonymous_args = 0
 3627              		@ link register save eliminated.
 3628 0000 80B4     		push	{r7}
 3629              	.LCFI127:
 3630              		.cfi_def_cfa_offset 4
 3631              		.cfi_offset 7, -4
 3632 0002 85B0     		sub	sp, sp, #20
 3633              	.LCFI128:
 3634              		.cfi_def_cfa_offset 24
 3635 0004 00AF     		add	r7, sp, #0
 3636              	.LCFI129:
 3637              		.cfi_def_cfa_register 7
 3638 0006 7860     		str	r0, [r7, #4]
2598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Correct the tick count value after a period during which the tick
2599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		was suppressed.  Note this does *not* call the tick hook function for
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 114


2600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		each stepped tick. */
2601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( xTickCount + xTicksToJump ) <= xNextTaskUnblockTime );
 3639              		.loc 1 2601 3
 3640 0008 0F4B     		ldr	r3, .L226
 3641 000a 1A68     		ldr	r2, [r3]
 3642 000c 7B68     		ldr	r3, [r7, #4]
 3643 000e 1A44     		add	r2, r2, r3
 3644 0010 0E4B     		ldr	r3, .L226+4
 3645 0012 1B68     		ldr	r3, [r3]
 3646 0014 9A42     		cmp	r2, r3
 3647 0016 0AD9     		bls	.L224
 3648              	.LBB181:
 3649              	.LBB182:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3650              		.loc 2 195 2
 3651              		.syntax unified
 3652              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3653 0018 4FF05003 			mov r3, #80												
 3654 001c 83F31188 		msr basepri, r3											
 3655 0020 BFF36F8F 		isb														
 3656 0024 BFF34F8F 		dsb														
 3657              	
 3658              	@ 0 "" 2
 3659              		.thumb
 3660              		.syntax unified
 3661 0028 FB60     		str	r3, [r7, #12]
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3662              		.loc 2 203 1
 3663 002a 00BF     		nop
 3664              	.L225:
 3665              	.LBE182:
 3666              	.LBE181:
 3667              		.loc 1 2601 3 discriminator 1
 3668 002c FEE7     		b	.L225
 3669              	.L224:
2602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount += xTicksToJump;
 3670              		.loc 1 2602 14
 3671 002e 064B     		ldr	r3, .L226
 3672 0030 1A68     		ldr	r2, [r3]
 3673 0032 7B68     		ldr	r3, [r7, #4]
 3674 0034 1344     		add	r3, r3, r2
 3675 0036 044A     		ldr	r2, .L226
 3676 0038 1360     		str	r3, [r2]
2603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceINCREASE_TICK_COUNT( xTicksToJump );
2604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3677              		.loc 1 2604 2
 3678 003a 00BF     		nop
 3679 003c 1437     		adds	r7, r7, #20
 3680              	.LCFI130:
 3681              		.cfi_def_cfa_offset 4
 3682 003e BD46     		mov	sp, r7
 3683              	.LCFI131:
 3684              		.cfi_def_cfa_register 13
 3685              		@ sp needed
 3686 0040 5DF8047B 		ldr	r7, [sp], #4
 3687              	.LCFI132:
 3688              		.cfi_restore 7
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 115


 3689              		.cfi_def_cfa_offset 0
 3690 0044 7047     		bx	lr
 3691              	.L227:
 3692 0046 00BF     		.align	2
 3693              	.L226:
 3694 0048 00000000 		.word	xTickCount
 3695 004c 00000000 		.word	xNextTaskUnblockTime
 3696              		.cfi_endproc
 3697              	.LFE29:
 3699              		.section	.text.xTaskCatchUpTicks,"ax",%progbits
 3700              		.align	1
 3701              		.global	xTaskCatchUpTicks
 3702              		.syntax unified
 3703              		.thumb
 3704              		.thumb_func
 3706              	xTaskCatchUpTicks:
 3707              	.LFB30:
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskCatchUpTicks( TickType_t xTicksToCatchUp )
2610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 3708              		.loc 1 2610 1
 3709              		.cfi_startproc
 3710              		@ args = 0, pretend = 0, frame = 16
 3711              		@ frame_needed = 1, uses_anonymous_args = 0
 3712 0000 80B5     		push	{r7, lr}
 3713              	.LCFI133:
 3714              		.cfi_def_cfa_offset 8
 3715              		.cfi_offset 7, -8
 3716              		.cfi_offset 14, -4
 3717 0002 84B0     		sub	sp, sp, #16
 3718              	.LCFI134:
 3719              		.cfi_def_cfa_offset 24
 3720 0004 00AF     		add	r7, sp, #0
 3721              	.LCFI135:
 3722              		.cfi_def_cfa_register 7
 3723 0006 7860     		str	r0, [r7, #4]
2611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xYieldRequired = pdFALSE;
 3724              		.loc 1 2611 12
 3725 0008 0023     		movs	r3, #0
 3726 000a FB60     		str	r3, [r7, #12]
2612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Must not be called with the scheduler suspended as the implementation
2614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	relies on xPendedTicks being wound down to 0 in xTaskResumeAll(). */
2615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( uxSchedulerSuspended == 0 );
 3727              		.loc 1 2615 2
 3728 000c 0F4B     		ldr	r3, .L232
 3729 000e 1B68     		ldr	r3, [r3]
 3730 0010 002B     		cmp	r3, #0
 3731 0012 0AD0     		beq	.L229
 3732              	.LBB183:
 3733              	.LBB184:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3734              		.loc 2 195 2
 3735              		.syntax unified
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 116


 3736              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3737 0014 4FF05003 			mov r3, #80												
 3738 0018 83F31188 		msr basepri, r3											
 3739 001c BFF36F8F 		isb														
 3740 0020 BFF34F8F 		dsb														
 3741              	
 3742              	@ 0 "" 2
 3743              		.thumb
 3744              		.syntax unified
 3745 0024 BB60     		str	r3, [r7, #8]
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3746              		.loc 2 203 1
 3747 0026 00BF     		nop
 3748              	.L230:
 3749              	.LBE184:
 3750              	.LBE183:
 3751              		.loc 1 2615 2 discriminator 1
 3752 0028 FEE7     		b	.L230
 3753              	.L229:
2616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Use xPendedTicks to mimic xTicksToCatchUp number of ticks occurring when
2618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the scheduler is suspended so the ticks are executed in xTaskResumeAll(). */
2619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vTaskSuspendAll();
 3754              		.loc 1 2619 2
 3755 002a FFF7FEFF 		bl	vTaskSuspendAll
2620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xPendedTicks += xTicksToCatchUp;
 3756              		.loc 1 2620 15
 3757 002e 084B     		ldr	r3, .L232+4
 3758 0030 1A68     		ldr	r2, [r3]
 3759 0032 7B68     		ldr	r3, [r7, #4]
 3760 0034 1344     		add	r3, r3, r2
 3761 0036 064A     		ldr	r2, .L232+4
 3762 0038 1360     		str	r3, [r2]
2621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xYieldRequired = xTaskResumeAll();
 3763              		.loc 1 2621 19
 3764 003a FFF7FEFF 		bl	xTaskResumeAll
 3765 003e F860     		str	r0, [r7, #12]
2622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xYieldRequired;
 3766              		.loc 1 2623 9
 3767 0040 FB68     		ldr	r3, [r7, #12]
2624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3768              		.loc 1 2624 1
 3769 0042 1846     		mov	r0, r3
 3770 0044 1037     		adds	r7, r7, #16
 3771              	.LCFI136:
 3772              		.cfi_def_cfa_offset 8
 3773 0046 BD46     		mov	sp, r7
 3774              	.LCFI137:
 3775              		.cfi_def_cfa_register 13
 3776              		@ sp needed
 3777 0048 80BD     		pop	{r7, pc}
 3778              	.L233:
 3779 004a 00BF     		.align	2
 3780              	.L232:
 3781 004c 00000000 		.word	uxSchedulerSuspended
 3782 0050 00000000 		.word	xPendedTicks
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 117


 3783              		.cfi_endproc
 3784              	.LFE30:
 3786              		.section	.text.xTaskIncrementTick,"ax",%progbits
 3787              		.align	1
 3788              		.global	xTaskIncrementTick
 3789              		.syntax unified
 3790              		.thumb
 3791              		.thumb_func
 3793              	xTaskIncrementTick:
 3794              	.LFB31:
2625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskAbortDelay == 1 )
2628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskAbortDelay( TaskHandle_t xTask )
2630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB = xTask;
2632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
2633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTCB );
2635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
2637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* A task can only be prematurely removed from the Blocked state if
2639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			it is actually in the Blocked state. */
2640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( eTaskGetState( xTask ) == eBlocked )
2641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
2643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Remove the reference to the task from the blocked list.  An
2645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				interrupt won't touch the xStateListItem because the
2646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				scheduler is suspended. */
2647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Is the task waiting on an event also?  If so remove it from
2650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the event list too.  Interrupts can touch the event list item,
2651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				even though the scheduler is suspended, so a critical section
2652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				is used. */
2653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskENTER_CRITICAL();
2654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* This lets the task know it was forcibly removed from the
2660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						blocked state so it should not re-evaluate its block time and
2661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						then block again. */
2662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB->ucDelayAborted = pdTRUE;
2663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskEXIT_CRITICAL();
2670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Place the unblocked task into the appropriate ready list. */
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 118


2672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
2673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A task being unblocked cannot cause an immediate context
2675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				switch if preemption is turned off. */
2676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if (  configUSE_PREEMPTION == 1 )
2677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Preemption is on, but a context switch should only be
2679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					performed if the unblocked task has a priority that is
2680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					equal to or higher than the currently executing task. */
2681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
2682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Pend the yield to be performed when the scheduler
2684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						is unsuspended. */
2685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xYieldPending = pdTRUE;
2686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif /* configUSE_PREEMPTION */
2693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdFAIL;
2697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xTaskResumeAll();
2700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskAbortDelay */
2705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskIncrementTick( void )
2708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 3795              		.loc 1 2708 1
 3796              		.cfi_startproc
 3797              		@ args = 0, pretend = 0, frame = 24
 3798              		@ frame_needed = 1, uses_anonymous_args = 0
 3799 0000 80B5     		push	{r7, lr}
 3800              	.LCFI138:
 3801              		.cfi_def_cfa_offset 8
 3802              		.cfi_offset 7, -8
 3803              		.cfi_offset 14, -4
 3804 0002 86B0     		sub	sp, sp, #24
 3805              	.LCFI139:
 3806              		.cfi_def_cfa_offset 32
 3807 0004 00AF     		add	r7, sp, #0
 3808              	.LCFI140:
 3809              		.cfi_def_cfa_register 7
2709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t * pxTCB;
2710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xItemValue;
2711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xSwitchRequired = pdFALSE;
 3810              		.loc 1 2711 12
 3811 0006 0023     		movs	r3, #0
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 119


 3812 0008 7B61     		str	r3, [r7, #20]
2712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Called by the portable layer each time a tick interrupt occurs.
2714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	Increments the tick then checks to see if the new tick value will cause any
2715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	tasks to be unblocked. */
2716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	traceTASK_INCREMENT_TICK( xTickCount );
2717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 3813              		.loc 1 2717 27
 3814 000a 4F4B     		ldr	r3, .L249
 3815 000c 1B68     		ldr	r3, [r3]
 3816              		.loc 1 2717 4
 3817 000e 002B     		cmp	r3, #0
 3818 0010 40F08F80 		bne	.L235
 3819              	.LBB185:
2718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Minor optimisation.  The tick count cannot change in this
2720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		block. */
2721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 3820              		.loc 1 2721 49
 3821 0014 4D4B     		ldr	r3, .L249+4
 3822 0016 1B68     		ldr	r3, [r3]
 3823              		.loc 1 2721 20
 3824 0018 0133     		adds	r3, r3, #1
 3825 001a 3B61     		str	r3, [r7, #16]
2722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Increment the RTOS tick, switching the delayed and overflowed
2724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		delayed lists if it wraps to 0. */
2725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount = xConstTickCount;
 3826              		.loc 1 2725 14
 3827 001c 4B4A     		ldr	r2, .L249+4
 3828 001e 3B69     		ldr	r3, [r7, #16]
 3829 0020 1360     		str	r3, [r2]
2726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as
 3830              		.loc 1 2727 5
 3831 0022 3B69     		ldr	r3, [r7, #16]
 3832 0024 002B     		cmp	r3, #0
 3833 0026 20D1     		bne	.L236
 3834              	.LBB186:
2728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskSWITCH_DELAYED_LISTS();
 3835              		.loc 1 2729 4
 3836 0028 494B     		ldr	r3, .L249+8
 3837 002a 1B68     		ldr	r3, [r3]
 3838 002c 1B68     		ldr	r3, [r3]
 3839 002e 002B     		cmp	r3, #0
 3840 0030 0AD0     		beq	.L237
 3841              	.LBB187:
 3842              	.LBB188:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3843              		.loc 2 195 2
 3844              		.syntax unified
 3845              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3846 0032 4FF05003 			mov r3, #80												
 3847 0036 83F31188 		msr basepri, r3											
 3848 003a BFF36F8F 		isb														
 3849 003e BFF34F8F 		dsb														
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 120


 3850              	
 3851              	@ 0 "" 2
 3852              		.thumb
 3853              		.syntax unified
 3854 0042 3B60     		str	r3, [r7]
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3855              		.loc 2 203 1
 3856 0044 00BF     		nop
 3857              	.L238:
 3858              	.LBE188:
 3859              	.LBE187:
 3860              		.loc 1 2729 4 discriminator 1
 3861 0046 FEE7     		b	.L238
 3862              	.L237:
 3863              		.loc 1 2729 4 is_stmt 0 discriminator 2
 3864 0048 414B     		ldr	r3, .L249+8
 3865 004a 1B68     		ldr	r3, [r3]
 3866 004c FB60     		str	r3, [r7, #12]
 3867 004e 414B     		ldr	r3, .L249+12
 3868 0050 1B68     		ldr	r3, [r3]
 3869 0052 3F4A     		ldr	r2, .L249+8
 3870 0054 1360     		str	r3, [r2]
 3871 0056 3F4A     		ldr	r2, .L249+12
 3872 0058 FB68     		ldr	r3, [r7, #12]
 3873 005a 1360     		str	r3, [r2]
 3874 005c 3E4B     		ldr	r3, .L249+16
 3875 005e 1B68     		ldr	r3, [r3]
 3876 0060 0133     		adds	r3, r3, #1
 3877 0062 3D4A     		ldr	r2, .L249+16
 3878 0064 1360     		str	r3, [r2]
 3879 0066 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 3880              	.L236:
 3881              	.LBE186:
2730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* See if this tick has made a timeout expire.  Tasks are stored in
2737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the	queue in the order of their wake time - meaning once one task
2738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		has been found whose block time has not expired there is no need to
2739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		look any further down the list. */
2740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xConstTickCount >= xNextTaskUnblockTime )
 3882              		.loc 1 2740 23 is_stmt 1
 3883 006a 3C4B     		ldr	r3, .L249+20
 3884 006c 1B68     		ldr	r3, [r3]
 3885              		.loc 1 2740 5
 3886 006e 3A69     		ldr	r2, [r7, #16]
 3887 0070 9A42     		cmp	r2, r3
 3888 0072 49D3     		bcc	.L239
 3889              	.L245:
2741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			for( ;; )
2743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 3890              		.loc 1 2744 9
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 121


 3891 0074 364B     		ldr	r3, .L249+8
 3892 0076 1B68     		ldr	r3, [r3]
 3893 0078 1B68     		ldr	r3, [r3]
 3894              		.loc 1 2744 7
 3895 007a 002B     		cmp	r3, #0
 3896 007c 04D1     		bne	.L240
2745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed list is empty.  Set xNextTaskUnblockTime
2747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					to the maximum possible value so it is extremely
2748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					unlikely that the
2749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( xTickCount >= xNextTaskUnblockTime ) test will pass
2750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					next time through. */
2751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redun
 3897              		.loc 1 2751 27
 3898 007e 374B     		ldr	r3, .L249+20
 3899 0080 4FF0FF32 		mov	r2, #-1
 3900 0084 1A60     		str	r2, [r3]
2752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 3901              		.loc 1 2752 6
 3902 0086 3FE0     		b	.L239
 3903              	.L240:
2753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
2755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed list is not empty, get the value of the
2757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					item at the head of the delayed list.  This is the time
2758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					at which the task at the head of the delayed list must
2759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					be removed from the Blocked state. */
2760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this
 3904              		.loc 1 2760 14
 3905 0088 314B     		ldr	r3, .L249+8
 3906 008a 1B68     		ldr	r3, [r3]
 3907 008c DB68     		ldr	r3, [r3, #12]
 3908              		.loc 1 2760 12
 3909 008e DB68     		ldr	r3, [r3, #12]
 3910 0090 BB60     		str	r3, [r7, #8]
2761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 3911              		.loc 1 2761 17
 3912 0092 BB68     		ldr	r3, [r7, #8]
 3913 0094 5B68     		ldr	r3, [r3, #4]
 3914 0096 7B60     		str	r3, [r7, #4]
2762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( xConstTickCount < xItemValue )
 3915              		.loc 1 2763 8
 3916 0098 3A69     		ldr	r2, [r7, #16]
 3917 009a 7B68     		ldr	r3, [r7, #4]
 3918 009c 9A42     		cmp	r2, r3
 3919 009e 03D2     		bcs	.L241
2764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* It is not time to unblock this item yet, but the
2766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						item value is the time at which the task at the head
2767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						of the blocked list must be removed from the Blocked
2768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						state -	so record the item value in
2769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xNextTaskUnblockTime. */
2770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xNextTaskUnblockTime = xItemValue;
 3920              		.loc 1 2770 28
 3921 00a0 2E4A     		ldr	r2, .L249+20
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 122


 3922 00a2 7B68     		ldr	r3, [r7, #4]
 3923 00a4 1360     		str	r3, [r2]
2771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks
 3924              		.loc 1 2771 7
 3925 00a6 2FE0     		b	.L239
 3926              	.L241:
2772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* It is time to remove the item from the Blocked state. */
2779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 3927              		.loc 1 2779 15
 3928 00a8 BB68     		ldr	r3, [r7, #8]
 3929 00aa 0433     		adds	r3, r3, #4
 3930 00ac 1846     		mov	r0, r3
 3931 00ae FFF7FEFF 		bl	uxListRemove
2780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Is the task waiting on an event also?  If so remove
2782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					it from the event list. */
2783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 3932              		.loc 1 2783 10
 3933 00b2 BB68     		ldr	r3, [r7, #8]
 3934 00b4 9B6A     		ldr	r3, [r3, #40]
 3935              		.loc 1 2783 8
 3936 00b6 002B     		cmp	r3, #0
 3937 00b8 04D0     		beq	.L242
2784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 3938              		.loc 1 2785 16
 3939 00ba BB68     		ldr	r3, [r7, #8]
 3940 00bc 1833     		adds	r3, r3, #24
 3941 00be 1846     		mov	r0, r3
 3942 00c0 FFF7FEFF 		bl	uxListRemove
 3943              	.L242:
2786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Place the unblocked task into the appropriate ready
2793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					list. */
2794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 3944              		.loc 1 2794 6
 3945 00c4 BB68     		ldr	r3, [r7, #8]
 3946 00c6 DA6A     		ldr	r2, [r3, #44]
 3947 00c8 254B     		ldr	r3, .L249+24
 3948 00ca 1B68     		ldr	r3, [r3]
 3949 00cc 9A42     		cmp	r2, r3
 3950 00ce 03D9     		bls	.L243
 3951              		.loc 1 2794 6 is_stmt 0 discriminator 1
 3952 00d0 BB68     		ldr	r3, [r7, #8]
 3953 00d2 DB6A     		ldr	r3, [r3, #44]
 3954 00d4 224A     		ldr	r2, .L249+24
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 123


 3955 00d6 1360     		str	r3, [r2]
 3956              	.L243:
 3957              		.loc 1 2794 6 discriminator 3
 3958 00d8 BB68     		ldr	r3, [r7, #8]
 3959 00da DA6A     		ldr	r2, [r3, #44]
 3960 00dc 1346     		mov	r3, r2
 3961 00de 9B00     		lsls	r3, r3, #2
 3962 00e0 1344     		add	r3, r3, r2
 3963 00e2 9B00     		lsls	r3, r3, #2
 3964 00e4 1F4A     		ldr	r2, .L249+28
 3965 00e6 1A44     		add	r2, r2, r3
 3966 00e8 BB68     		ldr	r3, [r7, #8]
 3967 00ea 0433     		adds	r3, r3, #4
 3968 00ec 1946     		mov	r1, r3
 3969 00ee 1046     		mov	r0, r2
 3970 00f0 FFF7FEFF 		bl	vListInsertEnd
2795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* A task being unblocked cannot cause an immediate
2797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					context switch if preemption is turned off. */
2798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#if (  configUSE_PREEMPTION == 1 )
2799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Preemption is on, but a context switch should
2801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						only be performed if the unblocked task has a
2802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						priority that is equal to or higher than the
2803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						currently executing task. */
2804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 3971              		.loc 1 2804 16 is_stmt 1 discriminator 3
 3972 00f4 BB68     		ldr	r3, [r7, #8]
 3973 00f6 DA6A     		ldr	r2, [r3, #44]
 3974              		.loc 1 2804 44 discriminator 3
 3975 00f8 1B4B     		ldr	r3, .L249+32
 3976 00fa 1B68     		ldr	r3, [r3]
 3977 00fc DB6A     		ldr	r3, [r3, #44]
 3978              		.loc 1 2804 9 discriminator 3
 3979 00fe 9A42     		cmp	r2, r3
 3980 0100 B8D3     		bcc	.L245
2805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
2806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							xSwitchRequired = pdTRUE;
 3981              		.loc 1 2806 24
 3982 0102 0123     		movs	r3, #1
 3983 0104 7B61     		str	r3, [r7, #20]
2744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3984              		.loc 1 2744 7
 3985 0106 B5E7     		b	.L245
 3986              	.L239:
2807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
2808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						else
2809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
2810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
2811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
2812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#endif /* configUSE_PREEMPTION */
2814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Tasks of equal priority to the currently running task will share
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 124


2819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		processing time (time slice) if preemption is on, and the application
2820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		writer has not explicitly turned time slicing off. */
2821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) )
2822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_
 3987              		.loc 1 2823 8
 3988 0108 174B     		ldr	r3, .L249+32
 3989 010a 1B68     		ldr	r3, [r3]
 3990 010c DA6A     		ldr	r2, [r3, #44]
 3991 010e 1549     		ldr	r1, .L249+28
 3992 0110 1346     		mov	r3, r2
 3993 0112 9B00     		lsls	r3, r3, #2
 3994 0114 1344     		add	r3, r3, r2
 3995 0116 9B00     		lsls	r3, r3, #2
 3996 0118 0B44     		add	r3, r3, r1
 3997 011a 1B68     		ldr	r3, [r3]
 3998              		.loc 1 2823 6
 3999 011c 012B     		cmp	r3, #1
 4000 011e 01D9     		bls	.L246
2824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xSwitchRequired = pdTRUE;
 4001              		.loc 1 2825 21
 4002 0120 0123     		movs	r3, #1
 4003 0122 7B61     		str	r3, [r7, #20]
 4004              	.L246:
2826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) ) */
2833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TICK_HOOK == 1 )
2835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Guard against the tick hook being called when the pended tick
2837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			count is being unwound (when the scheduler is being unlocked). */
2838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xPendedTicks == ( TickType_t ) 0 )
2839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vApplicationTickHook();
2841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_TICK_HOOK */
2848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_PREEMPTION == 1 )
2850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xYieldPending != pdFALSE )
 4005              		.loc 1 2851 22
 4006 0124 114B     		ldr	r3, .L249+36
 4007 0126 1B68     		ldr	r3, [r3]
 4008              		.loc 1 2851 6
 4009 0128 002B     		cmp	r3, #0
 4010 012a 07D0     		beq	.L247
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 125


2852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xSwitchRequired = pdTRUE;
 4011              		.loc 1 2853 21
 4012 012c 0123     		movs	r3, #1
 4013 012e 7B61     		str	r3, [r7, #20]
 4014 0130 04E0     		b	.L247
 4015              	.L235:
 4016              	.LBE185:
2854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_PREEMPTION */
2861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
2863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		++xPendedTicks;
 4017              		.loc 1 2864 3
 4018 0132 0F4B     		ldr	r3, .L249+40
 4019 0134 1B68     		ldr	r3, [r3]
 4020 0136 0133     		adds	r3, r3, #1
 4021 0138 0D4A     		ldr	r2, .L249+40
 4022 013a 1360     		str	r3, [r2]
 4023              	.L247:
2865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The tick hook gets called at regular intervals, even if the
2867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		scheduler is locked. */
2868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TICK_HOOK == 1 )
2869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vApplicationTickHook();
2871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
2873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xSwitchRequired;
 4024              		.loc 1 2875 9
 4025 013c 7B69     		ldr	r3, [r7, #20]
2876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4026              		.loc 1 2876 1
 4027 013e 1846     		mov	r0, r3
 4028 0140 1837     		adds	r7, r7, #24
 4029              	.LCFI141:
 4030              		.cfi_def_cfa_offset 8
 4031 0142 BD46     		mov	sp, r7
 4032              	.LCFI142:
 4033              		.cfi_def_cfa_register 13
 4034              		@ sp needed
 4035 0144 80BD     		pop	{r7, pc}
 4036              	.L250:
 4037 0146 00BF     		.align	2
 4038              	.L249:
 4039 0148 00000000 		.word	uxSchedulerSuspended
 4040 014c 00000000 		.word	xTickCount
 4041 0150 00000000 		.word	pxDelayedTaskList
 4042 0154 00000000 		.word	pxOverflowDelayedTaskList
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 126


 4043 0158 00000000 		.word	xNumOfOverflows
 4044 015c 00000000 		.word	xNextTaskUnblockTime
 4045 0160 00000000 		.word	uxTopReadyPriority
 4046 0164 00000000 		.word	pxReadyTasksLists
 4047 0168 00000000 		.word	pxCurrentTCB
 4048 016c 00000000 		.word	xYieldPending
 4049 0170 00000000 		.word	xPendedTicks
 4050              		.cfi_endproc
 4051              	.LFE31:
 4053              		.section	.text.vTaskSwitchContext,"ax",%progbits
 4054              		.align	1
 4055              		.global	vTaskSwitchContext
 4056              		.syntax unified
 4057              		.thumb
 4058              		.thumb_func
 4060              	vTaskSwitchContext:
 4061              	.LFB32:
2877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSetApplicationTaskTag( TaskHandle_t xTask, TaskHookFunction_t pxHookFunction )
2882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *xTCB;
2884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTask is NULL then it is the task hook of the calling task that is
2886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		getting set. */
2887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask == NULL )
2888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = xTask;
2894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the value can be accessed from an interrupt. */
2898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
2899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB->pxTaskTag = pxHookFunction;
2901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
2903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHookFunction_t xTaskGetApplicationTaskTag( TaskHandle_t xTask )
2911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
2913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHookFunction_t xReturn;
2914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTask is NULL then set the calling task's hook. */
2916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 127


2917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the value can be accessed from an interrupt. */
2920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
2921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pxTCB->pxTaskTag;
2923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
2925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHookFunction_t xTaskGetApplicationTaskTagFromISR( TaskHandle_t xTask )
2935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
2937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHookFunction_t xReturn;
2938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
2939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTask is NULL then set the calling task's hook. */
2941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
2942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the value can be accessed from an interrupt. */
2945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
2946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pxTCB->pxTaskTag;
2948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
2950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCallApplicationTaskHook( TaskHandle_t xTask, void *pvParameter )
2960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *xTCB;
2962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
2963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTask is NULL then we are calling our own task hook. */
2965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask == NULL )
2966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = pxCurrentTCB;
2968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = xTask;
2972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 128


2974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTCB->pxTaskTag != NULL )
2975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = xTCB->pxTaskTag( pvParameter );
2977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFAIL;
2981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskSwitchContext( void )
2990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 4062              		.loc 1 2990 1
 4063              		.cfi_startproc
 4064              		@ args = 0, pretend = 0, frame = 16
 4065              		@ frame_needed = 1, uses_anonymous_args = 0
 4066 0000 80B5     		push	{r7, lr}
 4067              	.LCFI143:
 4068              		.cfi_def_cfa_offset 8
 4069              		.cfi_offset 7, -8
 4070              		.cfi_offset 14, -4
 4071 0002 84B0     		sub	sp, sp, #16
 4072              	.LCFI144:
 4073              		.cfi_def_cfa_offset 24
 4074 0004 00AF     		add	r7, sp, #0
 4075              	.LCFI145:
 4076              		.cfi_def_cfa_register 7
2991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 4077              		.loc 1 2991 27
 4078 0006 344B     		ldr	r3, .L261
 4079 0008 1B68     		ldr	r3, [r3]
 4080              		.loc 1 2991 4
 4081 000a 002B     		cmp	r3, #0
 4082 000c 03D0     		beq	.L252
2992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The scheduler is currently suspended - do not allow a context
2994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		switch. */
2995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdTRUE;
 4083              		.loc 1 2995 17
 4084 000e 334B     		ldr	r3, .L261+4
 4085 0010 0122     		movs	r2, #1
 4086 0012 1A60     		str	r2, [r3]
2996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
2998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdFALSE;
3000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
3001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configGENERATE_RUN_TIME_STATS == 1 )
3003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
3005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portALT_GET_RUN_TIME_COUNTER_VALUE( ulTotalRunTime );
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 129


3006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#else
3007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				ulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
3008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
3009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Add the amount of time the task has been running to the
3011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			accumulated time so far.  The time the task started running was
3012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			stored in ulTaskSwitchedInTime.  Note that there is no overflow
3013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			protection here so count values are only valid until the timer
3014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			overflows.  The guard against negative values is to protect
3015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			against suspect run time stat counter implementations - which
3016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			are provided by the application, not the kernel. */
3017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ulTotalRunTime > ulTaskSwitchedInTime )
3018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ulRunTimeCounter += ( ulTotalRunTime - ulTaskSwitchedInTime );
3020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulTaskSwitchedInTime = ulTotalRunTime;
3026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configGENERATE_RUN_TIME_STATS */
3028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Check for stack overflow, if configured. */
3030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskCHECK_FOR_STACK_OVERFLOW();
3031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Before the currently running task is switched out, save its errno. */
3033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configUSE_POSIX_ERRNO == 1 )
3034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxCurrentTCB->iTaskErrno = FreeRTOS_errno;
3036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Select a new task to run using either the generic C or port
3040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		optimised asm code. */
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timer
3042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
3043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* After the new task is switched in, update the global errno. */
3045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configUSE_POSIX_ERRNO == 1 )
3046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			FreeRTOS_errno = pxCurrentTCB->iTaskErrno;
3048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
3052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Switch Newlib's _impure_ptr variable to point to the _reent
3054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			structure specific to this task.
3055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
3056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			for additional information. */
3057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
3058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
3060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4087              		.loc 1 3061 1
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 130


 4088 0014 5BE0     		b	.L260
 4089              	.L252:
2999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
 4090              		.loc 1 2999 17
 4091 0016 314B     		ldr	r3, .L261+4
 4092 0018 0022     		movs	r2, #0
 4093 001a 1A60     		str	r2, [r3]
 4094              	.LBB189:
3007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
 4095              		.loc 1 3007 22
 4096 001c FFF7FEFF 		bl	GET_RUN_TIME_COUNTER_VALUE
 4097 0020 0346     		mov	r3, r0
 4098 0022 1A46     		mov	r2, r3
3007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
 4099              		.loc 1 3007 20
 4100 0024 2E4B     		ldr	r3, .L261+8
 4101 0026 1A60     		str	r2, [r3]
3017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4102              		.loc 1 3017 23
 4103 0028 2D4B     		ldr	r3, .L261+8
 4104 002a 1A68     		ldr	r2, [r3]
 4105 002c 2D4B     		ldr	r3, .L261+12
 4106 002e 1B68     		ldr	r3, [r3]
3017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4107              		.loc 1 3017 6
 4108 0030 9A42     		cmp	r2, r3
 4109 0032 09D9     		bls	.L254
3019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4110              		.loc 1 3019 36
 4111 0034 2C4B     		ldr	r3, .L261+16
 4112 0036 1B68     		ldr	r3, [r3]
 4113 0038 996D     		ldr	r1, [r3, #88]
3019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4114              		.loc 1 3019 56
 4115 003a 294A     		ldr	r2, .L261+8
 4116 003c 1068     		ldr	r0, [r2]
 4117 003e 294A     		ldr	r2, .L261+12
 4118 0040 1268     		ldr	r2, [r2]
 4119 0042 821A     		subs	r2, r0, r2
3019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4120              		.loc 1 3019 36
 4121 0044 0A44     		add	r2, r2, r1
 4122 0046 9A65     		str	r2, [r3, #88]
 4123              	.L254:
3025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4124              		.loc 1 3025 25
 4125 0048 254B     		ldr	r3, .L261+8
 4126 004a 1B68     		ldr	r3, [r3]
 4127 004c 254A     		ldr	r2, .L261+12
 4128 004e 1360     		str	r3, [r2]
 4129              	.LBE189:
 4130              	.LBB190:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 4131              		.loc 1 3041 3
 4132 0050 264B     		ldr	r3, .L261+20
 4133 0052 1B68     		ldr	r3, [r3]
 4134 0054 FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 131


 4135 0056 10E0     		b	.L255
 4136              	.L258:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 4137              		.loc 1 3041 3 is_stmt 0 discriminator 5
 4138 0058 FB68     		ldr	r3, [r7, #12]
 4139 005a 002B     		cmp	r3, #0
 4140 005c 0AD1     		bne	.L256
 4141              	.LBB191:
 4142              	.LBB192:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4143              		.loc 2 195 2 is_stmt 1
 4144              		.syntax unified
 4145              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4146 005e 4FF05003 			mov r3, #80												
 4147 0062 83F31188 		msr basepri, r3											
 4148 0066 BFF36F8F 		isb														
 4149 006a BFF34F8F 		dsb														
 4150              	
 4151              	@ 0 "" 2
 4152              		.thumb
 4153              		.syntax unified
 4154 006e 7B60     		str	r3, [r7, #4]
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4155              		.loc 2 203 1
 4156 0070 00BF     		nop
 4157              	.L257:
 4158              	.LBE192:
 4159              	.LBE191:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 4160              		.loc 1 3041 3 discriminator 1
 4161 0072 FEE7     		b	.L257
 4162              	.L256:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 4163              		.loc 1 3041 3 is_stmt 0 discriminator 3
 4164 0074 FB68     		ldr	r3, [r7, #12]
 4165 0076 013B     		subs	r3, r3, #1
 4166 0078 FB60     		str	r3, [r7, #12]
 4167              	.L255:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 4168              		.loc 1 3041 3 discriminator 4
 4169 007a 1D49     		ldr	r1, .L261+24
 4170 007c FA68     		ldr	r2, [r7, #12]
 4171 007e 1346     		mov	r3, r2
 4172 0080 9B00     		lsls	r3, r3, #2
 4173 0082 1344     		add	r3, r3, r2
 4174 0084 9B00     		lsls	r3, r3, #2
 4175 0086 0B44     		add	r3, r3, r1
 4176 0088 1B68     		ldr	r3, [r3]
 4177 008a 002B     		cmp	r3, #0
 4178 008c E4D0     		beq	.L258
 4179              	.LBB193:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 4180              		.loc 1 3041 3 discriminator 6
 4181 008e FA68     		ldr	r2, [r7, #12]
 4182 0090 1346     		mov	r3, r2
 4183 0092 9B00     		lsls	r3, r3, #2
 4184 0094 1344     		add	r3, r3, r2
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 132


 4185 0096 9B00     		lsls	r3, r3, #2
 4186 0098 154A     		ldr	r2, .L261+24
 4187 009a 1344     		add	r3, r3, r2
 4188 009c BB60     		str	r3, [r7, #8]
 4189 009e BB68     		ldr	r3, [r7, #8]
 4190 00a0 5B68     		ldr	r3, [r3, #4]
 4191 00a2 5A68     		ldr	r2, [r3, #4]
 4192 00a4 BB68     		ldr	r3, [r7, #8]
 4193 00a6 5A60     		str	r2, [r3, #4]
 4194 00a8 BB68     		ldr	r3, [r7, #8]
 4195 00aa 5A68     		ldr	r2, [r3, #4]
 4196 00ac BB68     		ldr	r3, [r7, #8]
 4197 00ae 0833     		adds	r3, r3, #8
 4198 00b0 9A42     		cmp	r2, r3
 4199 00b2 04D1     		bne	.L259
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 4200              		.loc 1 3041 3 discriminator 7
 4201 00b4 BB68     		ldr	r3, [r7, #8]
 4202 00b6 5B68     		ldr	r3, [r3, #4]
 4203 00b8 5A68     		ldr	r2, [r3, #4]
 4204 00ba BB68     		ldr	r3, [r7, #8]
 4205 00bc 5A60     		str	r2, [r3, #4]
 4206              	.L259:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 4207              		.loc 1 3041 3 discriminator 9
 4208 00be BB68     		ldr	r3, [r7, #8]
 4209 00c0 5B68     		ldr	r3, [r3, #4]
 4210 00c2 DB68     		ldr	r3, [r3, #12]
 4211 00c4 084A     		ldr	r2, .L261+16
 4212 00c6 1360     		str	r3, [r2]
 4213              	.LBE193:
 4214 00c8 084A     		ldr	r2, .L261+20
 4215 00ca FB68     		ldr	r3, [r7, #12]
 4216 00cc 1360     		str	r3, [r2]
 4217              	.L260:
 4218              	.LBE190:
 4219              		.loc 1 3061 1 is_stmt 1
 4220 00ce 00BF     		nop
 4221 00d0 1037     		adds	r7, r7, #16
 4222              	.LCFI146:
 4223              		.cfi_def_cfa_offset 8
 4224 00d2 BD46     		mov	sp, r7
 4225              	.LCFI147:
 4226              		.cfi_def_cfa_register 13
 4227              		@ sp needed
 4228 00d4 80BD     		pop	{r7, pc}
 4229              	.L262:
 4230 00d6 00BF     		.align	2
 4231              	.L261:
 4232 00d8 00000000 		.word	uxSchedulerSuspended
 4233 00dc 00000000 		.word	xYieldPending
 4234 00e0 00000000 		.word	ulTotalRunTime
 4235 00e4 00000000 		.word	ulTaskSwitchedInTime
 4236 00e8 00000000 		.word	pxCurrentTCB
 4237 00ec 00000000 		.word	uxTopReadyPriority
 4238 00f0 00000000 		.word	pxReadyTasksLists
 4239              		.cfi_endproc
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 133


 4240              	.LFE32:
 4242              		.section	.text.vTaskPlaceOnEventList,"ax",%progbits
 4243              		.align	1
 4244              		.global	vTaskPlaceOnEventList
 4245              		.syntax unified
 4246              		.thumb
 4247              		.thumb_func
 4249              	vTaskPlaceOnEventList:
 4250              	.LFB33:
3062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskPlaceOnEventList( List_t * const pxEventList, const TickType_t xTicksToWait )
3065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 4251              		.loc 1 3065 1
 4252              		.cfi_startproc
 4253              		@ args = 0, pretend = 0, frame = 16
 4254              		@ frame_needed = 1, uses_anonymous_args = 0
 4255 0000 80B5     		push	{r7, lr}
 4256              	.LCFI148:
 4257              		.cfi_def_cfa_offset 8
 4258              		.cfi_offset 7, -8
 4259              		.cfi_offset 14, -4
 4260 0002 84B0     		sub	sp, sp, #16
 4261              	.LCFI149:
 4262              		.cfi_def_cfa_offset 24
 4263 0004 00AF     		add	r7, sp, #0
 4264              	.LCFI150:
 4265              		.cfi_def_cfa_register 7
 4266 0006 7860     		str	r0, [r7, #4]
 4267 0008 3960     		str	r1, [r7]
3066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 4268              		.loc 1 3066 2
 4269 000a 7B68     		ldr	r3, [r7, #4]
 4270 000c 002B     		cmp	r3, #0
 4271 000e 0AD1     		bne	.L264
 4272              	.LBB194:
 4273              	.LBB195:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4274              		.loc 2 195 2
 4275              		.syntax unified
 4276              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4277 0010 4FF05003 			mov r3, #80												
 4278 0014 83F31188 		msr basepri, r3											
 4279 0018 BFF36F8F 		isb														
 4280 001c BFF34F8F 		dsb														
 4281              	
 4282              	@ 0 "" 2
 4283              		.thumb
 4284              		.syntax unified
 4285 0020 FB60     		str	r3, [r7, #12]
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4286              		.loc 2 203 1
 4287 0022 00BF     		nop
 4288              	.L265:
 4289              	.LBE195:
 4290              	.LBE194:
 4291              		.loc 1 3066 2 discriminator 1
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 134


 4292 0024 FEE7     		b	.L265
 4293              	.L264:
3067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH EITHER INTERRUPTS DISABLED OR THE
3069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	SCHEDULER SUSPENDED AND THE QUEUE BEING ACCESSED LOCKED. */
3070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Place the event list item of the TCB in the appropriate event list.
3072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	This is placed in the list in priority order so the highest priority task
3073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	is the first to be woken by the event.  The queue that contains the event
3074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	list is locked, preventing simultaneous access from interrupts. */
3075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 4294              		.loc 1 3075 43
 4295 0026 074B     		ldr	r3, .L266
 4296 0028 1B68     		ldr	r3, [r3]
 4297              		.loc 1 3075 2
 4298 002a 1833     		adds	r3, r3, #24
 4299 002c 1946     		mov	r1, r3
 4300 002e 7868     		ldr	r0, [r7, #4]
 4301 0030 FFF7FEFF 		bl	vListInsert
3076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 4302              		.loc 1 3077 2
 4303 0034 0121     		movs	r1, #1
 4304 0036 3868     		ldr	r0, [r7]
 4305 0038 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
3078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4306              		.loc 1 3078 1
 4307 003c 00BF     		nop
 4308 003e 1037     		adds	r7, r7, #16
 4309              	.LCFI151:
 4310              		.cfi_def_cfa_offset 8
 4311 0040 BD46     		mov	sp, r7
 4312              	.LCFI152:
 4313              		.cfi_def_cfa_register 13
 4314              		@ sp needed
 4315 0042 80BD     		pop	{r7, pc}
 4316              	.L267:
 4317              		.align	2
 4318              	.L266:
 4319 0044 00000000 		.word	pxCurrentTCB
 4320              		.cfi_endproc
 4321              	.LFE33:
 4323              		.section	.text.vTaskPlaceOnUnorderedEventList,"ax",%progbits
 4324              		.align	1
 4325              		.global	vTaskPlaceOnUnorderedEventList
 4326              		.syntax unified
 4327              		.thumb
 4328              		.thumb_func
 4330              	vTaskPlaceOnUnorderedEventList:
 4331              	.LFB34:
3079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskPlaceOnUnorderedEventList( List_t * pxEventList, const TickType_t xItemValue, const TickT
3082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 4332              		.loc 1 3082 1
 4333              		.cfi_startproc
 4334              		@ args = 0, pretend = 0, frame = 24
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 135


 4335              		@ frame_needed = 1, uses_anonymous_args = 0
 4336 0000 80B5     		push	{r7, lr}
 4337              	.LCFI153:
 4338              		.cfi_def_cfa_offset 8
 4339              		.cfi_offset 7, -8
 4340              		.cfi_offset 14, -4
 4341 0002 86B0     		sub	sp, sp, #24
 4342              	.LCFI154:
 4343              		.cfi_def_cfa_offset 32
 4344 0004 00AF     		add	r7, sp, #0
 4345              	.LCFI155:
 4346              		.cfi_def_cfa_register 7
 4347 0006 F860     		str	r0, [r7, #12]
 4348 0008 B960     		str	r1, [r7, #8]
 4349 000a 7A60     		str	r2, [r7, #4]
3083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 4350              		.loc 1 3083 2
 4351 000c FB68     		ldr	r3, [r7, #12]
 4352 000e 002B     		cmp	r3, #0
 4353 0010 0AD1     		bne	.L269
 4354              	.LBB196:
 4355              	.LBB197:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4356              		.loc 2 195 2
 4357              		.syntax unified
 4358              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4359 0012 4FF05003 			mov r3, #80												
 4360 0016 83F31188 		msr basepri, r3											
 4361 001a BFF36F8F 		isb														
 4362 001e BFF34F8F 		dsb														
 4363              	
 4364              	@ 0 "" 2
 4365              		.thumb
 4366              		.syntax unified
 4367 0022 7B61     		str	r3, [r7, #20]
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4368              		.loc 2 203 1
 4369 0024 00BF     		nop
 4370              	.L270:
 4371              	.LBE197:
 4372              	.LBE196:
 4373              		.loc 1 3083 2 discriminator 1
 4374 0026 FEE7     		b	.L270
 4375              	.L269:
3084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
3086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the event groups implementation. */
3087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( uxSchedulerSuspended != 0 );
 4376              		.loc 1 3087 2
 4377 0028 114B     		ldr	r3, .L273
 4378 002a 1B68     		ldr	r3, [r3]
 4379 002c 002B     		cmp	r3, #0
 4380 002e 0AD1     		bne	.L271
 4381              	.LBB198:
 4382              	.LBB199:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4383              		.loc 2 195 2
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 136


 4384              		.syntax unified
 4385              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4386 0030 4FF05003 			mov r3, #80												
 4387 0034 83F31188 		msr basepri, r3											
 4388 0038 BFF36F8F 		isb														
 4389 003c BFF34F8F 		dsb														
 4390              	
 4391              	@ 0 "" 2
 4392              		.thumb
 4393              		.syntax unified
 4394 0040 3B61     		str	r3, [r7, #16]
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4395              		.loc 2 203 1
 4396 0042 00BF     		nop
 4397              	.L272:
 4398              	.LBE199:
 4399              	.LBE198:
 4400              		.loc 1 3087 2 discriminator 2
 4401 0044 FEE7     		b	.L272
 4402              	.L271:
3088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Store the item value in the event list item.  It is safe to access the
3090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	event list item here as interrupts won't access the event list item of a
3091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	task that is not in the Blocked state. */
3092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), xItemValue | taskEVENT_LIST_ITEM_VALUE
 4403              		.loc 1 3092 2
 4404 0046 0B4B     		ldr	r3, .L273+4
 4405 0048 1B68     		ldr	r3, [r3]
 4406 004a BA68     		ldr	r2, [r7, #8]
 4407 004c 42F00042 		orr	r2, r2, #-2147483648
 4408 0050 9A61     		str	r2, [r3, #24]
3093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Place the event list item of the TCB at the end of the appropriate event
3095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	list.  It is safe to access the event list here because it is part of an
3096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	event group implementation - and interrupts don't access event groups
3097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	directly (instead they access them indirectly by pending function calls to
3098:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the task level). */
3099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 4409              		.loc 1 3099 46
 4410 0052 084B     		ldr	r3, .L273+4
 4411 0054 1B68     		ldr	r3, [r3]
 4412              		.loc 1 3099 2
 4413 0056 1833     		adds	r3, r3, #24
 4414 0058 1946     		mov	r1, r3
 4415 005a F868     		ldr	r0, [r7, #12]
 4416 005c FFF7FEFF 		bl	vListInsertEnd
3100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 4417              		.loc 1 3101 2
 4418 0060 0121     		movs	r1, #1
 4419 0062 7868     		ldr	r0, [r7, #4]
 4420 0064 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
3102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4421              		.loc 1 3102 1
 4422 0068 00BF     		nop
 4423 006a 1837     		adds	r7, r7, #24
 4424              	.LCFI156:
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 137


 4425              		.cfi_def_cfa_offset 8
 4426 006c BD46     		mov	sp, r7
 4427              	.LCFI157:
 4428              		.cfi_def_cfa_register 13
 4429              		@ sp needed
 4430 006e 80BD     		pop	{r7, pc}
 4431              	.L274:
 4432              		.align	2
 4433              	.L273:
 4434 0070 00000000 		.word	uxSchedulerSuspended
 4435 0074 00000000 		.word	pxCurrentTCB
 4436              		.cfi_endproc
 4437              	.LFE34:
 4439              		.section	.text.vTaskPlaceOnEventListRestricted,"ax",%progbits
 4440              		.align	1
 4441              		.global	vTaskPlaceOnEventListRestricted
 4442              		.syntax unified
 4443              		.thumb
 4444              		.thumb_func
 4446              	vTaskPlaceOnEventListRestricted:
 4447              	.LFB35:
3103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TIMERS == 1 )
3106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskPlaceOnEventListRestricted( List_t * const pxEventList, TickType_t xTicksToWait, const B
3108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 4448              		.loc 1 3108 2
 4449              		.cfi_startproc
 4450              		@ args = 0, pretend = 0, frame = 24
 4451              		@ frame_needed = 1, uses_anonymous_args = 0
 4452 0000 80B5     		push	{r7, lr}
 4453              	.LCFI158:
 4454              		.cfi_def_cfa_offset 8
 4455              		.cfi_offset 7, -8
 4456              		.cfi_offset 14, -4
 4457 0002 86B0     		sub	sp, sp, #24
 4458              	.LCFI159:
 4459              		.cfi_def_cfa_offset 32
 4460 0004 00AF     		add	r7, sp, #0
 4461              	.LCFI160:
 4462              		.cfi_def_cfa_register 7
 4463 0006 F860     		str	r0, [r7, #12]
 4464 0008 B960     		str	r1, [r7, #8]
 4465 000a 7A60     		str	r2, [r7, #4]
3109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxEventList );
 4466              		.loc 1 3109 3
 4467 000c FB68     		ldr	r3, [r7, #12]
 4468 000e 002B     		cmp	r3, #0
 4469 0010 0AD1     		bne	.L276
 4470              	.LBB200:
 4471              	.LBB201:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4472              		.loc 2 195 2
 4473              		.syntax unified
 4474              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4475 0012 4FF05003 			mov r3, #80												
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 138


 4476 0016 83F31188 		msr basepri, r3											
 4477 001a BFF36F8F 		isb														
 4478 001e BFF34F8F 		dsb														
 4479              	
 4480              	@ 0 "" 2
 4481              		.thumb
 4482              		.syntax unified
 4483 0022 7B61     		str	r3, [r7, #20]
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4484              		.loc 2 203 1
 4485 0024 00BF     		nop
 4486              	.L277:
 4487              	.LBE201:
 4488              	.LBE200:
 4489              		.loc 1 3109 3 discriminator 1
 4490 0026 FEE7     		b	.L277
 4491              	.L276:
3110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This function should not be called by application code hence the
3112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		'Restricted' in its name.  It is not part of the public API.  It is
3113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		designed for use by kernel code, and has special calling requirements -
3114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		it should be called with the scheduler suspended. */
3115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Place the event list item of the TCB in the appropriate event list.
3118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		In this case it is assume that this is the only task that is going to
3119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		be waiting on this event list, so the faster vListInsertEnd() function
3120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		can be used in place of vListInsert. */
3121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 4492              		.loc 1 3121 47
 4493 0028 0A4B     		ldr	r3, .L279
 4494 002a 1B68     		ldr	r3, [r3]
 4495              		.loc 1 3121 3
 4496 002c 1833     		adds	r3, r3, #24
 4497 002e 1946     		mov	r1, r3
 4498 0030 F868     		ldr	r0, [r7, #12]
 4499 0032 FFF7FEFF 		bl	vListInsertEnd
3122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the task should block indefinitely then set the block time to a
3124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		value that will be recognised as an indefinite delay inside the
3125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddCurrentTaskToDelayedList() function. */
3126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xWaitIndefinitely != pdFALSE )
 4500              		.loc 1 3126 5
 4501 0036 7B68     		ldr	r3, [r7, #4]
 4502 0038 002B     		cmp	r3, #0
 4503 003a 02D0     		beq	.L278
3127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTicksToWait = portMAX_DELAY;
 4504              		.loc 1 3128 17
 4505 003c 4FF0FF33 		mov	r3, #-1
 4506 0040 BB60     		str	r3, [r7, #8]
 4507              	.L278:
3129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_DELAY_UNTIL( ( xTickCount + xTicksToWait ) );
3132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 4508              		.loc 1 3132 3
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 139


 4509 0042 7968     		ldr	r1, [r7, #4]
 4510 0044 B868     		ldr	r0, [r7, #8]
 4511 0046 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
3133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4512              		.loc 1 3133 2
 4513 004a 00BF     		nop
 4514 004c 1837     		adds	r7, r7, #24
 4515              	.LCFI161:
 4516              		.cfi_def_cfa_offset 8
 4517 004e BD46     		mov	sp, r7
 4518              	.LCFI162:
 4519              		.cfi_def_cfa_register 13
 4520              		@ sp needed
 4521 0050 80BD     		pop	{r7, pc}
 4522              	.L280:
 4523 0052 00BF     		.align	2
 4524              	.L279:
 4525 0054 00000000 		.word	pxCurrentTCB
 4526              		.cfi_endproc
 4527              	.LFE35:
 4529              		.section	.text.xTaskRemoveFromEventList,"ax",%progbits
 4530              		.align	1
 4531              		.global	xTaskRemoveFromEventList
 4532              		.syntax unified
 4533              		.thumb
 4534              		.thumb_func
 4536              	xTaskRemoveFromEventList:
 4537              	.LFB36:
3134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TIMERS */
3136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskRemoveFromEventList( const List_t * const pxEventList )
3139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 4538              		.loc 1 3139 1
 4539              		.cfi_startproc
 4540              		@ args = 0, pretend = 0, frame = 24
 4541              		@ frame_needed = 1, uses_anonymous_args = 0
 4542 0000 80B5     		push	{r7, lr}
 4543              	.LCFI163:
 4544              		.cfi_def_cfa_offset 8
 4545              		.cfi_offset 7, -8
 4546              		.cfi_offset 14, -4
 4547 0002 86B0     		sub	sp, sp, #24
 4548              	.LCFI164:
 4549              		.cfi_def_cfa_offset 32
 4550 0004 00AF     		add	r7, sp, #0
 4551              	.LCFI165:
 4552              		.cfi_def_cfa_register 7
 4553 0006 7860     		str	r0, [r7, #4]
3140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
3141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
3142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED FROM A CRITICAL SECTION.  It can also be
3144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	called from a critical section within an ISR. */
3145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* The event list is sorted in priority order, so the first in the list can
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 140


3147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	be removed as it is known to be the highest priority.  Remove the TCB from
3148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the delayed list, and add it to the ready list.
3149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	If an event is for a queue that is locked then this function will never
3151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	get called - the lock count on the queue will get modified instead.  This
3152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	means exclusive access to the event list is guaranteed here.
3153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	This function assumes that a check has already been made to ensure that
3155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxEventList is not empty. */
3156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this 
 4554              		.loc 1 3156 19
 4555 0008 7B68     		ldr	r3, [r7, #4]
 4556 000a DB68     		ldr	r3, [r3, #12]
 4557              		.loc 1 3156 17
 4558 000c DB68     		ldr	r3, [r3, #12]
 4559 000e 3B61     		str	r3, [r7, #16]
3157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 4560              		.loc 1 3157 2
 4561 0010 3B69     		ldr	r3, [r7, #16]
 4562 0012 002B     		cmp	r3, #0
 4563 0014 0AD1     		bne	.L282
 4564              	.LBB202:
 4565              	.LBB203:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4566              		.loc 2 195 2
 4567              		.syntax unified
 4568              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4569 0016 4FF05003 			mov r3, #80												
 4570 001a 83F31188 		msr basepri, r3											
 4571 001e BFF36F8F 		isb														
 4572 0022 BFF34F8F 		dsb														
 4573              	
 4574              	@ 0 "" 2
 4575              		.thumb
 4576              		.syntax unified
 4577 0026 FB60     		str	r3, [r7, #12]
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4578              		.loc 2 203 1
 4579 0028 00BF     		nop
 4580              	.L283:
 4581              	.LBE203:
 4582              	.LBE202:
 4583              		.loc 1 3157 2 discriminator 1
 4584 002a FEE7     		b	.L283
 4585              	.L282:
3158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 4586              		.loc 1 3158 11
 4587 002c 3B69     		ldr	r3, [r7, #16]
 4588 002e 1833     		adds	r3, r3, #24
 4589 0030 1846     		mov	r0, r3
 4590 0032 FFF7FEFF 		bl	uxListRemove
3159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 4591              		.loc 1 3160 27
 4592 0036 1F4B     		ldr	r3, .L290
 4593 0038 1B68     		ldr	r3, [r3]
 4594              		.loc 1 3160 4
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 141


 4595 003a 002B     		cmp	r3, #0
 4596 003c 1FD1     		bne	.L284
3161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 4597              		.loc 1 3162 12
 4598 003e 3B69     		ldr	r3, [r7, #16]
 4599 0040 0433     		adds	r3, r3, #4
 4600 0042 1846     		mov	r0, r3
 4601 0044 FFF7FEFF 		bl	uxListRemove
3163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
 4602              		.loc 1 3163 3
 4603 0048 3B69     		ldr	r3, [r7, #16]
 4604 004a DA6A     		ldr	r2, [r3, #44]
 4605 004c 1A4B     		ldr	r3, .L290+4
 4606 004e 1B68     		ldr	r3, [r3]
 4607 0050 9A42     		cmp	r2, r3
 4608 0052 03D9     		bls	.L285
 4609              		.loc 1 3163 3 is_stmt 0 discriminator 1
 4610 0054 3B69     		ldr	r3, [r7, #16]
 4611 0056 DB6A     		ldr	r3, [r3, #44]
 4612 0058 174A     		ldr	r2, .L290+4
 4613 005a 1360     		str	r3, [r2]
 4614              	.L285:
 4615              		.loc 1 3163 3 discriminator 3
 4616 005c 3B69     		ldr	r3, [r7, #16]
 4617 005e DA6A     		ldr	r2, [r3, #44]
 4618 0060 1346     		mov	r3, r2
 4619 0062 9B00     		lsls	r3, r3, #2
 4620 0064 1344     		add	r3, r3, r2
 4621 0066 9B00     		lsls	r3, r3, #2
 4622 0068 144A     		ldr	r2, .L290+8
 4623 006a 1A44     		add	r2, r2, r3
 4624 006c 3B69     		ldr	r3, [r7, #16]
 4625 006e 0433     		adds	r3, r3, #4
 4626 0070 1946     		mov	r1, r3
 4627 0072 1046     		mov	r0, r2
 4628 0074 FFF7FEFF 		bl	vListInsertEnd
3164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configUSE_TICKLESS_IDLE != 0 )
3166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If a task is blocked on a kernel object then xNextTaskUnblockTime
3168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			might be set to the blocked task's time out time.  If the task is
3169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			unblocked for a reason other than a timeout xNextTaskUnblockTime is
3170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			normally left unchanged, because it is automatically reset to a new
3171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			value when the tick count equals xNextTaskUnblockTime.  However if
3172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			tickless idling is used it might be more important to enter sleep mode
3173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			at the earliest possible time - so reset xNextTaskUnblockTime here to
3174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ensure it is updated at the earliest possible time. */
3175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvResetNextTaskUnblockTime();
 4629              		.loc 1 3175 4 is_stmt 1 discriminator 3
 4630 0078 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 4631 007c 05E0     		b	.L286
 4632              	.L284:
3176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 142


3180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The delayed and ready lists cannot be accessed, so hold this task
3182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pending until the scheduler is resumed. */
3183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 4633              		.loc 1 3183 3
 4634 007e 3B69     		ldr	r3, [r7, #16]
 4635 0080 1833     		adds	r3, r3, #24
 4636 0082 1946     		mov	r1, r3
 4637 0084 0E48     		ldr	r0, .L290+12
 4638 0086 FFF7FEFF 		bl	vListInsertEnd
 4639              	.L286:
3184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 4640              		.loc 1 3186 20
 4641 008a 3B69     		ldr	r3, [r7, #16]
 4642 008c DA6A     		ldr	r2, [r3, #44]
 4643              		.loc 1 3186 47
 4644 008e 0D4B     		ldr	r3, .L290+16
 4645 0090 1B68     		ldr	r3, [r3]
 4646 0092 DB6A     		ldr	r3, [r3, #44]
 4647              		.loc 1 3186 4
 4648 0094 9A42     		cmp	r2, r3
 4649 0096 05D9     		bls	.L287
3187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Return true if the task removed from the event list has a higher
3189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority than the calling task.  This allows the calling task to know if
3190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		it should force a context switch now. */
3191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = pdTRUE;
 4650              		.loc 1 3191 11
 4651 0098 0123     		movs	r3, #1
 4652 009a 7B61     		str	r3, [r7, #20]
3192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Mark that a yield is pending in case the user is not using the
3194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		"xHigherPriorityTaskWoken" parameter to an ISR safe FreeRTOS function. */
3195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdTRUE;
 4653              		.loc 1 3195 17
 4654 009c 0A4B     		ldr	r3, .L290+20
 4655 009e 0122     		movs	r2, #1
 4656 00a0 1A60     		str	r2, [r3]
 4657 00a2 01E0     		b	.L288
 4658              	.L287:
3196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
3198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = pdFALSE;
 4659              		.loc 1 3199 11
 4660 00a4 0023     		movs	r3, #0
 4661 00a6 7B61     		str	r3, [r7, #20]
 4662              	.L288:
3200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xReturn;
 4663              		.loc 1 3202 9
 4664 00a8 7B69     		ldr	r3, [r7, #20]
3203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4665              		.loc 1 3203 1
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 143


 4666 00aa 1846     		mov	r0, r3
 4667 00ac 1837     		adds	r7, r7, #24
 4668              	.LCFI166:
 4669              		.cfi_def_cfa_offset 8
 4670 00ae BD46     		mov	sp, r7
 4671              	.LCFI167:
 4672              		.cfi_def_cfa_register 13
 4673              		@ sp needed
 4674 00b0 80BD     		pop	{r7, pc}
 4675              	.L291:
 4676 00b2 00BF     		.align	2
 4677              	.L290:
 4678 00b4 00000000 		.word	uxSchedulerSuspended
 4679 00b8 00000000 		.word	uxTopReadyPriority
 4680 00bc 00000000 		.word	pxReadyTasksLists
 4681 00c0 00000000 		.word	xPendingReadyList
 4682 00c4 00000000 		.word	pxCurrentTCB
 4683 00c8 00000000 		.word	xYieldPending
 4684              		.cfi_endproc
 4685              	.LFE36:
 4687              		.section	.text.vTaskRemoveFromUnorderedEventList,"ax",%progbits
 4688              		.align	1
 4689              		.global	vTaskRemoveFromUnorderedEventList
 4690              		.syntax unified
 4691              		.thumb
 4692              		.thumb_func
 4694              	vTaskRemoveFromUnorderedEventList:
 4695              	.LFB37:
3204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskRemoveFromUnorderedEventList( ListItem_t * pxEventListItem, const TickType_t xItemValue )
3207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 4696              		.loc 1 3207 1
 4697              		.cfi_startproc
 4698              		@ args = 0, pretend = 0, frame = 24
 4699              		@ frame_needed = 1, uses_anonymous_args = 0
 4700 0000 80B5     		push	{r7, lr}
 4701              	.LCFI168:
 4702              		.cfi_def_cfa_offset 8
 4703              		.cfi_offset 7, -8
 4704              		.cfi_offset 14, -4
 4705 0002 86B0     		sub	sp, sp, #24
 4706              	.LCFI169:
 4707              		.cfi_def_cfa_offset 32
 4708 0004 00AF     		add	r7, sp, #0
 4709              	.LCFI170:
 4710              		.cfi_def_cfa_register 7
 4711 0006 7860     		str	r0, [r7, #4]
 4712 0008 3960     		str	r1, [r7]
3208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
3209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
3211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the event flags implementation. */
3212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( uxSchedulerSuspended != pdFALSE );
 4713              		.loc 1 3212 2
 4714 000a 2A4B     		ldr	r3, .L300
 4715 000c 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 144


 4716 000e 002B     		cmp	r3, #0
 4717 0010 0AD1     		bne	.L293
 4718              	.LBB204:
 4719              	.LBB205:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4720              		.loc 2 195 2
 4721              		.syntax unified
 4722              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4723 0012 4FF05003 			mov r3, #80												
 4724 0016 83F31188 		msr basepri, r3											
 4725 001a BFF36F8F 		isb														
 4726 001e BFF34F8F 		dsb														
 4727              	
 4728              	@ 0 "" 2
 4729              		.thumb
 4730              		.syntax unified
 4731 0022 3B61     		str	r3, [r7, #16]
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4732              		.loc 2 203 1
 4733 0024 00BF     		nop
 4734              	.L294:
 4735              	.LBE205:
 4736              	.LBE204:
 4737              		.loc 1 3212 2 discriminator 1
 4738 0026 FEE7     		b	.L294
 4739              	.L293:
3213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Store the new item value in the event list. */
3215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( pxEventListItem, xItemValue | taskEVENT_LIST_ITEM_VALUE_IN_USE );
 4740              		.loc 1 3215 2
 4741 0028 3B68     		ldr	r3, [r7]
 4742 002a 43F00042 		orr	r2, r3, #-2147483648
 4743 002e 7B68     		ldr	r3, [r7, #4]
 4744 0030 1A60     		str	r2, [r3]
3216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Remove the event list form the event flag.  Interrupts do not access
3218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	event flags. */
3219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxUnblockedTCB = listGET_LIST_ITEM_OWNER( pxEventListItem ); /*lint !e9079 void * is used as this 
 4745              		.loc 1 3219 17
 4746 0032 7B68     		ldr	r3, [r7, #4]
 4747 0034 DB68     		ldr	r3, [r3, #12]
 4748 0036 7B61     		str	r3, [r7, #20]
3220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 4749              		.loc 1 3220 2
 4750 0038 7B69     		ldr	r3, [r7, #20]
 4751 003a 002B     		cmp	r3, #0
 4752 003c 0AD1     		bne	.L295
 4753              	.LBB206:
 4754              	.LBB207:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4755              		.loc 2 195 2
 4756              		.syntax unified
 4757              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4758 003e 4FF05003 			mov r3, #80												
 4759 0042 83F31188 		msr basepri, r3											
 4760 0046 BFF36F8F 		isb														
 4761 004a BFF34F8F 		dsb														
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 145


 4762              	
 4763              	@ 0 "" 2
 4764              		.thumb
 4765              		.syntax unified
 4766 004e FB60     		str	r3, [r7, #12]
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4767              		.loc 2 203 1
 4768 0050 00BF     		nop
 4769              	.L296:
 4770              	.LBE207:
 4771              	.LBE206:
 4772              		.loc 1 3220 2 discriminator 2
 4773 0052 FEE7     		b	.L296
 4774              	.L295:
3221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 4775              		.loc 1 3221 11
 4776 0054 7868     		ldr	r0, [r7, #4]
 4777 0056 FFF7FEFF 		bl	uxListRemove
3222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configUSE_TICKLESS_IDLE != 0 )
3224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If a task is blocked on a kernel object then xNextTaskUnblockTime
3226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		might be set to the blocked task's time out time.  If the task is
3227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		unblocked for a reason other than a timeout xNextTaskUnblockTime is
3228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		normally left unchanged, because it is automatically reset to a new
3229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		value when the tick count equals xNextTaskUnblockTime.  However if
3230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		tickless idling is used it might be more important to enter sleep mode
3231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		at the earliest possible time - so reset xNextTaskUnblockTime here to
3232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		ensure it is updated at the earliest possible time. */
3233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvResetNextTaskUnblockTime();
 4778              		.loc 1 3233 3
 4779 005a FFF7FEFF 		bl	prvResetNextTaskUnblockTime
3234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
3236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Remove the task from the delayed list and add it to the ready list.  The
3238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	scheduler is suspended so interrupts will not be accessing the ready
3239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	lists. */
3240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 4780              		.loc 1 3240 11
 4781 005e 7B69     		ldr	r3, [r7, #20]
 4782 0060 0433     		adds	r3, r3, #4
 4783 0062 1846     		mov	r0, r3
 4784 0064 FFF7FEFF 		bl	uxListRemove
3241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
 4785              		.loc 1 3241 2
 4786 0068 7B69     		ldr	r3, [r7, #20]
 4787 006a DA6A     		ldr	r2, [r3, #44]
 4788 006c 124B     		ldr	r3, .L300+4
 4789 006e 1B68     		ldr	r3, [r3]
 4790 0070 9A42     		cmp	r2, r3
 4791 0072 03D9     		bls	.L297
 4792              		.loc 1 3241 2 is_stmt 0 discriminator 1
 4793 0074 7B69     		ldr	r3, [r7, #20]
 4794 0076 DB6A     		ldr	r3, [r3, #44]
 4795 0078 0F4A     		ldr	r2, .L300+4
 4796 007a 1360     		str	r3, [r2]
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 146


 4797              	.L297:
 4798              		.loc 1 3241 2 discriminator 3
 4799 007c 7B69     		ldr	r3, [r7, #20]
 4800 007e DA6A     		ldr	r2, [r3, #44]
 4801 0080 1346     		mov	r3, r2
 4802 0082 9B00     		lsls	r3, r3, #2
 4803 0084 1344     		add	r3, r3, r2
 4804 0086 9B00     		lsls	r3, r3, #2
 4805 0088 0C4A     		ldr	r2, .L300+8
 4806 008a 1A44     		add	r2, r2, r3
 4807 008c 7B69     		ldr	r3, [r7, #20]
 4808 008e 0433     		adds	r3, r3, #4
 4809 0090 1946     		mov	r1, r3
 4810 0092 1046     		mov	r0, r2
 4811 0094 FFF7FEFF 		bl	vListInsertEnd
3242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 4812              		.loc 1 3243 20 is_stmt 1 discriminator 3
 4813 0098 7B69     		ldr	r3, [r7, #20]
 4814 009a DA6A     		ldr	r2, [r3, #44]
 4815              		.loc 1 3243 47 discriminator 3
 4816 009c 084B     		ldr	r3, .L300+12
 4817 009e 1B68     		ldr	r3, [r3]
 4818 00a0 DB6A     		ldr	r3, [r3, #44]
 4819              		.loc 1 3243 4 discriminator 3
 4820 00a2 9A42     		cmp	r2, r3
 4821 00a4 02D9     		bls	.L299
3244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The unblocked task has a priority above that of the calling task, so
3246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		a context switch is required.  This function is called with the
3247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		scheduler suspended so xYieldPending is set so the context switch
3248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		occurs immediately that the scheduler is resumed (unsuspended). */
3249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdTRUE;
 4822              		.loc 1 3249 17
 4823 00a6 074B     		ldr	r3, .L300+16
 4824 00a8 0122     		movs	r2, #1
 4825 00aa 1A60     		str	r2, [r3]
 4826              	.L299:
3250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4827              		.loc 1 3251 1
 4828 00ac 00BF     		nop
 4829 00ae 1837     		adds	r7, r7, #24
 4830              	.LCFI171:
 4831              		.cfi_def_cfa_offset 8
 4832 00b0 BD46     		mov	sp, r7
 4833              	.LCFI172:
 4834              		.cfi_def_cfa_register 13
 4835              		@ sp needed
 4836 00b2 80BD     		pop	{r7, pc}
 4837              	.L301:
 4838              		.align	2
 4839              	.L300:
 4840 00b4 00000000 		.word	uxSchedulerSuspended
 4841 00b8 00000000 		.word	uxTopReadyPriority
 4842 00bc 00000000 		.word	pxReadyTasksLists
 4843 00c0 00000000 		.word	pxCurrentTCB
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 147


 4844 00c4 00000000 		.word	xYieldPending
 4845              		.cfi_endproc
 4846              	.LFE37:
 4848              		.section	.text.vTaskSetTimeOutState,"ax",%progbits
 4849              		.align	1
 4850              		.global	vTaskSetTimeOutState
 4851              		.syntax unified
 4852              		.thumb
 4853              		.thumb_func
 4855              	vTaskSetTimeOutState:
 4856              	.LFB38:
3252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskSetTimeOutState( TimeOut_t * const pxTimeOut )
3255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 4857              		.loc 1 3255 1
 4858              		.cfi_startproc
 4859              		@ args = 0, pretend = 0, frame = 16
 4860              		@ frame_needed = 1, uses_anonymous_args = 0
 4861 0000 80B5     		push	{r7, lr}
 4862              	.LCFI173:
 4863              		.cfi_def_cfa_offset 8
 4864              		.cfi_offset 7, -8
 4865              		.cfi_offset 14, -4
 4866 0002 84B0     		sub	sp, sp, #16
 4867              	.LCFI174:
 4868              		.cfi_def_cfa_offset 24
 4869 0004 00AF     		add	r7, sp, #0
 4870              	.LCFI175:
 4871              		.cfi_def_cfa_register 7
 4872 0006 7860     		str	r0, [r7, #4]
3256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTimeOut );
 4873              		.loc 1 3256 2
 4874 0008 7B68     		ldr	r3, [r7, #4]
 4875 000a 002B     		cmp	r3, #0
 4876 000c 0AD1     		bne	.L303
 4877              	.LBB208:
 4878              	.LBB209:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4879              		.loc 2 195 2
 4880              		.syntax unified
 4881              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4882 000e 4FF05003 			mov r3, #80												
 4883 0012 83F31188 		msr basepri, r3											
 4884 0016 BFF36F8F 		isb														
 4885 001a BFF34F8F 		dsb														
 4886              	
 4887              	@ 0 "" 2
 4888              		.thumb
 4889              		.syntax unified
 4890 001e FB60     		str	r3, [r7, #12]
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4891              		.loc 2 203 1
 4892 0020 00BF     		nop
 4893              	.L304:
 4894              	.LBE209:
 4895              	.LBE208:
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 148


 4896              		.loc 1 3256 2 discriminator 1
 4897 0022 FEE7     		b	.L304
 4898              	.L303:
3257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 4899              		.loc 1 3257 2
 4900 0024 FFF7FEFF 		bl	vPortEnterCritical
3258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTimeOut->xOverflowCount = xNumOfOverflows;
 4901              		.loc 1 3259 29
 4902 0028 064B     		ldr	r3, .L305
 4903 002a 1A68     		ldr	r2, [r3]
 4904 002c 7B68     		ldr	r3, [r7, #4]
 4905 002e 1A60     		str	r2, [r3]
3260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTimeOut->xTimeOnEntering = xTickCount;
 4906              		.loc 1 3260 30
 4907 0030 054B     		ldr	r3, .L305+4
 4908 0032 1A68     		ldr	r2, [r3]
 4909 0034 7B68     		ldr	r3, [r7, #4]
 4910 0036 5A60     		str	r2, [r3, #4]
3261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
 4911              		.loc 1 3262 2
 4912 0038 FFF7FEFF 		bl	vPortExitCritical
3263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4913              		.loc 1 3263 1
 4914 003c 00BF     		nop
 4915 003e 1037     		adds	r7, r7, #16
 4916              	.LCFI176:
 4917              		.cfi_def_cfa_offset 8
 4918 0040 BD46     		mov	sp, r7
 4919              	.LCFI177:
 4920              		.cfi_def_cfa_register 13
 4921              		@ sp needed
 4922 0042 80BD     		pop	{r7, pc}
 4923              	.L306:
 4924              		.align	2
 4925              	.L305:
 4926 0044 00000000 		.word	xNumOfOverflows
 4927 0048 00000000 		.word	xTickCount
 4928              		.cfi_endproc
 4929              	.LFE38:
 4931              		.section	.text.vTaskInternalSetTimeOutState,"ax",%progbits
 4932              		.align	1
 4933              		.global	vTaskInternalSetTimeOutState
 4934              		.syntax unified
 4935              		.thumb
 4936              		.thumb_func
 4938              	vTaskInternalSetTimeOutState:
 4939              	.LFB39:
3264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskInternalSetTimeOutState( TimeOut_t * const pxTimeOut )
3267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 4940              		.loc 1 3267 1
 4941              		.cfi_startproc
 4942              		@ args = 0, pretend = 0, frame = 8
 4943              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 149


 4944              		@ link register save eliminated.
 4945 0000 80B4     		push	{r7}
 4946              	.LCFI178:
 4947              		.cfi_def_cfa_offset 4
 4948              		.cfi_offset 7, -4
 4949 0002 83B0     		sub	sp, sp, #12
 4950              	.LCFI179:
 4951              		.cfi_def_cfa_offset 16
 4952 0004 00AF     		add	r7, sp, #0
 4953              	.LCFI180:
 4954              		.cfi_def_cfa_register 7
 4955 0006 7860     		str	r0, [r7, #4]
3268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* For internal use only as it does not use a critical section. */
3269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xOverflowCount = xNumOfOverflows;
 4956              		.loc 1 3269 28
 4957 0008 064B     		ldr	r3, .L308
 4958 000a 1A68     		ldr	r2, [r3]
 4959 000c 7B68     		ldr	r3, [r7, #4]
 4960 000e 1A60     		str	r2, [r3]
3270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
 4961              		.loc 1 3270 29
 4962 0010 054B     		ldr	r3, .L308+4
 4963 0012 1A68     		ldr	r2, [r3]
 4964 0014 7B68     		ldr	r3, [r7, #4]
 4965 0016 5A60     		str	r2, [r3, #4]
3271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4966              		.loc 1 3271 1
 4967 0018 00BF     		nop
 4968 001a 0C37     		adds	r7, r7, #12
 4969              	.LCFI181:
 4970              		.cfi_def_cfa_offset 4
 4971 001c BD46     		mov	sp, r7
 4972              	.LCFI182:
 4973              		.cfi_def_cfa_register 13
 4974              		@ sp needed
 4975 001e 5DF8047B 		ldr	r7, [sp], #4
 4976              	.LCFI183:
 4977              		.cfi_restore 7
 4978              		.cfi_def_cfa_offset 0
 4979 0022 7047     		bx	lr
 4980              	.L309:
 4981              		.align	2
 4982              	.L308:
 4983 0024 00000000 		.word	xNumOfOverflows
 4984 0028 00000000 		.word	xTickCount
 4985              		.cfi_endproc
 4986              	.LFE39:
 4988              		.section	.text.xTaskCheckForTimeOut,"ax",%progbits
 4989              		.align	1
 4990              		.global	xTaskCheckForTimeOut
 4991              		.syntax unified
 4992              		.thumb
 4993              		.thumb_func
 4995              	xTaskCheckForTimeOut:
 4996              	.LFB40:
3272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 150


3274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskCheckForTimeOut( TimeOut_t * const pxTimeOut, TickType_t * const pxTicksToWait )
3275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 4997              		.loc 1 3275 1
 4998              		.cfi_startproc
 4999              		@ args = 0, pretend = 0, frame = 32
 5000              		@ frame_needed = 1, uses_anonymous_args = 0
 5001 0000 80B5     		push	{r7, lr}
 5002              	.LCFI184:
 5003              		.cfi_def_cfa_offset 8
 5004              		.cfi_offset 7, -8
 5005              		.cfi_offset 14, -4
 5006 0002 88B0     		sub	sp, sp, #32
 5007              	.LCFI185:
 5008              		.cfi_def_cfa_offset 40
 5009 0004 00AF     		add	r7, sp, #0
 5010              	.LCFI186:
 5011              		.cfi_def_cfa_register 7
 5012 0006 7860     		str	r0, [r7, #4]
 5013 0008 3960     		str	r1, [r7]
3276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
3277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTimeOut );
 5014              		.loc 1 3278 2
 5015 000a 7B68     		ldr	r3, [r7, #4]
 5016 000c 002B     		cmp	r3, #0
 5017 000e 0AD1     		bne	.L311
 5018              	.LBB210:
 5019              	.LBB211:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5020              		.loc 2 195 2
 5021              		.syntax unified
 5022              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5023 0010 4FF05003 			mov r3, #80												
 5024 0014 83F31188 		msr basepri, r3											
 5025 0018 BFF36F8F 		isb														
 5026 001c BFF34F8F 		dsb														
 5027              	
 5028              	@ 0 "" 2
 5029              		.thumb
 5030              		.syntax unified
 5031 0020 3B61     		str	r3, [r7, #16]
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 5032              		.loc 2 203 1
 5033 0022 00BF     		nop
 5034              	.L312:
 5035              	.LBE211:
 5036              	.LBE210:
 5037              		.loc 1 3278 2 discriminator 1
 5038 0024 FEE7     		b	.L312
 5039              	.L311:
3279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 5040              		.loc 1 3279 2
 5041 0026 3B68     		ldr	r3, [r7]
 5042 0028 002B     		cmp	r3, #0
 5043 002a 0AD1     		bne	.L313
 5044              	.LBB212:
 5045              	.LBB213:
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 151


 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5046              		.loc 2 195 2
 5047              		.syntax unified
 5048              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5049 002c 4FF05003 			mov r3, #80												
 5050 0030 83F31188 		msr basepri, r3											
 5051 0034 BFF36F8F 		isb														
 5052 0038 BFF34F8F 		dsb														
 5053              	
 5054              	@ 0 "" 2
 5055              		.thumb
 5056              		.syntax unified
 5057 003c FB60     		str	r3, [r7, #12]
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 5058              		.loc 2 203 1
 5059 003e 00BF     		nop
 5060              	.L314:
 5061              	.LBE213:
 5062              	.LBE212:
 5063              		.loc 1 3279 2 discriminator 2
 5064 0040 FEE7     		b	.L314
 5065              	.L313:
3280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 5066              		.loc 1 3281 2
 5067 0042 FFF7FEFF 		bl	vPortEnterCritical
 5068              	.LBB214:
3282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Minor optimisation.  The tick count cannot change in this block. */
3284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xConstTickCount = xTickCount;
 5069              		.loc 1 3284 20
 5070 0046 1D4B     		ldr	r3, .L320
 5071 0048 1B68     		ldr	r3, [r3]
 5072 004a BB61     		str	r3, [r7, #24]
3285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 5073              		.loc 1 3285 62
 5074 004c 7B68     		ldr	r3, [r7, #4]
 5075 004e 5B68     		ldr	r3, [r3, #4]
 5076              		.loc 1 3285 20
 5077 0050 BA69     		ldr	r2, [r7, #24]
 5078 0052 D31A     		subs	r3, r2, r3
 5079 0054 7B61     		str	r3, [r7, #20]
3286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( INCLUDE_xTaskAbortDelay == 1 )
3288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ucDelayAborted != ( uint8_t ) pdFALSE )
3289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The delay was aborted, which is not the same as a time out,
3291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				but has the same result. */
3292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ucDelayAborted = pdFALSE;
3293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
3294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( INCLUDE_vTaskSuspend == 1 )
3299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( *pxTicksToWait == portMAX_DELAY )
 5080              		.loc 1 3299 8
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 152


 5081 0056 3B68     		ldr	r3, [r7]
 5082 0058 1B68     		ldr	r3, [r3]
 5083              		.loc 1 3299 6
 5084 005a B3F1FF3F 		cmp	r3, #-1
 5085 005e 02D1     		bne	.L315
3300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If INCLUDE_vTaskSuspend is set to 1 and the block time
3302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				specified is the maximum block time then the task should block
3303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				indefinitely, and therefore never time out. */
3304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdFALSE;
 5086              		.loc 1 3304 13
 5087 0060 0023     		movs	r3, #0
 5088 0062 FB61     		str	r3, [r7, #28]
 5089 0064 23E0     		b	.L316
 5090              	.L315:
3305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEn
 5091              		.loc 1 3309 37
 5092 0066 7B68     		ldr	r3, [r7, #4]
 5093 0068 1A68     		ldr	r2, [r3]
 5094              		.loc 1 3309 25
 5095 006a 154B     		ldr	r3, .L320+4
 5096 006c 1B68     		ldr	r3, [r3]
 5097              		.loc 1 3309 5
 5098 006e 9A42     		cmp	r2, r3
 5099 0070 07D0     		beq	.L317
 5100              		.loc 1 3309 89 discriminator 1
 5101 0072 7B68     		ldr	r3, [r7, #4]
 5102 0074 5B68     		ldr	r3, [r3, #4]
 5103              		.loc 1 3309 56 discriminator 1
 5104 0076 BA69     		ldr	r2, [r7, #24]
 5105 0078 9A42     		cmp	r2, r3
 5106 007a 02D3     		bcc	.L317
3310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The tick count is greater than the time at which
3312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSetTimeout() was called, but has also overflowed since
3313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSetTimeOut() was called.  It must have wrapped all the way
3314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			around and gone past again. This passed since vTaskSetTimeout()
3315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			was called. */
3316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdTRUE;
 5107              		.loc 1 3316 12
 5108 007c 0123     		movs	r3, #1
 5109 007e FB61     		str	r3, [r7, #28]
 5110 0080 15E0     		b	.L316
 5111              	.L317:
3317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with som
 5112              		.loc 1 3318 27
 5113 0082 3B68     		ldr	r3, [r7]
 5114 0084 1B68     		ldr	r3, [r3]
 5115              		.loc 1 3318 10
 5116 0086 7A69     		ldr	r2, [r7, #20]
 5117 0088 9A42     		cmp	r2, r3
 5118 008a 0BD2     		bcs	.L318
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 153


3319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Not a genuine timeout. Adjust parameters for time remaining. */
3321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			*pxTicksToWait -= xElapsedTime;
 5119              		.loc 1 3321 19
 5120 008c 3B68     		ldr	r3, [r7]
 5121 008e 1A68     		ldr	r2, [r3]
 5122 0090 7B69     		ldr	r3, [r7, #20]
 5123 0092 D21A     		subs	r2, r2, r3
 5124 0094 3B68     		ldr	r3, [r7]
 5125 0096 1A60     		str	r2, [r3]
3322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskInternalSetTimeOutState( pxTimeOut );
 5126              		.loc 1 3322 4
 5127 0098 7868     		ldr	r0, [r7, #4]
 5128 009a FFF7FEFF 		bl	vTaskInternalSetTimeOutState
3323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFALSE;
 5129              		.loc 1 3323 12
 5130 009e 0023     		movs	r3, #0
 5131 00a0 FB61     		str	r3, [r7, #28]
 5132 00a2 04E0     		b	.L316
 5133              	.L318:
3324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			*pxTicksToWait = 0;
 5134              		.loc 1 3327 19
 5135 00a4 3B68     		ldr	r3, [r7]
 5136 00a6 0022     		movs	r2, #0
 5137 00a8 1A60     		str	r2, [r3]
3328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdTRUE;
 5138              		.loc 1 3328 12
 5139 00aa 0123     		movs	r3, #1
 5140 00ac FB61     		str	r3, [r7, #28]
 5141              	.L316:
 5142              	.LBE214:
3329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
 5143              		.loc 1 3331 2
 5144 00ae FFF7FEFF 		bl	vPortExitCritical
3332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xReturn;
 5145              		.loc 1 3333 9
 5146 00b2 FB69     		ldr	r3, [r7, #28]
3334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 5147              		.loc 1 3334 1
 5148 00b4 1846     		mov	r0, r3
 5149 00b6 2037     		adds	r7, r7, #32
 5150              	.LCFI187:
 5151              		.cfi_def_cfa_offset 8
 5152 00b8 BD46     		mov	sp, r7
 5153              	.LCFI188:
 5154              		.cfi_def_cfa_register 13
 5155              		@ sp needed
 5156 00ba 80BD     		pop	{r7, pc}
 5157              	.L321:
 5158              		.align	2
 5159              	.L320:
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 154


 5160 00bc 00000000 		.word	xTickCount
 5161 00c0 00000000 		.word	xNumOfOverflows
 5162              		.cfi_endproc
 5163              	.LFE40:
 5165              		.section	.text.vTaskMissedYield,"ax",%progbits
 5166              		.align	1
 5167              		.global	vTaskMissedYield
 5168              		.syntax unified
 5169              		.thumb
 5170              		.thumb_func
 5172              	vTaskMissedYield:
 5173              	.LFB41:
3335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskMissedYield( void )
3338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 5174              		.loc 1 3338 1
 5175              		.cfi_startproc
 5176              		@ args = 0, pretend = 0, frame = 0
 5177              		@ frame_needed = 1, uses_anonymous_args = 0
 5178              		@ link register save eliminated.
 5179 0000 80B4     		push	{r7}
 5180              	.LCFI189:
 5181              		.cfi_def_cfa_offset 4
 5182              		.cfi_offset 7, -4
 5183 0002 00AF     		add	r7, sp, #0
 5184              	.LCFI190:
 5185              		.cfi_def_cfa_register 7
3339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xYieldPending = pdTRUE;
 5186              		.loc 1 3339 16
 5187 0004 034B     		ldr	r3, .L323
 5188 0006 0122     		movs	r2, #1
 5189 0008 1A60     		str	r2, [r3]
3340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 5190              		.loc 1 3340 1
 5191 000a 00BF     		nop
 5192 000c BD46     		mov	sp, r7
 5193              	.LCFI191:
 5194              		.cfi_def_cfa_register 13
 5195              		@ sp needed
 5196 000e 5DF8047B 		ldr	r7, [sp], #4
 5197              	.LCFI192:
 5198              		.cfi_restore 7
 5199              		.cfi_def_cfa_offset 0
 5200 0012 7047     		bx	lr
 5201              	.L324:
 5202              		.align	2
 5203              	.L323:
 5204 0014 00000000 		.word	xYieldPending
 5205              		.cfi_endproc
 5206              	.LFE41:
 5208              		.section	.text.uxTaskGetTaskNumber,"ax",%progbits
 5209              		.align	1
 5210              		.global	uxTaskGetTaskNumber
 5211              		.syntax unified
 5212              		.thumb
 5213              		.thumb_func
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 155


 5215              	uxTaskGetTaskNumber:
 5216              	.LFB42:
3341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskGetTaskNumber( TaskHandle_t xTask )
3346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 5217              		.loc 1 3346 2
 5218              		.cfi_startproc
 5219              		@ args = 0, pretend = 0, frame = 16
 5220              		@ frame_needed = 1, uses_anonymous_args = 0
 5221              		@ link register save eliminated.
 5222 0000 80B4     		push	{r7}
 5223              	.LCFI193:
 5224              		.cfi_def_cfa_offset 4
 5225              		.cfi_offset 7, -4
 5226 0002 85B0     		sub	sp, sp, #20
 5227              	.LCFI194:
 5228              		.cfi_def_cfa_offset 24
 5229 0004 00AF     		add	r7, sp, #0
 5230              	.LCFI195:
 5231              		.cfi_def_cfa_register 7
 5232 0006 7860     		str	r0, [r7, #4]
3347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
3348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t const *pxTCB;
3349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask != NULL )
 5233              		.loc 1 3350 5
 5234 0008 7B68     		ldr	r3, [r7, #4]
 5235 000a 002B     		cmp	r3, #0
 5236 000c 05D0     		beq	.L326
3351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = xTask;
 5237              		.loc 1 3352 10
 5238 000e 7B68     		ldr	r3, [r7, #4]
 5239 0010 BB60     		str	r3, [r7, #8]
3353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxTaskNumber;
 5240              		.loc 1 3353 13
 5241 0012 BB68     		ldr	r3, [r7, #8]
 5242 0014 DB6C     		ldr	r3, [r3, #76]
 5243 0016 FB60     		str	r3, [r7, #12]
 5244 0018 01E0     		b	.L327
 5245              	.L326:
3354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = 0U;
 5246              		.loc 1 3357 13
 5247 001a 0023     		movs	r3, #0
 5248 001c FB60     		str	r3, [r7, #12]
 5249              	.L327:
3358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
 5250              		.loc 1 3360 10
 5251 001e FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 156


3361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5252              		.loc 1 3361 2
 5253 0020 1846     		mov	r0, r3
 5254 0022 1437     		adds	r7, r7, #20
 5255              	.LCFI196:
 5256              		.cfi_def_cfa_offset 4
 5257 0024 BD46     		mov	sp, r7
 5258              	.LCFI197:
 5259              		.cfi_def_cfa_register 13
 5260              		@ sp needed
 5261 0026 5DF8047B 		ldr	r7, [sp], #4
 5262              	.LCFI198:
 5263              		.cfi_restore 7
 5264              		.cfi_def_cfa_offset 0
 5265 002a 7047     		bx	lr
 5266              		.cfi_endproc
 5267              	.LFE42:
 5269              		.section	.text.vTaskSetTaskNumber,"ax",%progbits
 5270              		.align	1
 5271              		.global	vTaskSetTaskNumber
 5272              		.syntax unified
 5273              		.thumb
 5274              		.thumb_func
 5276              	vTaskSetTaskNumber:
 5277              	.LFB43:
3362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSetTaskNumber( TaskHandle_t xTask, const UBaseType_t uxHandle )
3369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 5278              		.loc 1 3369 2
 5279              		.cfi_startproc
 5280              		@ args = 0, pretend = 0, frame = 16
 5281              		@ frame_needed = 1, uses_anonymous_args = 0
 5282              		@ link register save eliminated.
 5283 0000 80B4     		push	{r7}
 5284              	.LCFI199:
 5285              		.cfi_def_cfa_offset 4
 5286              		.cfi_offset 7, -4
 5287 0002 85B0     		sub	sp, sp, #20
 5288              	.LCFI200:
 5289              		.cfi_def_cfa_offset 24
 5290 0004 00AF     		add	r7, sp, #0
 5291              	.LCFI201:
 5292              		.cfi_def_cfa_register 7
 5293 0006 7860     		str	r0, [r7, #4]
 5294 0008 3960     		str	r1, [r7]
3370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
3371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask != NULL )
 5295              		.loc 1 3372 5
 5296 000a 7B68     		ldr	r3, [r7, #4]
 5297 000c 002B     		cmp	r3, #0
 5298 000e 04D0     		beq	.L331
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 157


3373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = xTask;
 5299              		.loc 1 3374 10
 5300 0010 7B68     		ldr	r3, [r7, #4]
 5301 0012 FB60     		str	r3, [r7, #12]
3375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->uxTaskNumber = uxHandle;
 5302              		.loc 1 3375 24
 5303 0014 FB68     		ldr	r3, [r7, #12]
 5304 0016 3A68     		ldr	r2, [r7]
 5305 0018 DA64     		str	r2, [r3, #76]
 5306              	.L331:
3376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5307              		.loc 1 3377 2
 5308 001a 00BF     		nop
 5309 001c 1437     		adds	r7, r7, #20
 5310              	.LCFI202:
 5311              		.cfi_def_cfa_offset 4
 5312 001e BD46     		mov	sp, r7
 5313              	.LCFI203:
 5314              		.cfi_def_cfa_register 13
 5315              		@ sp needed
 5316 0020 5DF8047B 		ldr	r7, [sp], #4
 5317              	.LCFI204:
 5318              		.cfi_restore 7
 5319              		.cfi_def_cfa_offset 0
 5320 0024 7047     		bx	lr
 5321              		.cfi_endproc
 5322              	.LFE43:
 5324              		.section	.text.prvIdleTask,"ax",%progbits
 5325              		.align	1
 5326              		.syntax unified
 5327              		.thumb
 5328              		.thumb_func
 5330              	prvIdleTask:
 5331              	.LFB44:
3378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
3382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * -----------------------------------------------------------
3383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The Idle task.
3384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * ----------------------------------------------------------
3385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
3386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The portTASK_FUNCTION() macro is used to allow port/compiler specific
3387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
3388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
3389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * void prvIdleTask( void *pvParameters );
3390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
3391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
3392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static portTASK_FUNCTION( prvIdleTask, pvParameters )
3393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 5332              		.loc 1 3393 1
 5333              		.cfi_startproc
 5334              		@ args = 0, pretend = 0, frame = 16
 5335              		@ frame_needed = 1, uses_anonymous_args = 0
 5336 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 158


 5337              	.LCFI205:
 5338              		.cfi_def_cfa_offset 8
 5339              		.cfi_offset 7, -8
 5340              		.cfi_offset 14, -4
 5341 0002 84B0     		sub	sp, sp, #16
 5342              	.LCFI206:
 5343              		.cfi_def_cfa_offset 24
 5344 0004 00AF     		add	r7, sp, #0
 5345              	.LCFI207:
 5346              		.cfi_def_cfa_register 7
 5347 0006 7860     		str	r0, [r7, #4]
 5348              	.L338:
3394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop warnings. */
3395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) pvParameters;
3396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/** THIS IS THE RTOS IDLE TASK - WHICH IS CREATED AUTOMATICALLY WHEN THE
3398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	SCHEDULER IS STARTED. **/
3399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* In case a task that has a secure context deletes itself, in which case
3401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the idle task is responsible for deleting the task's secure context, if
3402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	any. */
3403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portALLOCATE_SECURE_CONTEXT( configMINIMAL_SECURE_STACK_SIZE );
3404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	for( ;; )
3406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* See if any tasks have deleted themselves - if so then the idle task
3408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is responsible for freeing the deleted task's TCB and stack. */
3409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvCheckTasksWaitingTermination();
 5349              		.loc 1 3409 3
 5350 0008 FFF7FEFF 		bl	prvCheckTasksWaitingTermination
3410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_PREEMPTION == 0 )
3412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If we are not using preemption we keep forcing a task switch to
3414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			see if any other task has become available.  If we are using
3415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			preemption we don't need to do this as any task becoming available
3416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			will automatically get the processor anyway. */
3417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskYIELD();
3418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_PREEMPTION */
3420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) )
3422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* When using preemption tasks of equal priority will be
3424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			timesliced.  If a task that is sharing the idle priority is ready
3425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			to run then the idle task should yield before the end of the
3426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			timeslice.
3427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			A critical region is not required here as we are just reading from
3429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the list, and an occasional incorrect value will not matter.  If
3430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the ready list at the idle priority contains more than one task
3431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			then a task other than the idle task is ready to execute. */
3432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 5351              		.loc 1 3432 8
 5352 000c 184B     		ldr	r3, .L339
 5353 000e 1B68     		ldr	r3, [r3]
 5354              		.loc 1 3432 6
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 159


 5355 0010 012B     		cmp	r3, #1
 5356 0012 07D9     		bls	.L333
3433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskYIELD();
 5357              		.loc 1 3434 5
 5358 0014 174B     		ldr	r3, .L339+4
 5359 0016 4FF08052 		mov	r2, #268435456
 5360 001a 1A60     		str	r2, [r3]
 5361              		.syntax unified
 5362              	@ 3434 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5363 001c BFF34F8F 		dsb
 5364              	@ 0 "" 2
 5365              	@ 3434 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5366 0020 BFF36F8F 		isb
 5367              	@ 0 "" 2
 5368              		.thumb
 5369              		.syntax unified
 5370              	.L333:
 5371              	.LBB215:
3435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) ) */
3442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_IDLE_HOOK == 1 )
3444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			extern void vApplicationIdleHook( void );
3446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Call the user defined function from within the idle task.  This
3448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			allows the application designer to add background functionality
3449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			without the overhead of a separate task.
3450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			NOTE: vApplicationIdleHook() MUST NOT, UNDER ANY CIRCUMSTANCES,
3451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			CALL A FUNCTION THAT MIGHT BLOCK. */
3452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vApplicationIdleHook();
3453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_IDLE_HOOK */
3455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This conditional compilation should use inequality to 0, not equality
3457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		to 1.  This is to ensure portSUPPRESS_TICKS_AND_SLEEP() is called when
3458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		user defined low power mode	implementations require
3459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configUSE_TICKLESS_IDLE to be set to a value other than 1. */
3460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TICKLESS_IDLE != 0 )
3461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		TickType_t xExpectedIdleTime;
3463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* It is not desirable to suspend then resume the scheduler on
3465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			each iteration of the idle task.  Therefore, a preliminary
3466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			test of the expected idle time is performed without the
3467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			scheduler suspended.  The result here is not necessarily
3468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			valid. */
3469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xExpectedIdleTime = prvGetExpectedIdleTime();
 5372              		.loc 1 3469 24
 5373 0024 FFF7FEFF 		bl	prvGetExpectedIdleTime
 5374 0028 F860     		str	r0, [r7, #12]
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 160


3470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
 5375              		.loc 1 3471 6
 5376 002a FB68     		ldr	r3, [r7, #12]
 5377 002c 012B     		cmp	r3, #1
 5378 002e EBD9     		bls	.L338
3472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vTaskSuspendAll();
 5379              		.loc 1 3473 5
 5380 0030 FFF7FEFF 		bl	vTaskSuspendAll
3474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Now the scheduler is suspended, the expected idle
3476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					time can be sampled again, and this time its value can
3477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					be used. */
3478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					configASSERT( xNextTaskUnblockTime >= xTickCount );
 5381              		.loc 1 3478 6
 5382 0034 104B     		ldr	r3, .L339+8
 5383 0036 1A68     		ldr	r2, [r3]
 5384 0038 104B     		ldr	r3, .L339+12
 5385 003a 1B68     		ldr	r3, [r3]
 5386 003c 9A42     		cmp	r2, r3
 5387 003e 0AD2     		bcs	.L335
 5388              	.LBB216:
 5389              	.LBB217:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5390              		.loc 2 195 2
 5391              		.syntax unified
 5392              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5393 0040 4FF05003 			mov r3, #80												
 5394 0044 83F31188 		msr basepri, r3											
 5395 0048 BFF36F8F 		isb														
 5396 004c BFF34F8F 		dsb														
 5397              	
 5398              	@ 0 "" 2
 5399              		.thumb
 5400              		.syntax unified
 5401 0050 BB60     		str	r3, [r7, #8]
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 5402              		.loc 2 203 1
 5403 0052 00BF     		nop
 5404              	.L336:
 5405              	.LBE217:
 5406              	.LBE216:
 5407              		.loc 1 3478 6 discriminator 1
 5408 0054 FEE7     		b	.L336
 5409              	.L335:
3479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xExpectedIdleTime = prvGetExpectedIdleTime();
 5410              		.loc 1 3479 26
 5411 0056 FFF7FEFF 		bl	prvGetExpectedIdleTime
 5412 005a F860     		str	r0, [r7, #12]
3480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Define the following macro to set xExpectedIdleTime to 0
3482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if the application does not want
3483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portSUPPRESS_TICKS_AND_SLEEP() to be called. */
3484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					configPRE_SUPPRESS_TICKS_AND_SLEEP_PROCESSING( xExpectedIdleTime );
3485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 161


 5413              		.loc 1 3486 8
 5414 005c FB68     		ldr	r3, [r7, #12]
 5415 005e 012B     		cmp	r3, #1
 5416 0060 02D9     		bls	.L337
3487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						traceLOW_POWER_IDLE_BEGIN();
3489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime );
 5417              		.loc 1 3489 7
 5418 0062 F868     		ldr	r0, [r7, #12]
 5419 0064 FFF7FEFF 		bl	vPortSuppressTicksAndSleep
 5420              	.L337:
3490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						traceLOW_POWER_IDLE_END();
3491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
3493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) xTaskResumeAll();
 5421              		.loc 1 3497 14
 5422 0068 FFF7FEFF 		bl	xTaskResumeAll
 5423              	.LBE215:
3409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5424              		.loc 1 3409 3
 5425 006c CCE7     		b	.L338
 5426              	.L340:
 5427 006e 00BF     		.align	2
 5428              	.L339:
 5429 0070 00000000 		.word	pxReadyTasksLists
 5430 0074 04ED00E0 		.word	-536810236
 5431 0078 00000000 		.word	xNextTaskUnblockTime
 5432 007c 00000000 		.word	xTickCount
 5433              		.cfi_endproc
 5434              	.LFE44:
 5436              		.section	.text.eTaskConfirmSleepModeStatus,"ax",%progbits
 5437              		.align	1
 5438              		.global	eTaskConfirmSleepModeStatus
 5439              		.syntax unified
 5440              		.thumb
 5441              		.thumb_func
 5443              	eTaskConfirmSleepModeStatus:
 5444              	.LFB45:
3498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_TICKLESS_IDLE */
3505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TICKLESS_IDLE != 0 )
3510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eSleepModeStatus eTaskConfirmSleepModeStatus( void )
3512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 162


 5445              		.loc 1 3512 2
 5446              		.cfi_startproc
 5447              		@ args = 0, pretend = 0, frame = 8
 5448              		@ frame_needed = 1, uses_anonymous_args = 0
 5449              		@ link register save eliminated.
 5450 0000 80B4     		push	{r7}
 5451              	.LCFI208:
 5452              		.cfi_def_cfa_offset 4
 5453              		.cfi_offset 7, -4
 5454 0002 83B0     		sub	sp, sp, #12
 5455              	.LCFI209:
 5456              		.cfi_def_cfa_offset 16
 5457 0004 00AF     		add	r7, sp, #0
 5458              	.LCFI210:
 5459              		.cfi_def_cfa_register 7
3513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* The idle task exists in addition to the application tasks. */
3514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const UBaseType_t uxNonApplicationTasks = 1;
 5460              		.loc 1 3514 20
 5461 0006 0123     		movs	r3, #1
 5462 0008 3B60     		str	r3, [r7]
3515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eSleepModeStatus eReturn = eStandardSleep;
 5463              		.loc 1 3515 19
 5464 000a 0123     		movs	r3, #1
 5465 000c FB71     		strb	r3, [r7, #7]
3516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This function must be called from a critical section. */
3518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( &xPendingReadyList ) != 0 )
 5466              		.loc 1 3519 7
 5467 000e 0F4B     		ldr	r3, .L346
 5468 0010 1B68     		ldr	r3, [r3]
 5469              		.loc 1 3519 5
 5470 0012 002B     		cmp	r3, #0
 5471 0014 02D0     		beq	.L342
3520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* A task was made ready while the scheduler was suspended. */
3522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			eReturn = eAbortSleep;
 5472              		.loc 1 3522 12
 5473 0016 0023     		movs	r3, #0
 5474 0018 FB71     		strb	r3, [r7, #7]
 5475 001a 10E0     		b	.L343
 5476              	.L342:
3523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else if( xYieldPending != pdFALSE )
 5477              		.loc 1 3524 26
 5478 001c 0C4B     		ldr	r3, .L346+4
 5479 001e 1B68     		ldr	r3, [r3]
 5480              		.loc 1 3524 10
 5481 0020 002B     		cmp	r3, #0
 5482 0022 02D0     		beq	.L344
3525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* A yield was pended while the scheduler was suspended. */
3527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			eReturn = eAbortSleep;
 5483              		.loc 1 3527 12
 5484 0024 0023     		movs	r3, #0
 5485 0026 FB71     		strb	r3, [r7, #7]
 5486 0028 09E0     		b	.L343
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 163


 5487              	.L344:
3528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If all the tasks are in the suspended list (which might mean they
3532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			have an infinite block time rather than actually being suspended)
3533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			then it is safe to turn all clocks off and just wait for external
3534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			interrupts. */
3535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == ( uxCurrentNumberOfTasks - uxNonApplicatio
 5488              		.loc 1 3535 8
 5489 002a 0A4B     		ldr	r3, .L346+8
 5490 002c 1A68     		ldr	r2, [r3]
 5491              		.loc 1 3535 83
 5492 002e 0A4B     		ldr	r3, .L346+12
 5493 0030 1968     		ldr	r1, [r3]
 5494 0032 3B68     		ldr	r3, [r7]
 5495 0034 CB1A     		subs	r3, r1, r3
 5496              		.loc 1 3535 6
 5497 0036 9A42     		cmp	r2, r3
 5498 0038 01D1     		bne	.L343
3536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				eReturn = eNoTasksWaitingTimeout;
 5499              		.loc 1 3537 13
 5500 003a 0223     		movs	r3, #2
 5501 003c FB71     		strb	r3, [r7, #7]
 5502              	.L343:
3538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return eReturn;
 5503              		.loc 1 3545 10
 5504 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
3546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5505              		.loc 1 3546 2
 5506 0040 1846     		mov	r0, r3
 5507 0042 0C37     		adds	r7, r7, #12
 5508              	.LCFI211:
 5509              		.cfi_def_cfa_offset 4
 5510 0044 BD46     		mov	sp, r7
 5511              	.LCFI212:
 5512              		.cfi_def_cfa_register 13
 5513              		@ sp needed
 5514 0046 5DF8047B 		ldr	r7, [sp], #4
 5515              	.LCFI213:
 5516              		.cfi_restore 7
 5517              		.cfi_def_cfa_offset 0
 5518 004a 7047     		bx	lr
 5519              	.L347:
 5520              		.align	2
 5521              	.L346:
 5522 004c 00000000 		.word	xPendingReadyList
 5523 0050 00000000 		.word	xYieldPending
 5524 0054 00000000 		.word	xSuspendedTaskList
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 164


 5525 0058 00000000 		.word	uxCurrentNumberOfTasks
 5526              		.cfi_endproc
 5527              	.LFE45:
 5529              		.section	.text.prvInitialiseTaskLists,"ax",%progbits
 5530              		.align	1
 5531              		.syntax unified
 5532              		.thumb
 5533              		.thumb_func
 5535              	prvInitialiseTaskLists:
 5536              	.LFB46:
3547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
3549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSetThreadLocalStoragePointer( TaskHandle_t xTaskToSet, BaseType_t xIndex, void *pvValue 
3554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS )
3558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToSet );
3560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB != NULL );
3561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->pvThreadLocalStoragePointers[ xIndex ] = pvValue;
3562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void *pvTaskGetThreadLocalStoragePointer( TaskHandle_t xTaskToQuery, BaseType_t xIndex )
3571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void *pvReturn = NULL;
3573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS )
3576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToQuery );
3578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pvReturn = pxTCB->pvThreadLocalStoragePointers[ xIndex ];
3579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pvReturn = NULL;
3583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return pvReturn;
3586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( portUSING_MPU_WRAPPERS == 1 )
3592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskAllocateMPURegions( TaskHandle_t xTaskToModify, const MemoryRegion_t * const xRegions )
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 165


3594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If null is passed in here then we are modifying the MPU settings of
3598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the calling task. */
3599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTaskToModify );
3600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vPortStoreTaskMPUSettings( &( pxTCB->xMPUSettings ), xRegions, NULL, 0 );
3602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
3605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseTaskLists( void )
3608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 5537              		.loc 1 3608 1
 5538              		.cfi_startproc
 5539              		@ args = 0, pretend = 0, frame = 8
 5540              		@ frame_needed = 1, uses_anonymous_args = 0
 5541 0000 80B5     		push	{r7, lr}
 5542              	.LCFI214:
 5543              		.cfi_def_cfa_offset 8
 5544              		.cfi_offset 7, -8
 5545              		.cfi_offset 14, -4
 5546 0002 82B0     		sub	sp, sp, #8
 5547              	.LCFI215:
 5548              		.cfi_def_cfa_offset 16
 5549 0004 00AF     		add	r7, sp, #0
 5550              	.LCFI216:
 5551              		.cfi_def_cfa_register 7
3609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxPriority;
3610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriorit
 5552              		.loc 1 3611 18
 5553 0006 0023     		movs	r3, #0
 5554 0008 7B60     		str	r3, [r7, #4]
 5555              		.loc 1 3611 2
 5556 000a 0CE0     		b	.L349
 5557              	.L350:
3612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 5558              		.loc 1 3613 3 discriminator 3
 5559 000c 7A68     		ldr	r2, [r7, #4]
 5560 000e 1346     		mov	r3, r2
 5561 0010 9B00     		lsls	r3, r3, #2
 5562 0012 1344     		add	r3, r3, r2
 5563 0014 9B00     		lsls	r3, r3, #2
 5564 0016 124A     		ldr	r2, .L351
 5565 0018 1344     		add	r3, r3, r2
 5566 001a 1846     		mov	r0, r3
 5567 001c FFF7FEFF 		bl	vListInitialise
3611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 5568              		.loc 1 3611 101 discriminator 3
 5569 0020 7B68     		ldr	r3, [r7, #4]
 5570 0022 0133     		adds	r3, r3, #1
 5571 0024 7B60     		str	r3, [r7, #4]
 5572              	.L349:
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 166


3611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 5573              		.loc 1 3611 51 discriminator 1
 5574 0026 7B68     		ldr	r3, [r7, #4]
 5575 0028 372B     		cmp	r3, #55
 5576 002a EFD9     		bls	.L350
3614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xDelayedTaskList1 );
 5577              		.loc 1 3616 2
 5578 002c 0D48     		ldr	r0, .L351+4
 5579 002e FFF7FEFF 		bl	vListInitialise
3617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xDelayedTaskList2 );
 5580              		.loc 1 3617 2
 5581 0032 0D48     		ldr	r0, .L351+8
 5582 0034 FFF7FEFF 		bl	vListInitialise
3618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
 5583              		.loc 1 3618 2
 5584 0038 0C48     		ldr	r0, .L351+12
 5585 003a FFF7FEFF 		bl	vListInitialise
3619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskDelete == 1 )
3621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInitialise( &xTasksWaitingTermination );
 5586              		.loc 1 3622 3
 5587 003e 0C48     		ldr	r0, .L351+16
 5588 0040 FFF7FEFF 		bl	vListInitialise
3623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskDelete */
3625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskSuspend == 1 )
3627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInitialise( &xSuspendedTaskList );
 5589              		.loc 1 3628 3
 5590 0044 0B48     		ldr	r0, .L351+20
 5591 0046 FFF7FEFF 		bl	vListInitialise
3629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskSuspend */
3631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
3633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	using list2. */
3634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxDelayedTaskList = &xDelayedTaskList1;
 5592              		.loc 1 3634 20
 5593 004a 0B4B     		ldr	r3, .L351+24
 5594 004c 054A     		ldr	r2, .L351+4
 5595 004e 1A60     		str	r2, [r3]
3635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 5596              		.loc 1 3635 28
 5597 0050 0A4B     		ldr	r3, .L351+28
 5598 0052 054A     		ldr	r2, .L351+8
 5599 0054 1A60     		str	r2, [r3]
3636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 5600              		.loc 1 3636 1
 5601 0056 00BF     		nop
 5602 0058 0837     		adds	r7, r7, #8
 5603              	.LCFI217:
 5604              		.cfi_def_cfa_offset 8
 5605 005a BD46     		mov	sp, r7
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 167


 5606              	.LCFI218:
 5607              		.cfi_def_cfa_register 13
 5608              		@ sp needed
 5609 005c 80BD     		pop	{r7, pc}
 5610              	.L352:
 5611 005e 00BF     		.align	2
 5612              	.L351:
 5613 0060 00000000 		.word	pxReadyTasksLists
 5614 0064 00000000 		.word	xDelayedTaskList1
 5615 0068 00000000 		.word	xDelayedTaskList2
 5616 006c 00000000 		.word	xPendingReadyList
 5617 0070 00000000 		.word	xTasksWaitingTermination
 5618 0074 00000000 		.word	xSuspendedTaskList
 5619 0078 00000000 		.word	pxDelayedTaskList
 5620 007c 00000000 		.word	pxOverflowDelayedTaskList
 5621              		.cfi_endproc
 5622              	.LFE46:
 5624              		.section	.text.prvCheckTasksWaitingTermination,"ax",%progbits
 5625              		.align	1
 5626              		.syntax unified
 5627              		.thumb
 5628              		.thumb_func
 5630              	prvCheckTasksWaitingTermination:
 5631              	.LFB47:
3637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvCheckTasksWaitingTermination( void )
3640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 5632              		.loc 1 3640 1
 5633              		.cfi_startproc
 5634              		@ args = 0, pretend = 0, frame = 8
 5635              		@ frame_needed = 1, uses_anonymous_args = 0
 5636 0000 80B5     		push	{r7, lr}
 5637              	.LCFI219:
 5638              		.cfi_def_cfa_offset 8
 5639              		.cfi_offset 7, -8
 5640              		.cfi_offset 14, -4
 5641 0002 82B0     		sub	sp, sp, #8
 5642              	.LCFI220:
 5643              		.cfi_def_cfa_offset 16
 5644 0004 00AF     		add	r7, sp, #0
 5645              	.LCFI221:
 5646              		.cfi_def_cfa_register 7
 5647              	.LBB218:
3641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/** THIS FUNCTION IS CALLED FROM THE RTOS IDLE TASK **/
3643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskDelete == 1 )
3645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		TCB_t *pxTCB;
3647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
3649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		being called too often in the idle task. */
3650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 5648              		.loc 1 3650 8
 5649 0006 19E0     		b	.L354
 5650              	.L355:
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 168


3651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
 5651              		.loc 1 3652 4
 5652 0008 FFF7FEFF 		bl	vPortEnterCritical
3653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is u
 5653              		.loc 1 3654 13
 5654 000c 104B     		ldr	r3, .L356
 5655 000e DB68     		ldr	r3, [r3, #12]
 5656              		.loc 1 3654 11
 5657 0010 DB68     		ldr	r3, [r3, #12]
 5658 0012 7B60     		str	r3, [r7, #4]
3655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 5659              		.loc 1 3655 14
 5660 0014 7B68     		ldr	r3, [r7, #4]
 5661 0016 0433     		adds	r3, r3, #4
 5662 0018 1846     		mov	r0, r3
 5663 001a FFF7FEFF 		bl	uxListRemove
3656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxCurrentNumberOfTasks;
 5664              		.loc 1 3656 5
 5665 001e 0D4B     		ldr	r3, .L356+4
 5666 0020 1B68     		ldr	r3, [r3]
 5667 0022 013B     		subs	r3, r3, #1
 5668 0024 0B4A     		ldr	r2, .L356+4
 5669 0026 1360     		str	r3, [r2]
3657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxDeletedTasksWaitingCleanUp;
 5670              		.loc 1 3657 5
 5671 0028 0B4B     		ldr	r3, .L356+8
 5672 002a 1B68     		ldr	r3, [r3]
 5673 002c 013B     		subs	r3, r3, #1
 5674 002e 0A4A     		ldr	r2, .L356+8
 5675 0030 1360     		str	r3, [r2]
3658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
 5676              		.loc 1 3659 4
 5677 0032 FFF7FEFF 		bl	vPortExitCritical
3660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvDeleteTCB( pxTCB );
 5678              		.loc 1 3661 4
 5679 0036 7868     		ldr	r0, [r7, #4]
 5680 0038 FFF7FEFF 		bl	prvDeleteTCB
 5681              	.L354:
3650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5682              		.loc 1 3650 39
 5683 003c 064B     		ldr	r3, .L356+8
 5684 003e 1B68     		ldr	r3, [r3]
 5685 0040 002B     		cmp	r3, #0
 5686 0042 E1D1     		bne	.L355
 5687              	.LBE218:
3662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskDelete */
3665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 5688              		.loc 1 3665 1
 5689 0044 00BF     		nop
 5690 0046 00BF     		nop
 5691 0048 0837     		adds	r7, r7, #8
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 169


 5692              	.LCFI222:
 5693              		.cfi_def_cfa_offset 8
 5694 004a BD46     		mov	sp, r7
 5695              	.LCFI223:
 5696              		.cfi_def_cfa_register 13
 5697              		@ sp needed
 5698 004c 80BD     		pop	{r7, pc}
 5699              	.L357:
 5700 004e 00BF     		.align	2
 5701              	.L356:
 5702 0050 00000000 		.word	xTasksWaitingTermination
 5703 0054 00000000 		.word	uxCurrentNumberOfTasks
 5704 0058 00000000 		.word	uxDeletedTasksWaitingCleanUp
 5705              		.cfi_endproc
 5706              	.LFE47:
 5708              		.section	.text.vTaskGetInfo,"ax",%progbits
 5709              		.align	1
 5710              		.global	vTaskGetInfo
 5711              		.syntax unified
 5712              		.thumb
 5713              		.thumb_func
 5715              	vTaskGetInfo:
 5716              	.LFB48:
3666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TRACE_FACILITY == 1 )
3669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskGetInfo( TaskHandle_t xTask, TaskStatus_t *pxTaskStatus, BaseType_t xGetFreeStackSpace, 
3671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 5717              		.loc 1 3671 2
 5718              		.cfi_startproc
 5719              		@ args = 0, pretend = 0, frame = 24
 5720              		@ frame_needed = 1, uses_anonymous_args = 0
 5721 0000 80B5     		push	{r7, lr}
 5722              	.LCFI224:
 5723              		.cfi_def_cfa_offset 8
 5724              		.cfi_offset 7, -8
 5725              		.cfi_offset 14, -4
 5726 0002 86B0     		sub	sp, sp, #24
 5727              	.LCFI225:
 5728              		.cfi_def_cfa_offset 32
 5729 0004 00AF     		add	r7, sp, #0
 5730              	.LCFI226:
 5731              		.cfi_def_cfa_register 7
 5732 0006 F860     		str	r0, [r7, #12]
 5733 0008 B960     		str	r1, [r7, #8]
 5734 000a 7A60     		str	r2, [r7, #4]
 5735 000c FB70     		strb	r3, [r7, #3]
3672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* xTask is NULL then get the state of the calling task. */
3675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
 5736              		.loc 1 3675 11
 5737 000e FB68     		ldr	r3, [r7, #12]
 5738 0010 002B     		cmp	r3, #0
 5739 0012 02D1     		bne	.L359
 5740              		.loc 1 3675 11 is_stmt 0 discriminator 1
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 170


 5741 0014 2C4B     		ldr	r3, .L368
 5742 0016 1B68     		ldr	r3, [r3]
 5743 0018 00E0     		b	.L360
 5744              	.L359:
 5745              		.loc 1 3675 11 discriminator 2
 5746 001a FB68     		ldr	r3, [r7, #12]
 5747              	.L360:
 5748              		.loc 1 3675 9 is_stmt 1 discriminator 4
 5749 001c 7B61     		str	r3, [r7, #20]
3676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->xHandle = ( TaskHandle_t ) pxTCB;
 5750              		.loc 1 3677 25 discriminator 4
 5751 001e BB68     		ldr	r3, [r7, #8]
 5752 0020 7A69     		ldr	r2, [r7, #20]
 5753 0022 1A60     		str	r2, [r3]
3678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->pcTaskName = ( const char * ) &( pxTCB->pcTaskName [ 0 ] );
 5754              		.loc 1 3678 47 discriminator 4
 5755 0024 7B69     		ldr	r3, [r7, #20]
 5756 0026 03F13402 		add	r2, r3, #52
 5757              		.loc 1 3678 28 discriminator 4
 5758 002a BB68     		ldr	r3, [r7, #8]
 5759 002c 5A60     		str	r2, [r3, #4]
3679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->uxCurrentPriority = pxTCB->uxPriority;
 5760              		.loc 1 3679 42 discriminator 4
 5761 002e 7B69     		ldr	r3, [r7, #20]
 5762 0030 DA6A     		ldr	r2, [r3, #44]
 5763              		.loc 1 3679 35 discriminator 4
 5764 0032 BB68     		ldr	r3, [r7, #8]
 5765 0034 1A61     		str	r2, [r3, #16]
3680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->pxStackBase = pxTCB->pxStack;
 5766              		.loc 1 3680 36 discriminator 4
 5767 0036 7B69     		ldr	r3, [r7, #20]
 5768 0038 1A6B     		ldr	r2, [r3, #48]
 5769              		.loc 1 3680 29 discriminator 4
 5770 003a BB68     		ldr	r3, [r7, #8]
 5771 003c DA61     		str	r2, [r3, #28]
3681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->xTaskNumber = pxTCB->uxTCBNumber;
 5772              		.loc 1 3681 36 discriminator 4
 5773 003e 7B69     		ldr	r3, [r7, #20]
 5774 0040 9A6C     		ldr	r2, [r3, #72]
 5775              		.loc 1 3681 29 discriminator 4
 5776 0042 BB68     		ldr	r3, [r7, #8]
 5777 0044 9A60     		str	r2, [r3, #8]
3682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_MUTEXES == 1 )
3684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->uxBasePriority = pxTCB->uxBasePriority;
 5778              		.loc 1 3685 40 discriminator 4
 5779 0046 7B69     		ldr	r3, [r7, #20]
 5780 0048 1A6D     		ldr	r2, [r3, #80]
 5781              		.loc 1 3685 33 discriminator 4
 5782 004a BB68     		ldr	r3, [r7, #8]
 5783 004c 5A61     		str	r2, [r3, #20]
3686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
3688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->uxBasePriority = 0;
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 171


3690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configGENERATE_RUN_TIME_STATS == 1 )
3694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->ulRunTimeCounter = pxTCB->ulRunTimeCounter;
 5784              		.loc 1 3695 42 discriminator 4
 5785 004e 7B69     		ldr	r3, [r7, #20]
 5786 0050 9A6D     		ldr	r2, [r3, #88]
 5787              		.loc 1 3695 35 discriminator 4
 5788 0052 BB68     		ldr	r3, [r7, #8]
 5789 0054 9A61     		str	r2, [r3, #24]
3696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
3698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->ulRunTimeCounter = 0;
3700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Obtaining the task state is a little fiddly, so is only done if the
3704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		value of eState passed into this function is eInvalid - otherwise the
3705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		state is just set to whatever is passed in. */
3706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( eState != eInvalid )
 5790              		.loc 1 3706 5 discriminator 4
 5791 0056 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 5792 0058 052B     		cmp	r3, #5
 5793 005a 1AD0     		beq	.L361
3707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
 5794              		.loc 1 3708 14
 5795 005c 1A4B     		ldr	r3, .L368
 5796 005e 1B68     		ldr	r3, [r3]
 5797              		.loc 1 3708 6
 5798 0060 7A69     		ldr	r2, [r7, #20]
 5799 0062 9A42     		cmp	r2, r3
 5800 0064 03D1     		bne	.L362
3709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTaskStatus->eCurrentState = eRunning;
 5801              		.loc 1 3710 33
 5802 0066 BB68     		ldr	r3, [r7, #8]
 5803 0068 0022     		movs	r2, #0
 5804 006a 1A73     		strb	r2, [r3, #12]
 5805 006c 18E0     		b	.L363
 5806              	.L362:
3711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTaskStatus->eCurrentState = eState;
 5807              		.loc 1 3714 33
 5808 006e BB68     		ldr	r3, [r7, #8]
 5809 0070 FA78     		ldrb	r2, [r7, #3]
 5810 0072 1A73     		strb	r2, [r3, #12]
3715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( INCLUDE_vTaskSuspend == 1 )
3717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If the task is in the suspended list then there is a
3719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					chance it is actually just blocked indefinitely - so really
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 172


3720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					it should be reported as being in the Blocked state. */
3721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( eState == eSuspended )
 5811              		.loc 1 3721 8
 5812 0074 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 5813 0076 032B     		cmp	r3, #3
 5814 0078 12D1     		bne	.L363
3722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						vTaskSuspendAll();
 5815              		.loc 1 3723 7
 5816 007a FFF7FEFF 		bl	vTaskSuspendAll
3724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
3725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 5817              		.loc 1 3725 12
 5818 007e 7B69     		ldr	r3, [r7, #20]
 5819 0080 9B6A     		ldr	r3, [r3, #40]
 5820              		.loc 1 3725 10
 5821 0082 002B     		cmp	r3, #0
 5822 0084 02D0     		beq	.L364
3726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
3727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								pxTaskStatus->eCurrentState = eBlocked;
 5823              		.loc 1 3727 37
 5824 0086 BB68     		ldr	r3, [r7, #8]
 5825 0088 0222     		movs	r2, #2
 5826 008a 1A73     		strb	r2, [r3, #12]
 5827              	.L364:
3728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
3729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
3730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						( void ) xTaskResumeAll();
 5828              		.loc 1 3730 16
 5829 008c FFF7FEFF 		bl	xTaskResumeAll
 5830 0090 06E0     		b	.L363
 5831              	.L361:
3731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif /* INCLUDE_vTaskSuspend */
3734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->eCurrentState = eTaskGetState( pxTCB );
 5832              		.loc 1 3738 34
 5833 0092 7869     		ldr	r0, [r7, #20]
 5834 0094 FFF7FEFF 		bl	eTaskGetState
 5835 0098 0346     		mov	r3, r0
 5836 009a 1A46     		mov	r2, r3
 5837              		.loc 1 3738 32
 5838 009c BB68     		ldr	r3, [r7, #8]
 5839 009e 1A73     		strb	r2, [r3, #12]
 5840              	.L363:
3739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Obtaining the stack space takes some time, so the xGetFreeStackSpace
3742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		parameter is provided to allow it to be skipped. */
3743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xGetFreeStackSpace != pdFALSE )
 5841              		.loc 1 3743 5
 5842 00a0 7B68     		ldr	r3, [r7, #4]
 5843 00a2 002B     		cmp	r3, #0
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 173


 5844 00a4 09D0     		beq	.L365
3744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( portSTACK_GROWTH > 0 )
3746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTCB->pxEndOfSt
3748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#else
3750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTCB->pxStack )
 5845              		.loc 1 3751 89
 5846 00a6 7B69     		ldr	r3, [r7, #20]
 5847 00a8 1B6B     		ldr	r3, [r3, #48]
 5848              		.loc 1 3751 42
 5849 00aa 1846     		mov	r0, r3
 5850 00ac FFF7FEFF 		bl	prvTaskCheckFreeStackSpace
 5851 00b0 0346     		mov	r3, r0
 5852 00b2 1A46     		mov	r2, r3
 5853              		.loc 1 3751 40
 5854 00b4 BB68     		ldr	r3, [r7, #8]
 5855 00b6 1A84     		strh	r2, [r3, #32]	@ movhi
3752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
3754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->usStackHighWaterMark = 0;
3758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5856              		.loc 1 3759 2
 5857 00b8 02E0     		b	.L367
 5858              	.L365:
3757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5859              		.loc 1 3757 39
 5860 00ba BB68     		ldr	r3, [r7, #8]
 5861 00bc 0022     		movs	r2, #0
 5862 00be 1A84     		strh	r2, [r3, #32]	@ movhi
 5863              	.L367:
 5864              		.loc 1 3759 2
 5865 00c0 00BF     		nop
 5866 00c2 1837     		adds	r7, r7, #24
 5867              	.LCFI227:
 5868              		.cfi_def_cfa_offset 8
 5869 00c4 BD46     		mov	sp, r7
 5870              	.LCFI228:
 5871              		.cfi_def_cfa_register 13
 5872              		@ sp needed
 5873 00c6 80BD     		pop	{r7, pc}
 5874              	.L369:
 5875              		.align	2
 5876              	.L368:
 5877 00c8 00000000 		.word	pxCurrentTCB
 5878              		.cfi_endproc
 5879              	.LFE48:
 5881              		.section	.text.prvListTasksWithinSingleList,"ax",%progbits
 5882              		.align	1
 5883              		.syntax unified
 5884              		.thumb
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 174


 5885              		.thumb_func
 5887              	prvListTasksWithinSingleList:
 5888              	.LFB49:
3760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t *pxTaskStatusArray, List_t *pxList, 
3767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 5889              		.loc 1 3767 2
 5890              		.cfi_startproc
 5891              		@ args = 0, pretend = 0, frame = 40
 5892              		@ frame_needed = 1, uses_anonymous_args = 0
 5893 0000 80B5     		push	{r7, lr}
 5894              	.LCFI229:
 5895              		.cfi_def_cfa_offset 8
 5896              		.cfi_offset 7, -8
 5897              		.cfi_offset 14, -4
 5898 0002 8AB0     		sub	sp, sp, #40
 5899              	.LCFI230:
 5900              		.cfi_def_cfa_offset 48
 5901 0004 00AF     		add	r7, sp, #0
 5902              	.LCFI231:
 5903              		.cfi_def_cfa_register 7
 5904 0006 F860     		str	r0, [r7, #12]
 5905 0008 B960     		str	r1, [r7, #8]
 5906 000a 1346     		mov	r3, r2
 5907 000c FB71     		strb	r3, [r7, #7]
3768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configLIST_VOLATILE TCB_t *pxNextTCB, *pxFirstTCB;
3769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTask = 0;
 5908              		.loc 1 3769 14
 5909 000e 0023     		movs	r3, #0
 5910 0010 7B62     		str	r3, [r7, #36]
3770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
 5911              		.loc 1 3771 7
 5912 0012 BB68     		ldr	r3, [r7, #8]
 5913 0014 1B68     		ldr	r3, [r3]
 5914              		.loc 1 3771 5
 5915 0016 002B     		cmp	r3, #0
 5916 0018 3FD0     		beq	.L371
 5917              	.LBB219:
3772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList ); /*lint !e9079 void * is used as this macro is
 5918              		.loc 1 3773 4
 5919 001a BB68     		ldr	r3, [r7, #8]
 5920 001c 3B62     		str	r3, [r7, #32]
 5921 001e 3B6A     		ldr	r3, [r7, #32]
 5922 0020 5B68     		ldr	r3, [r3, #4]
 5923 0022 5A68     		ldr	r2, [r3, #4]
 5924 0024 3B6A     		ldr	r3, [r7, #32]
 5925 0026 5A60     		str	r2, [r3, #4]
 5926 0028 3B6A     		ldr	r3, [r7, #32]
 5927 002a 5A68     		ldr	r2, [r3, #4]
 5928 002c 3B6A     		ldr	r3, [r7, #32]
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 175


 5929 002e 0833     		adds	r3, r3, #8
 5930 0030 9A42     		cmp	r2, r3
 5931 0032 04D1     		bne	.L372
 5932              		.loc 1 3773 4 is_stmt 0 discriminator 1
 5933 0034 3B6A     		ldr	r3, [r7, #32]
 5934 0036 5B68     		ldr	r3, [r3, #4]
 5935 0038 5A68     		ldr	r2, [r3, #4]
 5936 003a 3B6A     		ldr	r3, [r7, #32]
 5937 003c 5A60     		str	r2, [r3, #4]
 5938              	.L372:
 5939              		.loc 1 3773 4 discriminator 3
 5940 003e 3B6A     		ldr	r3, [r7, #32]
 5941 0040 5B68     		ldr	r3, [r3, #4]
 5942 0042 DB68     		ldr	r3, [r3, #12]
 5943 0044 FB61     		str	r3, [r7, #28]
 5944              	.L374:
 5945              	.LBE219:
 5946              	.LBB220:
3774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Populate an TaskStatus_t structure within the
3776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatusArray array for each task that is referenced from
3777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxList.  See the definition of TaskStatus_t in task.h for the
3778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			meaning of each TaskStatus_t structure member. */
3779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			do
3780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList ); /*lint !e9079 void * is used as this macro is
 5947              		.loc 1 3781 5 is_stmt 1
 5948 0046 BB68     		ldr	r3, [r7, #8]
 5949 0048 BB61     		str	r3, [r7, #24]
 5950 004a BB69     		ldr	r3, [r7, #24]
 5951 004c 5B68     		ldr	r3, [r3, #4]
 5952 004e 5A68     		ldr	r2, [r3, #4]
 5953 0050 BB69     		ldr	r3, [r7, #24]
 5954 0052 5A60     		str	r2, [r3, #4]
 5955 0054 BB69     		ldr	r3, [r7, #24]
 5956 0056 5A68     		ldr	r2, [r3, #4]
 5957 0058 BB69     		ldr	r3, [r7, #24]
 5958 005a 0833     		adds	r3, r3, #8
 5959 005c 9A42     		cmp	r2, r3
 5960 005e 04D1     		bne	.L373
 5961              		.loc 1 3781 5 is_stmt 0 discriminator 1
 5962 0060 BB69     		ldr	r3, [r7, #24]
 5963 0062 5B68     		ldr	r3, [r3, #4]
 5964 0064 5A68     		ldr	r2, [r3, #4]
 5965 0066 BB69     		ldr	r3, [r7, #24]
 5966 0068 5A60     		str	r2, [r3, #4]
 5967              	.L373:
 5968              		.loc 1 3781 5 discriminator 3
 5969 006a BB69     		ldr	r3, [r7, #24]
 5970 006c 5B68     		ldr	r3, [r3, #4]
 5971 006e DB68     		ldr	r3, [r3, #12]
 5972 0070 7B61     		str	r3, [r7, #20]
 5973              	.LBE220:
3782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE, eState );
 5974              		.loc 1 3782 67 is_stmt 1 discriminator 3
 5975 0072 7A6A     		ldr	r2, [r7, #36]
 5976 0074 1346     		mov	r3, r2
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 176


 5977 0076 DB00     		lsls	r3, r3, #3
 5978 0078 1344     		add	r3, r3, r2
 5979 007a 9B00     		lsls	r3, r3, #2
 5980 007c 1A46     		mov	r2, r3
 5981              		.loc 1 3782 5 discriminator 3
 5982 007e FB68     		ldr	r3, [r7, #12]
 5983 0080 9918     		adds	r1, r3, r2
 5984 0082 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5985 0084 0122     		movs	r2, #1
 5986 0086 7869     		ldr	r0, [r7, #20]
 5987 0088 FFF7FEFF 		bl	vTaskGetInfo
3783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxTask++;
 5988              		.loc 1 3783 11 discriminator 3
 5989 008c 7B6A     		ldr	r3, [r7, #36]
 5990 008e 0133     		adds	r3, r3, #1
 5991 0090 7B62     		str	r3, [r7, #36]
3784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			} while( pxNextTCB != pxFirstTCB );
 5992              		.loc 1 3784 23 discriminator 3
 5993 0092 7A69     		ldr	r2, [r7, #20]
 5994 0094 FB69     		ldr	r3, [r7, #28]
 5995 0096 9A42     		cmp	r2, r3
 5996 0098 D5D1     		bne	.L374
 5997              	.L371:
3785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxTask;
 5998              		.loc 1 3791 10
 5999 009a 7B6A     		ldr	r3, [r7, #36]
3792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 6000              		.loc 1 3792 2
 6001 009c 1846     		mov	r0, r3
 6002 009e 2837     		adds	r7, r7, #40
 6003              	.LCFI232:
 6004              		.cfi_def_cfa_offset 8
 6005 00a0 BD46     		mov	sp, r7
 6006              	.LCFI233:
 6007              		.cfi_def_cfa_register 13
 6008              		@ sp needed
 6009 00a2 80BD     		pop	{r7, pc}
 6010              		.cfi_endproc
 6011              	.LFE49:
 6013              		.section	.text.prvTaskCheckFreeStackSpace,"ax",%progbits
 6014              		.align	1
 6015              		.syntax unified
 6016              		.thumb
 6017              		.thumb_func
 6019              	prvTaskCheckFreeStackSpace:
 6020              	.LFB50:
3793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) || ( INCLUD
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 177


3798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static configSTACK_DEPTH_TYPE prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte )
3800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 6021              		.loc 1 3800 2
 6022              		.cfi_startproc
 6023              		@ args = 0, pretend = 0, frame = 16
 6024              		@ frame_needed = 1, uses_anonymous_args = 0
 6025              		@ link register save eliminated.
 6026 0000 80B4     		push	{r7}
 6027              	.LCFI234:
 6028              		.cfi_def_cfa_offset 4
 6029              		.cfi_offset 7, -4
 6030 0002 85B0     		sub	sp, sp, #20
 6031              	.LCFI235:
 6032              		.cfi_def_cfa_offset 24
 6033 0004 00AF     		add	r7, sp, #0
 6034              	.LCFI236:
 6035              		.cfi_def_cfa_register 7
 6036 0006 7860     		str	r0, [r7, #4]
3801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulCount = 0U;
 6037              		.loc 1 3801 11
 6038 0008 0023     		movs	r3, #0
 6039 000a FB60     		str	r3, [r7, #12]
3802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		while( *pucStackByte == ( uint8_t ) tskSTACK_FILL_BYTE )
 6040              		.loc 1 3803 8
 6041 000c 05E0     		b	.L377
 6042              	.L378:
3804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucStackByte -= portSTACK_GROWTH;
 6043              		.loc 1 3805 17
 6044 000e 7B68     		ldr	r3, [r7, #4]
 6045 0010 0133     		adds	r3, r3, #1
 6046 0012 7B60     		str	r3, [r7, #4]
3806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulCount++;
 6047              		.loc 1 3806 11
 6048 0014 FB68     		ldr	r3, [r7, #12]
 6049 0016 0133     		adds	r3, r3, #1
 6050 0018 FB60     		str	r3, [r7, #12]
 6051              	.L377:
3803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 6052              		.loc 1 3803 10
 6053 001a 7B68     		ldr	r3, [r7, #4]
 6054 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
3803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 6055              		.loc 1 3803 24
 6056 001e A52B     		cmp	r3, #165
 6057 0020 F5D0     		beq	.L378
3807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		ulCount /= ( uint32_t ) sizeof( StackType_t ); /*lint !e961 Casting is not redundant on smaller a
 6058              		.loc 1 3809 11
 6059 0022 FB68     		ldr	r3, [r7, #12]
 6060 0024 9B08     		lsrs	r3, r3, #2
 6061 0026 FB60     		str	r3, [r7, #12]
3810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return ( configSTACK_DEPTH_TYPE ) ulCount;
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 178


 6062              		.loc 1 3811 10
 6063 0028 FB68     		ldr	r3, [r7, #12]
 6064 002a 9BB2     		uxth	r3, r3
3812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 6065              		.loc 1 3812 2
 6066 002c 1846     		mov	r0, r3
 6067 002e 1437     		adds	r7, r7, #20
 6068              	.LCFI237:
 6069              		.cfi_def_cfa_offset 4
 6070 0030 BD46     		mov	sp, r7
 6071              	.LCFI238:
 6072              		.cfi_def_cfa_register 13
 6073              		@ sp needed
 6074 0032 5DF8047B 		ldr	r7, [sp], #4
 6075              	.LCFI239:
 6076              		.cfi_restore 7
 6077              		.cfi_def_cfa_offset 0
 6078 0036 7047     		bx	lr
 6079              		.cfi_endproc
 6080              	.LFE50:
 6082              		.section	.text.uxTaskGetStackHighWaterMark,"ax",%progbits
 6083              		.align	1
 6084              		.global	uxTaskGetStackHighWaterMark
 6085              		.syntax unified
 6086              		.thumb
 6087              		.thumb_func
 6089              	uxTaskGetStackHighWaterMark:
 6090              	.LFB51:
3813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) || ( 
3815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskGetStackHighWaterMark2 == 1 )
3818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* uxTaskGetStackHighWaterMark() and uxTaskGetStackHighWaterMark2() are the
3820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	same except for their return type.  Using configSTACK_DEPTH_TYPE allows the
3821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	user to determine the return type.  It gets around the problem of the value
3822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	overflowing on 8-bit types without breaking backward compatibility for
3823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	applications that expect an 8-bit return type. */
3824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configSTACK_DEPTH_TYPE uxTaskGetStackHighWaterMark2( TaskHandle_t xTask )
3825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t *pucEndOfStack;
3828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configSTACK_DEPTH_TYPE uxReturn;
3829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* uxTaskGetStackHighWaterMark() and uxTaskGetStackHighWaterMark2() are
3831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the same except for their return type.  Using configSTACK_DEPTH_TYPE
3832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		allows the user to determine the return type.  It gets around the
3833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		problem of the value overflowing on 8-bit types without breaking
3834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		backward compatibility for applications that expect an 8-bit return
3835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		type. */
3836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
3838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if portSTACK_GROWTH < 0
3840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxStack;
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 179


3842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
3844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxEndOfStack;
3846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxReturn = prvTaskCheckFreeStackSpace( pucEndOfStack );
3850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
3852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskGetStackHighWaterMark2 */
3855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskGetStackHighWaterMark == 1 )
3858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskGetStackHighWaterMark( TaskHandle_t xTask )
3860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 6091              		.loc 1 3860 2
 6092              		.cfi_startproc
 6093              		@ args = 0, pretend = 0, frame = 24
 6094              		@ frame_needed = 1, uses_anonymous_args = 0
 6095 0000 80B5     		push	{r7, lr}
 6096              	.LCFI240:
 6097              		.cfi_def_cfa_offset 8
 6098              		.cfi_offset 7, -8
 6099              		.cfi_offset 14, -4
 6100 0002 86B0     		sub	sp, sp, #24
 6101              	.LCFI241:
 6102              		.cfi_def_cfa_offset 32
 6103 0004 00AF     		add	r7, sp, #0
 6104              	.LCFI242:
 6105              		.cfi_def_cfa_register 7
 6106 0006 7860     		str	r0, [r7, #4]
3861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t *pucEndOfStack;
3863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
3864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
 6107              		.loc 1 3865 11
 6108 0008 7B68     		ldr	r3, [r7, #4]
 6109 000a 002B     		cmp	r3, #0
 6110 000c 02D1     		bne	.L381
 6111              		.loc 1 3865 11 is_stmt 0 discriminator 1
 6112 000e 094B     		ldr	r3, .L384
 6113 0010 1B68     		ldr	r3, [r3]
 6114 0012 00E0     		b	.L382
 6115              	.L381:
 6116              		.loc 1 3865 11 discriminator 2
 6117 0014 7B68     		ldr	r3, [r7, #4]
 6118              	.L382:
 6119              		.loc 1 3865 9 is_stmt 1 discriminator 4
 6120 0016 7B61     		str	r3, [r7, #20]
3866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if portSTACK_GROWTH < 0
3868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 180


3869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxStack;
 6121              		.loc 1 3869 18 discriminator 4
 6122 0018 7B69     		ldr	r3, [r7, #20]
 6123 001a 1B6B     		ldr	r3, [r3, #48]
 6124 001c 3B61     		str	r3, [r7, #16]
3870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
3872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxEndOfStack;
3874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxReturn = ( UBaseType_t ) prvTaskCheckFreeStackSpace( pucEndOfStack );
 6125              		.loc 1 3877 30 discriminator 4
 6126 001e 3869     		ldr	r0, [r7, #16]
 6127 0020 FFF7FEFF 		bl	prvTaskCheckFreeStackSpace
 6128 0024 0346     		mov	r3, r0
 6129              		.loc 1 3877 12 discriminator 4
 6130 0026 FB60     		str	r3, [r7, #12]
3878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
 6131              		.loc 1 3879 10 discriminator 4
 6132 0028 FB68     		ldr	r3, [r7, #12]
3880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 6133              		.loc 1 3880 2 discriminator 4
 6134 002a 1846     		mov	r0, r3
 6135 002c 1837     		adds	r7, r7, #24
 6136              	.LCFI243:
 6137              		.cfi_def_cfa_offset 8
 6138 002e BD46     		mov	sp, r7
 6139              	.LCFI244:
 6140              		.cfi_def_cfa_register 13
 6141              		@ sp needed
 6142 0030 80BD     		pop	{r7, pc}
 6143              	.L385:
 6144 0032 00BF     		.align	2
 6145              	.L384:
 6146 0034 00000000 		.word	pxCurrentTCB
 6147              		.cfi_endproc
 6148              	.LFE51:
 6150              		.section	.text.prvDeleteTCB,"ax",%progbits
 6151              		.align	1
 6152              		.syntax unified
 6153              		.thumb
 6154              		.thumb_func
 6156              	prvDeleteTCB:
 6157              	.LFB52:
3881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskGetStackHighWaterMark */
3883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
3886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static void prvDeleteTCB( TCB_t *pxTCB )
3888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 6158              		.loc 1 3888 2
 6159              		.cfi_startproc
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 181


 6160              		@ args = 0, pretend = 0, frame = 16
 6161              		@ frame_needed = 1, uses_anonymous_args = 0
 6162 0000 80B5     		push	{r7, lr}
 6163              	.LCFI245:
 6164              		.cfi_def_cfa_offset 8
 6165              		.cfi_offset 7, -8
 6166              		.cfi_offset 14, -4
 6167 0002 84B0     		sub	sp, sp, #16
 6168              	.LCFI246:
 6169              		.cfi_def_cfa_offset 24
 6170 0004 00AF     		add	r7, sp, #0
 6171              	.LCFI247:
 6172              		.cfi_def_cfa_register 7
 6173 0006 7860     		str	r0, [r7, #4]
3889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This call is required specifically for the TriCore port.  It must be
3890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		above the vPortFree() calls.  The call is also used by ports/demos that
3891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		want to allocate and clean RAM statically. */
3892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAN_UP_TCB( pxTCB );
3893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Free up the memory allocated by the scheduler for the task.  It is up
3895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		to the task to free any memory allocated at the application level.
3896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
3897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		for additional information. */
3898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
3899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
3901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
3903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) && ( p
3905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The task can only have been allocated dynamically - free both
3907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the stack and TCB. */
3908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTCB->pxStack );
3909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTCB );
3910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consol
3912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The task could have been allocated statically or dynamically, so
3914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			check what was statically allocated before trying to free the
3915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			memory. */
3916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 6174              		.loc 1 3916 13
 6175 0008 7B68     		ldr	r3, [r7, #4]
 6176 000a 93F86130 		ldrb	r3, [r3, #97]	@ zero_extendqisi2
 6177              		.loc 1 3916 6
 6178 000e 002B     		cmp	r3, #0
 6179 0010 08D1     		bne	.L387
3917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Both the stack and TCB were allocated dynamically, so both
3919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				must be freed. */
3920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB->pxStack );
 6180              		.loc 1 3920 21
 6181 0012 7B68     		ldr	r3, [r7, #4]
 6182 0014 1B6B     		ldr	r3, [r3, #48]
 6183              		.loc 1 3920 5
 6184 0016 1846     		mov	r0, r3
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 182


 6185 0018 FFF7FEFF 		bl	vPortFree
3921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB );
 6186              		.loc 1 3921 5
 6187 001c 7868     		ldr	r0, [r7, #4]
 6188 001e FFF7FEFF 		bl	vPortFree
3922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
3924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Only the stack was statically allocated, so the TCB is the
3926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				only memory that must be freed. */
3927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB );
3928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Neither the stack nor the TCB were allocated dynamically, so
3932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				nothing needs to be freed. */
3933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
3934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
3938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 6189              		.loc 1 3938 2
 6190 0022 18E0     		b	.L391
 6191              	.L387:
3923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 6192              		.loc 1 3923 18
 6193 0024 7B68     		ldr	r3, [r7, #4]
 6194 0026 93F86130 		ldrb	r3, [r3, #97]	@ zero_extendqisi2
3923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 6195              		.loc 1 3923 11
 6196 002a 012B     		cmp	r3, #1
 6197 002c 03D1     		bne	.L389
3927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 6198              		.loc 1 3927 5
 6199 002e 7868     		ldr	r0, [r7, #4]
 6200 0030 FFF7FEFF 		bl	vPortFree
 6201              		.loc 1 3938 2
 6202 0034 0FE0     		b	.L391
 6203              	.L389:
3933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 6204              		.loc 1 3933 5
 6205 0036 7B68     		ldr	r3, [r7, #4]
 6206 0038 93F86130 		ldrb	r3, [r3, #97]	@ zero_extendqisi2
 6207 003c 022B     		cmp	r3, #2
 6208 003e 0AD0     		beq	.L391
 6209              	.LBB221:
 6210              	.LBB222:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6211              		.loc 2 195 2
 6212              		.syntax unified
 6213              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 6214 0040 4FF05003 			mov r3, #80												
 6215 0044 83F31188 		msr basepri, r3											
 6216 0048 BFF36F8F 		isb														
 6217 004c BFF34F8F 		dsb														
 6218              	
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 183


 6219              	@ 0 "" 2
 6220              		.thumb
 6221              		.syntax unified
 6222 0050 FB60     		str	r3, [r7, #12]
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 6223              		.loc 2 203 1
 6224 0052 00BF     		nop
 6225              	.L390:
 6226              	.LBE222:
 6227              	.LBE221:
3933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 6228              		.loc 1 3933 5 discriminator 1
 6229 0054 FEE7     		b	.L390
 6230              	.L391:
 6231              		.loc 1 3938 2
 6232 0056 00BF     		nop
 6233 0058 1037     		adds	r7, r7, #16
 6234              	.LCFI248:
 6235              		.cfi_def_cfa_offset 8
 6236 005a BD46     		mov	sp, r7
 6237              	.LCFI249:
 6238              		.cfi_def_cfa_register 13
 6239              		@ sp needed
 6240 005c 80BD     		pop	{r7, pc}
 6241              		.cfi_endproc
 6242              	.LFE52:
 6244              		.section	.text.prvResetNextTaskUnblockTime,"ax",%progbits
 6245              		.align	1
 6246              		.syntax unified
 6247              		.thumb
 6248              		.thumb_func
 6250              	prvResetNextTaskUnblockTime:
 6251              	.LFB53:
3939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelete */
3941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvResetNextTaskUnblockTime( void )
3944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 6252              		.loc 1 3944 1
 6253              		.cfi_startproc
 6254              		@ args = 0, pretend = 0, frame = 8
 6255              		@ frame_needed = 1, uses_anonymous_args = 0
 6256              		@ link register save eliminated.
 6257 0000 80B4     		push	{r7}
 6258              	.LCFI250:
 6259              		.cfi_def_cfa_offset 4
 6260              		.cfi_offset 7, -4
 6261 0002 83B0     		sub	sp, sp, #12
 6262              	.LCFI251:
 6263              		.cfi_def_cfa_offset 16
 6264 0004 00AF     		add	r7, sp, #0
 6265              	.LCFI252:
 6266              		.cfi_def_cfa_register 7
3945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB;
3946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 184


 6267              		.loc 1 3947 6
 6268 0006 0C4B     		ldr	r3, .L396
 6269 0008 1B68     		ldr	r3, [r3]
 6270 000a 1B68     		ldr	r3, [r3]
 6271              		.loc 1 3947 4
 6272 000c 002B     		cmp	r3, #0
 6273 000e 04D1     		bne	.L393
3948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
3950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the maximum possible value so it is	extremely unlikely that the
3951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
3952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		there is an item in the delayed list. */
3953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = portMAX_DELAY;
 6274              		.loc 1 3953 24
 6275 0010 0A4B     		ldr	r3, .L396+4
 6276 0012 4FF0FF32 		mov	r2, #-1
 6277 0016 1A60     		str	r2, [r3]
3954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
3956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The new current delayed list is not empty, get the value of
3958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the item at the head of the delayed list.  This is the time at
3959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		which the task at the head of the delayed list should be removed
3960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from the Blocked state. */
3961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as thi
3962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
3963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 6278              		.loc 1 3964 1
 6279 0018 08E0     		b	.L395
 6280              	.L393:
3961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 6281              		.loc 1 3961 15
 6282 001a 074B     		ldr	r3, .L396
 6283 001c 1B68     		ldr	r3, [r3]
 6284 001e DB68     		ldr	r3, [r3, #12]
3961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 6285              		.loc 1 3961 13
 6286 0020 DB68     		ldr	r3, [r3, #12]
 6287 0022 7B60     		str	r3, [r7, #4]
3962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 6288              		.loc 1 3962 26
 6289 0024 7B68     		ldr	r3, [r7, #4]
 6290 0026 5B68     		ldr	r3, [r3, #4]
3962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 6291              		.loc 1 3962 24
 6292 0028 044A     		ldr	r2, .L396+4
 6293 002a 1360     		str	r3, [r2]
 6294              	.L395:
 6295              		.loc 1 3964 1
 6296 002c 00BF     		nop
 6297 002e 0C37     		adds	r7, r7, #12
 6298              	.LCFI253:
 6299              		.cfi_def_cfa_offset 4
 6300 0030 BD46     		mov	sp, r7
 6301              	.LCFI254:
 6302              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 185


 6303              		@ sp needed
 6304 0032 5DF8047B 		ldr	r7, [sp], #4
 6305              	.LCFI255:
 6306              		.cfi_restore 7
 6307              		.cfi_def_cfa_offset 0
 6308 0036 7047     		bx	lr
 6309              	.L397:
 6310              		.align	2
 6311              	.L396:
 6312 0038 00000000 		.word	pxDelayedTaskList
 6313 003c 00000000 		.word	xNextTaskUnblockTime
 6314              		.cfi_endproc
 6315              	.LFE53:
 6317              		.section	.text.xTaskGetCurrentTaskHandle,"ax",%progbits
 6318              		.align	1
 6319              		.global	xTaskGetCurrentTaskHandle
 6320              		.syntax unified
 6321              		.thumb
 6322              		.thumb_func
 6324              	xTaskGetCurrentTaskHandle:
 6325              	.LFB54:
3965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) )
3968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskGetCurrentTaskHandle( void )
3970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 6326              		.loc 1 3970 2
 6327              		.cfi_startproc
 6328              		@ args = 0, pretend = 0, frame = 8
 6329              		@ frame_needed = 1, uses_anonymous_args = 0
 6330              		@ link register save eliminated.
 6331 0000 80B4     		push	{r7}
 6332              	.LCFI256:
 6333              		.cfi_def_cfa_offset 4
 6334              		.cfi_offset 7, -4
 6335 0002 83B0     		sub	sp, sp, #12
 6336              	.LCFI257:
 6337              		.cfi_def_cfa_offset 16
 6338 0004 00AF     		add	r7, sp, #0
 6339              	.LCFI258:
 6340              		.cfi_def_cfa_register 7
3971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xReturn;
3972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* A critical section is not required as this is not called from
3974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		an interrupt and the current TCB will always be the same for any
3975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		individual execution thread. */
3976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = pxCurrentTCB;
 6341              		.loc 1 3976 11
 6342 0006 054B     		ldr	r3, .L400
 6343 0008 1B68     		ldr	r3, [r3]
 6344 000a 7B60     		str	r3, [r7, #4]
3977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 6345              		.loc 1 3978 10
 6346 000c 7B68     		ldr	r3, [r7, #4]
3979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 186


 6347              		.loc 1 3979 2
 6348 000e 1846     		mov	r0, r3
 6349 0010 0C37     		adds	r7, r7, #12
 6350              	.LCFI259:
 6351              		.cfi_def_cfa_offset 4
 6352 0012 BD46     		mov	sp, r7
 6353              	.LCFI260:
 6354              		.cfi_def_cfa_register 13
 6355              		@ sp needed
 6356 0014 5DF8047B 		ldr	r7, [sp], #4
 6357              	.LCFI261:
 6358              		.cfi_restore 7
 6359              		.cfi_def_cfa_offset 0
 6360 0018 7047     		bx	lr
 6361              	.L401:
 6362 001a 00BF     		.align	2
 6363              	.L400:
 6364 001c 00000000 		.word	pxCurrentTCB
 6365              		.cfi_endproc
 6366              	.LFE54:
 6368              		.section	.text.xTaskGetSchedulerState,"ax",%progbits
 6369              		.align	1
 6370              		.global	xTaskGetSchedulerState
 6371              		.syntax unified
 6372              		.thumb
 6373              		.thumb_func
 6375              	xTaskGetSchedulerState:
 6376              	.LFB55:
3980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) ) */
3982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
3985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskGetSchedulerState( void )
3987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 6377              		.loc 1 3987 2
 6378              		.cfi_startproc
 6379              		@ args = 0, pretend = 0, frame = 8
 6380              		@ frame_needed = 1, uses_anonymous_args = 0
 6381              		@ link register save eliminated.
 6382 0000 80B4     		push	{r7}
 6383              	.LCFI262:
 6384              		.cfi_def_cfa_offset 4
 6385              		.cfi_offset 7, -4
 6386 0002 83B0     		sub	sp, sp, #12
 6387              	.LCFI263:
 6388              		.cfi_def_cfa_offset 16
 6389 0004 00AF     		add	r7, sp, #0
 6390              	.LCFI264:
 6391              		.cfi_def_cfa_register 7
3988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
3989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning == pdFALSE )
 6392              		.loc 1 3990 25
 6393 0006 0B4B     		ldr	r3, .L407
 6394 0008 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 187


 6395              		.loc 1 3990 5
 6396 000a 002B     		cmp	r3, #0
 6397 000c 02D1     		bne	.L403
3991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = taskSCHEDULER_NOT_STARTED;
 6398              		.loc 1 3992 12
 6399 000e 0123     		movs	r3, #1
 6400 0010 7B60     		str	r3, [r7, #4]
 6401 0012 08E0     		b	.L404
 6402              	.L403:
3993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 6403              		.loc 1 3996 29
 6404 0014 084B     		ldr	r3, .L407+4
 6405 0016 1B68     		ldr	r3, [r3]
 6406              		.loc 1 3996 6
 6407 0018 002B     		cmp	r3, #0
 6408 001a 02D1     		bne	.L405
3997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = taskSCHEDULER_RUNNING;
 6409              		.loc 1 3998 13
 6410 001c 0223     		movs	r3, #2
 6411 001e 7B60     		str	r3, [r7, #4]
 6412 0020 01E0     		b	.L404
 6413              	.L405:
3999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = taskSCHEDULER_SUSPENDED;
 6414              		.loc 1 4002 13
 6415 0022 0023     		movs	r3, #0
 6416 0024 7B60     		str	r3, [r7, #4]
 6417              	.L404:
4003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 6418              		.loc 1 4006 10
 6419 0026 7B68     		ldr	r3, [r7, #4]
4007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 6420              		.loc 1 4007 2
 6421 0028 1846     		mov	r0, r3
 6422 002a 0C37     		adds	r7, r7, #12
 6423              	.LCFI265:
 6424              		.cfi_def_cfa_offset 4
 6425 002c BD46     		mov	sp, r7
 6426              	.LCFI266:
 6427              		.cfi_def_cfa_register 13
 6428              		@ sp needed
 6429 002e 5DF8047B 		ldr	r7, [sp], #4
 6430              	.LCFI267:
 6431              		.cfi_restore 7
 6432              		.cfi_def_cfa_offset 0
 6433 0032 7047     		bx	lr
 6434              	.L408:
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 188


 6435              		.align	2
 6436              	.L407:
 6437 0034 00000000 		.word	xSchedulerRunning
 6438 0038 00000000 		.word	uxSchedulerSuspended
 6439              		.cfi_endproc
 6440              	.LFE55:
 6442              		.section	.text.xTaskPriorityInherit,"ax",%progbits
 6443              		.align	1
 6444              		.global	xTaskPriorityInherit
 6445              		.syntax unified
 6446              		.thumb
 6447              		.thumb_func
 6449              	xTaskPriorityInherit:
 6450              	.LFB56:
4008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) ) */
4010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskPriorityInherit( TaskHandle_t const pxMutexHolder )
4015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 6451              		.loc 1 4015 2
 6452              		.cfi_startproc
 6453              		@ args = 0, pretend = 0, frame = 16
 6454              		@ frame_needed = 1, uses_anonymous_args = 0
 6455 0000 80B5     		push	{r7, lr}
 6456              	.LCFI268:
 6457              		.cfi_def_cfa_offset 8
 6458              		.cfi_offset 7, -8
 6459              		.cfi_offset 14, -4
 6460 0002 84B0     		sub	sp, sp, #16
 6461              	.LCFI269:
 6462              		.cfi_def_cfa_offset 24
 6463 0004 00AF     		add	r7, sp, #0
 6464              	.LCFI270:
 6465              		.cfi_def_cfa_register 7
 6466 0006 7860     		str	r0, [r7, #4]
4016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxMutexHolderTCB = pxMutexHolder;
 6467              		.loc 1 4016 16
 6468 0008 7B68     		ldr	r3, [r7, #4]
 6469 000a BB60     		str	r3, [r7, #8]
4017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
 6470              		.loc 1 4017 13
 6471 000c 0023     		movs	r3, #0
 6472 000e FB60     		str	r3, [r7, #12]
4018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the mutex was given back by an interrupt while the queue was
4020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		locked then the mutex holder might now be NULL.  _RB_ Is this still
4021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		needed as interrupts can no longer use mutexes? */
4022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxMutexHolder != NULL )
 6473              		.loc 1 4022 5
 6474 0010 7B68     		ldr	r3, [r7, #4]
 6475 0012 002B     		cmp	r3, #0
 6476 0014 51D0     		beq	.L410
4023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the holder of the mutex has a priority below the priority of
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 189


4025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the task attempting to obtain the mutex then it will temporarily
4026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			inherit the priority of the task attempting to obtain the mutex. */
4027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 6477              		.loc 1 4027 24
 6478 0016 BB68     		ldr	r3, [r7, #8]
 6479 0018 DA6A     		ldr	r2, [r3, #44]
 6480              		.loc 1 4027 51
 6481 001a 2A4B     		ldr	r3, .L417
 6482 001c 1B68     		ldr	r3, [r3]
 6483 001e DB6A     		ldr	r3, [r3, #44]
 6484              		.loc 1 4027 6
 6485 0020 9A42     		cmp	r2, r3
 6486 0022 41D2     		bcs	.L411
4028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Adjust the mutex holder state to account for its new
4030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				priority.  Only reset the event list item value if the value is
4031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				not being used for anything else. */
4032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VA
 6487              		.loc 1 4032 11
 6488 0024 BB68     		ldr	r3, [r7, #8]
 6489 0026 9B69     		ldr	r3, [r3, #24]
 6490              		.loc 1 4032 7
 6491 0028 002B     		cmp	r3, #0
 6492 002a 06DB     		blt	.L412
4033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIOR
 6493              		.loc 1 4034 6
 6494 002c 254B     		ldr	r3, .L417
 6495 002e 1B68     		ldr	r3, [r3]
 6496 0030 DB6A     		ldr	r3, [r3, #44]
 6497 0032 C3F13802 		rsb	r2, r3, #56
 6498 0036 BB68     		ldr	r3, [r7, #8]
 6499 0038 9A61     		str	r2, [r3, #24]
 6500              	.L412:
4035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the task being modified is in the ready state it will need
4042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				to be moved into a new list. */
4043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutex
 6501              		.loc 1 4043 9
 6502 003a BB68     		ldr	r3, [r7, #8]
 6503 003c 5969     		ldr	r1, [r3, #20]
 6504 003e BB68     		ldr	r3, [r7, #8]
 6505 0040 DA6A     		ldr	r2, [r3, #44]
 6506 0042 1346     		mov	r3, r2
 6507 0044 9B00     		lsls	r3, r3, #2
 6508 0046 1344     		add	r3, r3, r2
 6509 0048 9B00     		lsls	r3, r3, #2
 6510 004a 1F4A     		ldr	r2, .L417+4
 6511 004c 1344     		add	r3, r3, r2
 6512              		.loc 1 4043 7
 6513 004e 9942     		cmp	r1, r3
 6514 0050 22D1     		bne	.L413
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 190


4044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 6515              		.loc 1 4045 10
 6516 0052 BB68     		ldr	r3, [r7, #8]
 6517 0054 0433     		adds	r3, r3, #4
 6518 0056 1846     		mov	r0, r3
 6519 0058 FFF7FEFF 		bl	uxListRemove
4046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* It is known that the task is in its ready list so
4048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						there is no need to check again and the port level
4049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						reset macro can be called directly. */
4050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						portRESET_READY_PRIORITY( pxMutexHolderTCB->uxPriority, uxTopReadyPriority );
4051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
4055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Inherit the priority before being moved into the new list. */
4058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 6520              		.loc 1 4058 49
 6521 005c 194B     		ldr	r3, .L417
 6522 005e 1B68     		ldr	r3, [r3]
 6523 0060 DA6A     		ldr	r2, [r3, #44]
 6524              		.loc 1 4058 35
 6525 0062 BB68     		ldr	r3, [r7, #8]
 6526 0064 DA62     		str	r2, [r3, #44]
4059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxMutexHolderTCB );
 6527              		.loc 1 4059 6
 6528 0066 BB68     		ldr	r3, [r7, #8]
 6529 0068 DA6A     		ldr	r2, [r3, #44]
 6530 006a 184B     		ldr	r3, .L417+8
 6531 006c 1B68     		ldr	r3, [r3]
 6532 006e 9A42     		cmp	r2, r3
 6533 0070 03D9     		bls	.L414
 6534              		.loc 1 4059 6 is_stmt 0 discriminator 1
 6535 0072 BB68     		ldr	r3, [r7, #8]
 6536 0074 DB6A     		ldr	r3, [r3, #44]
 6537 0076 154A     		ldr	r2, .L417+8
 6538 0078 1360     		str	r3, [r2]
 6539              	.L414:
 6540              		.loc 1 4059 6 discriminator 3
 6541 007a BB68     		ldr	r3, [r7, #8]
 6542 007c DA6A     		ldr	r2, [r3, #44]
 6543 007e 1346     		mov	r3, r2
 6544 0080 9B00     		lsls	r3, r3, #2
 6545 0082 1344     		add	r3, r3, r2
 6546 0084 9B00     		lsls	r3, r3, #2
 6547 0086 104A     		ldr	r2, .L417+4
 6548 0088 1A44     		add	r2, r2, r3
 6549 008a BB68     		ldr	r3, [r7, #8]
 6550 008c 0433     		adds	r3, r3, #4
 6551 008e 1946     		mov	r1, r3
 6552 0090 1046     		mov	r0, r2
 6553 0092 FFF7FEFF 		bl	vListInsertEnd
 6554 0096 04E0     		b	.L415
 6555              	.L413:
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 191


4060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Just inherit the priority. */
4064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 6556              		.loc 1 4064 49 is_stmt 1
 6557 0098 0A4B     		ldr	r3, .L417
 6558 009a 1B68     		ldr	r3, [r3]
 6559 009c DA6A     		ldr	r2, [r3, #44]
 6560              		.loc 1 4064 35
 6561 009e BB68     		ldr	r3, [r7, #8]
 6562 00a0 DA62     		str	r2, [r3, #44]
 6563              	.L415:
4065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_PRIORITY_INHERIT( pxMutexHolderTCB, pxCurrentTCB->uxPriority );
4068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Inheritance occurred. */
4070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
 6564              		.loc 1 4070 13
 6565 00a2 0123     		movs	r3, #1
 6566 00a4 FB60     		str	r3, [r7, #12]
 6567 00a6 08E0     		b	.L410
 6568              	.L411:
4071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 6569              		.loc 1 4074 25
 6570 00a8 BB68     		ldr	r3, [r7, #8]
 6571 00aa 1A6D     		ldr	r2, [r3, #80]
 6572              		.loc 1 4074 56
 6573 00ac 054B     		ldr	r3, .L417
 6574 00ae 1B68     		ldr	r3, [r3]
 6575 00b0 DB6A     		ldr	r3, [r3, #44]
 6576              		.loc 1 4074 7
 6577 00b2 9A42     		cmp	r2, r3
 6578 00b4 01D2     		bcs	.L410
4075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The base priority of the mutex holder is lower than the
4077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					priority of the task attempting to take the mutex, but the
4078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					current priority of the mutex holder is not lower than the
4079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					priority of the task attempting to take the mutex.
4080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					Therefore the mutex holder must have already inherited a
4081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					priority, but inheritance would have occurred if that had
4082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					not been the case. */
4083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xReturn = pdTRUE;
 6579              		.loc 1 4083 14
 6580 00b6 0123     		movs	r3, #1
 6581 00b8 FB60     		str	r3, [r7, #12]
 6582              	.L410:
4084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 192


4090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 6583              		.loc 1 4096 10
 6584 00ba FB68     		ldr	r3, [r7, #12]
4097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 6585              		.loc 1 4097 2
 6586 00bc 1846     		mov	r0, r3
 6587 00be 1037     		adds	r7, r7, #16
 6588              	.LCFI271:
 6589              		.cfi_def_cfa_offset 8
 6590 00c0 BD46     		mov	sp, r7
 6591              	.LCFI272:
 6592              		.cfi_def_cfa_register 13
 6593              		@ sp needed
 6594 00c2 80BD     		pop	{r7, pc}
 6595              	.L418:
 6596              		.align	2
 6597              	.L417:
 6598 00c4 00000000 		.word	pxCurrentTCB
 6599 00c8 00000000 		.word	pxReadyTasksLists
 6600 00cc 00000000 		.word	uxTopReadyPriority
 6601              		.cfi_endproc
 6602              	.LFE56:
 6604              		.section	.text.xTaskPriorityDisinherit,"ax",%progbits
 6605              		.align	1
 6606              		.global	xTaskPriorityDisinherit
 6607              		.syntax unified
 6608              		.thumb
 6609              		.thumb_func
 6611              	xTaskPriorityDisinherit:
 6612              	.LFB57:
4098:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
4100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskPriorityDisinherit( TaskHandle_t const pxMutexHolder )
4105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 6613              		.loc 1 4105 2
 6614              		.cfi_startproc
 6615              		@ args = 0, pretend = 0, frame = 24
 6616              		@ frame_needed = 1, uses_anonymous_args = 0
 6617 0000 80B5     		push	{r7, lr}
 6618              	.LCFI273:
 6619              		.cfi_def_cfa_offset 8
 6620              		.cfi_offset 7, -8
 6621              		.cfi_offset 14, -4
 6622 0002 86B0     		sub	sp, sp, #24
 6623              	.LCFI274:
 6624              		.cfi_def_cfa_offset 32
 6625 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 193


 6626              	.LCFI275:
 6627              		.cfi_def_cfa_register 7
 6628 0006 7860     		str	r0, [r7, #4]
4106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = pxMutexHolder;
 6629              		.loc 1 4106 16
 6630 0008 7B68     		ldr	r3, [r7, #4]
 6631 000a 3B61     		str	r3, [r7, #16]
4107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
 6632              		.loc 1 4107 13
 6633 000c 0023     		movs	r3, #0
 6634 000e 7B61     		str	r3, [r7, #20]
4108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxMutexHolder != NULL )
 6635              		.loc 1 4109 5
 6636 0010 7B68     		ldr	r3, [r7, #4]
 6637 0012 002B     		cmp	r3, #0
 6638 0014 56D0     		beq	.L420
4110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* A task can only have an inherited priority if it holds the mutex.
4112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			If the mutex is held by a task then it cannot be given from an
4113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			interrupt, and if a mutex is given by the holding task then it must
4114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			be the running state task. */
4115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB == pxCurrentTCB );
 6639              		.loc 1 4115 4
 6640 0016 2E4B     		ldr	r3, .L427
 6641 0018 1B68     		ldr	r3, [r3]
 6642 001a 3A69     		ldr	r2, [r7, #16]
 6643 001c 9A42     		cmp	r2, r3
 6644 001e 0AD0     		beq	.L421
 6645              	.LBB223:
 6646              	.LBB224:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6647              		.loc 2 195 2
 6648              		.syntax unified
 6649              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 6650 0020 4FF05003 			mov r3, #80												
 6651 0024 83F31188 		msr basepri, r3											
 6652 0028 BFF36F8F 		isb														
 6653 002c BFF34F8F 		dsb														
 6654              	
 6655              	@ 0 "" 2
 6656              		.thumb
 6657              		.syntax unified
 6658 0030 FB60     		str	r3, [r7, #12]
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 6659              		.loc 2 203 1
 6660 0032 00BF     		nop
 6661              	.L422:
 6662              	.LBE224:
 6663              	.LBE223:
 6664              		.loc 1 4115 4 discriminator 1
 6665 0034 FEE7     		b	.L422
 6666              	.L421:
4116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 6667              		.loc 1 4116 4
 6668 0036 3B69     		ldr	r3, [r7, #16]
 6669 0038 5B6D     		ldr	r3, [r3, #84]
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 194


 6670 003a 002B     		cmp	r3, #0
 6671 003c 0AD1     		bne	.L423
 6672              	.LBB225:
 6673              	.LBB226:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6674              		.loc 2 195 2
 6675              		.syntax unified
 6676              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 6677 003e 4FF05003 			mov r3, #80												
 6678 0042 83F31188 		msr basepri, r3											
 6679 0046 BFF36F8F 		isb														
 6680 004a BFF34F8F 		dsb														
 6681              	
 6682              	@ 0 "" 2
 6683              		.thumb
 6684              		.syntax unified
 6685 004e BB60     		str	r3, [r7, #8]
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 6686              		.loc 2 203 1
 6687 0050 00BF     		nop
 6688              	.L424:
 6689              	.LBE226:
 6690              	.LBE225:
 6691              		.loc 1 4116 4 discriminator 2
 6692 0052 FEE7     		b	.L424
 6693              	.L423:
4117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 6694              		.loc 1 4117 11
 6695 0054 3B69     		ldr	r3, [r7, #16]
 6696 0056 5B6D     		ldr	r3, [r3, #84]
 6697              		.loc 1 4117 28
 6698 0058 5A1E     		subs	r2, r3, #1
 6699 005a 3B69     		ldr	r3, [r7, #16]
 6700 005c 5A65     		str	r2, [r3, #84]
4118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Has the holder of the mutex inherited the priority of another
4120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task? */
4121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 6701              		.loc 1 4121 13
 6702 005e 3B69     		ldr	r3, [r7, #16]
 6703 0060 DA6A     		ldr	r2, [r3, #44]
 6704              		.loc 1 4121 34
 6705 0062 3B69     		ldr	r3, [r7, #16]
 6706 0064 1B6D     		ldr	r3, [r3, #80]
 6707              		.loc 1 4121 6
 6708 0066 9A42     		cmp	r2, r3
 6709 0068 2CD0     		beq	.L420
4122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Only disinherit if no other mutexes are held. */
4124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 6710              		.loc 1 4124 14
 6711 006a 3B69     		ldr	r3, [r7, #16]
 6712 006c 5B6D     		ldr	r3, [r3, #84]
 6713              		.loc 1 4124 7
 6714 006e 002B     		cmp	r3, #0
 6715 0070 28D1     		bne	.L420
4125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 195


4126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* A task can only have an inherited priority if it holds
4127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					the mutex.  If the mutex is held by a task then it cannot be
4128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					given from an interrupt, and if a mutex is given by the
4129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					holding task then it must be the running state task.  Remove
4130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					the holding task from the ready/delayed list. */
4131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 6716              		.loc 1 4131 10
 6717 0072 3B69     		ldr	r3, [r7, #16]
 6718 0074 0433     		adds	r3, r3, #4
 6719 0076 1846     		mov	r0, r3
 6720 0078 FFF7FEFF 		bl	uxListRemove
4132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						taskRESET_READY_PRIORITY( pxTCB->uxPriority );
4134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
4138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Disinherit the priority before adding the task into the
4141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					new	ready list. */
4142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
4143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = pxTCB->uxBasePriority;
 6721              		.loc 1 4143 31
 6722 007c 3B69     		ldr	r3, [r7, #16]
 6723 007e 1A6D     		ldr	r2, [r3, #80]
 6724              		.loc 1 4143 24
 6725 0080 3B69     		ldr	r3, [r7, #16]
 6726 0082 DA62     		str	r2, [r3, #44]
4144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Reset the event list item value.  It cannot be in use for
4146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					any other purpose if this task is running, and it must be
4147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					running to give back the mutex. */
4148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( T
 6727              		.loc 1 4148 6
 6728 0084 3B69     		ldr	r3, [r7, #16]
 6729 0086 DB6A     		ldr	r3, [r3, #44]
 6730 0088 C3F13802 		rsb	r2, r3, #56
 6731 008c 3B69     		ldr	r3, [r7, #16]
 6732 008e 9A61     		str	r2, [r3, #24]
4149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 6733              		.loc 1 4149 6
 6734 0090 3B69     		ldr	r3, [r7, #16]
 6735 0092 DA6A     		ldr	r2, [r3, #44]
 6736 0094 0F4B     		ldr	r3, .L427+4
 6737 0096 1B68     		ldr	r3, [r3]
 6738 0098 9A42     		cmp	r2, r3
 6739 009a 03D9     		bls	.L425
 6740              		.loc 1 4149 6 is_stmt 0 discriminator 1
 6741 009c 3B69     		ldr	r3, [r7, #16]
 6742 009e DB6A     		ldr	r3, [r3, #44]
 6743 00a0 0C4A     		ldr	r2, .L427+4
 6744 00a2 1360     		str	r3, [r2]
 6745              	.L425:
 6746              		.loc 1 4149 6 discriminator 3
 6747 00a4 3B69     		ldr	r3, [r7, #16]
 6748 00a6 DA6A     		ldr	r2, [r3, #44]
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 196


 6749 00a8 1346     		mov	r3, r2
 6750 00aa 9B00     		lsls	r3, r3, #2
 6751 00ac 1344     		add	r3, r3, r2
 6752 00ae 9B00     		lsls	r3, r3, #2
 6753 00b0 094A     		ldr	r2, .L427+8
 6754 00b2 1A44     		add	r2, r2, r3
 6755 00b4 3B69     		ldr	r3, [r7, #16]
 6756 00b6 0433     		adds	r3, r3, #4
 6757 00b8 1946     		mov	r1, r3
 6758 00ba 1046     		mov	r0, r2
 6759 00bc FFF7FEFF 		bl	vListInsertEnd
4150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Return true to indicate that a context switch is required.
4152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					This is only actually required in the corner case whereby
4153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					multiple mutexes were held and the mutexes were given back
4154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					in an order different to that in which they were taken.
4155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					If a context switch did not occur when the first mutex was
4156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					returned, even if a task was waiting on it, then a context
4157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					switch should occur when the last mutex is returned whether
4158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					a task is waiting on it or not. */
4159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xReturn = pdTRUE;
 6760              		.loc 1 4159 14 is_stmt 1 discriminator 3
 6761 00c0 0123     		movs	r3, #1
 6762 00c2 7B61     		str	r3, [r7, #20]
 6763              	.L420:
4160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 6764              		.loc 1 4176 10
 6765 00c4 7B69     		ldr	r3, [r7, #20]
4177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 6766              		.loc 1 4177 2
 6767 00c6 1846     		mov	r0, r3
 6768 00c8 1837     		adds	r7, r7, #24
 6769              	.LCFI276:
 6770              		.cfi_def_cfa_offset 8
 6771 00ca BD46     		mov	sp, r7
 6772              	.LCFI277:
 6773              		.cfi_def_cfa_register 13
 6774              		@ sp needed
 6775 00cc 80BD     		pop	{r7, pc}
 6776              	.L428:
 6777 00ce 00BF     		.align	2
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 197


 6778              	.L427:
 6779 00d0 00000000 		.word	pxCurrentTCB
 6780 00d4 00000000 		.word	uxTopReadyPriority
 6781 00d8 00000000 		.word	pxReadyTasksLists
 6782              		.cfi_endproc
 6783              	.LFE57:
 6785              		.section	.text.vTaskPriorityDisinheritAfterTimeout,"ax",%progbits
 6786              		.align	1
 6787              		.global	vTaskPriorityDisinheritAfterTimeout
 6788              		.syntax unified
 6789              		.thumb
 6790              		.thumb_func
 6792              	vTaskPriorityDisinheritAfterTimeout:
 6793              	.LFB58:
4178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
4180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskPriorityDisinheritAfterTimeout( TaskHandle_t const pxMutexHolder, UBaseType_t uxHighestP
4185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 6794              		.loc 1 4185 2
 6795              		.cfi_startproc
 6796              		@ args = 0, pretend = 0, frame = 32
 6797              		@ frame_needed = 1, uses_anonymous_args = 0
 6798 0000 80B5     		push	{r7, lr}
 6799              	.LCFI278:
 6800              		.cfi_def_cfa_offset 8
 6801              		.cfi_offset 7, -8
 6802              		.cfi_offset 14, -4
 6803 0002 88B0     		sub	sp, sp, #32
 6804              	.LCFI279:
 6805              		.cfi_def_cfa_offset 40
 6806 0004 00AF     		add	r7, sp, #0
 6807              	.LCFI280:
 6808              		.cfi_def_cfa_register 7
 6809 0006 7860     		str	r0, [r7, #4]
 6810 0008 3960     		str	r1, [r7]
4186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = pxMutexHolder;
 6811              		.loc 1 4186 16
 6812 000a 7B68     		ldr	r3, [r7, #4]
 6813 000c BB61     		str	r3, [r7, #24]
4187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxPriorityUsedOnEntry, uxPriorityToUse;
4188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const UBaseType_t uxOnlyOneMutexHeld = ( UBaseType_t ) 1;
 6814              		.loc 1 4188 20
 6815 000e 0123     		movs	r3, #1
 6816 0010 7B61     		str	r3, [r7, #20]
4189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxMutexHolder != NULL )
 6817              		.loc 1 4190 5
 6818 0012 7B68     		ldr	r3, [r7, #4]
 6819 0014 002B     		cmp	r3, #0
 6820 0016 6AD0     		beq	.L439
4191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If pxMutexHolder is not NULL then the holder must hold at least
4193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			one mutex. */
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 198


4194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 6821              		.loc 1 4194 4
 6822 0018 BB69     		ldr	r3, [r7, #24]
 6823 001a 5B6D     		ldr	r3, [r3, #84]
 6824 001c 002B     		cmp	r3, #0
 6825 001e 0AD1     		bne	.L431
 6826              	.LBB227:
 6827              	.LBB228:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6828              		.loc 2 195 2
 6829              		.syntax unified
 6830              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 6831 0020 4FF05003 			mov r3, #80												
 6832 0024 83F31188 		msr basepri, r3											
 6833 0028 BFF36F8F 		isb														
 6834 002c BFF34F8F 		dsb														
 6835              	
 6836              	@ 0 "" 2
 6837              		.thumb
 6838              		.syntax unified
 6839 0030 FB60     		str	r3, [r7, #12]
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 6840              		.loc 2 203 1
 6841 0032 00BF     		nop
 6842              	.L432:
 6843              	.LBE228:
 6844              	.LBE227:
 6845              		.loc 1 4194 4 discriminator 1
 6846 0034 FEE7     		b	.L432
 6847              	.L431:
4195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Determine the priority to which the priority of the task that
4197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			holds the mutex should be set.  This will be the greater of the
4198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			holding task's base priority and the priority of the highest
4199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			priority task that is waiting to obtain the mutex. */
4200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 6848              		.loc 1 4200 13
 6849 0036 BB69     		ldr	r3, [r7, #24]
 6850 0038 1B6D     		ldr	r3, [r3, #80]
 6851              		.loc 1 4200 6
 6852 003a 3A68     		ldr	r2, [r7]
 6853 003c 9A42     		cmp	r2, r3
 6854 003e 02D9     		bls	.L433
4201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxPriorityToUse = uxHighestPriorityWaitingTask;
 6855              		.loc 1 4202 21
 6856 0040 3B68     		ldr	r3, [r7]
 6857 0042 FB61     		str	r3, [r7, #28]
 6858 0044 02E0     		b	.L434
 6859              	.L433:
4203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxPriorityToUse = pxTCB->uxBasePriority;
 6860              		.loc 1 4206 21
 6861 0046 BB69     		ldr	r3, [r7, #24]
 6862 0048 1B6D     		ldr	r3, [r3, #80]
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 199


 6863 004a FB61     		str	r3, [r7, #28]
 6864              	.L434:
4207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Does the priority need to change? */
4210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->uxPriority != uxPriorityToUse )
 6865              		.loc 1 4210 13
 6866 004c BB69     		ldr	r3, [r7, #24]
 6867 004e DB6A     		ldr	r3, [r3, #44]
 6868              		.loc 1 4210 6
 6869 0050 FA69     		ldr	r2, [r7, #28]
 6870 0052 9A42     		cmp	r2, r3
 6871 0054 4BD0     		beq	.L439
4211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Only disinherit if no other mutexes are held.  This is a
4213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				simplification in the priority inheritance implementation.  If
4214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the task that holds the mutex is also holding other mutexes then
4215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the other mutexes may have caused the priority inheritance. */
4216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 6872              		.loc 1 4216 14
 6873 0056 BB69     		ldr	r3, [r7, #24]
 6874 0058 5B6D     		ldr	r3, [r3, #84]
 6875              		.loc 1 4216 7
 6876 005a 7A69     		ldr	r2, [r7, #20]
 6877 005c 9A42     		cmp	r2, r3
 6878 005e 46D1     		bne	.L439
4217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If a task has timed out because it already holds the
4219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mutex it was trying to obtain then it cannot of inherited
4220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					its own priority. */
4221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					configASSERT( pxTCB != pxCurrentTCB );
 6879              		.loc 1 4221 6
 6880 0060 254B     		ldr	r3, .L440
 6881 0062 1B68     		ldr	r3, [r3]
 6882 0064 BA69     		ldr	r2, [r7, #24]
 6883 0066 9A42     		cmp	r2, r3
 6884 0068 0AD1     		bne	.L435
 6885              	.LBB229:
 6886              	.LBB230:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6887              		.loc 2 195 2
 6888              		.syntax unified
 6889              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 6890 006a 4FF05003 			mov r3, #80												
 6891 006e 83F31188 		msr basepri, r3											
 6892 0072 BFF36F8F 		isb														
 6893 0076 BFF34F8F 		dsb														
 6894              	
 6895              	@ 0 "" 2
 6896              		.thumb
 6897              		.syntax unified
 6898 007a BB60     		str	r3, [r7, #8]
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 6899              		.loc 2 203 1
 6900 007c 00BF     		nop
 6901              	.L436:
 6902              	.LBE230:
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 200


 6903              	.LBE229:
 6904              		.loc 1 4221 6 discriminator 2
 6905 007e FEE7     		b	.L436
 6906              	.L435:
4222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Disinherit the priority, remembering the previous
4224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					priority to facilitate determining the subject task's
4225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					state. */
4226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
4227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxPriorityUsedOnEntry = pxTCB->uxPriority;
 6907              		.loc 1 4227 28
 6908 0080 BB69     		ldr	r3, [r7, #24]
 6909 0082 DB6A     		ldr	r3, [r3, #44]
 6910 0084 3B61     		str	r3, [r7, #16]
4228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = uxPriorityToUse;
 6911              		.loc 1 4228 24
 6912 0086 BB69     		ldr	r3, [r7, #24]
 6913 0088 FA69     		ldr	r2, [r7, #28]
 6914 008a DA62     		str	r2, [r3, #44]
4229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Only reset the event list item value if the value is not
4231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					being used for anything else. */
4232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE
 6915              		.loc 1 4232 12
 6916 008c BB69     		ldr	r3, [r7, #24]
 6917 008e 9B69     		ldr	r3, [r3, #24]
 6918              		.loc 1 4232 8
 6919 0090 002B     		cmp	r3, #0
 6920 0092 04DB     		blt	.L437
4233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( 
 6921              		.loc 1 4234 7
 6922 0094 FB69     		ldr	r3, [r7, #28]
 6923 0096 C3F13802 		rsb	r2, r3, #56
 6924 009a BB69     		ldr	r3, [r7, #24]
 6925 009c 9A61     		str	r2, [r3, #24]
 6926              	.L437:
4235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
4239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If the running task is not the task that holds the mutex
4242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					then the task that holds the mutex could be in either the
4243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					Ready, Blocked or Suspended states.  Only remove the task
4244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					from its current state list if it is in the Ready state as
4245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					the task's priority is going to change and there is one
4246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					Ready list per priority. */
4247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xState
 6927              		.loc 1 4247 10
 6928 009e BB69     		ldr	r3, [r7, #24]
 6929 00a0 5969     		ldr	r1, [r3, #20]
 6930 00a2 3A69     		ldr	r2, [r7, #16]
 6931 00a4 1346     		mov	r3, r2
 6932 00a6 9B00     		lsls	r3, r3, #2
 6933 00a8 1344     		add	r3, r3, r2
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 201


 6934 00aa 9B00     		lsls	r3, r3, #2
 6935 00ac 134A     		ldr	r2, .L440+4
 6936 00ae 1344     		add	r3, r3, r2
 6937              		.loc 1 4247 8
 6938 00b0 9942     		cmp	r1, r3
 6939 00b2 1CD1     		bne	.L439
4248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 6940              		.loc 1 4249 11
 6941 00b4 BB69     		ldr	r3, [r7, #24]
 6942 00b6 0433     		adds	r3, r3, #4
 6943 00b8 1846     		mov	r0, r3
 6944 00ba FFF7FEFF 		bl	uxListRemove
4250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							/* It is known that the task is in its ready list so
4252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							there is no need to check again and the port level
4253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							reset macro can be called directly. */
4254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							portRESET_READY_PRIORITY( pxTCB->uxPriority, uxTopReadyPriority );
4255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						else
4257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
4259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						prvAddTaskToReadyList( pxTCB );
 6945              		.loc 1 4261 7
 6946 00be BB69     		ldr	r3, [r7, #24]
 6947 00c0 DA6A     		ldr	r2, [r3, #44]
 6948 00c2 0F4B     		ldr	r3, .L440+8
 6949 00c4 1B68     		ldr	r3, [r3]
 6950 00c6 9A42     		cmp	r2, r3
 6951 00c8 03D9     		bls	.L438
 6952              		.loc 1 4261 7 is_stmt 0 discriminator 1
 6953 00ca BB69     		ldr	r3, [r7, #24]
 6954 00cc DB6A     		ldr	r3, [r3, #44]
 6955 00ce 0C4A     		ldr	r2, .L440+8
 6956 00d0 1360     		str	r3, [r2]
 6957              	.L438:
 6958              		.loc 1 4261 7 discriminator 3
 6959 00d2 BB69     		ldr	r3, [r7, #24]
 6960 00d4 DA6A     		ldr	r2, [r3, #44]
 6961 00d6 1346     		mov	r3, r2
 6962 00d8 9B00     		lsls	r3, r3, #2
 6963 00da 1344     		add	r3, r3, r2
 6964 00dc 9B00     		lsls	r3, r3, #2
 6965 00de 074A     		ldr	r2, .L440+4
 6966 00e0 1A44     		add	r2, r2, r3
 6967 00e2 BB69     		ldr	r3, [r7, #24]
 6968 00e4 0433     		adds	r3, r3, #4
 6969 00e6 1946     		mov	r1, r3
 6970 00e8 1046     		mov	r0, r2
 6971 00ea FFF7FEFF 		bl	vListInsertEnd
 6972              	.L439:
4262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 202


4266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 6973              		.loc 1 4282 2 is_stmt 1
 6974 00ee 00BF     		nop
 6975 00f0 2037     		adds	r7, r7, #32
 6976              	.LCFI281:
 6977              		.cfi_def_cfa_offset 8
 6978 00f2 BD46     		mov	sp, r7
 6979              	.LCFI282:
 6980              		.cfi_def_cfa_register 13
 6981              		@ sp needed
 6982 00f4 80BD     		pop	{r7, pc}
 6983              	.L441:
 6984 00f6 00BF     		.align	2
 6985              	.L440:
 6986 00f8 00000000 		.word	pxCurrentTCB
 6987 00fc 00000000 		.word	pxReadyTasksLists
 6988 0100 00000000 		.word	uxTopReadyPriority
 6989              		.cfi_endproc
 6990              	.LFE58:
 6992              		.section	.text.uxTaskResetEventItemValue,"ax",%progbits
 6993              		.align	1
 6994              		.global	uxTaskResetEventItemValue
 6995              		.syntax unified
 6996              		.thumb
 6997              		.thumb_func
 6999              	uxTaskResetEventItemValue:
 7000              	.LFB59:
4283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
4285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
4288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskEnterCritical( void )
4290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portDISABLE_INTERRUPTS();
4292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
4294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxCurrentTCB->uxCriticalNesting )++;
4296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 203


4297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* This is not the interrupt safe version of the enter critical
4298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			function so	assert() if it is being called from an interrupt
4299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			context.  Only API functions that end in "FromISR" can be used in an
4300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			interrupt.  Only assert if the critical nesting count is 1 to
4301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			protect against recursive calls if the assert function also uses a
4302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			critical section. */
4303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->uxCriticalNesting == 1 )
4304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portASSERT_IF_IN_ISR();
4306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
4315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
4318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskExitCritical( void )
4320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
4322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->uxCriticalNesting > 0U )
4324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( pxCurrentTCB->uxCriticalNesting )--;
4326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxCurrentTCB->uxCriticalNesting == 0U )
4328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portENABLE_INTERRUPTS();
4330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
4348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
4351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static char *prvWriteNameToBuffer( char *pcBuffer, const char *pcTaskName )
4353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 204


4354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	size_t x;
4355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Start by copying the entire string. */
4357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		strcpy( pcBuffer, pcTaskName );
4358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Pad the end of the string with spaces to ensure columns line up when
4360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		printed out. */
4361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		for( x = strlen( pcBuffer ); x < ( size_t ) ( configMAX_TASK_NAME_LEN - 1 ); x++ )
4362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pcBuffer[ x ] = ' ';
4364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Terminate. */
4367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pcBuffer[ x ] = ( char ) 0x00;
4368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Return the new end of string. */
4370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return &( pcBuffer[ x ] );
4371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) */
4374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( config
4377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskList( char * pcWriteBuffer )
4379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskStatus_t *pxTaskStatusArray;
4381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxArraySize, x;
4382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	char cStatus;
4383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/*
4385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * PLEASE NOTE:
4386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * This function is provided for convenience only, and is used by many
4388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * of the demo applications.  Do not consider it to be part of the
4389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * scheduler.
4390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskList() calls uxTaskGetSystemState(), then formats part of the
4392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * uxTaskGetSystemState() output into a human readable table that
4393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * displays task names, states and stack usage.
4394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskList() has a dependency on the sprintf() C library function that
4396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * might bloat the code size, use a lot of stack, and provide different
4397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * results on different platforms.  An alternative, tiny, third party,
4398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * and limited functionality implementation of sprintf() is provided in
4399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * many of the FreeRTOS/Demo sub-directories in a file called
4400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * printf-stdarg.c (note printf-stdarg.c does not provide a full
4401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * snprintf() implementation!).
4402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * It is recommended that production systems call uxTaskGetSystemState()
4404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * directly to get access to raw stats data, rather than indirectly
4405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * through a call to vTaskList().
4406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 */
4407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Make sure the write buffer does not contain a string. */
4410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		*pcWriteBuffer = ( char ) 0x00;
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 205


4411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Take a snapshot of the number of tasks in case it changes while this
4413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		function is executing. */
4414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxArraySize = uxCurrentNumberOfTasks;
4415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Allocate an array index for each task.  NOTE!  if
4417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
4418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		equate to NULL. */
4419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) ); /*lint !e907
4420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTaskStatusArray != NULL )
4422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Generate the (binary) data. */
4424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, NULL );
4425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Create a human readable table from the binary data. */
4427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			for( x = 0; x < uxArraySize; x++ )
4428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				switch( pxTaskStatusArray[ x ].eCurrentState )
4430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eRunning:		cStatus = tskRUNNING_CHAR;
4432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eReady:		cStatus = tskREADY_CHAR;
4435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eBlocked:		cStatus = tskBLOCKED_CHAR;
4438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eSuspended:	cStatus = tskSUSPENDED_CHAR;
4441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eDeleted:		cStatus = tskDELETED_CHAR;
4444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eInvalid:		/* Fall through. */
4447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					default:			/* Should not get here, but it is included
4448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										to prevent static checking errors. */
4449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										cStatus = ( char ) 0x00;
4450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Write the task name to the string, padding with spaces so it
4454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				can be printed in tabular form more easily. */
4455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcTaskName );
4456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Write the rest of the string. */
4458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				sprintf( pcWriteBuffer, "\t%c\t%u\t%u\t%u\r\n", cStatus, ( unsigned int ) pxTaskStatusArray[ x 
4459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pcWriteBuffer += strlen( pcWriteBuffer ); /*lint !e9016 Pointer arithmetic ok on char pointers 
4460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			is 0 then vPortFree() will be #defined to nothing. */
4464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTaskStatusArray );
4465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 206


4468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( 
4473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
4474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( c
4476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskGetRunTimeStats( char *pcWriteBuffer )
4478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskStatus_t *pxTaskStatusArray;
4480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxArraySize, x;
4481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulTotalTime, ulStatsAsPercentage;
4482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configUSE_TRACE_FACILITY != 1 )
4484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#error configUSE_TRACE_FACILITY must also be set to 1 in FreeRTOSConfig.h to use vTaskGetRunTime
4486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
4488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/*
4490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * PLEASE NOTE:
4491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * This function is provided for convenience only, and is used by many
4493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * of the demo applications.  Do not consider it to be part of the
4494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * scheduler.
4495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskGetRunTimeStats() calls uxTaskGetSystemState(), then formats part
4497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * of the uxTaskGetSystemState() output into a human readable table that
4498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * displays the amount of time each task has spent in the Running state
4499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * in both absolute and percentage terms.
4500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskGetRunTimeStats() has a dependency on the sprintf() C library
4502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * function that might bloat the code size, use a lot of stack, and
4503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * provide different results on different platforms.  An alternative,
4504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * tiny, third party, and limited functionality implementation of
4505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * sprintf() is provided in many of the FreeRTOS/Demo sub-directories in
4506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * a file called printf-stdarg.c (note printf-stdarg.c does not provide
4507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * a full snprintf() implementation!).
4508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * It is recommended that production systems call uxTaskGetSystemState()
4510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * directly to get access to raw stats data, rather than indirectly
4511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * through a call to vTaskGetRunTimeStats().
4512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 */
4513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Make sure the write buffer does not contain a string. */
4515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		*pcWriteBuffer = ( char ) 0x00;
4516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Take a snapshot of the number of tasks in case it changes while this
4518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		function is executing. */
4519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxArraySize = uxCurrentNumberOfTasks;
4520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Allocate an array index for each task.  NOTE!  If
4522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
4523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		equate to NULL. */
4524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) ); /*lint !e907
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 207


4525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTaskStatusArray != NULL )
4527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Generate the (binary) data. */
4529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, &ulTotalTime );
4530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* For percentage calculations. */
4532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulTotalTime /= 100UL;
4533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Avoid divide by zero errors. */
4535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ulTotalTime > 0UL )
4536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Create a human readable table from the binary data. */
4538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				for( x = 0; x < uxArraySize; x++ )
4539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* What percentage of the total run time has the task used?
4541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					This will always be rounded down to the nearest integer.
4542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					ulTotalRunTimeDiv100 has already been divided by 100. */
4543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					ulStatsAsPercentage = pxTaskStatusArray[ x ].ulRunTimeCounter / ulTotalTime;
4544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Write the task name to the string, padding with
4546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					spaces so it can be printed in tabular form more
4547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					easily. */
4548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcTaskName );
4549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( ulStatsAsPercentage > 0UL )
4551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%lu\t\t%lu%%\r\n", pxTaskStatusArray[ x ].ulRunTimeCounter, ulSta
4555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#else
4557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							/* sizeof( int ) == sizeof( long ) so a smaller
4559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							printf() library can be used. */
4560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%u\t\t%u%%\r\n", ( unsigned int ) pxTaskStatusArray[ x ].ulRunTim
4561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#endif
4563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* If the percentage is zero here then the task has
4567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						consumed less than 1% of the total run time. */
4568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%lu\t\t<1%%\r\n", pxTaskStatusArray[ x ].ulRunTimeCounter );
4571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#else
4573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							/* sizeof( int ) == sizeof( long ) so a smaller
4575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							printf() library can be used. */
4576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%u\t\t<1%%\r\n", ( unsigned int ) pxTaskStatusArray[ x ].ulRunTim
4577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#endif
4579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pcWriteBuffer += strlen( pcWriteBuffer ); /*lint !e9016 Pointer arithmetic ok on char pointers
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 208


4582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			is 0 then vPortFree() will be #defined to nothing. */
4591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTaskStatusArray );
4592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) 
4600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t uxTaskResetEventItemValue( void )
4603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 7001              		.loc 1 4603 1
 7002              		.cfi_startproc
 7003              		@ args = 0, pretend = 0, frame = 8
 7004              		@ frame_needed = 1, uses_anonymous_args = 0
 7005              		@ link register save eliminated.
 7006 0000 80B4     		push	{r7}
 7007              	.LCFI283:
 7008              		.cfi_def_cfa_offset 4
 7009              		.cfi_offset 7, -4
 7010 0002 83B0     		sub	sp, sp, #12
 7011              	.LCFI284:
 7012              		.cfi_def_cfa_offset 16
 7013 0004 00AF     		add	r7, sp, #0
 7014              	.LCFI285:
 7015              		.cfi_def_cfa_register 7
4604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t uxReturn;
4605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uxReturn = listGET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ) );
 7016              		.loc 1 4606 13
 7017 0006 094B     		ldr	r3, .L444
 7018 0008 1B68     		ldr	r3, [r3]
 7019              		.loc 1 4606 11
 7020 000a 9B69     		ldr	r3, [r3, #24]
 7021 000c 7B60     		str	r3, [r7, #4]
4607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Reset the event list item to its normal value - so it can be used with
4609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	queues and semaphores. */
4610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITIES 
 7022              		.loc 1 4610 2
 7023 000e 074B     		ldr	r3, .L444
 7024 0010 1B68     		ldr	r3, [r3]
 7025 0012 DA6A     		ldr	r2, [r3, #44]
 7026 0014 054B     		ldr	r3, .L444
 7027 0016 1B68     		ldr	r3, [r3]
 7028 0018 C2F13802 		rsb	r2, r2, #56
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 209


 7029 001c 9A61     		str	r2, [r3, #24]
4611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return uxReturn;
 7030              		.loc 1 4612 9
 7031 001e 7B68     		ldr	r3, [r7, #4]
4613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 7032              		.loc 1 4613 1
 7033 0020 1846     		mov	r0, r3
 7034 0022 0C37     		adds	r7, r7, #12
 7035              	.LCFI286:
 7036              		.cfi_def_cfa_offset 4
 7037 0024 BD46     		mov	sp, r7
 7038              	.LCFI287:
 7039              		.cfi_def_cfa_register 13
 7040              		@ sp needed
 7041 0026 5DF8047B 		ldr	r7, [sp], #4
 7042              	.LCFI288:
 7043              		.cfi_restore 7
 7044              		.cfi_def_cfa_offset 0
 7045 002a 7047     		bx	lr
 7046              	.L445:
 7047              		.align	2
 7048              	.L444:
 7049 002c 00000000 		.word	pxCurrentTCB
 7050              		.cfi_endproc
 7051              	.LFE59:
 7053              		.section	.text.pvTaskIncrementMutexHeldCount,"ax",%progbits
 7054              		.align	1
 7055              		.global	pvTaskIncrementMutexHeldCount
 7056              		.syntax unified
 7057              		.thumb
 7058              		.thumb_func
 7060              	pvTaskIncrementMutexHeldCount:
 7061              	.LFB60:
4614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t pvTaskIncrementMutexHeldCount( void )
4619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 7062              		.loc 1 4619 2
 7063              		.cfi_startproc
 7064              		@ args = 0, pretend = 0, frame = 0
 7065              		@ frame_needed = 1, uses_anonymous_args = 0
 7066              		@ link register save eliminated.
 7067 0000 80B4     		push	{r7}
 7068              	.LCFI289:
 7069              		.cfi_def_cfa_offset 4
 7070              		.cfi_offset 7, -4
 7071 0002 00AF     		add	r7, sp, #0
 7072              	.LCFI290:
 7073              		.cfi_def_cfa_register 7
4620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xSemaphoreCreateMutex() is called before any tasks have been created
4621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		then pxCurrentTCB will be NULL. */
4622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB != NULL )
 7074              		.loc 1 4622 20
 7075 0004 074B     		ldr	r3, .L449
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 210


 7076 0006 1B68     		ldr	r3, [r3]
 7077              		.loc 1 4622 5
 7078 0008 002B     		cmp	r3, #0
 7079 000a 04D0     		beq	.L447
4623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxCurrentTCB->uxMutexesHeld )++;
 7080              		.loc 1 4624 18
 7081 000c 054B     		ldr	r3, .L449
 7082 000e 1B68     		ldr	r3, [r3]
 7083 0010 5A6D     		ldr	r2, [r3, #84]
 7084              		.loc 1 4624 35
 7085 0012 0132     		adds	r2, r2, #1
 7086 0014 5A65     		str	r2, [r3, #84]
 7087              	.L447:
4625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return pxCurrentTCB;
 7088              		.loc 1 4627 10
 7089 0016 034B     		ldr	r3, .L449
 7090 0018 1B68     		ldr	r3, [r3]
4628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 7091              		.loc 1 4628 2
 7092 001a 1846     		mov	r0, r3
 7093 001c BD46     		mov	sp, r7
 7094              	.LCFI291:
 7095              		.cfi_def_cfa_register 13
 7096              		@ sp needed
 7097 001e 5DF8047B 		ldr	r7, [sp], #4
 7098              	.LCFI292:
 7099              		.cfi_restore 7
 7100              		.cfi_def_cfa_offset 0
 7101 0022 7047     		bx	lr
 7102              	.L450:
 7103              		.align	2
 7104              	.L449:
 7105 0024 00000000 		.word	pxCurrentTCB
 7106              		.cfi_endproc
 7107              	.LFE60:
 7109              		.section	.text.ulTaskNotifyTake,"ax",%progbits
 7110              		.align	1
 7111              		.global	ulTaskNotifyTake
 7112              		.syntax unified
 7113              		.thumb
 7114              		.thumb_func
 7116              	ulTaskNotifyTake:
 7117              	.LFB61:
4629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
4631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulTaskNotifyTake( BaseType_t xClearCountOnExit, TickType_t xTicksToWait )
4636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 7118              		.loc 1 4636 2
 7119              		.cfi_startproc
 7120              		@ args = 0, pretend = 0, frame = 16
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 211


 7121              		@ frame_needed = 1, uses_anonymous_args = 0
 7122 0000 80B5     		push	{r7, lr}
 7123              	.LCFI293:
 7124              		.cfi_def_cfa_offset 8
 7125              		.cfi_offset 7, -8
 7126              		.cfi_offset 14, -4
 7127 0002 84B0     		sub	sp, sp, #16
 7128              	.LCFI294:
 7129              		.cfi_def_cfa_offset 24
 7130 0004 00AF     		add	r7, sp, #0
 7131              	.LCFI295:
 7132              		.cfi_def_cfa_register 7
 7133 0006 7860     		str	r0, [r7, #4]
 7134 0008 3960     		str	r1, [r7]
4637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulReturn;
4638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
 7135              		.loc 1 4639 3
 7136 000a FFF7FEFF 		bl	vPortEnterCritical
4640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Only block if the notification count is not already non-zero. */
4642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ulNotifiedValue == 0UL )
 7137              		.loc 1 4642 20
 7138 000e 1E4B     		ldr	r3, .L456
 7139 0010 1B68     		ldr	r3, [r3]
 7140 0012 DB6D     		ldr	r3, [r3, #92]
 7141              		.loc 1 4642 6
 7142 0014 002B     		cmp	r3, #0
 7143 0016 13D1     		bne	.L452
4643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Mark this task as waiting for a notification. */
4645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ucNotifyState = taskWAITING_NOTIFICATION;
 7144              		.loc 1 4645 17
 7145 0018 1B4B     		ldr	r3, .L456
 7146 001a 1B68     		ldr	r3, [r3]
 7147              		.loc 1 4645 33
 7148 001c 0122     		movs	r2, #1
 7149 001e 83F86020 		strb	r2, [r3, #96]
4646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
 7150              		.loc 1 4647 7
 7151 0022 3B68     		ldr	r3, [r7]
 7152 0024 002B     		cmp	r3, #0
 7153 0026 0BD0     		beq	.L452
4648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 7154              		.loc 1 4649 6
 7155 0028 0121     		movs	r1, #1
 7156 002a 3868     		ldr	r0, [r7]
 7157 002c FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
4650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_NOTIFY_TAKE_BLOCK();
4651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* All ports are written to allow a yield in a critical
4653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					section (some will yield immediately, others wait until the
4654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					critical section exits) - but it is not something that
4655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					application code should ever do. */
4656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portYIELD_WITHIN_API();
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 212


 7158              		.loc 1 4656 6
 7159 0030 164B     		ldr	r3, .L456+4
 7160 0032 4FF08052 		mov	r2, #268435456
 7161 0036 1A60     		str	r2, [r3]
 7162              		.syntax unified
 7163              	@ 4656 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 7164 0038 BFF34F8F 		dsb
 7165              	@ 0 "" 2
 7166              	@ 4656 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 7167 003c BFF36F8F 		isb
 7168              	@ 0 "" 2
 7169              		.thumb
 7170              		.syntax unified
 7171              	.L452:
4657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
 7172              		.loc 1 4668 3
 7173 0040 FFF7FEFF 		bl	vPortExitCritical
4669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
 7174              		.loc 1 4670 3
 7175 0044 FFF7FEFF 		bl	vPortEnterCritical
4671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_TAKE();
4673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulReturn = pxCurrentTCB->ulNotifiedValue;
 7176              		.loc 1 4673 27
 7177 0048 0F4B     		ldr	r3, .L456
 7178 004a 1B68     		ldr	r3, [r3]
 7179              		.loc 1 4673 13
 7180 004c DB6D     		ldr	r3, [r3, #92]
 7181 004e FB60     		str	r3, [r7, #12]
4674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ulReturn != 0UL )
 7182              		.loc 1 4675 6
 7183 0050 FB68     		ldr	r3, [r7, #12]
 7184 0052 002B     		cmp	r3, #0
 7185 0054 0CD0     		beq	.L453
4676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xClearCountOnExit != pdFALSE )
 7186              		.loc 1 4677 7
 7187 0056 7B68     		ldr	r3, [r7, #4]
 7188 0058 002B     		cmp	r3, #0
 7189 005a 04D0     		beq	.L454
4678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB->ulNotifiedValue = 0UL;
 7190              		.loc 1 4679 18
 7191 005c 0A4B     		ldr	r3, .L456
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 213


 7192 005e 1B68     		ldr	r3, [r3]
 7193              		.loc 1 4679 36
 7194 0060 0022     		movs	r2, #0
 7195 0062 DA65     		str	r2, [r3, #92]
 7196 0064 04E0     		b	.L453
 7197              	.L454:
4680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB->ulNotifiedValue = ulReturn - ( uint32_t ) 1;
 7198              		.loc 1 4683 18
 7199 0066 084B     		ldr	r3, .L456
 7200 0068 1B68     		ldr	r3, [r3]
 7201              		.loc 1 4683 47
 7202 006a FA68     		ldr	r2, [r7, #12]
 7203 006c 013A     		subs	r2, r2, #1
 7204              		.loc 1 4683 36
 7205 006e DA65     		str	r2, [r3, #92]
 7206              	.L453:
4684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxCurrentTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 7207              		.loc 1 4691 16
 7208 0070 054B     		ldr	r3, .L456
 7209 0072 1B68     		ldr	r3, [r3]
 7210              		.loc 1 4691 32
 7211 0074 0022     		movs	r2, #0
 7212 0076 83F86020 		strb	r2, [r3, #96]
4692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
 7213              		.loc 1 4693 3
 7214 007a FFF7FEFF 		bl	vPortExitCritical
4694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return ulReturn;
 7215              		.loc 1 4695 10
 7216 007e FB68     		ldr	r3, [r7, #12]
4696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 7217              		.loc 1 4696 2
 7218 0080 1846     		mov	r0, r3
 7219 0082 1037     		adds	r7, r7, #16
 7220              	.LCFI296:
 7221              		.cfi_def_cfa_offset 8
 7222 0084 BD46     		mov	sp, r7
 7223              	.LCFI297:
 7224              		.cfi_def_cfa_register 13
 7225              		@ sp needed
 7226 0086 80BD     		pop	{r7, pc}
 7227              	.L457:
 7228              		.align	2
 7229              	.L456:
 7230 0088 00000000 		.word	pxCurrentTCB
 7231 008c 04ED00E0 		.word	-536810236
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 214


 7232              		.cfi_endproc
 7233              	.LFE61:
 7235              		.section	.text.xTaskNotifyWait,"ax",%progbits
 7236              		.align	1
 7237              		.global	xTaskNotifyWait
 7238              		.syntax unified
 7239              		.thumb
 7240              		.thumb_func
 7242              	xTaskNotifyWait:
 7243              	.LFB62:
4697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskNotifyWait( uint32_t ulBitsToClearOnEntry, uint32_t ulBitsToClearOnExit, uint32_t 
4704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 7244              		.loc 1 4704 2
 7245              		.cfi_startproc
 7246              		@ args = 0, pretend = 0, frame = 24
 7247              		@ frame_needed = 1, uses_anonymous_args = 0
 7248 0000 80B5     		push	{r7, lr}
 7249              	.LCFI298:
 7250              		.cfi_def_cfa_offset 8
 7251              		.cfi_offset 7, -8
 7252              		.cfi_offset 14, -4
 7253 0002 86B0     		sub	sp, sp, #24
 7254              	.LCFI299:
 7255              		.cfi_def_cfa_offset 32
 7256 0004 00AF     		add	r7, sp, #0
 7257              	.LCFI300:
 7258              		.cfi_def_cfa_register 7
 7259 0006 F860     		str	r0, [r7, #12]
 7260 0008 B960     		str	r1, [r7, #8]
 7261 000a 7A60     		str	r2, [r7, #4]
 7262 000c 3B60     		str	r3, [r7]
4705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
4706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
 7263              		.loc 1 4707 3
 7264 000e FFF7FEFF 		bl	vPortEnterCritical
4708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Only block if a notification is not already pending. */
4710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ucNotifyState != taskNOTIFICATION_RECEIVED )
 7265              		.loc 1 4710 20
 7266 0012 264B     		ldr	r3, .L464
 7267 0014 1B68     		ldr	r3, [r3]
 7268 0016 93F86030 		ldrb	r3, [r3, #96]
 7269 001a DBB2     		uxtb	r3, r3
 7270              		.loc 1 4710 6
 7271 001c 022B     		cmp	r3, #2
 7272 001e 1AD0     		beq	.L459
4711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Clear bits in the task's notification value as bits may get
4713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				set	by the notifying task or interrupt.  This can be used to
4714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				clear the value to zero. */
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 215


4715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnEntry;
 7273              		.loc 1 4715 35
 7274 0020 224B     		ldr	r3, .L464
 7275 0022 1B68     		ldr	r3, [r3]
 7276 0024 D96D     		ldr	r1, [r3, #92]
 7277              		.loc 1 4715 38
 7278 0026 FA68     		ldr	r2, [r7, #12]
 7279 0028 D243     		mvns	r2, r2
 7280              		.loc 1 4715 35
 7281 002a 0A40     		ands	r2, r2, r1
 7282 002c DA65     		str	r2, [r3, #92]
4716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Mark this task as waiting for a notification. */
4718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ucNotifyState = taskWAITING_NOTIFICATION;
 7283              		.loc 1 4718 17
 7284 002e 1F4B     		ldr	r3, .L464
 7285 0030 1B68     		ldr	r3, [r3]
 7286              		.loc 1 4718 33
 7287 0032 0122     		movs	r2, #1
 7288 0034 83F86020 		strb	r2, [r3, #96]
4719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
 7289              		.loc 1 4720 7
 7290 0038 3B68     		ldr	r3, [r7]
 7291 003a 002B     		cmp	r3, #0
 7292 003c 0BD0     		beq	.L459
4721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 7293              		.loc 1 4722 6
 7294 003e 0121     		movs	r1, #1
 7295 0040 3868     		ldr	r0, [r7]
 7296 0042 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
4723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_NOTIFY_WAIT_BLOCK();
4724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* All ports are written to allow a yield in a critical
4726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					section (some will yield immediately, others wait until the
4727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					critical section exits) - but it is not something that
4728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					application code should ever do. */
4729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portYIELD_WITHIN_API();
 7297              		.loc 1 4729 6
 7298 0046 1A4B     		ldr	r3, .L464+4
 7299 0048 4FF08052 		mov	r2, #268435456
 7300 004c 1A60     		str	r2, [r3]
 7301              		.syntax unified
 7302              	@ 4729 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 7303 004e BFF34F8F 		dsb
 7304              	@ 0 "" 2
 7305              	@ 4729 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 7306 0052 BFF36F8F 		isb
 7307              	@ 0 "" 2
 7308              		.thumb
 7309              		.syntax unified
 7310              	.L459:
4730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 216


4734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
 7311              		.loc 1 4741 3
 7312 0056 FFF7FEFF 		bl	vPortExitCritical
4742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
 7313              		.loc 1 4743 3
 7314 005a FFF7FEFF 		bl	vPortEnterCritical
4744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_WAIT();
4746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pulNotificationValue != NULL )
 7315              		.loc 1 4747 6
 7316 005e 7B68     		ldr	r3, [r7, #4]
 7317 0060 002B     		cmp	r3, #0
 7318 0062 04D0     		beq	.L460
4748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Output the current notification value, which may or may not
4750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				have changed. */
4751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				*pulNotificationValue = pxCurrentTCB->ulNotifiedValue;
 7319              		.loc 1 4751 41
 7320 0064 114B     		ldr	r3, .L464
 7321 0066 1B68     		ldr	r3, [r3]
 7322 0068 DA6D     		ldr	r2, [r3, #92]
 7323              		.loc 1 4751 27
 7324 006a 7B68     		ldr	r3, [r7, #4]
 7325 006c 1A60     		str	r2, [r3]
 7326              	.L460:
4752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If ucNotifyValue is set then either the task never entered the
4755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			blocked state (because a notification was already pending) or the
4756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task unblocked because of a notification.  Otherwise the task
4757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			unblocked because of a timeout. */
4758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ucNotifyState != taskNOTIFICATION_RECEIVED )
 7327              		.loc 1 4758 20
 7328 006e 0F4B     		ldr	r3, .L464
 7329 0070 1B68     		ldr	r3, [r3]
 7330 0072 93F86030 		ldrb	r3, [r3, #96]
 7331 0076 DBB2     		uxtb	r3, r3
 7332              		.loc 1 4758 6
 7333 0078 022B     		cmp	r3, #2
 7334 007a 02D0     		beq	.L461
4759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A notification was not received. */
4761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdFALSE;
 7335              		.loc 1 4761 13
 7336 007c 0023     		movs	r3, #0
 7337 007e 7B61     		str	r3, [r7, #20]
 7338 0080 08E0     		b	.L462
 7339              	.L461:
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 217


4762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A notification was already pending or a notification was
4766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				received while the task was waiting. */
4767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnExit;
 7340              		.loc 1 4767 35
 7341 0082 0A4B     		ldr	r3, .L464
 7342 0084 1B68     		ldr	r3, [r3]
 7343 0086 D96D     		ldr	r1, [r3, #92]
 7344              		.loc 1 4767 38
 7345 0088 BA68     		ldr	r2, [r7, #8]
 7346 008a D243     		mvns	r2, r2
 7347              		.loc 1 4767 35
 7348 008c 0A40     		ands	r2, r2, r1
 7349 008e DA65     		str	r2, [r3, #92]
4768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
 7350              		.loc 1 4768 13
 7351 0090 0123     		movs	r3, #1
 7352 0092 7B61     		str	r3, [r7, #20]
 7353              	.L462:
4769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxCurrentTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 7354              		.loc 1 4771 16
 7355 0094 054B     		ldr	r3, .L464
 7356 0096 1B68     		ldr	r3, [r3]
 7357              		.loc 1 4771 32
 7358 0098 0022     		movs	r2, #0
 7359 009a 83F86020 		strb	r2, [r3, #96]
4772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
 7360              		.loc 1 4773 3
 7361 009e FFF7FEFF 		bl	vPortExitCritical
4774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 7362              		.loc 1 4775 10
 7363 00a2 7B69     		ldr	r3, [r7, #20]
4776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 7364              		.loc 1 4776 2
 7365 00a4 1846     		mov	r0, r3
 7366 00a6 1837     		adds	r7, r7, #24
 7367              	.LCFI301:
 7368              		.cfi_def_cfa_offset 8
 7369 00a8 BD46     		mov	sp, r7
 7370              	.LCFI302:
 7371              		.cfi_def_cfa_register 13
 7372              		@ sp needed
 7373 00aa 80BD     		pop	{r7, pc}
 7374              	.L465:
 7375              		.align	2
 7376              	.L464:
 7377 00ac 00000000 		.word	pxCurrentTCB
 7378 00b0 04ED00E0 		.word	-536810236
 7379              		.cfi_endproc
 7380              	.LFE62:
 7382              		.section	.text.xTaskGenericNotify,"ax",%progbits
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 218


 7383              		.align	1
 7384              		.global	xTaskGenericNotify
 7385              		.syntax unified
 7386              		.thumb
 7387              		.thumb_func
 7389              	xTaskGenericNotify:
 7390              	.LFB63:
4777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskGenericNotify( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction eAction
4784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 7391              		.loc 1 4784 2
 7392              		.cfi_startproc
 7393              		@ args = 0, pretend = 0, frame = 40
 7394              		@ frame_needed = 1, uses_anonymous_args = 0
 7395 0000 80B5     		push	{r7, lr}
 7396              	.LCFI303:
 7397              		.cfi_def_cfa_offset 8
 7398              		.cfi_offset 7, -8
 7399              		.cfi_offset 14, -4
 7400 0002 8AB0     		sub	sp, sp, #40
 7401              	.LCFI304:
 7402              		.cfi_def_cfa_offset 48
 7403 0004 00AF     		add	r7, sp, #0
 7404              	.LCFI305:
 7405              		.cfi_def_cfa_register 7
 7406 0006 F860     		str	r0, [r7, #12]
 7407 0008 B960     		str	r1, [r7, #8]
 7408 000a 3B60     		str	r3, [r7]
 7409 000c 1346     		mov	r3, r2
 7410 000e FB71     		strb	r3, [r7, #7]
4785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
4786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
 7411              		.loc 1 4786 13
 7412 0010 0123     		movs	r3, #1
 7413 0012 7B62     		str	r3, [r7, #36]
4787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToNotify );
 7414              		.loc 1 4789 3
 7415 0014 FB68     		ldr	r3, [r7, #12]
 7416 0016 002B     		cmp	r3, #0
 7417 0018 0AD1     		bne	.L467
 7418              	.LBB231:
 7419              	.LBB232:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 7420              		.loc 2 195 2
 7421              		.syntax unified
 7422              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 7423 001a 4FF05003 			mov r3, #80												
 7424 001e 83F31188 		msr basepri, r3											
 7425 0022 BFF36F8F 		isb														
 7426 0026 BFF34F8F 		dsb														
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 219


 7427              	
 7428              	@ 0 "" 2
 7429              		.thumb
 7430              		.syntax unified
 7431 002a BB61     		str	r3, [r7, #24]
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 7432              		.loc 2 203 1
 7433 002c 00BF     		nop
 7434              	.L468:
 7435              	.LBE232:
 7436              	.LBE231:
 7437              		.loc 1 4789 3 discriminator 1
 7438 002e FEE7     		b	.L468
 7439              	.L467:
4790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
 7440              		.loc 1 4790 9
 7441 0030 FB68     		ldr	r3, [r7, #12]
 7442 0032 3B62     		str	r3, [r7, #32]
4791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
 7443              		.loc 1 4792 3
 7444 0034 FFF7FEFF 		bl	vPortEnterCritical
4793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pulPreviousNotificationValue != NULL )
 7445              		.loc 1 4794 6
 7446 0038 3B68     		ldr	r3, [r7]
 7447 003a 002B     		cmp	r3, #0
 7448 003c 03D0     		beq	.L469
4795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				*pulPreviousNotificationValue = pxTCB->ulNotifiedValue;
 7449              		.loc 1 4796 42
 7450 003e 3B6A     		ldr	r3, [r7, #32]
 7451 0040 DA6D     		ldr	r2, [r3, #92]
 7452              		.loc 1 4796 35
 7453 0042 3B68     		ldr	r3, [r7]
 7454 0044 1A60     		str	r2, [r3]
 7455              	.L469:
4797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
 7456              		.loc 1 4799 26
 7457 0046 3B6A     		ldr	r3, [r7, #32]
 7458 0048 93F86030 		ldrb	r3, [r3, #96]
 7459 004c FB77     		strb	r3, [r7, #31]
4800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 7460              		.loc 1 4801 25
 7461 004e 3B6A     		ldr	r3, [r7, #32]
 7462 0050 0222     		movs	r2, #2
 7463 0052 83F86020 		strb	r2, [r3, #96]
4802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			switch( eAction )
 7464              		.loc 1 4803 4
 7465 0056 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 7466 0058 042B     		cmp	r3, #4
 7467 005a 28D8     		bhi	.L470
 7468 005c 01A2     		adr	r2, .L472
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 220


 7469 005e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 7470 0062 00BF     		.p2align 2
 7471              	.L472:
 7472 0064 CF000000 		.word	.L487+1
 7473 0068 79000000 		.word	.L475+1
 7474 006c 87000000 		.word	.L474+1
 7475 0070 93000000 		.word	.L473+1
 7476 0074 9B000000 		.word	.L471+1
 7477              		.p2align 1
 7478              	.L475:
4804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetBits	:
4806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue |= ulValue;
 7479              		.loc 1 4806 29
 7480 0078 3B6A     		ldr	r3, [r7, #32]
 7481 007a DA6D     		ldr	r2, [r3, #92]
 7482 007c BB68     		ldr	r3, [r7, #8]
 7483 007e 1A43     		orrs	r2, r2, r3
 7484 0080 3B6A     		ldr	r3, [r7, #32]
 7485 0082 DA65     		str	r2, [r3, #92]
4807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 7486              		.loc 1 4807 6
 7487 0084 26E0     		b	.L477
 7488              	.L474:
4808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eIncrement	:
4810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( pxTCB->ulNotifiedValue )++;
 7489              		.loc 1 4810 13
 7490 0086 3B6A     		ldr	r3, [r7, #32]
 7491 0088 DB6D     		ldr	r3, [r3, #92]
 7492              		.loc 1 4810 32
 7493 008a 5A1C     		adds	r2, r3, #1
 7494 008c 3B6A     		ldr	r3, [r7, #32]
 7495 008e DA65     		str	r2, [r3, #92]
4811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 7496              		.loc 1 4811 6
 7497 0090 20E0     		b	.L477
 7498              	.L473:
4812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithOverwrite	:
4814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue = ulValue;
 7499              		.loc 1 4814 29
 7500 0092 3B6A     		ldr	r3, [r7, #32]
 7501 0094 BA68     		ldr	r2, [r7, #8]
 7502 0096 DA65     		str	r2, [r3, #92]
4815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 7503              		.loc 1 4815 6
 7504 0098 1CE0     		b	.L477
 7505              	.L471:
4816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithoutOverwrite :
4818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
 7506              		.loc 1 4818 8
 7507 009a FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 7508 009c 022B     		cmp	r3, #2
 7509 009e 03D0     		beq	.L478
4819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 221


4820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB->ulNotifiedValue = ulValue;
 7510              		.loc 1 4820 30
 7511 00a0 3B6A     		ldr	r3, [r7, #32]
 7512 00a2 BA68     		ldr	r2, [r7, #8]
 7513 00a4 DA65     		str	r2, [r3, #92]
4821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The value could not be written to the task. */
4825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xReturn = pdFAIL;
4826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 7514              		.loc 1 4827 6
 7515 00a6 15E0     		b	.L477
 7516              	.L478:
4825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 7517              		.loc 1 4825 15
 7518 00a8 0023     		movs	r3, #0
 7519 00aa 7B62     		str	r3, [r7, #36]
 7520              		.loc 1 4827 6
 7521 00ac 12E0     		b	.L477
 7522              	.L470:
4828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eNoAction:
4830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task is being notified without its notify value being
4831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					updated. */
4832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				default:
4835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Should not get here if all enums are handled.
4836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					Artificially force an assert by testing a value the
4837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					compiler can't assume is const. */
4838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					configASSERT( pxTCB->ulNotifiedValue == ~0UL );
 7523              		.loc 1 4838 6
 7524 00ae 3B6A     		ldr	r3, [r7, #32]
 7525 00b0 DB6D     		ldr	r3, [r3, #92]
 7526 00b2 B3F1FF3F 		cmp	r3, #-1
 7527 00b6 0CD0     		beq	.L488
 7528              	.LBB233:
 7529              	.LBB234:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 7530              		.loc 2 195 2
 7531              		.syntax unified
 7532              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 7533 00b8 4FF05003 			mov r3, #80												
 7534 00bc 83F31188 		msr basepri, r3											
 7535 00c0 BFF36F8F 		isb														
 7536 00c4 BFF34F8F 		dsb														
 7537              	
 7538              	@ 0 "" 2
 7539              		.thumb
 7540              		.syntax unified
 7541 00c8 7B61     		str	r3, [r7, #20]
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 7542              		.loc 2 203 1
 7543 00ca 00BF     		nop
 7544              	.L481:
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 222


 7545              	.LBE234:
 7546              	.LBE233:
 7547              		.loc 1 4838 6 discriminator 2
 7548 00cc FEE7     		b	.L481
 7549              	.L487:
4832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 7550              		.loc 1 4832 6
 7551 00ce 00BF     		nop
 7552 00d0 00E0     		b	.L477
 7553              	.L488:
4839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 7554              		.loc 1 4840 6
 7555 00d2 00BF     		nop
 7556              	.L477:
4841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY();
4844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			notification then unblock it now. */
4847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
 7557              		.loc 1 4847 6
 7558 00d4 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 7559 00d6 012B     		cmp	r3, #1
 7560 00d8 3CD1     		bne	.L482
4848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 7561              		.loc 1 4849 14
 7562 00da 3B6A     		ldr	r3, [r7, #32]
 7563 00dc 0433     		adds	r3, r3, #4
 7564 00de 1846     		mov	r0, r3
 7565 00e0 FFF7FEFF 		bl	uxListRemove
4850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
 7566              		.loc 1 4850 5
 7567 00e4 3B6A     		ldr	r3, [r7, #32]
 7568 00e6 DA6A     		ldr	r2, [r3, #44]
 7569 00e8 1E4B     		ldr	r3, .L489
 7570 00ea 1B68     		ldr	r3, [r3]
 7571 00ec 9A42     		cmp	r2, r3
 7572 00ee 03D9     		bls	.L483
 7573              		.loc 1 4850 5 is_stmt 0 discriminator 1
 7574 00f0 3B6A     		ldr	r3, [r7, #32]
 7575 00f2 DB6A     		ldr	r3, [r3, #44]
 7576 00f4 1B4A     		ldr	r2, .L489
 7577 00f6 1360     		str	r3, [r2]
 7578              	.L483:
 7579              		.loc 1 4850 5 discriminator 3
 7580 00f8 3B6A     		ldr	r3, [r7, #32]
 7581 00fa DA6A     		ldr	r2, [r3, #44]
 7582 00fc 1346     		mov	r3, r2
 7583 00fe 9B00     		lsls	r3, r3, #2
 7584 0100 1344     		add	r3, r3, r2
 7585 0102 9B00     		lsls	r3, r3, #2
 7586 0104 184A     		ldr	r2, .L489+4
 7587 0106 1A44     		add	r2, r2, r3
 7588 0108 3B6A     		ldr	r3, [r7, #32]
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 223


 7589 010a 0433     		adds	r3, r3, #4
 7590 010c 1946     		mov	r1, r3
 7591 010e 1046     		mov	r0, r2
 7592 0110 FFF7FEFF 		bl	vListInsertEnd
4851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task should not have been on an event list. */
4853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
 7593              		.loc 1 4853 5 is_stmt 1 discriminator 3
 7594 0114 3B6A     		ldr	r3, [r7, #32]
 7595 0116 9B6A     		ldr	r3, [r3, #40]
 7596 0118 002B     		cmp	r3, #0
 7597 011a 0AD0     		beq	.L484
 7598              	.LBB235:
 7599              	.LBB236:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 7600              		.loc 2 195 2
 7601              		.syntax unified
 7602              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 7603 011c 4FF05003 			mov r3, #80												
 7604 0120 83F31188 		msr basepri, r3											
 7605 0124 BFF36F8F 		isb														
 7606 0128 BFF34F8F 		dsb														
 7607              	
 7608              	@ 0 "" 2
 7609              		.thumb
 7610              		.syntax unified
 7611 012c 3B61     		str	r3, [r7, #16]
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 7612              		.loc 2 203 1
 7613 012e 00BF     		nop
 7614              	.L485:
 7615              	.LBE236:
 7616              	.LBE235:
 7617              		.loc 1 4853 5 discriminator 3
 7618 0130 FEE7     		b	.L485
 7619              	.L484:
4854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if( configUSE_TICKLESS_IDLE != 0 )
4856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If a task is blocked waiting for a notification then
4858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime might be set to the blocked task's time
4859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					out time.  If the task is unblocked for a reason other than
4860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					a timeout xNextTaskUnblockTime is normally left unchanged,
4861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					because it will automatically get reset to a new value when
4862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					the tick count equals xNextTaskUnblockTime.  However if
4863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					tickless idling is used it might be more important to enter
4864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					sleep mode at the earliest possible time - so reset
4865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime here to ensure it is updated at the
4866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					earliest possible time. */
4867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvResetNextTaskUnblockTime();
 7620              		.loc 1 4867 6
 7621 0132 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
4868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
4870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
 7622              		.loc 1 4871 14
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 224


 7623 0136 3B6A     		ldr	r3, [r7, #32]
 7624 0138 DA6A     		ldr	r2, [r3, #44]
 7625              		.loc 1 4871 41
 7626 013a 0C4B     		ldr	r3, .L489+8
 7627 013c 1B68     		ldr	r3, [r3]
 7628 013e DB6A     		ldr	r3, [r3, #44]
 7629              		.loc 1 4871 7
 7630 0140 9A42     		cmp	r2, r3
 7631 0142 07D9     		bls	.L482
4872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The notified task has a priority above the currently
4874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					executing task so a yield is required. */
4875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
 7632              		.loc 1 4875 6
 7633 0144 0A4B     		ldr	r3, .L489+12
 7634 0146 4FF08052 		mov	r2, #268435456
 7635 014a 1A60     		str	r2, [r3]
 7636              		.syntax unified
 7637              	@ 4875 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 7638 014c BFF34F8F 		dsb
 7639              	@ 0 "" 2
 7640              	@ 4875 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 7641 0150 BFF36F8F 		isb
 7642              	@ 0 "" 2
 7643              		.thumb
 7644              		.syntax unified
 7645              	.L482:
4876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
 7646              		.loc 1 4887 3
 7647 0154 FFF7FEFF 		bl	vPortExitCritical
4888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 7648              		.loc 1 4889 10
 7649 0158 7B6A     		ldr	r3, [r7, #36]
4890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 7650              		.loc 1 4890 2
 7651 015a 1846     		mov	r0, r3
 7652 015c 2837     		adds	r7, r7, #40
 7653              	.LCFI306:
 7654              		.cfi_def_cfa_offset 8
 7655 015e BD46     		mov	sp, r7
 7656              	.LCFI307:
 7657              		.cfi_def_cfa_register 13
 7658              		@ sp needed
 7659 0160 80BD     		pop	{r7, pc}
 7660              	.L490:
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 225


 7661 0162 00BF     		.align	2
 7662              	.L489:
 7663 0164 00000000 		.word	uxTopReadyPriority
 7664 0168 00000000 		.word	pxReadyTasksLists
 7665 016c 00000000 		.word	pxCurrentTCB
 7666 0170 04ED00E0 		.word	-536810236
 7667              		.cfi_endproc
 7668              	.LFE63:
 7670              		.section	.text.xTaskGenericNotifyFromISR,"ax",%progbits
 7671              		.align	1
 7672              		.global	xTaskGenericNotifyFromISR
 7673              		.syntax unified
 7674              		.thumb
 7675              		.thumb_func
 7677              	xTaskGenericNotifyFromISR:
 7678              	.LFB64:
4891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskGenericNotifyFromISR( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction 
4898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 7679              		.loc 1 4898 2
 7680              		.cfi_startproc
 7681              		@ args = 4, pretend = 0, frame = 56
 7682              		@ frame_needed = 1, uses_anonymous_args = 0
 7683 0000 80B5     		push	{r7, lr}
 7684              	.LCFI308:
 7685              		.cfi_def_cfa_offset 8
 7686              		.cfi_offset 7, -8
 7687              		.cfi_offset 14, -4
 7688 0002 8EB0     		sub	sp, sp, #56
 7689              	.LCFI309:
 7690              		.cfi_def_cfa_offset 64
 7691 0004 00AF     		add	r7, sp, #0
 7692              	.LCFI310:
 7693              		.cfi_def_cfa_register 7
 7694 0006 F860     		str	r0, [r7, #12]
 7695 0008 B960     		str	r1, [r7, #8]
 7696 000a 3B60     		str	r3, [r7]
 7697 000c 1346     		mov	r3, r2
 7698 000e FB71     		strb	r3, [r7, #7]
4899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
4900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
 7699              		.loc 1 4901 13
 7700 0010 0123     		movs	r3, #1
 7701 0012 7B63     		str	r3, [r7, #52]
4902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
4903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToNotify );
 7702              		.loc 1 4904 3
 7703 0014 FB68     		ldr	r3, [r7, #12]
 7704 0016 002B     		cmp	r3, #0
 7705 0018 0AD1     		bne	.L492
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 226


 7706              	.LBB237:
 7707              	.LBB238:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 7708              		.loc 2 195 2
 7709              		.syntax unified
 7710              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 7711 001a 4FF05003 			mov r3, #80												
 7712 001e 83F31188 		msr basepri, r3											
 7713 0022 BFF36F8F 		isb														
 7714 0026 BFF34F8F 		dsb														
 7715              	
 7716              	@ 0 "" 2
 7717              		.thumb
 7718              		.syntax unified
 7719 002a 7B62     		str	r3, [r7, #36]
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 7720              		.loc 2 203 1
 7721 002c 00BF     		nop
 7722              	.L493:
 7723              	.LBE238:
 7724              	.LBE237:
 7725              		.loc 1 4904 3 discriminator 1
 7726 002e FEE7     		b	.L493
 7727              	.L492:
4905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
4907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
4908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
4909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
4910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
4911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
4912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
4913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
4914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
4915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
4916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
4917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
4918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
4919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
4920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
4921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
4922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 7728              		.loc 1 4922 3
 7729 0030 FFF7FEFF 		bl	vPortValidateInterruptPriority
4923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
 7730              		.loc 1 4924 9
 7731 0034 FB68     		ldr	r3, [r7, #12]
 7732 0036 3B63     		str	r3, [r7, #48]
 7733              	.LBB239:
 7734              	.LBB240:
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 7735              		.loc 2 211 2
 7736              		.syntax unified
 7737              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 7738 0038 EFF31182 			mrs r2, basepri											
 7739 003c 4FF05003 		mov r3, #80												
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 227


 7740 0040 83F31188 		msr basepri, r3											
 7741 0044 BFF36F8F 		isb														
 7742 0048 BFF34F8F 		dsb														
 7743              	
 7744              	@ 0 "" 2
 7745              		.thumb
 7746              		.syntax unified
 7747 004c 3A62     		str	r2, [r7, #32]
 7748 004e FB61     		str	r3, [r7, #28]
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 7749              		.loc 2 223 9
 7750 0050 3B6A     		ldr	r3, [r7, #32]
 7751              	.LBE240:
 7752              	.LBE239:
4925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 7753              		.loc 1 4926 28
 7754 0052 FB62     		str	r3, [r7, #44]
4927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pulPreviousNotificationValue != NULL )
 7755              		.loc 1 4928 6
 7756 0054 3B68     		ldr	r3, [r7]
 7757 0056 002B     		cmp	r3, #0
 7758 0058 03D0     		beq	.L495
4929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				*pulPreviousNotificationValue = pxTCB->ulNotifiedValue;
 7759              		.loc 1 4930 42
 7760 005a 3B6B     		ldr	r3, [r7, #48]
 7761 005c DA6D     		ldr	r2, [r3, #92]
 7762              		.loc 1 4930 35
 7763 005e 3B68     		ldr	r3, [r7]
 7764 0060 1A60     		str	r2, [r3]
 7765              	.L495:
4931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
 7766              		.loc 1 4933 26
 7767 0062 3B6B     		ldr	r3, [r7, #48]
 7768 0064 93F86030 		ldrb	r3, [r3, #96]
 7769 0068 87F82B30 		strb	r3, [r7, #43]
4934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 7770              		.loc 1 4934 25
 7771 006c 3B6B     		ldr	r3, [r7, #48]
 7772 006e 0222     		movs	r2, #2
 7773 0070 83F86020 		strb	r2, [r3, #96]
4935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			switch( eAction )
 7774              		.loc 1 4936 4
 7775 0074 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 7776 0076 042B     		cmp	r3, #4
 7777 0078 28D8     		bhi	.L496
 7778 007a 01A2     		adr	r2, .L498
 7779 007c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 7780              		.p2align 2
 7781              	.L498:
 7782 0080 ED000000 		.word	.L516+1
 7783 0084 95000000 		.word	.L501+1
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 228


 7784 0088 A3000000 		.word	.L500+1
 7785 008c AF000000 		.word	.L499+1
 7786 0090 B7000000 		.word	.L497+1
 7787              		.p2align 1
 7788              	.L501:
4937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetBits	:
4939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue |= ulValue;
 7789              		.loc 1 4939 29
 7790 0094 3B6B     		ldr	r3, [r7, #48]
 7791 0096 DA6D     		ldr	r2, [r3, #92]
 7792 0098 BB68     		ldr	r3, [r7, #8]
 7793 009a 1A43     		orrs	r2, r2, r3
 7794 009c 3B6B     		ldr	r3, [r7, #48]
 7795 009e DA65     		str	r2, [r3, #92]
4940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 7796              		.loc 1 4940 6
 7797 00a0 27E0     		b	.L503
 7798              	.L500:
4941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eIncrement	:
4943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( pxTCB->ulNotifiedValue )++;
 7799              		.loc 1 4943 13
 7800 00a2 3B6B     		ldr	r3, [r7, #48]
 7801 00a4 DB6D     		ldr	r3, [r3, #92]
 7802              		.loc 1 4943 32
 7803 00a6 5A1C     		adds	r2, r3, #1
 7804 00a8 3B6B     		ldr	r3, [r7, #48]
 7805 00aa DA65     		str	r2, [r3, #92]
4944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 7806              		.loc 1 4944 6
 7807 00ac 21E0     		b	.L503
 7808              	.L499:
4945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithOverwrite	:
4947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue = ulValue;
 7809              		.loc 1 4947 29
 7810 00ae 3B6B     		ldr	r3, [r7, #48]
 7811 00b0 BA68     		ldr	r2, [r7, #8]
 7812 00b2 DA65     		str	r2, [r3, #92]
4948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 7813              		.loc 1 4948 6
 7814 00b4 1DE0     		b	.L503
 7815              	.L497:
4949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithoutOverwrite :
4951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
 7816              		.loc 1 4951 8
 7817 00b6 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 7818 00ba 022B     		cmp	r3, #2
 7819 00bc 03D0     		beq	.L504
4952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB->ulNotifiedValue = ulValue;
 7820              		.loc 1 4953 30
 7821 00be 3B6B     		ldr	r3, [r7, #48]
 7822 00c0 BA68     		ldr	r2, [r7, #8]
 7823 00c2 DA65     		str	r2, [r3, #92]
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 229


4954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The value could not be written to the task. */
4958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xReturn = pdFAIL;
4959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 7824              		.loc 1 4960 6
 7825 00c4 15E0     		b	.L503
 7826              	.L504:
4958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 7827              		.loc 1 4958 15
 7828 00c6 0023     		movs	r3, #0
 7829 00c8 7B63     		str	r3, [r7, #52]
 7830              		.loc 1 4960 6
 7831 00ca 12E0     		b	.L503
 7832              	.L496:
4961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eNoAction :
4963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task is being notified without its notify value being
4964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					updated. */
4965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				default:
4968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Should not get here if all enums are handled.
4969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					Artificially force an assert by testing a value the
4970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					compiler can't assume is const. */
4971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					configASSERT( pxTCB->ulNotifiedValue == ~0UL );
 7833              		.loc 1 4971 6
 7834 00cc 3B6B     		ldr	r3, [r7, #48]
 7835 00ce DB6D     		ldr	r3, [r3, #92]
 7836 00d0 B3F1FF3F 		cmp	r3, #-1
 7837 00d4 0CD0     		beq	.L517
 7838              	.LBB241:
 7839              	.LBB242:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 7840              		.loc 2 195 2
 7841              		.syntax unified
 7842              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 7843 00d6 4FF05003 			mov r3, #80												
 7844 00da 83F31188 		msr basepri, r3											
 7845 00de BFF36F8F 		isb														
 7846 00e2 BFF34F8F 		dsb														
 7847              	
 7848              	@ 0 "" 2
 7849              		.thumb
 7850              		.syntax unified
 7851 00e6 BB61     		str	r3, [r7, #24]
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 7852              		.loc 2 203 1
 7853 00e8 00BF     		nop
 7854              	.L507:
 7855              	.LBE242:
 7856              	.LBE241:
 7857              		.loc 1 4971 6 discriminator 2
 7858 00ea FEE7     		b	.L507
 7859              	.L516:
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 230


4965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 7860              		.loc 1 4965 6
 7861 00ec 00BF     		nop
 7862 00ee 00E0     		b	.L503
 7863              	.L517:
4972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 7864              		.loc 1 4972 6
 7865 00f0 00BF     		nop
 7866              	.L503:
4973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_FROM_ISR();
4976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			notification then unblock it now. */
4979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
 7867              		.loc 1 4979 6
 7868 00f2 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 7869 00f6 012B     		cmp	r3, #1
 7870 00f8 46D1     		bne	.L508
4980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task should not have been on an event list. */
4982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
 7871              		.loc 1 4982 5
 7872 00fa 3B6B     		ldr	r3, [r7, #48]
 7873 00fc 9B6A     		ldr	r3, [r3, #40]
 7874 00fe 002B     		cmp	r3, #0
 7875 0100 0AD0     		beq	.L509
 7876              	.LBB243:
 7877              	.LBB244:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 7878              		.loc 2 195 2
 7879              		.syntax unified
 7880              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 7881 0102 4FF05003 			mov r3, #80												
 7882 0106 83F31188 		msr basepri, r3											
 7883 010a BFF36F8F 		isb														
 7884 010e BFF34F8F 		dsb														
 7885              	
 7886              	@ 0 "" 2
 7887              		.thumb
 7888              		.syntax unified
 7889 0112 7B61     		str	r3, [r7, #20]
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 7890              		.loc 2 203 1
 7891 0114 00BF     		nop
 7892              	.L510:
 7893              	.LBE244:
 7894              	.LBE243:
 7895              		.loc 1 4982 5 discriminator 3
 7896 0116 FEE7     		b	.L510
 7897              	.L509:
4983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 7898              		.loc 1 4984 30
 7899 0118 214B     		ldr	r3, .L518
 7900 011a 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 231


 7901              		.loc 1 4984 7
 7902 011c 002B     		cmp	r3, #0
 7903 011e 1DD1     		bne	.L511
4985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 7904              		.loc 1 4986 15
 7905 0120 3B6B     		ldr	r3, [r7, #48]
 7906 0122 0433     		adds	r3, r3, #4
 7907 0124 1846     		mov	r0, r3
 7908 0126 FFF7FEFF 		bl	uxListRemove
4987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 7909              		.loc 1 4987 6
 7910 012a 3B6B     		ldr	r3, [r7, #48]
 7911 012c DA6A     		ldr	r2, [r3, #44]
 7912 012e 1D4B     		ldr	r3, .L518+4
 7913 0130 1B68     		ldr	r3, [r3]
 7914 0132 9A42     		cmp	r2, r3
 7915 0134 03D9     		bls	.L512
 7916              		.loc 1 4987 6 is_stmt 0 discriminator 1
 7917 0136 3B6B     		ldr	r3, [r7, #48]
 7918 0138 DB6A     		ldr	r3, [r3, #44]
 7919 013a 1A4A     		ldr	r2, .L518+4
 7920 013c 1360     		str	r3, [r2]
 7921              	.L512:
 7922              		.loc 1 4987 6 discriminator 3
 7923 013e 3B6B     		ldr	r3, [r7, #48]
 7924 0140 DA6A     		ldr	r2, [r3, #44]
 7925 0142 1346     		mov	r3, r2
 7926 0144 9B00     		lsls	r3, r3, #2
 7927 0146 1344     		add	r3, r3, r2
 7928 0148 9B00     		lsls	r3, r3, #2
 7929 014a 174A     		ldr	r2, .L518+8
 7930 014c 1A44     		add	r2, r2, r3
 7931 014e 3B6B     		ldr	r3, [r7, #48]
 7932 0150 0433     		adds	r3, r3, #4
 7933 0152 1946     		mov	r1, r3
 7934 0154 1046     		mov	r0, r2
 7935 0156 FFF7FEFF 		bl	vListInsertEnd
 7936 015a 05E0     		b	.L513
 7937              	.L511:
4988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed and ready lists cannot be accessed, so hold
4992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					this task pending until the scheduler is resumed. */
4993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
 7938              		.loc 1 4993 6 is_stmt 1
 7939 015c 3B6B     		ldr	r3, [r7, #48]
 7940 015e 1833     		adds	r3, r3, #24
 7941 0160 1946     		mov	r1, r3
 7942 0162 1248     		ldr	r0, .L518+12
 7943 0164 FFF7FEFF 		bl	vListInsertEnd
 7944              	.L513:
4994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
 7945              		.loc 1 4996 14
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 232


 7946 0168 3B6B     		ldr	r3, [r7, #48]
 7947 016a DA6A     		ldr	r2, [r3, #44]
 7948              		.loc 1 4996 41
 7949 016c 104B     		ldr	r3, .L518+16
 7950 016e 1B68     		ldr	r3, [r3]
 7951 0170 DB6A     		ldr	r3, [r3, #44]
 7952              		.loc 1 4996 7
 7953 0172 9A42     		cmp	r2, r3
 7954 0174 08D9     		bls	.L508
4997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The notified task has a priority above the currently
4999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					executing task so a yield is required. */
5000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxHigherPriorityTaskWoken != NULL )
 7955              		.loc 1 5000 8
 7956 0176 3B6C     		ldr	r3, [r7, #64]
 7957 0178 002B     		cmp	r3, #0
 7958 017a 02D0     		beq	.L514
5001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
5002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						*pxHigherPriorityTaskWoken = pdTRUE;
 7959              		.loc 1 5002 34
 7960 017c 3B6C     		ldr	r3, [r7, #64]
 7961 017e 0122     		movs	r2, #1
 7962 0180 1A60     		str	r2, [r3]
 7963              	.L514:
5003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
5004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Mark that a yield is pending in case the user is not
5006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					using the "xHigherPriorityTaskWoken" parameter to an ISR
5007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					safe FreeRTOS function. */
5008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xYieldPending = pdTRUE;
 7964              		.loc 1 5008 20
 7965 0182 0C4B     		ldr	r3, .L518+20
 7966 0184 0122     		movs	r2, #1
 7967 0186 1A60     		str	r2, [r3]
 7968              	.L508:
 7969 0188 FB6A     		ldr	r3, [r7, #44]
 7970 018a 3B61     		str	r3, [r7, #16]
 7971              	.LBB245:
 7972              	.LBB246:
 229:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 7973              		.loc 2 229 2
 7974 018c 3B69     		ldr	r3, [r7, #16]
 7975              		.syntax unified
 7976              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 7977 018e 83F31188 			msr basepri, r3	
 7978              	@ 0 "" 2
 7979              		.loc 2 233 1
 7980              		.thumb
 7981              		.syntax unified
 7982 0192 00BF     		nop
 7983              	.LBE246:
 7984              	.LBE245:
5009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
5010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
5011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
5012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
5013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 233


5014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
5017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 7985              		.loc 1 5018 10
 7986 0194 7B6B     		ldr	r3, [r7, #52]
5019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 7987              		.loc 1 5019 2
 7988 0196 1846     		mov	r0, r3
 7989 0198 3837     		adds	r7, r7, #56
 7990              	.LCFI311:
 7991              		.cfi_def_cfa_offset 8
 7992 019a BD46     		mov	sp, r7
 7993              	.LCFI312:
 7994              		.cfi_def_cfa_register 13
 7995              		@ sp needed
 7996 019c 80BD     		pop	{r7, pc}
 7997              	.L519:
 7998 019e 00BF     		.align	2
 7999              	.L518:
 8000 01a0 00000000 		.word	uxSchedulerSuspended
 8001 01a4 00000000 		.word	uxTopReadyPriority
 8002 01a8 00000000 		.word	pxReadyTasksLists
 8003 01ac 00000000 		.word	xPendingReadyList
 8004 01b0 00000000 		.word	pxCurrentTCB
 8005 01b4 00000000 		.word	xYieldPending
 8006              		.cfi_endproc
 8007              	.LFE64:
 8009              		.section	.text.vTaskNotifyGiveFromISR,"ax",%progbits
 8010              		.align	1
 8011              		.global	vTaskNotifyGiveFromISR
 8012              		.syntax unified
 8013              		.thumb
 8014              		.thumb_func
 8016              	vTaskNotifyGiveFromISR:
 8017              	.LFB65:
5020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
5022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
5023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
5025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskNotifyGiveFromISR( TaskHandle_t xTaskToNotify, BaseType_t *pxHigherPriorityTaskWoken )
5027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 8018              		.loc 1 5027 2
 8019              		.cfi_startproc
 8020              		@ args = 0, pretend = 0, frame = 40
 8021              		@ frame_needed = 1, uses_anonymous_args = 0
 8022 0000 80B5     		push	{r7, lr}
 8023              	.LCFI313:
 8024              		.cfi_def_cfa_offset 8
 8025              		.cfi_offset 7, -8
 8026              		.cfi_offset 14, -4
 8027 0002 8AB0     		sub	sp, sp, #40
 8028              	.LCFI314:
 8029              		.cfi_def_cfa_offset 48
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 234


 8030 0004 00AF     		add	r7, sp, #0
 8031              	.LCFI315:
 8032              		.cfi_def_cfa_register 7
 8033 0006 7860     		str	r0, [r7, #4]
 8034 0008 3960     		str	r1, [r7]
5028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
5029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
5030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
5031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToNotify );
 8035              		.loc 1 5032 3
 8036 000a 7B68     		ldr	r3, [r7, #4]
 8037 000c 002B     		cmp	r3, #0
 8038 000e 0AD1     		bne	.L521
 8039              	.LBB247:
 8040              	.LBB248:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 8041              		.loc 2 195 2
 8042              		.syntax unified
 8043              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 8044 0010 4FF05003 			mov r3, #80												
 8045 0014 83F31188 		msr basepri, r3											
 8046 0018 BFF36F8F 		isb														
 8047 001c BFF34F8F 		dsb														
 8048              	
 8049              	@ 0 "" 2
 8050              		.thumb
 8051              		.syntax unified
 8052 0020 BB61     		str	r3, [r7, #24]
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 8053              		.loc 2 203 1
 8054 0022 00BF     		nop
 8055              	.L522:
 8056              	.LBE248:
 8057              	.LBE247:
 8058              		.loc 1 5032 3 discriminator 1
 8059 0024 FEE7     		b	.L522
 8060              	.L521:
5033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
5035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
5036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
5037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
5038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
5039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
5040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
5041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
5042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
5043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
5044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
5045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
5046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
5047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
5048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
5049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
5050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8061              		.loc 1 5050 3
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 235


 8062 0026 FFF7FEFF 		bl	vPortValidateInterruptPriority
5051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
 8063              		.loc 1 5052 9
 8064 002a 7B68     		ldr	r3, [r7, #4]
 8065 002c 7B62     		str	r3, [r7, #36]
 8066              	.LBB249:
 8067              	.LBB250:
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 8068              		.loc 2 211 2
 8069              		.syntax unified
 8070              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 8071 002e EFF31182 			mrs r2, basepri											
 8072 0032 4FF05003 		mov r3, #80												
 8073 0036 83F31188 		msr basepri, r3											
 8074 003a BFF36F8F 		isb														
 8075 003e BFF34F8F 		dsb														
 8076              	
 8077              	@ 0 "" 2
 8078              		.thumb
 8079              		.syntax unified
 8080 0042 7A61     		str	r2, [r7, #20]
 8081 0044 3B61     		str	r3, [r7, #16]
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 8082              		.loc 2 223 9
 8083 0046 7B69     		ldr	r3, [r7, #20]
 8084              	.LBE250:
 8085              	.LBE249:
5053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 8086              		.loc 1 5054 28
 8087 0048 3B62     		str	r3, [r7, #32]
5055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
5056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
 8088              		.loc 1 5056 26
 8089 004a 7B6A     		ldr	r3, [r7, #36]
 8090 004c 93F86030 		ldrb	r3, [r3, #96]
 8091 0050 FB77     		strb	r3, [r7, #31]
5057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 8092              		.loc 1 5057 25
 8093 0052 7B6A     		ldr	r3, [r7, #36]
 8094 0054 0222     		movs	r2, #2
 8095 0056 83F86020 		strb	r2, [r3, #96]
5058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* 'Giving' is equivalent to incrementing a count in a counting
5060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			semaphore. */
5061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->ulNotifiedValue )++;
 8096              		.loc 1 5061 11
 8097 005a 7B6A     		ldr	r3, [r7, #36]
 8098 005c DB6D     		ldr	r3, [r3, #92]
 8099              		.loc 1 5061 30
 8100 005e 5A1C     		adds	r2, r3, #1
 8101 0060 7B6A     		ldr	r3, [r7, #36]
 8102 0062 DA65     		str	r2, [r3, #92]
5062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_GIVE_FROM_ISR();
5064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 236


5065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
5066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			notification then unblock it now. */
5067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
 8103              		.loc 1 5067 6
 8104 0064 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 8105 0066 012B     		cmp	r3, #1
 8106 0068 46D1     		bne	.L524
5068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task should not have been on an event list. */
5070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
 8107              		.loc 1 5070 5
 8108 006a 7B6A     		ldr	r3, [r7, #36]
 8109 006c 9B6A     		ldr	r3, [r3, #40]
 8110 006e 002B     		cmp	r3, #0
 8111 0070 0AD0     		beq	.L525
 8112              	.LBB251:
 8113              	.LBB252:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 8114              		.loc 2 195 2
 8115              		.syntax unified
 8116              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 8117 0072 4FF05003 			mov r3, #80												
 8118 0076 83F31188 		msr basepri, r3											
 8119 007a BFF36F8F 		isb														
 8120 007e BFF34F8F 		dsb														
 8121              	
 8122              	@ 0 "" 2
 8123              		.thumb
 8124              		.syntax unified
 8125 0082 FB60     		str	r3, [r7, #12]
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 8126              		.loc 2 203 1
 8127 0084 00BF     		nop
 8128              	.L526:
 8129              	.LBE252:
 8130              	.LBE251:
 8131              		.loc 1 5070 5 discriminator 2
 8132 0086 FEE7     		b	.L526
 8133              	.L525:
5071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8134              		.loc 1 5072 30
 8135 0088 204B     		ldr	r3, .L531
 8136 008a 1B68     		ldr	r3, [r3]
 8137              		.loc 1 5072 7
 8138 008c 002B     		cmp	r3, #0
 8139 008e 1DD1     		bne	.L527
5073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
5074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8140              		.loc 1 5074 15
 8141 0090 7B6A     		ldr	r3, [r7, #36]
 8142 0092 0433     		adds	r3, r3, #4
 8143 0094 1846     		mov	r0, r3
 8144 0096 FFF7FEFF 		bl	uxListRemove
5075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 8145              		.loc 1 5075 6
 8146 009a 7B6A     		ldr	r3, [r7, #36]
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 237


 8147 009c DA6A     		ldr	r2, [r3, #44]
 8148 009e 1C4B     		ldr	r3, .L531+4
 8149 00a0 1B68     		ldr	r3, [r3]
 8150 00a2 9A42     		cmp	r2, r3
 8151 00a4 03D9     		bls	.L528
 8152              		.loc 1 5075 6 is_stmt 0 discriminator 1
 8153 00a6 7B6A     		ldr	r3, [r7, #36]
 8154 00a8 DB6A     		ldr	r3, [r3, #44]
 8155 00aa 194A     		ldr	r2, .L531+4
 8156 00ac 1360     		str	r3, [r2]
 8157              	.L528:
 8158              		.loc 1 5075 6 discriminator 3
 8159 00ae 7B6A     		ldr	r3, [r7, #36]
 8160 00b0 DA6A     		ldr	r2, [r3, #44]
 8161 00b2 1346     		mov	r3, r2
 8162 00b4 9B00     		lsls	r3, r3, #2
 8163 00b6 1344     		add	r3, r3, r2
 8164 00b8 9B00     		lsls	r3, r3, #2
 8165 00ba 164A     		ldr	r2, .L531+8
 8166 00bc 1A44     		add	r2, r2, r3
 8167 00be 7B6A     		ldr	r3, [r7, #36]
 8168 00c0 0433     		adds	r3, r3, #4
 8169 00c2 1946     		mov	r1, r3
 8170 00c4 1046     		mov	r0, r2
 8171 00c6 FFF7FEFF 		bl	vListInsertEnd
 8172 00ca 05E0     		b	.L529
 8173              	.L527:
5076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
5077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
5078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
5079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed and ready lists cannot be accessed, so hold
5080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					this task pending until the scheduler is resumed. */
5081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
 8174              		.loc 1 5081 6 is_stmt 1
 8175 00cc 7B6A     		ldr	r3, [r7, #36]
 8176 00ce 1833     		adds	r3, r3, #24
 8177 00d0 1946     		mov	r1, r3
 8178 00d2 1148     		ldr	r0, .L531+12
 8179 00d4 FFF7FEFF 		bl	vListInsertEnd
 8180              	.L529:
5082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
5083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
 8181              		.loc 1 5084 14
 8182 00d8 7B6A     		ldr	r3, [r7, #36]
 8183 00da DA6A     		ldr	r2, [r3, #44]
 8184              		.loc 1 5084 41
 8185 00dc 0F4B     		ldr	r3, .L531+16
 8186 00de 1B68     		ldr	r3, [r3]
 8187 00e0 DB6A     		ldr	r3, [r3, #44]
 8188              		.loc 1 5084 7
 8189 00e2 9A42     		cmp	r2, r3
 8190 00e4 08D9     		bls	.L524
5085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
5086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The notified task has a priority above the currently
5087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					executing task so a yield is required. */
5088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxHigherPriorityTaskWoken != NULL )
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 238


 8191              		.loc 1 5088 8
 8192 00e6 3B68     		ldr	r3, [r7]
 8193 00e8 002B     		cmp	r3, #0
 8194 00ea 02D0     		beq	.L530
5089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
5090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						*pxHigherPriorityTaskWoken = pdTRUE;
 8195              		.loc 1 5090 34
 8196 00ec 3B68     		ldr	r3, [r7]
 8197 00ee 0122     		movs	r2, #1
 8198 00f0 1A60     		str	r2, [r3]
 8199              	.L530:
5091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
5092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Mark that a yield is pending in case the user is not
5094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					using the "xHigherPriorityTaskWoken" parameter in an ISR
5095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					safe FreeRTOS function. */
5096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xYieldPending = pdTRUE;
 8200              		.loc 1 5096 20
 8201 00f2 0B4B     		ldr	r3, .L531+20
 8202 00f4 0122     		movs	r2, #1
 8203 00f6 1A60     		str	r2, [r3]
 8204              	.L524:
 8205 00f8 3B6A     		ldr	r3, [r7, #32]
 8206 00fa BB60     		str	r3, [r7, #8]
 8207              	.LBB253:
 8208              	.LBB254:
 229:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 8209              		.loc 2 229 2
 8210 00fc BB68     		ldr	r3, [r7, #8]
 8211              		.syntax unified
 8212              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 8213 00fe 83F31188 			msr basepri, r3	
 8214              	@ 0 "" 2
 8215              		.loc 2 233 1
 8216              		.thumb
 8217              		.syntax unified
 8218 0102 00BF     		nop
 8219              	.LBE254:
 8220              	.LBE253:
5097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
5098:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
5099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
5100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
5101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
5102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
5105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 8221              		.loc 1 5105 2
 8222 0104 00BF     		nop
 8223 0106 2837     		adds	r7, r7, #40
 8224              	.LCFI316:
 8225              		.cfi_def_cfa_offset 8
 8226 0108 BD46     		mov	sp, r7
 8227              	.LCFI317:
 8228              		.cfi_def_cfa_register 13
 8229              		@ sp needed
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 239


 8230 010a 80BD     		pop	{r7, pc}
 8231              	.L532:
 8232              		.align	2
 8233              	.L531:
 8234 010c 00000000 		.word	uxSchedulerSuspended
 8235 0110 00000000 		.word	uxTopReadyPriority
 8236 0114 00000000 		.word	pxReadyTasksLists
 8237 0118 00000000 		.word	xPendingReadyList
 8238 011c 00000000 		.word	pxCurrentTCB
 8239 0120 00000000 		.word	xYieldPending
 8240              		.cfi_endproc
 8241              	.LFE65:
 8243              		.section	.text.xTaskNotifyStateClear,"ax",%progbits
 8244              		.align	1
 8245              		.global	xTaskNotifyStateClear
 8246              		.syntax unified
 8247              		.thumb
 8248              		.thumb_func
 8250              	xTaskNotifyStateClear:
 8251              	.LFB66:
5106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
5108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
5109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
5111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskNotifyStateClear( TaskHandle_t xTask )
5113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 8252              		.loc 1 5113 2
 8253              		.cfi_startproc
 8254              		@ args = 0, pretend = 0, frame = 16
 8255              		@ frame_needed = 1, uses_anonymous_args = 0
 8256 0000 80B5     		push	{r7, lr}
 8257              	.LCFI318:
 8258              		.cfi_def_cfa_offset 8
 8259              		.cfi_offset 7, -8
 8260              		.cfi_offset 14, -4
 8261 0002 84B0     		sub	sp, sp, #16
 8262              	.LCFI319:
 8263              		.cfi_def_cfa_offset 24
 8264 0004 00AF     		add	r7, sp, #0
 8265              	.LCFI320:
 8266              		.cfi_def_cfa_register 7
 8267 0006 7860     		str	r0, [r7, #4]
5114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
5115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
5116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If null is passed in here then it is the calling task that is having
5118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		its notification state cleared. */
5119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
 8268              		.loc 1 5119 11
 8269 0008 7B68     		ldr	r3, [r7, #4]
 8270 000a 002B     		cmp	r3, #0
 8271 000c 02D1     		bne	.L534
 8272              		.loc 1 5119 11 is_stmt 0 discriminator 1
 8273 000e 0E4B     		ldr	r3, .L539
 8274 0010 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 240


 8275 0012 00E0     		b	.L535
 8276              	.L534:
 8277              		.loc 1 5119 11 discriminator 2
 8278 0014 7B68     		ldr	r3, [r7, #4]
 8279              	.L535:
 8280              		.loc 1 5119 9 is_stmt 1 discriminator 4
 8281 0016 BB60     		str	r3, [r7, #8]
5120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
 8282              		.loc 1 5121 3 discriminator 4
 8283 0018 FFF7FEFF 		bl	vPortEnterCritical
5122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
5123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->ucNotifyState == taskNOTIFICATION_RECEIVED )
 8284              		.loc 1 5123 13 discriminator 4
 8285 001c BB68     		ldr	r3, [r7, #8]
 8286 001e 93F86030 		ldrb	r3, [r3, #96]
 8287 0022 DBB2     		uxtb	r3, r3
 8288              		.loc 1 5123 6 discriminator 4
 8289 0024 022B     		cmp	r3, #2
 8290 0026 06D1     		bne	.L536
5124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 8291              		.loc 1 5125 26
 8292 0028 BB68     		ldr	r3, [r7, #8]
 8293 002a 0022     		movs	r2, #0
 8294 002c 83F86020 		strb	r2, [r3, #96]
5126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
 8295              		.loc 1 5126 13
 8296 0030 0123     		movs	r3, #1
 8297 0032 FB60     		str	r3, [r7, #12]
 8298 0034 01E0     		b	.L537
 8299              	.L536:
5127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
5129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdFAIL;
 8300              		.loc 1 5130 13
 8301 0036 0023     		movs	r3, #0
 8302 0038 FB60     		str	r3, [r7, #12]
 8303              	.L537:
5131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
 8304              		.loc 1 5133 3
 8305 003a FFF7FEFF 		bl	vPortExitCritical
5134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 8306              		.loc 1 5135 10
 8307 003e FB68     		ldr	r3, [r7, #12]
5136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 8308              		.loc 1 5136 2
 8309 0040 1846     		mov	r0, r3
 8310 0042 1037     		adds	r7, r7, #16
 8311              	.LCFI321:
 8312              		.cfi_def_cfa_offset 8
 8313 0044 BD46     		mov	sp, r7
 8314              	.LCFI322:
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 241


 8315              		.cfi_def_cfa_register 13
 8316              		@ sp needed
 8317 0046 80BD     		pop	{r7, pc}
 8318              	.L540:
 8319              		.align	2
 8320              	.L539:
 8321 0048 00000000 		.word	pxCurrentTCB
 8322              		.cfi_endproc
 8323              	.LFE66:
 8325              		.section	.text.ulTaskNotifyValueClear,"ax",%progbits
 8326              		.align	1
 8327              		.global	ulTaskNotifyValueClear
 8328              		.syntax unified
 8329              		.thumb
 8330              		.thumb_func
 8332              	ulTaskNotifyValueClear:
 8333              	.LFB67:
5137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
5139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
5140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
5142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulTaskNotifyValueClear( TaskHandle_t xTask, uint32_t ulBitsToClear )
5144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 8334              		.loc 1 5144 2
 8335              		.cfi_startproc
 8336              		@ args = 0, pretend = 0, frame = 16
 8337              		@ frame_needed = 1, uses_anonymous_args = 0
 8338 0000 80B5     		push	{r7, lr}
 8339              	.LCFI323:
 8340              		.cfi_def_cfa_offset 8
 8341              		.cfi_offset 7, -8
 8342              		.cfi_offset 14, -4
 8343 0002 84B0     		sub	sp, sp, #16
 8344              	.LCFI324:
 8345              		.cfi_def_cfa_offset 24
 8346 0004 00AF     		add	r7, sp, #0
 8347              	.LCFI325:
 8348              		.cfi_def_cfa_register 7
 8349 0006 7860     		str	r0, [r7, #4]
 8350 0008 3960     		str	r1, [r7]
5145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
5146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulReturn;
5147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If null is passed in here then it is the calling task that is having
5149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		its notification state cleared. */
5150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
 8351              		.loc 1 5150 11
 8352 000a 7B68     		ldr	r3, [r7, #4]
 8353 000c 002B     		cmp	r3, #0
 8354 000e 02D1     		bne	.L542
 8355              		.loc 1 5150 11 is_stmt 0 discriminator 1
 8356 0010 0C4B     		ldr	r3, .L545
 8357 0012 1B68     		ldr	r3, [r3]
 8358 0014 00E0     		b	.L543
 8359              	.L542:
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 242


 8360              		.loc 1 5150 11 discriminator 2
 8361 0016 7B68     		ldr	r3, [r7, #4]
 8362              	.L543:
 8363              		.loc 1 5150 9 is_stmt 1 discriminator 4
 8364 0018 FB60     		str	r3, [r7, #12]
5151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
 8365              		.loc 1 5152 3 discriminator 4
 8366 001a FFF7FEFF 		bl	vPortEnterCritical
5153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
5154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Return the notification as it was before the bits were cleared,
5155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			then clear the bit mask. */
5156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulReturn = pxCurrentTCB->ulNotifiedValue;
 8367              		.loc 1 5156 27 discriminator 4
 8368 001e 094B     		ldr	r3, .L545
 8369 0020 1B68     		ldr	r3, [r3]
 8370              		.loc 1 5156 13 discriminator 4
 8371 0022 DB6D     		ldr	r3, [r3, #92]
 8372 0024 BB60     		str	r3, [r7, #8]
5157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ulNotifiedValue &= ~ulBitsToClear;
 8373              		.loc 1 5157 27 discriminator 4
 8374 0026 FB68     		ldr	r3, [r7, #12]
 8375 0028 DA6D     		ldr	r2, [r3, #92]
 8376              		.loc 1 5157 30 discriminator 4
 8377 002a 3B68     		ldr	r3, [r7]
 8378 002c DB43     		mvns	r3, r3
 8379              		.loc 1 5157 27 discriminator 4
 8380 002e 1A40     		ands	r2, r2, r3
 8381 0030 FB68     		ldr	r3, [r7, #12]
 8382 0032 DA65     		str	r2, [r3, #92]
5158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
 8383              		.loc 1 5159 3 discriminator 4
 8384 0034 FFF7FEFF 		bl	vPortExitCritical
5160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return ulReturn;
 8385              		.loc 1 5161 10 discriminator 4
 8386 0038 BB68     		ldr	r3, [r7, #8]
5162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 8387              		.loc 1 5162 2 discriminator 4
 8388 003a 1846     		mov	r0, r3
 8389 003c 1037     		adds	r7, r7, #16
 8390              	.LCFI326:
 8391              		.cfi_def_cfa_offset 8
 8392 003e BD46     		mov	sp, r7
 8393              	.LCFI327:
 8394              		.cfi_def_cfa_register 13
 8395              		@ sp needed
 8396 0040 80BD     		pop	{r7, pc}
 8397              	.L546:
 8398 0042 00BF     		.align	2
 8399              	.L545:
 8400 0044 00000000 		.word	pxCurrentTCB
 8401              		.cfi_endproc
 8402              	.LFE67:
 8404              		.section	.text.prvAddCurrentTaskToDelayedList,"ax",%progbits
 8405              		.align	1
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 243


 8406              		.syntax unified
 8407              		.thumb
 8408              		.thumb_func
 8410              	prvAddCurrentTaskToDelayedList:
 8411              	.LFB68:
5163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
5165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
5166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( INCLUDE_xTaskGetIdleTaskHandle == 1 ) )
5168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulTaskGetIdleRunTimeCounter( void )
5170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xIdleTaskHandle->ulRunTimeCounter;
5172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
5175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
5176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockInde
5178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 8412              		.loc 1 5178 1
 8413              		.cfi_startproc
 8414              		@ args = 0, pretend = 0, frame = 16
 8415              		@ frame_needed = 1, uses_anonymous_args = 0
 8416 0000 80B5     		push	{r7, lr}
 8417              	.LCFI328:
 8418              		.cfi_def_cfa_offset 8
 8419              		.cfi_offset 7, -8
 8420              		.cfi_offset 14, -4
 8421 0002 84B0     		sub	sp, sp, #16
 8422              	.LCFI329:
 8423              		.cfi_def_cfa_offset 24
 8424 0004 00AF     		add	r7, sp, #0
 8425              	.LCFI330:
 8426              		.cfi_def_cfa_register 7
 8427 0006 7860     		str	r0, [r7, #4]
 8428 0008 3960     		str	r1, [r7]
5179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTimeToWake;
5180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** const TickType_t xConstTickCount = xTickCount;
 8429              		.loc 1 5180 18
 8430 000a 214B     		ldr	r3, .L552
 8431 000c 1B68     		ldr	r3, [r3]
 8432 000e FB60     		str	r3, [r7, #12]
5181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
5183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* About to enter a delayed list, so ensure the ucDelayAborted flag is
5185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		reset to pdFALSE so it can be detected as having been set to pdTRUE
5186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		when the task leaves the Blocked state. */
5187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxCurrentTCB->ucDelayAborted = pdFALSE;
5188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
5190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Remove the task from the ready list before adding it to the blocked list
5192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	as the same list item is used for both lists. */
5193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 244


 8433              		.loc 1 5193 35
 8434 0010 204B     		ldr	r3, .L552+4
 8435 0012 1B68     		ldr	r3, [r3]
 8436              		.loc 1 5193 6
 8437 0014 0433     		adds	r3, r3, #4
 8438 0016 1846     		mov	r0, r3
 8439 0018 FFF7FEFF 		bl	uxListRemove
5194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The current task must be in a ready list, so there is no need to
5196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		check, and the port reset macro can be called directly. */
5197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portRESET_READY_PRIORITY( pxCurrentTCB->uxPriority, uxTopReadyPriority ); /*lint !e931 pxCurrentT
5198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
5200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
5202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskSuspend == 1 )
5205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 8440              		.loc 1 5206 5
 8441 001c 7B68     		ldr	r3, [r7, #4]
 8442 001e B3F1FF3F 		cmp	r3, #-1
 8443 0022 0AD1     		bne	.L548
 8444              		.loc 1 5206 41 discriminator 1
 8445 0024 3B68     		ldr	r3, [r7]
 8446 0026 002B     		cmp	r3, #0
 8447 0028 07D0     		beq	.L548
5207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
5208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Add the task to the suspended task list instead of a delayed task
5209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			list to ensure it is not woken by a timing event.  It will block
5210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			indefinitely. */
5211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8448              		.loc 1 5211 56
 8449 002a 1A4B     		ldr	r3, .L552+4
 8450 002c 1B68     		ldr	r3, [r3]
 8451              		.loc 1 5211 4
 8452 002e 0433     		adds	r3, r3, #4
 8453 0030 1946     		mov	r1, r3
 8454 0032 1948     		ldr	r0, .L552+8
 8455 0034 FFF7FEFF 		bl	vListInsertEnd
5212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
5214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
5215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Calculate the time at which the task should be woken if the event
5216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			does not occur.  This may overflow but this doesn't matter, the
5217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			kernel will manage it correctly. */
5218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTimeToWake = xConstTickCount + xTicksToWait;
5219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The list item will be inserted in wake time order. */
5221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
5222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xTimeToWake < xConstTickCount )
5224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Wake time has overflowed.  Place this item in the overflow
5226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				list. */
5227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 245


5228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
5230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The wake time has not overflowed, so the current block list
5232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				is used. */
5233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
5234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the task entering the blocked state was placed at the
5236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				head of the list of blocked tasks then xNextTaskUnblockTime
5237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				needs to be updated too. */
5238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xTimeToWake < xNextTaskUnblockTime )
5239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
5240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime = xTimeToWake;
5241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
5242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
5243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
5244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
5245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
5246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else /* INCLUDE_vTaskSuspend */
5250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Calculate the time at which the task should be woken if the event
5252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		does not occur.  This may overflow but this doesn't matter, the kernel
5253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		will manage it correctly. */
5254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTimeToWake = xConstTickCount + xTicksToWait;
5255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The list item will be inserted in wake time order. */
5257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
5258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTimeToWake < xConstTickCount )
5260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
5261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Wake time has overflowed.  Place this item in the overflow list. */
5262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
5263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
5265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
5266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The wake time has not overflowed, so the current block list is used. */
5267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
5268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task entering the blocked state was placed at the head of the
5270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			list of blocked tasks then xNextTaskUnblockTime needs to be updated
5271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			too. */
5272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xTimeToWake < xNextTaskUnblockTime )
5273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xNextTaskUnblockTime = xTimeToWake;
5275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
5277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
5279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
5283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xCanBlockIndefinitely;
5284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 246


5285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskSuspend */
5286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 8456              		.loc 1 5286 1
 8457 0038 26E0     		b	.L551
 8458              	.L548:
5218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 8459              		.loc 1 5218 16
 8460 003a FA68     		ldr	r2, [r7, #12]
 8461 003c 7B68     		ldr	r3, [r7, #4]
 8462 003e 1344     		add	r3, r3, r2
 8463 0040 BB60     		str	r3, [r7, #8]
5221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 8464              		.loc 1 5221 4
 8465 0042 144B     		ldr	r3, .L552+4
 8466 0044 1B68     		ldr	r3, [r3]
 8467 0046 BA68     		ldr	r2, [r7, #8]
 8468 0048 5A60     		str	r2, [r3, #4]
5223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 8469              		.loc 1 5223 6
 8470 004a BA68     		ldr	r2, [r7, #8]
 8471 004c FB68     		ldr	r3, [r7, #12]
 8472 004e 9A42     		cmp	r2, r3
 8473 0050 09D2     		bcs	.L550
5227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 8474              		.loc 1 5227 5
 8475 0052 124B     		ldr	r3, .L552+12
 8476 0054 1A68     		ldr	r2, [r3]
5227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 8477              		.loc 1 5227 60
 8478 0056 0F4B     		ldr	r3, .L552+4
 8479 0058 1B68     		ldr	r3, [r3]
5227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 8480              		.loc 1 5227 5
 8481 005a 0433     		adds	r3, r3, #4
 8482 005c 1946     		mov	r1, r3
 8483 005e 1046     		mov	r0, r2
 8484 0060 FFF7FEFF 		bl	vListInsert
 8485              		.loc 1 5286 1
 8486 0064 10E0     		b	.L551
 8487              	.L550:
5233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 8488              		.loc 1 5233 5
 8489 0066 0E4B     		ldr	r3, .L552+16
 8490 0068 1A68     		ldr	r2, [r3]
5233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 8491              		.loc 1 5233 52
 8492 006a 0A4B     		ldr	r3, .L552+4
 8493 006c 1B68     		ldr	r3, [r3]
5233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 8494              		.loc 1 5233 5
 8495 006e 0433     		adds	r3, r3, #4
 8496 0070 1946     		mov	r1, r3
 8497 0072 1046     		mov	r0, r2
 8498 0074 FFF7FEFF 		bl	vListInsert
5238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 8499              		.loc 1 5238 21
 8500 0078 0A4B     		ldr	r3, .L552+20
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 247


 8501 007a 1B68     		ldr	r3, [r3]
5238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 8502              		.loc 1 5238 7
 8503 007c BA68     		ldr	r2, [r7, #8]
 8504 007e 9A42     		cmp	r2, r3
 8505 0080 02D2     		bcs	.L551
5240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 8506              		.loc 1 5240 27
 8507 0082 084A     		ldr	r2, .L552+20
 8508 0084 BB68     		ldr	r3, [r7, #8]
 8509 0086 1360     		str	r3, [r2]
 8510              	.L551:
 8511              		.loc 1 5286 1
 8512 0088 00BF     		nop
 8513 008a 1037     		adds	r7, r7, #16
 8514              	.LCFI331:
 8515              		.cfi_def_cfa_offset 8
 8516 008c BD46     		mov	sp, r7
 8517              	.LCFI332:
 8518              		.cfi_def_cfa_register 13
 8519              		@ sp needed
 8520 008e 80BD     		pop	{r7, pc}
 8521              	.L553:
 8522              		.align	2
 8523              	.L552:
 8524 0090 00000000 		.word	xTickCount
 8525 0094 00000000 		.word	pxCurrentTCB
 8526 0098 00000000 		.word	xSuspendedTaskList
 8527 009c 00000000 		.word	pxOverflowDelayedTaskList
 8528 00a0 00000000 		.word	pxDelayedTaskList
 8529 00a4 00000000 		.word	xNextTaskUnblockTime
 8530              		.cfi_endproc
 8531              	.LFE68:
 8533              		.text
 8534              	.Letext0:
 8535              		.file 3 "c:\\arm-gcc\\arm-gnu-toolchain-11.3.rel1-mingw-w64-i686-arm-none-eabi\\lib\\gcc\\arm-none
 8536              		.file 4 "c:\\arm-gcc\\arm-gnu-toolchain-11.3.rel1-mingw-w64-i686-arm-none-eabi\\arm-none-eabi\\inc
 8537              		.file 5 "c:\\arm-gcc\\arm-gnu-toolchain-11.3.rel1-mingw-w64-i686-arm-none-eabi\\arm-none-eabi\\inc
 8538              		.file 6 "Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h"
 8539              		.file 7 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 8540              		.file 8 "Middlewares/Third_Party/FreeRTOS/Source/include/list.h"
 8541              		.file 9 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 8542              		.file 10 "Middlewares/Third_Party/FreeRTOS/Source/include/portable.h"
 8543              		.file 11 "Middlewares/Third_Party/FreeRTOS/Source/include/timers.h"
 8544              		.file 12 "c:\\arm-gcc\\arm-gnu-toolchain-11.3.rel1-mingw-w64-i686-arm-none-eabi\\arm-none-eabi\\in
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 248


DEFINED SYMBOLS
                            *ABS*:00000000 tasks.c
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:24     .bss.pxCurrentTCB:00000000 pxCurrentTCB
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:21     .bss.pxCurrentTCB:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:27     .bss.pxReadyTasksLists:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:30     .bss.pxReadyTasksLists:00000000 pxReadyTasksLists
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:33     .bss.xDelayedTaskList1:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:36     .bss.xDelayedTaskList1:00000000 xDelayedTaskList1
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:39     .bss.xDelayedTaskList2:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:42     .bss.xDelayedTaskList2:00000000 xDelayedTaskList2
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:45     .bss.pxDelayedTaskList:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:48     .bss.pxDelayedTaskList:00000000 pxDelayedTaskList
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:51     .bss.pxOverflowDelayedTaskList:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:54     .bss.pxOverflowDelayedTaskList:00000000 pxOverflowDelayedTaskList
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:57     .bss.xPendingReadyList:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:60     .bss.xPendingReadyList:00000000 xPendingReadyList
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:63     .bss.xTasksWaitingTermination:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:66     .bss.xTasksWaitingTermination:00000000 xTasksWaitingTermination
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:69     .bss.uxDeletedTasksWaitingCleanUp:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:72     .bss.uxDeletedTasksWaitingCleanUp:00000000 uxDeletedTasksWaitingCleanUp
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:75     .bss.xSuspendedTaskList:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:78     .bss.xSuspendedTaskList:00000000 xSuspendedTaskList
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:81     .bss.uxCurrentNumberOfTasks:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:84     .bss.uxCurrentNumberOfTasks:00000000 uxCurrentNumberOfTasks
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:87     .bss.xTickCount:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:90     .bss.xTickCount:00000000 xTickCount
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:93     .bss.uxTopReadyPriority:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:96     .bss.uxTopReadyPriority:00000000 uxTopReadyPriority
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:99     .bss.xSchedulerRunning:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:102    .bss.xSchedulerRunning:00000000 xSchedulerRunning
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:105    .bss.xPendedTicks:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:108    .bss.xPendedTicks:00000000 xPendedTicks
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:111    .bss.xYieldPending:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:114    .bss.xYieldPending:00000000 xYieldPending
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:117    .bss.xNumOfOverflows:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:120    .bss.xNumOfOverflows:00000000 xNumOfOverflows
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:123    .bss.uxTaskNumber:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:126    .bss.uxTaskNumber:00000000 uxTaskNumber
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:129    .bss.xNextTaskUnblockTime:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:132    .bss.xNextTaskUnblockTime:00000000 xNextTaskUnblockTime
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:135    .bss.xIdleTaskHandle:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:138    .bss.xIdleTaskHandle:00000000 xIdleTaskHandle
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:141    .bss.uxSchedulerSuspended:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:144    .bss.uxSchedulerSuspended:00000000 uxSchedulerSuspended
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:147    .bss.ulTaskSwitchedInTime:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:150    .bss.ulTaskSwitchedInTime:00000000 ulTaskSwitchedInTime
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:153    .bss.ulTotalRunTime:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:156    .bss.ulTotalRunTime:00000000 ulTotalRunTime
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:159    .text.xTaskCreateStatic:00000000 $t
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:165    .text.xTaskCreateStatic:00000000 xTaskCreateStatic
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:450    .text.prvInitialiseNewTask:00000000 prvInitialiseNewTask
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:675    .text.prvAddNewTaskToReadyList:00000000 prvAddNewTaskToReadyList
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:331    .text.xTaskCreate:00000000 $t
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:337    .text.xTaskCreate:00000000 xTaskCreate
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:445    .text.prvInitialiseNewTask:00000000 $t
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:670    .text.prvAddNewTaskToReadyList:00000000 $t
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:5535   .text.prvInitialiseTaskLists:00000000 prvInitialiseTaskLists
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 249


C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:825    .text.prvAddNewTaskToReadyList:000000c4 $d
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:836    .text.vTaskDelete:00000000 $t
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:842    .text.vTaskDelete:00000000 vTaskDelete
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:6156   .text.prvDeleteTCB:00000000 prvDeleteTCB
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:6250   .text.prvResetNextTaskUnblockTime:00000000 prvResetNextTaskUnblockTime
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:1001   .text.vTaskDelete:000000c4 $d
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:1013   .text.vTaskDelayUntil:00000000 $t
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:1019   .text.vTaskDelayUntil:00000000 vTaskDelayUntil
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:2800   .text.vTaskSuspendAll:00000000 vTaskSuspendAll
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:8410   .text.prvAddCurrentTaskToDelayedList:00000000 prvAddCurrentTaskToDelayedList
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:2950   .text.xTaskResumeAll:00000000 xTaskResumeAll
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:1226   .text.vTaskDelayUntil:000000f0 $d
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:1233   .text.vTaskDelay:00000000 $t
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:1239   .text.vTaskDelay:00000000 vTaskDelay
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:1332   .text.vTaskDelay:00000060 $d
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:1338   .text.eTaskGetState:00000000 $t
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:1344   .text.eTaskGetState:00000000 eTaskGetState
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:1502   .text.eTaskGetState:000000b8 $d
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:1511   .text.uxTaskPriorityGet:00000000 $t
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:1517   .text.uxTaskPriorityGet:00000000 uxTaskPriorityGet
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:1572   .text.uxTaskPriorityGet:00000030 $d
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:1577   .text.uxTaskPriorityGetFromISR:00000000 $t
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:1583   .text.uxTaskPriorityGetFromISR:00000000 uxTaskPriorityGetFromISR
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:1674   .text.uxTaskPriorityGetFromISR:00000054 $d
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:1679   .text.vTaskPrioritySet:00000000 $t
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:1685   .text.vTaskPrioritySet:00000000 vTaskPrioritySet
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:1915   .text.vTaskPrioritySet:0000012c $d
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:1923   .text.vTaskSuspend:00000000 $t
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:1929   .text.vTaskSuspend:00000000 vTaskSuspend
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:4060   .text.vTaskSwitchContext:00000000 vTaskSwitchContext
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:2101   .text.vTaskSuspend:000000d4 $d
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:2111   .text.prvTaskIsTaskSuspended:00000000 $t
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:2116   .text.prvTaskIsTaskSuspended:00000000 prvTaskIsTaskSuspended
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:2209   .text.prvTaskIsTaskSuspended:0000005c $d
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:2215   .text.vTaskResume:00000000 $t
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:2221   .text.vTaskResume:00000000 vTaskResume
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:2360   .text.vTaskResume:000000ac $d
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:2368   .text.xTaskResumeFromISR:00000000 $t
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:2374   .text.xTaskResumeFromISR:00000000 xTaskResumeFromISR
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:2547   .text.xTaskResumeFromISR:000000d0 $d
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:2556   .rodata:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:2560   .text.vTaskStartScheduler:00000000 $t
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:2566   .text.vTaskStartScheduler:00000000 vTaskStartScheduler
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:2719   .text.vTaskStartScheduler:000000b8 $d
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:5330   .text.prvIdleTask:00000000 prvIdleTask
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:2729   .text.vTaskEndScheduler:00000000 $t
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:2735   .text.vTaskEndScheduler:00000000 vTaskEndScheduler
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:2789   .text.vTaskEndScheduler:0000002c $d
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:2794   .text.vTaskSuspendAll:00000000 $t
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:2835   .text.vTaskSuspendAll:00000018 $d
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:2840   .text.prvGetExpectedIdleTime:00000000 $t
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:2845   .text.prvGetExpectedIdleTime:00000000 prvGetExpectedIdleTime
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:2935   .text.prvGetExpectedIdleTime:0000005c $d
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:2944   .text.xTaskResumeAll:00000000 $t
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:3793   .text.xTaskIncrementTick:00000000 xTaskIncrementTick
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:3169   .text.xTaskResumeAll:00000118 $d
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:3182   .text.xTaskGetTickCount:00000000 $t
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 250


C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:3188   .text.xTaskGetTickCount:00000000 xTaskGetTickCount
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:3228   .text.xTaskGetTickCount:0000001c $d
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:3233   .text.xTaskGetTickCountFromISR:00000000 $t
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:3239   .text.xTaskGetTickCountFromISR:00000000 xTaskGetTickCountFromISR
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:3280   .text.xTaskGetTickCountFromISR:00000020 $d
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:3285   .text.uxTaskGetNumberOfTasks:00000000 $t
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:3291   .text.uxTaskGetNumberOfTasks:00000000 uxTaskGetNumberOfTasks
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:3322   .text.uxTaskGetNumberOfTasks:00000014 $d
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:3327   .text.pcTaskGetName:00000000 $t
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:3333   .text.pcTaskGetName:00000000 pcTaskGetName
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:3411   .text.pcTaskGetName:00000044 $d
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:3416   .text.uxTaskGetSystemState:00000000 $t
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:3422   .text.uxTaskGetSystemState:00000000 uxTaskGetSystemState
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:5887   .text.prvListTasksWithinSingleList:00000000 prvListTasksWithinSingleList
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:3605   .text.uxTaskGetSystemState:00000108 $d
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:3615   .text.vTaskStepTick:00000000 $t
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:3621   .text.vTaskStepTick:00000000 vTaskStepTick
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:3694   .text.vTaskStepTick:00000048 $d
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:3700   .text.xTaskCatchUpTicks:00000000 $t
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:3706   .text.xTaskCatchUpTicks:00000000 xTaskCatchUpTicks
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:3781   .text.xTaskCatchUpTicks:0000004c $d
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:3787   .text.xTaskIncrementTick:00000000 $t
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:4039   .text.xTaskIncrementTick:00000148 $d
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:4054   .text.vTaskSwitchContext:00000000 $t
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:4232   .text.vTaskSwitchContext:000000d8 $d
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:4243   .text.vTaskPlaceOnEventList:00000000 $t
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:4249   .text.vTaskPlaceOnEventList:00000000 vTaskPlaceOnEventList
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:4319   .text.vTaskPlaceOnEventList:00000044 $d
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:4324   .text.vTaskPlaceOnUnorderedEventList:00000000 $t
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:4330   .text.vTaskPlaceOnUnorderedEventList:00000000 vTaskPlaceOnUnorderedEventList
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:4434   .text.vTaskPlaceOnUnorderedEventList:00000070 $d
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:4440   .text.vTaskPlaceOnEventListRestricted:00000000 $t
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:4446   .text.vTaskPlaceOnEventListRestricted:00000000 vTaskPlaceOnEventListRestricted
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:4525   .text.vTaskPlaceOnEventListRestricted:00000054 $d
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:4530   .text.xTaskRemoveFromEventList:00000000 $t
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:4536   .text.xTaskRemoveFromEventList:00000000 xTaskRemoveFromEventList
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:4678   .text.xTaskRemoveFromEventList:000000b4 $d
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:4688   .text.vTaskRemoveFromUnorderedEventList:00000000 $t
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:4694   .text.vTaskRemoveFromUnorderedEventList:00000000 vTaskRemoveFromUnorderedEventList
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:4840   .text.vTaskRemoveFromUnorderedEventList:000000b4 $d
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:4849   .text.vTaskSetTimeOutState:00000000 $t
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:4855   .text.vTaskSetTimeOutState:00000000 vTaskSetTimeOutState
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:4926   .text.vTaskSetTimeOutState:00000044 $d
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:4932   .text.vTaskInternalSetTimeOutState:00000000 $t
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:4938   .text.vTaskInternalSetTimeOutState:00000000 vTaskInternalSetTimeOutState
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:4983   .text.vTaskInternalSetTimeOutState:00000024 $d
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:4989   .text.xTaskCheckForTimeOut:00000000 $t
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:4995   .text.xTaskCheckForTimeOut:00000000 xTaskCheckForTimeOut
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:5160   .text.xTaskCheckForTimeOut:000000bc $d
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:5166   .text.vTaskMissedYield:00000000 $t
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:5172   .text.vTaskMissedYield:00000000 vTaskMissedYield
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:5204   .text.vTaskMissedYield:00000014 $d
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:5209   .text.uxTaskGetTaskNumber:00000000 $t
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:5215   .text.uxTaskGetTaskNumber:00000000 uxTaskGetTaskNumber
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:5270   .text.vTaskSetTaskNumber:00000000 $t
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:5276   .text.vTaskSetTaskNumber:00000000 vTaskSetTaskNumber
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:5325   .text.prvIdleTask:00000000 $t
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 251


C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:5630   .text.prvCheckTasksWaitingTermination:00000000 prvCheckTasksWaitingTermination
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:5429   .text.prvIdleTask:00000070 $d
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:5437   .text.eTaskConfirmSleepModeStatus:00000000 $t
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:5443   .text.eTaskConfirmSleepModeStatus:00000000 eTaskConfirmSleepModeStatus
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:5522   .text.eTaskConfirmSleepModeStatus:0000004c $d
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:5530   .text.prvInitialiseTaskLists:00000000 $t
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:5613   .text.prvInitialiseTaskLists:00000060 $d
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:5625   .text.prvCheckTasksWaitingTermination:00000000 $t
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:5702   .text.prvCheckTasksWaitingTermination:00000050 $d
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:5709   .text.vTaskGetInfo:00000000 $t
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:5715   .text.vTaskGetInfo:00000000 vTaskGetInfo
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:6019   .text.prvTaskCheckFreeStackSpace:00000000 prvTaskCheckFreeStackSpace
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:5877   .text.vTaskGetInfo:000000c8 $d
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:5882   .text.prvListTasksWithinSingleList:00000000 $t
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:6014   .text.prvTaskCheckFreeStackSpace:00000000 $t
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:6083   .text.uxTaskGetStackHighWaterMark:00000000 $t
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:6089   .text.uxTaskGetStackHighWaterMark:00000000 uxTaskGetStackHighWaterMark
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:6146   .text.uxTaskGetStackHighWaterMark:00000034 $d
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:6151   .text.prvDeleteTCB:00000000 $t
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:6245   .text.prvResetNextTaskUnblockTime:00000000 $t
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:6312   .text.prvResetNextTaskUnblockTime:00000038 $d
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:6318   .text.xTaskGetCurrentTaskHandle:00000000 $t
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:6324   .text.xTaskGetCurrentTaskHandle:00000000 xTaskGetCurrentTaskHandle
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:6364   .text.xTaskGetCurrentTaskHandle:0000001c $d
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:6369   .text.xTaskGetSchedulerState:00000000 $t
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:6375   .text.xTaskGetSchedulerState:00000000 xTaskGetSchedulerState
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:6437   .text.xTaskGetSchedulerState:00000034 $d
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:6443   .text.xTaskPriorityInherit:00000000 $t
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:6449   .text.xTaskPriorityInherit:00000000 xTaskPriorityInherit
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:6598   .text.xTaskPriorityInherit:000000c4 $d
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:6605   .text.xTaskPriorityDisinherit:00000000 $t
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:6611   .text.xTaskPriorityDisinherit:00000000 xTaskPriorityDisinherit
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:6779   .text.xTaskPriorityDisinherit:000000d0 $d
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:6786   .text.vTaskPriorityDisinheritAfterTimeout:00000000 $t
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:6792   .text.vTaskPriorityDisinheritAfterTimeout:00000000 vTaskPriorityDisinheritAfterTimeout
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:6986   .text.vTaskPriorityDisinheritAfterTimeout:000000f8 $d
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:6993   .text.uxTaskResetEventItemValue:00000000 $t
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:6999   .text.uxTaskResetEventItemValue:00000000 uxTaskResetEventItemValue
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:7049   .text.uxTaskResetEventItemValue:0000002c $d
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:7054   .text.pvTaskIncrementMutexHeldCount:00000000 $t
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:7060   .text.pvTaskIncrementMutexHeldCount:00000000 pvTaskIncrementMutexHeldCount
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:7105   .text.pvTaskIncrementMutexHeldCount:00000024 $d
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:7110   .text.ulTaskNotifyTake:00000000 $t
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:7116   .text.ulTaskNotifyTake:00000000 ulTaskNotifyTake
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:7230   .text.ulTaskNotifyTake:00000088 $d
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:7236   .text.xTaskNotifyWait:00000000 $t
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:7242   .text.xTaskNotifyWait:00000000 xTaskNotifyWait
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:7377   .text.xTaskNotifyWait:000000ac $d
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:7383   .text.xTaskGenericNotify:00000000 $t
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:7389   .text.xTaskGenericNotify:00000000 xTaskGenericNotify
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:7472   .text.xTaskGenericNotify:00000064 $d
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:7477   .text.xTaskGenericNotify:00000078 $t
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:7663   .text.xTaskGenericNotify:00000164 $d
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:7671   .text.xTaskGenericNotifyFromISR:00000000 $t
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:7677   .text.xTaskGenericNotifyFromISR:00000000 xTaskGenericNotifyFromISR
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:7782   .text.xTaskGenericNotifyFromISR:00000080 $d
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:7787   .text.xTaskGenericNotifyFromISR:00000094 $t
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s 			page 252


C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:8000   .text.xTaskGenericNotifyFromISR:000001a0 $d
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:8010   .text.vTaskNotifyGiveFromISR:00000000 $t
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:8016   .text.vTaskNotifyGiveFromISR:00000000 vTaskNotifyGiveFromISR
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:8234   .text.vTaskNotifyGiveFromISR:0000010c $d
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:8244   .text.xTaskNotifyStateClear:00000000 $t
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:8250   .text.xTaskNotifyStateClear:00000000 xTaskNotifyStateClear
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:8321   .text.xTaskNotifyStateClear:00000048 $d
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:8326   .text.ulTaskNotifyValueClear:00000000 $t
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:8332   .text.ulTaskNotifyValueClear:00000000 ulTaskNotifyValueClear
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:8400   .text.ulTaskNotifyValueClear:00000044 $d
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:8405   .text.prvAddCurrentTaskToDelayedList:00000000 $t
C:\Users\DAELT\AppData\Local\Temp\ccxVr2bg.s:8524   .text.prvAddCurrentTaskToDelayedList:00000090 $d

UNDEFINED SYMBOLS
pvPortMalloc
vPortFree
memset
vListInitialiseItem
pxPortInitialiseStack
vPortEnterCritical
vListInsertEnd
vPortExitCritical
uxListRemove
vPortValidateInterruptPriority
vApplicationGetIdleTaskMemory
xTimerCreateTimerTask
CONFIGURE_TIMER_FOR_RUN_TIME_STATS
xPortStartScheduler
vPortEndScheduler
GET_RUN_TIME_COUNTER_VALUE
vListInsert
vPortSuppressTicksAndSleep
vListInitialise
