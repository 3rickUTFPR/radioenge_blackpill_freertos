ARM GAS  C:\Users\EI\AppData\Local\Temp\ccR3YDcD.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"radioenge_modem.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	gJoinedFSM
  18              		.section	.bss.gJoinedFSM,"aw",%nobits
  21              	gJoinedFSM:
  22 0000 00       		.space	1
  23              		.global	gRadioState
  24              		.section	.data.gRadioState,"aw"
  27              	gRadioState:
  28 0000 01       		.byte	1
  29              		.global	gConfigCmds
  30              		.section	.data.gConfigCmds,"aw"
  31              		.align	2
  34              	gConfigCmds:
  35 0000 41542B43 		.ascii	"AT+CFM=0\015\012\000"
  35      464D3D30 
  35      0D0A00
  36 000b 00000000 		.space	245
  36      00000000 
  36      00000000 
  36      00000000 
  36      00000000 
  37 0100 41542B41 		.ascii	"AT+APPKEY=7a:df:96:89:7c:17:fb:a6:34:2e:a9:15:a6:74"
  37      50504B45 
  37      593D3761 
  37      3A64663A 
  37      39363A38 
  38 0133 3A39373A 		.ascii	":97:68\015\012\000"
  38      36380D0A 
  38      00
  39 013c 00000000 		.space	196
  39      00000000 
  39      00000000 
  39      00000000 
  39      00000000 
  40 0200 41542B41 		.ascii	"AT+APPEUI=00:00:00:00:00:00:00:00\015\012\000"
  40      50504555 
  40      493D3030 
  40      3A30303A 
  40      30303A30 
  41 0224 00000000 		.space	220
  41      00000000 
  41      00000000 
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccR3YDcD.s 			page 2


  41      00000000 
  41      00000000 
  42 0300 41542B43 		.ascii	"AT+CHMASK=0000:00FF:0000:0000:0004:0000\015\012\000"
  42      484D4153 
  42      4B3D3030 
  42      30303A30 
  42      3046463A 
  43 032a 00000000 		.space	214
  43      00000000 
  43      00000000 
  43      00000000 
  43      00000000 
  44 0400 41542B41 		.ascii	"AT+ADR=1\015\012\000"
  44      44523D31 
  44      0D0A00
  45 040b 00000000 		.space	245
  45      00000000 
  45      00000000 
  45      00000000 
  45      00000000 
  46 0500 41542B4E 		.ascii	"AT+NJM=1\015\012\000"
  46      4A4D3D31 
  46      0D0A00
  47 050b 00000000 		.space	245
  47      00000000 
  47      00000000 
  47      00000000 
  47      00000000 
  48 0600 41542B4A 		.ascii	"AT+JOIN\015\012\000"
  48      4F494E0D 
  48      0A00
  49 060a 00000000 		.space	246
  49      00000000 
  49      00000000 
  49      00000000 
  49      00000000 
  50              		.global	gConsecutiveJoinErrors
  51              		.section	.bss.gConsecutiveJoinErrors,"aw",%nobits
  52              		.align	2
  55              	gConsecutiveJoinErrors:
  56 0000 00000000 		.space	4
  57              		.section	.text.LoRaWAN_JoinCallback,"ax",%progbits
  58              		.align	1
  59              		.global	LoRaWAN_JoinCallback
  60              		.arch armv7e-m
  61              		.syntax unified
  62              		.thumb
  63              		.thumb_func
  64              		.fpu fpv4-sp-d16
  66              	LoRaWAN_JoinCallback:
  67              	.LFB220:
  68              		.file 1 "Core/Src/radioenge_modem.c"
   1:Core/Src/radioenge_modem.c **** #include "cmsis_os.h"
   2:Core/Src/radioenge_modem.c **** #include "radioenge_modem.h"
   3:Core/Src/radioenge_modem.c **** #include "uart_at.h"
   4:Core/Src/radioenge_modem.c **** #include "main.h"
   5:Core/Src/radioenge_modem.c **** #include <string.h>
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccR3YDcD.s 			page 3


   6:Core/Src/radioenge_modem.c **** 
   7:Core/Src/radioenge_modem.c **** volatile JOINED_STATE gJoinedFSM = JOINED_TX;
   8:Core/Src/radioenge_modem.c **** volatile RADIO_STATE gRadioState = RADIO_RESET;
   9:Core/Src/radioenge_modem.c **** 
  10:Core/Src/radioenge_modem.c **** extern osThreadId_t ModemMngrTaskHandle;
  11:Core/Src/radioenge_modem.c **** extern osThreadId_t ModemSendTaskHandle;
  12:Core/Src/radioenge_modem.c **** extern osSemaphoreId_t RadioStateSemaphoreHandle;
  13:Core/Src/radioenge_modem.c **** extern osMessageQueueId_t ModemSendQueueHandle;
  14:Core/Src/radioenge_modem.c **** extern osSemaphoreId_t LoRaTXSemaphoreHandle;
  15:Core/Src/radioenge_modem.c **** extern osEventFlagsId_t ModemStatusFlagsHandle;
  16:Core/Src/radioenge_modem.c **** extern osTimerId_t ModemLedTimerHandle;
  17:Core/Src/radioenge_modem.c **** extern osMessageQueueId_t uartQueueHandle;
  18:Core/Src/radioenge_modem.c **** extern osTimerId_t DutyCycleTimerHandle;
  19:Core/Src/radioenge_modem.c **** 
  20:Core/Src/radioenge_modem.c **** #define NUMBER_OF_STRINGS (7)
  21:Core/Src/radioenge_modem.c **** #define STRING_LENGTH (255)
  22:Core/Src/radioenge_modem.c **** char gConfigCmds[NUMBER_OF_STRINGS][STRING_LENGTH + 1] = {
  23:Core/Src/radioenge_modem.c ****     //"AT\r\n",
  24:Core/Src/radioenge_modem.c ****     //"AT\r\n"
  25:Core/Src/radioenge_modem.c ****     "AT+CFM=0\r\n",
  26:Core/Src/radioenge_modem.c ****     "AT+APPKEY=7a:df:96:89:7c:17:fb:a6:34:2e:a9:15:a6:74:97:68\r\n",
  27:Core/Src/radioenge_modem.c ****     "AT+APPEUI=00:00:00:00:00:00:00:00\r\n",
  28:Core/Src/radioenge_modem.c ****     "AT+CHMASK=0000:00FF:0000:0000:0004:0000\r\n",
  29:Core/Src/radioenge_modem.c ****     //"AT+CHMASK=FF00:0000:0000:0000:0002:0000\r\n",
  30:Core/Src/radioenge_modem.c ****     "AT+ADR=1\r\n",
  31:Core/Src/radioenge_modem.c ****     "AT+NJM=1\r\n",
  32:Core/Src/radioenge_modem.c ****     "AT+JOIN\r\n",
  33:Core/Src/radioenge_modem.c ****     
  34:Core/Src/radioenge_modem.c **** 
  35:Core/Src/radioenge_modem.c **** };
  36:Core/Src/radioenge_modem.c **** 
  37:Core/Src/radioenge_modem.c **** uint32_t gConsecutiveJoinErrors = 0;
  38:Core/Src/radioenge_modem.c **** 
  39:Core/Src/radioenge_modem.c **** void LoRaWAN_JoinCallback(ATResponse response)
  40:Core/Src/radioenge_modem.c **** {
  69              		.loc 1 40 1
  70              		.cfi_startproc
  71              		@ args = 0, pretend = 0, frame = 8
  72              		@ frame_needed = 1, uses_anonymous_args = 0
  73 0000 80B5     		push	{r7, lr}
  74              	.LCFI0:
  75              		.cfi_def_cfa_offset 8
  76              		.cfi_offset 7, -8
  77              		.cfi_offset 14, -4
  78 0002 82B0     		sub	sp, sp, #8
  79              	.LCFI1:
  80              		.cfi_def_cfa_offset 16
  81 0004 00AF     		add	r7, sp, #0
  82              	.LCFI2:
  83              		.cfi_def_cfa_register 7
  84 0006 0346     		mov	r3, r0
  85 0008 FB71     		strb	r3, [r7, #7]
  41:Core/Src/radioenge_modem.c ****     osSemaphoreAcquire(RadioStateSemaphoreHandle, osWaitForever);
  86              		.loc 1 41 5
  87 000a 184B     		ldr	r3, .L5
  88 000c 1B68     		ldr	r3, [r3]
  89 000e 4FF0FF31 		mov	r1, #-1
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccR3YDcD.s 			page 4


  90 0012 1846     		mov	r0, r3
  91 0014 FFF7FEFF 		bl	osSemaphoreAcquire
  42:Core/Src/radioenge_modem.c ****     if (gRadioState == RADIO_JOINING)
  92              		.loc 1 42 21
  93 0018 154B     		ldr	r3, .L5+4
  94 001a 1B78     		ldrb	r3, [r3]
  95 001c DBB2     		uxtb	r3, r3
  96              		.loc 1 42 8
  97 001e 042B     		cmp	r3, #4
  98 0020 1BD1     		bne	.L2
  43:Core/Src/radioenge_modem.c ****     {
  44:Core/Src/radioenge_modem.c ****         if (response == AT_JOINED)
  99              		.loc 1 44 12
 100 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 101 0024 042B     		cmp	r3, #4
 102 0026 06D1     		bne	.L3
 103              	.LBB2:
  45:Core/Src/radioenge_modem.c ****         {
  46:Core/Src/radioenge_modem.c ****             gConsecutiveJoinErrors = 0;
 104              		.loc 1 46 36
 105 0028 124B     		ldr	r3, .L5+8
 106 002a 0022     		movs	r2, #0
 107 002c 1A60     		str	r2, [r3]
  47:Core/Src/radioenge_modem.c ****             SetRadioState(RADIO_READY);
 108              		.loc 1 47 13
 109 002e 0820     		movs	r0, #8
 110 0030 FFF7FEFF 		bl	SetRadioState
 111              	.LBE2:
 112 0034 0BE0     		b	.L4
 113              	.L3:
  48:Core/Src/radioenge_modem.c ****         }
  49:Core/Src/radioenge_modem.c ****         else
  50:Core/Src/radioenge_modem.c ****         {
  51:Core/Src/radioenge_modem.c ****             gConsecutiveJoinErrors++;
 114              		.loc 1 51 35
 115 0036 0F4B     		ldr	r3, .L5+8
 116 0038 1B68     		ldr	r3, [r3]
 117 003a 0133     		adds	r3, r3, #1
 118 003c 0D4A     		ldr	r2, .L5+8
 119 003e 1360     		str	r3, [r2]
  52:Core/Src/radioenge_modem.c ****             if(gConsecutiveJoinErrors==9) //radioenge modem stops after 9 join errors
 120              		.loc 1 52 38
 121 0040 0C4B     		ldr	r3, .L5+8
 122 0042 1B68     		ldr	r3, [r3]
 123              		.loc 1 52 15
 124 0044 092B     		cmp	r3, #9
 125 0046 02D1     		bne	.L4
 126              	.LBB3:
  53:Core/Src/radioenge_modem.c ****             {
  54:Core/Src/radioenge_modem.c ****                 SetRadioState(RADIO_RESET);
 127              		.loc 1 54 17
 128 0048 0120     		movs	r0, #1
 129 004a FFF7FEFF 		bl	SetRadioState
 130              	.L4:
 131              	.LBE3:
  55:Core/Src/radioenge_modem.c ****             }
  56:Core/Src/radioenge_modem.c ****         }
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccR3YDcD.s 			page 5


  57:Core/Src/radioenge_modem.c ****         osThreadFlagsSet(ModemMngrTaskHandle, 0x01);
 132              		.loc 1 57 9
 133 004e 0A4B     		ldr	r3, .L5+12
 134 0050 1B68     		ldr	r3, [r3]
 135 0052 0121     		movs	r1, #1
 136 0054 1846     		mov	r0, r3
 137 0056 FFF7FEFF 		bl	osThreadFlagsSet
 138              	.L2:
  58:Core/Src/radioenge_modem.c ****     }
  59:Core/Src/radioenge_modem.c ****     osSemaphoreRelease(RadioStateSemaphoreHandle);
 139              		.loc 1 59 5
 140 005a 044B     		ldr	r3, .L5
 141 005c 1B68     		ldr	r3, [r3]
 142 005e 1846     		mov	r0, r3
 143 0060 FFF7FEFF 		bl	osSemaphoreRelease
  60:Core/Src/radioenge_modem.c **** }
 144              		.loc 1 60 1
 145 0064 00BF     		nop
 146 0066 0837     		adds	r7, r7, #8
 147              	.LCFI3:
 148              		.cfi_def_cfa_offset 8
 149 0068 BD46     		mov	sp, r7
 150              	.LCFI4:
 151              		.cfi_def_cfa_register 13
 152              		@ sp needed
 153 006a 80BD     		pop	{r7, pc}
 154              	.L6:
 155              		.align	2
 156              	.L5:
 157 006c 00000000 		.word	RadioStateSemaphoreHandle
 158 0070 00000000 		.word	gRadioState
 159 0074 00000000 		.word	gConsecutiveJoinErrors
 160 0078 00000000 		.word	ModemMngrTaskHandle
 161              		.cfi_endproc
 162              	.LFE220:
 164              		.section	.text.DutyCycleTimerCallback,"ax",%progbits
 165              		.align	1
 166              		.global	DutyCycleTimerCallback
 167              		.syntax unified
 168              		.thumb
 169              		.thumb_func
 170              		.fpu fpv4-sp-d16
 172              	DutyCycleTimerCallback:
 173              	.LFB221:
  61:Core/Src/radioenge_modem.c **** 
  62:Core/Src/radioenge_modem.c **** void DutyCycleTimerCallback (void *argument) 
  63:Core/Src/radioenge_modem.c **** {
 174              		.loc 1 63 1
 175              		.cfi_startproc
 176              		@ args = 0, pretend = 0, frame = 8
 177              		@ frame_needed = 1, uses_anonymous_args = 0
 178 0000 80B5     		push	{r7, lr}
 179              	.LCFI5:
 180              		.cfi_def_cfa_offset 8
 181              		.cfi_offset 7, -8
 182              		.cfi_offset 14, -4
 183 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccR3YDcD.s 			page 6


 184              	.LCFI6:
 185              		.cfi_def_cfa_offset 16
 186 0004 00AF     		add	r7, sp, #0
 187              	.LCFI7:
 188              		.cfi_def_cfa_register 7
 189 0006 7860     		str	r0, [r7, #4]
  64:Core/Src/radioenge_modem.c ****     osSemaphoreAcquire(RadioStateSemaphoreHandle, osWaitForever);
 190              		.loc 1 64 5
 191 0008 0B4B     		ldr	r3, .L9
 192 000a 1B68     		ldr	r3, [r3]
 193 000c 4FF0FF31 		mov	r1, #-1
 194 0010 1846     		mov	r0, r3
 195 0012 FFF7FEFF 		bl	osSemaphoreAcquire
  65:Core/Src/radioenge_modem.c ****     if(gRadioState==RADIO_DUTYCYCLED)
 196              		.loc 1 65 19
 197 0016 094B     		ldr	r3, .L9+4
 198 0018 1B78     		ldrb	r3, [r3]
 199 001a DBB2     		uxtb	r3, r3
 200              		.loc 1 65 7
 201 001c 102B     		cmp	r3, #16
 202 001e 02D1     		bne	.L8
 203              	.LBB4:
  66:Core/Src/radioenge_modem.c ****     {
  67:Core/Src/radioenge_modem.c ****         SetRadioState(RADIO_READY);
 204              		.loc 1 67 9
 205 0020 0820     		movs	r0, #8
 206 0022 FFF7FEFF 		bl	SetRadioState
 207              	.L8:
 208              	.LBE4:
  68:Core/Src/radioenge_modem.c ****     }  
  69:Core/Src/radioenge_modem.c ****     osSemaphoreRelease(RadioStateSemaphoreHandle);  
 209              		.loc 1 69 5
 210 0026 044B     		ldr	r3, .L9
 211 0028 1B68     		ldr	r3, [r3]
 212 002a 1846     		mov	r0, r3
 213 002c FFF7FEFF 		bl	osSemaphoreRelease
  70:Core/Src/radioenge_modem.c **** }
 214              		.loc 1 70 1
 215 0030 00BF     		nop
 216 0032 0837     		adds	r7, r7, #8
 217              	.LCFI8:
 218              		.cfi_def_cfa_offset 8
 219 0034 BD46     		mov	sp, r7
 220              	.LCFI9:
 221              		.cfi_def_cfa_register 13
 222              		@ sp needed
 223 0036 80BD     		pop	{r7, pc}
 224              	.L10:
 225              		.align	2
 226              	.L9:
 227 0038 00000000 		.word	RadioStateSemaphoreHandle
 228 003c 00000000 		.word	gRadioState
 229              		.cfi_endproc
 230              	.LFE221:
 232              		.section	.rodata
 233              		.align	2
 234              	.LC0:
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccR3YDcD.s 			page 7


 235 0000 41545A0D 		.ascii	"ATZ\015\012\000"
 235      0A00
 236              		.section	.text.resetRadio,"ax",%progbits
 237              		.align	1
 238              		.global	resetRadio
 239              		.syntax unified
 240              		.thumb
 241              		.thumb_func
 242              		.fpu fpv4-sp-d16
 244              	resetRadio:
 245              	.LFB222:
  71:Core/Src/radioenge_modem.c **** 
  72:Core/Src/radioenge_modem.c **** void resetRadio(void)
  73:Core/Src/radioenge_modem.c **** {
 246              		.loc 1 73 1
 247              		.cfi_startproc
 248              		@ args = 0, pretend = 0, frame = 0
 249              		@ frame_needed = 1, uses_anonymous_args = 0
 250 0000 80B5     		push	{r7, lr}
 251              	.LCFI10:
 252              		.cfi_def_cfa_offset 8
 253              		.cfi_offset 7, -8
 254              		.cfi_offset 14, -4
 255 0002 00AF     		add	r7, sp, #0
 256              	.LCFI11:
 257              		.cfi_def_cfa_register 7
  74:Core/Src/radioenge_modem.c ****     while (sendRAWAT("ATZ\r\n") != AT_RESET)
 258              		.loc 1 74 11
 259 0004 03E0     		b	.L12
 260              	.L13:
  75:Core/Src/radioenge_modem.c ****     {
  76:Core/Src/radioenge_modem.c ****         osDelay(5000);
 261              		.loc 1 76 9
 262 0006 41F28830 		movw	r0, #5000
 263 000a FFF7FEFF 		bl	osDelay
 264              	.L12:
  74:Core/Src/radioenge_modem.c ****     while (sendRAWAT("ATZ\r\n") != AT_RESET)
 265              		.loc 1 74 12
 266 000e 0448     		ldr	r0, .L15
 267 0010 FFF7FEFF 		bl	sendRAWAT
 268 0014 0346     		mov	r3, r0
  74:Core/Src/radioenge_modem.c ****     while (sendRAWAT("ATZ\r\n") != AT_RESET)
 269              		.loc 1 74 11
 270 0016 082B     		cmp	r3, #8
 271 0018 F5D1     		bne	.L13
  77:Core/Src/radioenge_modem.c ****     }
  78:Core/Src/radioenge_modem.c ****     return;
 272              		.loc 1 78 5
 273 001a 00BF     		nop
  79:Core/Src/radioenge_modem.c **** }
 274              		.loc 1 79 1
 275 001c 80BD     		pop	{r7, pc}
 276              	.L16:
 277 001e 00BF     		.align	2
 278              	.L15:
 279 0020 00000000 		.word	.LC0
 280              		.cfi_endproc
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccR3YDcD.s 			page 8


 281              	.LFE222:
 283              		.section	.text.SetRadioState,"ax",%progbits
 284              		.align	1
 285              		.global	SetRadioState
 286              		.syntax unified
 287              		.thumb
 288              		.thumb_func
 289              		.fpu fpv4-sp-d16
 291              	SetRadioState:
 292              	.LFB223:
  80:Core/Src/radioenge_modem.c **** 
  81:Core/Src/radioenge_modem.c **** //calls to this function must be protected by semaphore RadioStateSemaphoreHandle
  82:Core/Src/radioenge_modem.c **** void SetRadioState(RADIO_STATE state)
  83:Core/Src/radioenge_modem.c **** {    
 293              		.loc 1 83 1
 294              		.cfi_startproc
 295              		@ args = 0, pretend = 0, frame = 8
 296              		@ frame_needed = 1, uses_anonymous_args = 0
 297 0000 80B5     		push	{r7, lr}
 298              	.LCFI12:
 299              		.cfi_def_cfa_offset 8
 300              		.cfi_offset 7, -8
 301              		.cfi_offset 14, -4
 302 0002 82B0     		sub	sp, sp, #8
 303              	.LCFI13:
 304              		.cfi_def_cfa_offset 16
 305 0004 00AF     		add	r7, sp, #0
 306              	.LCFI14:
 307              		.cfi_def_cfa_register 7
 308 0006 0346     		mov	r3, r0
 309 0008 FB71     		strb	r3, [r7, #7]
  84:Core/Src/radioenge_modem.c ****     gRadioState = state;
 310              		.loc 1 84 17
 311 000a 064A     		ldr	r2, .L18
 312 000c FB79     		ldrb	r3, [r7, #7]
 313 000e 1370     		strb	r3, [r2]
  85:Core/Src/radioenge_modem.c ****     osThreadFlagsSet(ModemMngrTaskHandle, 0x01); 
 314              		.loc 1 85 5
 315 0010 054B     		ldr	r3, .L18+4
 316 0012 1B68     		ldr	r3, [r3]
 317 0014 0121     		movs	r1, #1
 318 0016 1846     		mov	r0, r3
 319 0018 FFF7FEFF 		bl	osThreadFlagsSet
  86:Core/Src/radioenge_modem.c **** }
 320              		.loc 1 86 1
 321 001c 00BF     		nop
 322 001e 0837     		adds	r7, r7, #8
 323              	.LCFI15:
 324              		.cfi_def_cfa_offset 8
 325 0020 BD46     		mov	sp, r7
 326              	.LCFI16:
 327              		.cfi_def_cfa_register 13
 328              		@ sp needed
 329 0022 80BD     		pop	{r7, pc}
 330              	.L19:
 331              		.align	2
 332              	.L18:
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccR3YDcD.s 			page 9


 333 0024 00000000 		.word	gRadioState
 334 0028 00000000 		.word	ModemMngrTaskHandle
 335              		.cfi_endproc
 336              	.LFE223:
 338              		.section	.text.ModemLedCallback,"ax",%progbits
 339              		.align	1
 340              		.global	ModemLedCallback
 341              		.syntax unified
 342              		.thumb
 343              		.thumb_func
 344              		.fpu fpv4-sp-d16
 346              	ModemLedCallback:
 347              	.LFB224:
  87:Core/Src/radioenge_modem.c **** 
  88:Core/Src/radioenge_modem.c **** void ModemLedCallback(void *argument) 
  89:Core/Src/radioenge_modem.c **** {
 348              		.loc 1 89 1
 349              		.cfi_startproc
 350              		@ args = 0, pretend = 0, frame = 8
 351              		@ frame_needed = 1, uses_anonymous_args = 0
 352 0000 80B5     		push	{r7, lr}
 353              	.LCFI17:
 354              		.cfi_def_cfa_offset 8
 355              		.cfi_offset 7, -8
 356              		.cfi_offset 14, -4
 357 0002 82B0     		sub	sp, sp, #8
 358              	.LCFI18:
 359              		.cfi_def_cfa_offset 16
 360 0004 00AF     		add	r7, sp, #0
 361              	.LCFI19:
 362              		.cfi_def_cfa_register 7
 363 0006 7860     		str	r0, [r7, #4]
  90:Core/Src/radioenge_modem.c ****     //here we use gRadioState without semaphore because a preemption will only cause a momentary le
  91:Core/Src/radioenge_modem.c ****     switch(gRadioState)
 364              		.loc 1 91 5
 365 0008 514B     		ldr	r3, .L29
 366 000a 1B78     		ldrb	r3, [r3]
 367 000c DBB2     		uxtb	r3, r3
 368 000e 013B     		subs	r3, r3, #1
 369 0010 0F2B     		cmp	r3, #15
 370 0012 00F28880 		bhi	.L21
 371 0016 01A2     		adr	r2, .L23
 372 0018 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 373              		.p2align 2
 374              	.L23:
 375 001c 5D000000 		.word	.L27+1
 376 0020 85000000 		.word	.L26+1
 377 0024 27010000 		.word	.L21+1
 378 0028 AD000000 		.word	.L25+1
 379 002c 27010000 		.word	.L21+1
 380 0030 27010000 		.word	.L21+1
 381 0034 27010000 		.word	.L21+1
 382 0038 D5000000 		.word	.L24+1
 383 003c 27010000 		.word	.L21+1
 384 0040 27010000 		.word	.L21+1
 385 0044 27010000 		.word	.L21+1
 386 0048 27010000 		.word	.L21+1
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccR3YDcD.s 			page 10


 387 004c 27010000 		.word	.L21+1
 388 0050 27010000 		.word	.L21+1
 389 0054 27010000 		.word	.L21+1
 390 0058 FF000000 		.word	.L22+1
 391              		.p2align 1
 392              	.L27:
  92:Core/Src/radioenge_modem.c ****     {
  93:Core/Src/radioenge_modem.c ****     case RADIO_RESET:
  94:Core/Src/radioenge_modem.c ****     {
  95:Core/Src/radioenge_modem.c ****         HAL_GPIO_TogglePin(LED1_RED_GPIO_Port, LED1_RED_Pin);
 393              		.loc 1 95 9
 394 005c 0421     		movs	r1, #4
 395 005e 3D48     		ldr	r0, .L29+4
 396 0060 FFF7FEFF 		bl	HAL_GPIO_TogglePin
  96:Core/Src/radioenge_modem.c ****         HAL_GPIO_WritePin(LED2_YELLOW_GPIO_Port, LED2_YELLOW_Pin, 0);
 397              		.loc 1 96 9
 398 0064 0022     		movs	r2, #0
 399 0066 1021     		movs	r1, #16
 400 0068 3A48     		ldr	r0, .L29+4
 401 006a FFF7FEFF 		bl	HAL_GPIO_WritePin
  97:Core/Src/radioenge_modem.c ****         HAL_GPIO_WritePin(LED3_GREEN_GPIO_Port, LED3_GREEN_Pin, 0);
 402              		.loc 1 97 9
 403 006e 0022     		movs	r2, #0
 404 0070 0221     		movs	r1, #2
 405 0072 3848     		ldr	r0, .L29+4
 406 0074 FFF7FEFF 		bl	HAL_GPIO_WritePin
  98:Core/Src/radioenge_modem.c ****         HAL_GPIO_WritePin(LED4_BLUE_GPIO_Port, LED4_BLUE_Pin, 0); 
 407              		.loc 1 98 9
 408 0078 0022     		movs	r2, #0
 409 007a 0821     		movs	r1, #8
 410 007c 3548     		ldr	r0, .L29+4
 411 007e FFF7FEFF 		bl	HAL_GPIO_WritePin
  99:Core/Src/radioenge_modem.c ****         break;       
 412              		.loc 1 99 9
 413 0082 61E0     		b	.L28
 414              	.L26:
 100:Core/Src/radioenge_modem.c ****     }
 101:Core/Src/radioenge_modem.c ****     case RADIO_CONFIGURING:
 102:Core/Src/radioenge_modem.c ****     {
 103:Core/Src/radioenge_modem.c ****         HAL_GPIO_WritePin(LED1_RED_GPIO_Port, LED1_RED_Pin,0);
 415              		.loc 1 103 9
 416 0084 0022     		movs	r2, #0
 417 0086 0421     		movs	r1, #4
 418 0088 3248     		ldr	r0, .L29+4
 419 008a FFF7FEFF 		bl	HAL_GPIO_WritePin
 104:Core/Src/radioenge_modem.c ****         HAL_GPIO_TogglePin(LED2_YELLOW_GPIO_Port, LED2_YELLOW_Pin);
 420              		.loc 1 104 9
 421 008e 1021     		movs	r1, #16
 422 0090 3048     		ldr	r0, .L29+4
 423 0092 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 105:Core/Src/radioenge_modem.c ****         HAL_GPIO_WritePin(LED3_GREEN_GPIO_Port, LED3_GREEN_Pin,0);
 424              		.loc 1 105 9
 425 0096 0022     		movs	r2, #0
 426 0098 0221     		movs	r1, #2
 427 009a 2E48     		ldr	r0, .L29+4
 428 009c FFF7FEFF 		bl	HAL_GPIO_WritePin
 106:Core/Src/radioenge_modem.c ****         HAL_GPIO_WritePin(LED4_BLUE_GPIO_Port, LED4_BLUE_Pin, 0);        
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccR3YDcD.s 			page 11


 429              		.loc 1 106 9
 430 00a0 0022     		movs	r2, #0
 431 00a2 0821     		movs	r1, #8
 432 00a4 2B48     		ldr	r0, .L29+4
 433 00a6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 107:Core/Src/radioenge_modem.c ****         break;       
 434              		.loc 1 107 9
 435 00aa 4DE0     		b	.L28
 436              	.L25:
 108:Core/Src/radioenge_modem.c ****     }
 109:Core/Src/radioenge_modem.c ****     case RADIO_JOINING:
 110:Core/Src/radioenge_modem.c ****     {
 111:Core/Src/radioenge_modem.c ****         HAL_GPIO_WritePin(LED1_RED_GPIO_Port, LED1_RED_Pin,0);
 437              		.loc 1 111 9
 438 00ac 0022     		movs	r2, #0
 439 00ae 0421     		movs	r1, #4
 440 00b0 2848     		ldr	r0, .L29+4
 441 00b2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 112:Core/Src/radioenge_modem.c ****         HAL_GPIO_WritePin(LED2_YELLOW_GPIO_Port, LED2_YELLOW_Pin,0);
 442              		.loc 1 112 9
 443 00b6 0022     		movs	r2, #0
 444 00b8 1021     		movs	r1, #16
 445 00ba 2648     		ldr	r0, .L29+4
 446 00bc FFF7FEFF 		bl	HAL_GPIO_WritePin
 113:Core/Src/radioenge_modem.c ****         HAL_GPIO_TogglePin(LED3_GREEN_GPIO_Port, LED3_GREEN_Pin);
 447              		.loc 1 113 9
 448 00c0 0221     		movs	r1, #2
 449 00c2 2448     		ldr	r0, .L29+4
 450 00c4 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 114:Core/Src/radioenge_modem.c ****         HAL_GPIO_WritePin(LED4_BLUE_GPIO_Port, LED4_BLUE_Pin, 0);        
 451              		.loc 1 114 9
 452 00c8 0022     		movs	r2, #0
 453 00ca 0821     		movs	r1, #8
 454 00cc 2148     		ldr	r0, .L29+4
 455 00ce FFF7FEFF 		bl	HAL_GPIO_WritePin
 115:Core/Src/radioenge_modem.c ****         break;       
 456              		.loc 1 115 9
 457 00d2 39E0     		b	.L28
 458              	.L24:
 116:Core/Src/radioenge_modem.c ****     }
 117:Core/Src/radioenge_modem.c ****     case RADIO_READY:
 118:Core/Src/radioenge_modem.c ****     {
 119:Core/Src/radioenge_modem.c ****         HAL_GPIO_WritePin(LED1_RED_GPIO_Port, LED1_RED_Pin,0);
 459              		.loc 1 119 9
 460 00d4 0022     		movs	r2, #0
 461 00d6 0421     		movs	r1, #4
 462 00d8 1E48     		ldr	r0, .L29+4
 463 00da FFF7FEFF 		bl	HAL_GPIO_WritePin
 120:Core/Src/radioenge_modem.c ****         HAL_GPIO_WritePin(LED2_YELLOW_GPIO_Port, LED2_YELLOW_Pin,0);
 464              		.loc 1 120 9
 465 00de 0022     		movs	r2, #0
 466 00e0 1021     		movs	r1, #16
 467 00e2 1C48     		ldr	r0, .L29+4
 468 00e4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 121:Core/Src/radioenge_modem.c ****         HAL_GPIO_WritePin(LED3_GREEN_GPIO_Port, LED3_GREEN_Pin,1);
 469              		.loc 1 121 9
 470 00e8 0122     		movs	r2, #1
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccR3YDcD.s 			page 12


 471 00ea 0221     		movs	r1, #2
 472 00ec 1948     		ldr	r0, .L29+4
 473 00ee FFF7FEFF 		bl	HAL_GPIO_WritePin
 122:Core/Src/radioenge_modem.c ****         HAL_GPIO_WritePin(LED4_BLUE_GPIO_Port, LED4_BLUE_Pin, 0);        
 474              		.loc 1 122 9
 475 00f2 0022     		movs	r2, #0
 476 00f4 0821     		movs	r1, #8
 477 00f6 1748     		ldr	r0, .L29+4
 478 00f8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 123:Core/Src/radioenge_modem.c ****         break;       
 479              		.loc 1 123 9
 480 00fc 24E0     		b	.L28
 481              	.L22:
 124:Core/Src/radioenge_modem.c ****     }
 125:Core/Src/radioenge_modem.c ****     case RADIO_DUTYCYCLED:
 126:Core/Src/radioenge_modem.c ****     {
 127:Core/Src/radioenge_modem.c ****         HAL_GPIO_WritePin(LED1_RED_GPIO_Port, LED1_RED_Pin,0);
 482              		.loc 1 127 9
 483 00fe 0022     		movs	r2, #0
 484 0100 0421     		movs	r1, #4
 485 0102 1448     		ldr	r0, .L29+4
 486 0104 FFF7FEFF 		bl	HAL_GPIO_WritePin
 128:Core/Src/radioenge_modem.c ****         HAL_GPIO_WritePin(LED2_YELLOW_GPIO_Port, LED2_YELLOW_Pin,0);
 487              		.loc 1 128 9
 488 0108 0022     		movs	r2, #0
 489 010a 1021     		movs	r1, #16
 490 010c 1148     		ldr	r0, .L29+4
 491 010e FFF7FEFF 		bl	HAL_GPIO_WritePin
 129:Core/Src/radioenge_modem.c ****         HAL_GPIO_WritePin(LED3_GREEN_GPIO_Port, LED3_GREEN_Pin,1);
 492              		.loc 1 129 9
 493 0112 0122     		movs	r2, #1
 494 0114 0221     		movs	r1, #2
 495 0116 0F48     		ldr	r0, .L29+4
 496 0118 FFF7FEFF 		bl	HAL_GPIO_WritePin
 130:Core/Src/radioenge_modem.c ****         HAL_GPIO_TogglePin(LED4_BLUE_GPIO_Port, LED4_BLUE_Pin);        
 497              		.loc 1 130 9
 498 011c 0821     		movs	r1, #8
 499 011e 0D48     		ldr	r0, .L29+4
 500 0120 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 131:Core/Src/radioenge_modem.c ****         break;       
 501              		.loc 1 131 9
 502 0124 10E0     		b	.L28
 503              	.L21:
 132:Core/Src/radioenge_modem.c ****     }
 133:Core/Src/radioenge_modem.c ****     default:
 134:Core/Src/radioenge_modem.c ****     {
 135:Core/Src/radioenge_modem.c ****         HAL_GPIO_TogglePin(LED1_RED_GPIO_Port, LED1_RED_Pin);
 504              		.loc 1 135 9
 505 0126 0421     		movs	r1, #4
 506 0128 0A48     		ldr	r0, .L29+4
 507 012a FFF7FEFF 		bl	HAL_GPIO_TogglePin
 136:Core/Src/radioenge_modem.c ****         HAL_GPIO_TogglePin(LED2_YELLOW_GPIO_Port, LED2_YELLOW_Pin);
 508              		.loc 1 136 9
 509 012e 1021     		movs	r1, #16
 510 0130 0848     		ldr	r0, .L29+4
 511 0132 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 137:Core/Src/radioenge_modem.c ****         HAL_GPIO_TogglePin(LED3_GREEN_GPIO_Port, LED3_GREEN_Pin);
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccR3YDcD.s 			page 13


 512              		.loc 1 137 9
 513 0136 0221     		movs	r1, #2
 514 0138 0648     		ldr	r0, .L29+4
 515 013a FFF7FEFF 		bl	HAL_GPIO_TogglePin
 138:Core/Src/radioenge_modem.c ****         HAL_GPIO_TogglePin(LED4_BLUE_GPIO_Port, LED4_BLUE_Pin);        
 516              		.loc 1 138 9
 517 013e 0821     		movs	r1, #8
 518 0140 0448     		ldr	r0, .L29+4
 519 0142 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 139:Core/Src/radioenge_modem.c ****         break;       
 520              		.loc 1 139 9
 521 0146 00BF     		nop
 522              	.L28:
 140:Core/Src/radioenge_modem.c ****     }    
 141:Core/Src/radioenge_modem.c ****     }
 142:Core/Src/radioenge_modem.c **** }
 523              		.loc 1 142 1
 524 0148 00BF     		nop
 525 014a 0837     		adds	r7, r7, #8
 526              	.LCFI20:
 527              		.cfi_def_cfa_offset 8
 528 014c BD46     		mov	sp, r7
 529              	.LCFI21:
 530              		.cfi_def_cfa_register 13
 531              		@ sp needed
 532 014e 80BD     		pop	{r7, pc}
 533              	.L30:
 534              		.align	2
 535              	.L29:
 536 0150 00000000 		.word	gRadioState
 537 0154 00000240 		.word	1073872896
 538              		.cfi_endproc
 539              	.LFE224:
 541              		.section	.text.ModemManagerTaskCode,"ax",%progbits
 542              		.align	1
 543              		.global	ModemManagerTaskCode
 544              		.syntax unified
 545              		.thumb
 546              		.thumb_func
 547              		.fpu fpv4-sp-d16
 549              	ModemManagerTaskCode:
 550              	.LFB225:
 143:Core/Src/radioenge_modem.c **** 
 144:Core/Src/radioenge_modem.c **** 
 145:Core/Src/radioenge_modem.c **** void ModemManagerTaskCode(void *argument)
 146:Core/Src/radioenge_modem.c **** {
 551              		.loc 1 146 1
 552              		.cfi_startproc
 553              		@ args = 0, pretend = 0, frame = 24
 554              		@ frame_needed = 1, uses_anonymous_args = 0
 555 0000 80B5     		push	{r7, lr}
 556              	.LCFI22:
 557              		.cfi_def_cfa_offset 8
 558              		.cfi_offset 7, -8
 559              		.cfi_offset 14, -4
 560 0002 86B0     		sub	sp, sp, #24
 561              	.LCFI23:
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccR3YDcD.s 			page 14


 562              		.cfi_def_cfa_offset 32
 563 0004 00AF     		add	r7, sp, #0
 564              	.LCFI24:
 565              		.cfi_def_cfa_register 7
 566 0006 7860     		str	r0, [r7, #4]
 147:Core/Src/radioenge_modem.c ****     /* USER CODE BEGIN 5 */
 148:Core/Src/radioenge_modem.c ****     /* Infinite loop */    
 149:Core/Src/radioenge_modem.c ****     uint32_t ConfigCmdIndex = 0;
 567              		.loc 1 149 14
 568 0008 0023     		movs	r3, #0
 569 000a 7B61     		str	r3, [r7, #20]
 150:Core/Src/radioenge_modem.c ****     uint32_t flags;
 151:Core/Src/radioenge_modem.c ****     uint32_t modemflags;
 152:Core/Src/radioenge_modem.c ****     osTimerStart(ModemLedTimerHandle, 50U);
 570              		.loc 1 152 5
 571 000c 4A4B     		ldr	r3, .L43
 572 000e 1B68     		ldr	r3, [r3]
 573 0010 3221     		movs	r1, #50
 574 0012 1846     		mov	r0, r3
 575 0014 FFF7FEFF 		bl	osTimerStart
 153:Core/Src/radioenge_modem.c ****     osThreadFlagsSet(ModemMngrTaskHandle, 0x01);    
 576              		.loc 1 153 5
 577 0018 484B     		ldr	r3, .L43+4
 578 001a 1B68     		ldr	r3, [r3]
 579 001c 0121     		movs	r1, #1
 580 001e 1846     		mov	r0, r3
 581 0020 FFF7FEFF 		bl	osThreadFlagsSet
 582              	.L42:
 154:Core/Src/radioenge_modem.c ****     while (1)
 155:Core/Src/radioenge_modem.c ****     {
 156:Core/Src/radioenge_modem.c ****         flags = osThreadFlagsWait (0x01, osFlagsWaitAny,osWaitForever);
 583              		.loc 1 156 17
 584 0024 4FF0FF32 		mov	r2, #-1
 585 0028 0021     		movs	r1, #0
 586 002a 0120     		movs	r0, #1
 587 002c FFF7FEFF 		bl	osThreadFlagsWait
 588 0030 3861     		str	r0, [r7, #16]
 157:Core/Src/radioenge_modem.c ****         osSemaphoreAcquire(RadioStateSemaphoreHandle, osWaitForever);
 589              		.loc 1 157 9
 590 0032 434B     		ldr	r3, .L43+8
 591 0034 1B68     		ldr	r3, [r3]
 592 0036 4FF0FF31 		mov	r1, #-1
 593 003a 1846     		mov	r0, r3
 594 003c FFF7FEFF 		bl	osSemaphoreAcquire
 158:Core/Src/radioenge_modem.c ****         osEventFlagsClear(ModemStatusFlagsHandle, RADIO_STATE_ALL);        
 595              		.loc 1 158 9
 596 0040 404B     		ldr	r3, .L43+12
 597 0042 1B68     		ldr	r3, [r3]
 598 0044 1F21     		movs	r1, #31
 599 0046 1846     		mov	r0, r3
 600 0048 FFF7FEFF 		bl	osEventFlagsClear
 159:Core/Src/radioenge_modem.c ****         switch (gRadioState)
 601              		.loc 1 159 9
 602 004c 3E4B     		ldr	r3, .L43+16
 603 004e 1B78     		ldrb	r3, [r3]
 604 0050 DBB2     		uxtb	r3, r3
 605 0052 013B     		subs	r3, r3, #1
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccR3YDcD.s 			page 15


 606 0054 0F2B     		cmp	r3, #15
 607 0056 5ED8     		bhi	.L32
 608 0058 01A2     		adr	r2, .L34
 609 005a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 610 005e 00BF     		.p2align 2
 611              	.L34:
 612 0060 A1000000 		.word	.L38+1
 613 0064 C5000000 		.word	.L37+1
 614 0068 17010000 		.word	.L32+1
 615 006c 17010000 		.word	.L32+1
 616 0070 17010000 		.word	.L32+1
 617 0074 17010000 		.word	.L32+1
 618 0078 17010000 		.word	.L32+1
 619 007c 17010000 		.word	.L32+1
 620 0080 17010000 		.word	.L32+1
 621 0084 17010000 		.word	.L32+1
 622 0088 17010000 		.word	.L32+1
 623 008c 17010000 		.word	.L32+1
 624 0090 17010000 		.word	.L32+1
 625 0094 17010000 		.word	.L32+1
 626 0098 17010000 		.word	.L32+1
 627 009c 07010000 		.word	.L33+1
 628              		.p2align 1
 629              	.L38:
 160:Core/Src/radioenge_modem.c ****         {
 161:Core/Src/radioenge_modem.c ****         case RADIO_RESET:
 162:Core/Src/radioenge_modem.c ****         {
 163:Core/Src/radioenge_modem.c ****             // CDC_Transmit_FS("Resetting the radio...\r\n", strlen("Resetting the radio...\r\n"));
 164:Core/Src/radioenge_modem.c ****             resetRadio();
 630              		.loc 1 164 13
 631 00a0 FFF7FEFF 		bl	resetRadio
 165:Core/Src/radioenge_modem.c ****             ConfigCmdIndex = 0;
 632              		.loc 1 165 28
 633 00a4 0023     		movs	r3, #0
 634 00a6 7B61     		str	r3, [r7, #20]
 166:Core/Src/radioenge_modem.c ****             SetRadioState(RADIO_CONFIGURING);
 635              		.loc 1 166 13
 636 00a8 0220     		movs	r0, #2
 637 00aa FFF7FEFF 		bl	SetRadioState
 167:Core/Src/radioenge_modem.c ****             osThreadFlagsSet(ModemMngrTaskHandle, 0x01);
 638              		.loc 1 167 13
 639 00ae 234B     		ldr	r3, .L43+4
 640 00b0 1B68     		ldr	r3, [r3]
 641 00b2 0121     		movs	r1, #1
 642 00b4 1846     		mov	r0, r3
 643 00b6 FFF7FEFF 		bl	osThreadFlagsSet
 168:Core/Src/radioenge_modem.c ****             osDelay(1000);
 644              		.loc 1 168 13
 645 00ba 4FF47A70 		mov	r0, #1000
 646 00be FFF7FEFF 		bl	osDelay
 169:Core/Src/radioenge_modem.c ****             break;
 647              		.loc 1 169 13
 648 00c2 28E0     		b	.L32
 649              	.L37:
 170:Core/Src/radioenge_modem.c ****         }
 171:Core/Src/radioenge_modem.c ****         case RADIO_CONFIGURING:
 172:Core/Src/radioenge_modem.c ****         {
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccR3YDcD.s 			page 16


 173:Core/Src/radioenge_modem.c ****             if (sendRAWAT(gConfigCmds[ConfigCmdIndex]) == AT_OK)
 650              		.loc 1 173 38
 651 00c4 7B69     		ldr	r3, [r7, #20]
 652 00c6 1B02     		lsls	r3, r3, #8
 653 00c8 204A     		ldr	r2, .L43+20
 654 00ca 1344     		add	r3, r3, r2
 655              		.loc 1 173 17
 656 00cc 1846     		mov	r0, r3
 657 00ce FFF7FEFF 		bl	sendRAWAT
 658 00d2 0346     		mov	r3, r0
 659              		.loc 1 173 16
 660 00d4 002B     		cmp	r3, #0
 661 00d6 0CD1     		bne	.L39
 174:Core/Src/radioenge_modem.c ****             {                
 175:Core/Src/radioenge_modem.c ****                 ConfigCmdIndex++;
 662              		.loc 1 175 31
 663 00d8 7B69     		ldr	r3, [r7, #20]
 664 00da 0133     		adds	r3, r3, #1
 665 00dc 7B61     		str	r3, [r7, #20]
 176:Core/Src/radioenge_modem.c ****                 if (ConfigCmdIndex == NUMBER_OF_STRINGS)
 666              		.loc 1 176 20
 667 00de 7B69     		ldr	r3, [r7, #20]
 668 00e0 072B     		cmp	r3, #7
 669 00e2 02D1     		bne	.L40
 177:Core/Src/radioenge_modem.c ****                 {
 178:Core/Src/radioenge_modem.c ****                     SetRadioState(RADIO_JOINING);
 670              		.loc 1 178 21
 671 00e4 0420     		movs	r0, #4
 672 00e6 FFF7FEFF 		bl	SetRadioState
 673              	.L40:
 179:Core/Src/radioenge_modem.c ****                 }
 180:Core/Src/radioenge_modem.c ****                 osDelay(100);
 674              		.loc 1 180 17
 675 00ea 6420     		movs	r0, #100
 676 00ec FFF7FEFF 		bl	osDelay
 677 00f0 02E0     		b	.L41
 678              	.L39:
 181:Core/Src/radioenge_modem.c ****             }
 182:Core/Src/radioenge_modem.c ****             else
 183:Core/Src/radioenge_modem.c ****             {
 184:Core/Src/radioenge_modem.c ****                 SetRadioState(RADIO_RESET);
 679              		.loc 1 184 17
 680 00f2 0120     		movs	r0, #1
 681 00f4 FFF7FEFF 		bl	SetRadioState
 682              	.L41:
 185:Core/Src/radioenge_modem.c ****             }
 186:Core/Src/radioenge_modem.c ****             osThreadFlagsSet(ModemMngrTaskHandle, 0x01);
 683              		.loc 1 186 13
 684 00f8 104B     		ldr	r3, .L43+4
 685 00fa 1B68     		ldr	r3, [r3]
 686 00fc 0121     		movs	r1, #1
 687 00fe 1846     		mov	r0, r3
 688 0100 FFF7FEFF 		bl	osThreadFlagsSet
 187:Core/Src/radioenge_modem.c ****             break;
 689              		.loc 1 187 13
 690 0104 07E0     		b	.L32
 691              	.L33:
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccR3YDcD.s 			page 17


 188:Core/Src/radioenge_modem.c ****         }
 189:Core/Src/radioenge_modem.c ****         case RADIO_JOINING:
 190:Core/Src/radioenge_modem.c ****         {
 191:Core/Src/radioenge_modem.c ****             // wait for radio callback
 192:Core/Src/radioenge_modem.c ****             break;
 193:Core/Src/radioenge_modem.c ****         }
 194:Core/Src/radioenge_modem.c ****         case RADIO_READY:
 195:Core/Src/radioenge_modem.c ****         {
 196:Core/Src/radioenge_modem.c ****             // now we can send data
 197:Core/Src/radioenge_modem.c ****             break;
 198:Core/Src/radioenge_modem.c ****         }
 199:Core/Src/radioenge_modem.c ****         case RADIO_DUTYCYCLED:
 200:Core/Src/radioenge_modem.c ****         {
 201:Core/Src/radioenge_modem.c ****             // Wait the dutycycle period and return to ready
 202:Core/Src/radioenge_modem.c ****             osTimerStart(DutyCycleTimerHandle, 14000U);
 692              		.loc 1 202 13
 693 0106 124B     		ldr	r3, .L43+24
 694 0108 1B68     		ldr	r3, [r3]
 695 010a 43F2B061 		movw	r1, #14000
 696 010e 1846     		mov	r0, r3
 697 0110 FFF7FEFF 		bl	osTimerStart
 203:Core/Src/radioenge_modem.c ****             break;
 698              		.loc 1 203 13
 699 0114 00BF     		nop
 700              	.L32:
 204:Core/Src/radioenge_modem.c ****         }
 205:Core/Src/radioenge_modem.c ****         }
 206:Core/Src/radioenge_modem.c ****         modemflags = osEventFlagsSet(ModemStatusFlagsHandle, gRadioState);
 701              		.loc 1 206 22
 702 0116 0B4B     		ldr	r3, .L43+12
 703 0118 1B68     		ldr	r3, [r3]
 704 011a 0B4A     		ldr	r2, .L43+16
 705 011c 1278     		ldrb	r2, [r2]
 706 011e D2B2     		uxtb	r2, r2
 707 0120 1146     		mov	r1, r2
 708 0122 1846     		mov	r0, r3
 709 0124 FFF7FEFF 		bl	osEventFlagsSet
 710 0128 F860     		str	r0, [r7, #12]
 207:Core/Src/radioenge_modem.c ****         osSemaphoreRelease(RadioStateSemaphoreHandle);
 711              		.loc 1 207 9
 712 012a 054B     		ldr	r3, .L43+8
 713 012c 1B68     		ldr	r3, [r3]
 714 012e 1846     		mov	r0, r3
 715 0130 FFF7FEFF 		bl	osSemaphoreRelease
 156:Core/Src/radioenge_modem.c ****         osSemaphoreAcquire(RadioStateSemaphoreHandle, osWaitForever);
 716              		.loc 1 156 15
 717 0134 76E7     		b	.L42
 718              	.L44:
 719 0136 00BF     		.align	2
 720              	.L43:
 721 0138 00000000 		.word	ModemLedTimerHandle
 722 013c 00000000 		.word	ModemMngrTaskHandle
 723 0140 00000000 		.word	RadioStateSemaphoreHandle
 724 0144 00000000 		.word	ModemStatusFlagsHandle
 725 0148 00000000 		.word	gRadioState
 726 014c 00000000 		.word	gConfigCmds
 727 0150 00000000 		.word	DutyCycleTimerHandle
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccR3YDcD.s 			page 18


 728              		.cfi_endproc
 729              	.LFE225:
 731              		.global	gEncodedString
 732              		.section	.bss.gEncodedString,"aw",%nobits
 733              		.align	2
 736              	gEncodedString:
 737 0000 00000000 		.space	64
 737      00000000 
 737      00000000 
 737      00000000 
 737      00000000 
 738              		.global	gSendBuffer
 739              		.section	.bss.gSendBuffer,"aw",%nobits
 740              		.align	2
 743              	gSendBuffer:
 744 0000 00000000 		.space	80
 744      00000000 
 744      00000000 
 744      00000000 
 744      00000000 
 745              		.section	.text.LoRaSend,"ax",%progbits
 746              		.align	1
 747              		.global	LoRaSend
 748              		.syntax unified
 749              		.thumb
 750              		.thumb_func
 751              		.fpu fpv4-sp-d16
 753              	LoRaSend:
 754              	.LFB226:
 208:Core/Src/radioenge_modem.c ****     }
 209:Core/Src/radioenge_modem.c **** }
 210:Core/Src/radioenge_modem.c **** 
 211:Core/Src/radioenge_modem.c **** #define OUT_BUFFER_SIZE (64)
 212:Core/Src/radioenge_modem.c **** uint8_t gEncodedString[OUT_BUFFER_SIZE]; 
 213:Core/Src/radioenge_modem.c **** uint8_t gSendBuffer[OUT_BUFFER_SIZE+16]; 
 214:Core/Src/radioenge_modem.c **** 
 215:Core/Src/radioenge_modem.c **** 
 216:Core/Src/radioenge_modem.c **** osStatus_t LoRaSend(uint32_t LoraWANPort,uint8_t* msg)
 217:Core/Src/radioenge_modem.c **** {   
 755              		.loc 1 217 1
 756              		.cfi_startproc
 757              		@ args = 0, pretend = 0, frame = 8
 758              		@ frame_needed = 1, uses_anonymous_args = 0
 759 0000 80B5     		push	{r7, lr}
 760              	.LCFI25:
 761              		.cfi_def_cfa_offset 8
 762              		.cfi_offset 7, -8
 763              		.cfi_offset 14, -4
 764 0002 82B0     		sub	sp, sp, #8
 765              	.LCFI26:
 766              		.cfi_def_cfa_offset 16
 767 0004 00AF     		add	r7, sp, #0
 768              	.LCFI27:
 769              		.cfi_def_cfa_register 7
 770 0006 7860     		str	r0, [r7, #4]
 771 0008 3960     		str	r1, [r7]
 218:Core/Src/radioenge_modem.c ****     LoRaWaitDutyCycle();
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccR3YDcD.s 			page 19


 772              		.loc 1 218 5
 773 000a FFF7FEFF 		bl	LoRaWaitDutyCycle
 219:Core/Src/radioenge_modem.c ****     return LoRaSendNow(LoraWANPort,msg);    
 774              		.loc 1 219 12
 775 000e 3968     		ldr	r1, [r7]
 776 0010 7868     		ldr	r0, [r7, #4]
 777 0012 FFF7FEFF 		bl	LoRaSendNow
 778 0016 0346     		mov	r3, r0
 220:Core/Src/radioenge_modem.c **** }
 779              		.loc 1 220 1
 780 0018 1846     		mov	r0, r3
 781 001a 0837     		adds	r7, r7, #8
 782              	.LCFI28:
 783              		.cfi_def_cfa_offset 8
 784 001c BD46     		mov	sp, r7
 785              	.LCFI29:
 786              		.cfi_def_cfa_register 13
 787              		@ sp needed
 788 001e 80BD     		pop	{r7, pc}
 789              		.cfi_endproc
 790              	.LFE226:
 792              		.section	.rodata
 793 0006 0000     		.align	2
 794              	.LC1:
 795 0008 25303278 		.ascii	"%02x\000"
 795      00
 796              		.section	.text.bin_encode,"ax",%progbits
 797              		.align	1
 798              		.global	bin_encode
 799              		.syntax unified
 800              		.thumb
 801              		.thumb_func
 802              		.fpu fpv4-sp-d16
 804              	bin_encode:
 805              	.LFB227:
 221:Core/Src/radioenge_modem.c **** 
 222:Core/Src/radioenge_modem.c **** size_t bin_encode(void* in, size_t in_size, uint8_t* out, size_t max_out_size)
 223:Core/Src/radioenge_modem.c **** {
 806              		.loc 1 223 1
 807              		.cfi_startproc
 808              		@ args = 0, pretend = 0, frame = 32
 809              		@ frame_needed = 1, uses_anonymous_args = 0
 810 0000 80B5     		push	{r7, lr}
 811              	.LCFI30:
 812              		.cfi_def_cfa_offset 8
 813              		.cfi_offset 7, -8
 814              		.cfi_offset 14, -4
 815 0002 88B0     		sub	sp, sp, #32
 816              	.LCFI31:
 817              		.cfi_def_cfa_offset 40
 818 0004 00AF     		add	r7, sp, #0
 819              	.LCFI32:
 820              		.cfi_def_cfa_register 7
 821 0006 F860     		str	r0, [r7, #12]
 822 0008 B960     		str	r1, [r7, #8]
 823 000a 7A60     		str	r2, [r7, #4]
 824 000c 3B60     		str	r3, [r7]
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccR3YDcD.s 			page 20


 224:Core/Src/radioenge_modem.c ****     uint8_t* in_ptr = (uint8_t*)in;
 825              		.loc 1 224 14
 826 000e FB68     		ldr	r3, [r7, #12]
 827 0010 FB61     		str	r3, [r7, #28]
 225:Core/Src/radioenge_modem.c ****     size_t offset=0;
 828              		.loc 1 225 12
 829 0012 0023     		movs	r3, #0
 830 0014 BB61     		str	r3, [r7, #24]
 226:Core/Src/radioenge_modem.c ****     size_t iter = in_size;
 831              		.loc 1 226 12
 832 0016 BB68     		ldr	r3, [r7, #8]
 833 0018 7B61     		str	r3, [r7, #20]
 227:Core/Src/radioenge_modem.c ****     size_t i;
 228:Core/Src/radioenge_modem.c ****     //check for buffer overflow
 229:Core/Src/radioenge_modem.c ****     if(max_out_size<in_size*2)
 834              		.loc 1 229 28
 835 001a BB68     		ldr	r3, [r7, #8]
 836 001c 5B00     		lsls	r3, r3, #1
 837              		.loc 1 229 7
 838 001e 3A68     		ldr	r2, [r7]
 839 0020 9A42     		cmp	r2, r3
 840 0022 03D2     		bcs	.L48
 230:Core/Src/radioenge_modem.c ****     {
 231:Core/Src/radioenge_modem.c ****         iter = max_out_size/2;
 841              		.loc 1 231 14
 842 0024 3B68     		ldr	r3, [r7]
 843 0026 5B08     		lsrs	r3, r3, #1
 844 0028 7B61     		str	r3, [r7, #20]
 845 002a 01E0     		b	.L49
 846              	.L48:
 232:Core/Src/radioenge_modem.c ****     }
 233:Core/Src/radioenge_modem.c ****     else
 234:Core/Src/radioenge_modem.c ****     {
 235:Core/Src/radioenge_modem.c ****         iter = in_size;
 847              		.loc 1 235 14
 848 002c BB68     		ldr	r3, [r7, #8]
 849 002e 7B61     		str	r3, [r7, #20]
 850              	.L49:
 236:Core/Src/radioenge_modem.c ****     }
 237:Core/Src/radioenge_modem.c ****     //create the hex string expected by RadioEnge AT
 238:Core/Src/radioenge_modem.c ****     for(i=0;i<iter;i++)
 851              		.loc 1 238 10
 852 0030 0023     		movs	r3, #0
 853 0032 3B61     		str	r3, [r7, #16]
 854              		.loc 1 238 5
 855 0034 10E0     		b	.L50
 856              	.L51:
 857              	.LBB5:
 239:Core/Src/radioenge_modem.c ****     {
 240:Core/Src/radioenge_modem.c ****         sprintf(out+offset,"%02x",*(in_ptr++));
 858              		.loc 1 240 20 discriminator 3
 859 0036 7A68     		ldr	r2, [r7, #4]
 860 0038 BB69     		ldr	r3, [r7, #24]
 861 003a D018     		adds	r0, r2, r3
 862              		.loc 1 240 43 discriminator 3
 863 003c FB69     		ldr	r3, [r7, #28]
 864 003e 5A1C     		adds	r2, r3, #1
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccR3YDcD.s 			page 21


 865 0040 FA61     		str	r2, [r7, #28]
 866              		.loc 1 240 35 discriminator 3
 867 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 868              		.loc 1 240 9 discriminator 3
 869 0044 1A46     		mov	r2, r3
 870 0046 0949     		ldr	r1, .L53
 871 0048 FFF7FEFF 		bl	sprintf
 241:Core/Src/radioenge_modem.c ****         offset+=2*sizeof(uint8_t);
 872              		.loc 1 241 15 discriminator 3
 873 004c BB69     		ldr	r3, [r7, #24]
 874 004e 0233     		adds	r3, r3, #2
 875 0050 BB61     		str	r3, [r7, #24]
 876              	.LBE5:
 238:Core/Src/radioenge_modem.c ****     {
 877              		.loc 1 238 21 discriminator 3
 878 0052 3B69     		ldr	r3, [r7, #16]
 879 0054 0133     		adds	r3, r3, #1
 880 0056 3B61     		str	r3, [r7, #16]
 881              	.L50:
 238:Core/Src/radioenge_modem.c ****     {
 882              		.loc 1 238 5 discriminator 1
 883 0058 3A69     		ldr	r2, [r7, #16]
 884 005a 7B69     		ldr	r3, [r7, #20]
 885 005c 9A42     		cmp	r2, r3
 886 005e EAD3     		bcc	.L51
 242:Core/Src/radioenge_modem.c ****     }
 243:Core/Src/radioenge_modem.c ****     return offset; //returns the size of the AT buffer
 887              		.loc 1 243 12
 888 0060 BB69     		ldr	r3, [r7, #24]
 244:Core/Src/radioenge_modem.c **** }
 889              		.loc 1 244 1
 890 0062 1846     		mov	r0, r3
 891 0064 2037     		adds	r7, r7, #32
 892              	.LCFI33:
 893              		.cfi_def_cfa_offset 8
 894 0066 BD46     		mov	sp, r7
 895              	.LCFI34:
 896              		.cfi_def_cfa_register 13
 897              		@ sp needed
 898 0068 80BD     		pop	{r7, pc}
 899              	.L54:
 900 006a 00BF     		.align	2
 901              	.L53:
 902 006c 08000000 		.word	.LC1
 903              		.cfi_endproc
 904              	.LFE227:
 906              		.section	.text.LoRaSendB,"ax",%progbits
 907              		.align	1
 908              		.global	LoRaSendB
 909              		.syntax unified
 910              		.thumb
 911              		.thumb_func
 912              		.fpu fpv4-sp-d16
 914              	LoRaSendB:
 915              	.LFB228:
 245:Core/Src/radioenge_modem.c **** 
 246:Core/Src/radioenge_modem.c **** osStatus_t LoRaSendB(uint32_t LoraWANPort, uint8_t* msg, size_t size)
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccR3YDcD.s 			page 22


 247:Core/Src/radioenge_modem.c **** {
 916              		.loc 1 247 1
 917              		.cfi_startproc
 918              		@ args = 0, pretend = 0, frame = 16
 919              		@ frame_needed = 1, uses_anonymous_args = 0
 920 0000 80B5     		push	{r7, lr}
 921              	.LCFI35:
 922              		.cfi_def_cfa_offset 8
 923              		.cfi_offset 7, -8
 924              		.cfi_offset 14, -4
 925 0002 84B0     		sub	sp, sp, #16
 926              	.LCFI36:
 927              		.cfi_def_cfa_offset 24
 928 0004 00AF     		add	r7, sp, #0
 929              	.LCFI37:
 930              		.cfi_def_cfa_register 7
 931 0006 F860     		str	r0, [r7, #12]
 932 0008 B960     		str	r1, [r7, #8]
 933 000a 7A60     		str	r2, [r7, #4]
 248:Core/Src/radioenge_modem.c ****     LoRaWaitDutyCycle();     
 934              		.loc 1 248 5
 935 000c FFF7FEFF 		bl	LoRaWaitDutyCycle
 249:Core/Src/radioenge_modem.c ****     return LoRaSendBNow(LoraWANPort,msg,size);    
 936              		.loc 1 249 12
 937 0010 7A68     		ldr	r2, [r7, #4]
 938 0012 B968     		ldr	r1, [r7, #8]
 939 0014 F868     		ldr	r0, [r7, #12]
 940 0016 FFF7FEFF 		bl	LoRaSendBNow
 941 001a 0346     		mov	r3, r0
 250:Core/Src/radioenge_modem.c **** }
 942              		.loc 1 250 1
 943 001c 1846     		mov	r0, r3
 944 001e 1037     		adds	r7, r7, #16
 945              	.LCFI38:
 946              		.cfi_def_cfa_offset 8
 947 0020 BD46     		mov	sp, r7
 948              	.LCFI39:
 949              		.cfi_def_cfa_register 13
 950              		@ sp needed
 951 0022 80BD     		pop	{r7, pc}
 952              		.cfi_endproc
 953              	.LFE228:
 955              		.section	.text.LoRaWaitDutyCycle,"ax",%progbits
 956              		.align	1
 957              		.global	LoRaWaitDutyCycle
 958              		.syntax unified
 959              		.thumb
 960              		.thumb_func
 961              		.fpu fpv4-sp-d16
 963              	LoRaWaitDutyCycle:
 964              	.LFB229:
 251:Core/Src/radioenge_modem.c **** 
 252:Core/Src/radioenge_modem.c **** 
 253:Core/Src/radioenge_modem.c **** //LoRaSendNow and LoRaSendBNow should only be used in conjunction with LoRaWaitDutyCycle()
 254:Core/Src/radioenge_modem.c **** 
 255:Core/Src/radioenge_modem.c **** void LoRaWaitDutyCycle()
 256:Core/Src/radioenge_modem.c **** {
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccR3YDcD.s 			page 23


 965              		.loc 1 256 1
 966              		.cfi_startproc
 967              		@ args = 0, pretend = 0, frame = 0
 968              		@ frame_needed = 1, uses_anonymous_args = 0
 969 0000 80B5     		push	{r7, lr}
 970              	.LCFI40:
 971              		.cfi_def_cfa_offset 8
 972              		.cfi_offset 7, -8
 973              		.cfi_offset 14, -4
 974 0002 00AF     		add	r7, sp, #0
 975              	.LCFI41:
 976              		.cfi_def_cfa_register 7
 257:Core/Src/radioenge_modem.c ****    osEventFlagsWait(ModemStatusFlagsHandle, RADIO_READY, osFlagsWaitAny | osFlagsNoClear, osWaitFor
 977              		.loc 1 257 4
 978 0004 0C4B     		ldr	r3, .L58
 979 0006 1868     		ldr	r0, [r3]
 980 0008 4FF0FF33 		mov	r3, #-1
 981 000c 0222     		movs	r2, #2
 982 000e 0821     		movs	r1, #8
 983 0010 FFF7FEFF 		bl	osEventFlagsWait
 258:Core/Src/radioenge_modem.c ****    osSemaphoreAcquire(LoRaTXSemaphoreHandle,osWaitForever);    
 984              		.loc 1 258 4
 985 0014 094B     		ldr	r3, .L58+4
 986 0016 1B68     		ldr	r3, [r3]
 987 0018 4FF0FF31 		mov	r1, #-1
 988 001c 1846     		mov	r0, r3
 989 001e FFF7FEFF 		bl	osSemaphoreAcquire
 259:Core/Src/radioenge_modem.c ****    osEventFlagsWait(ModemStatusFlagsHandle, RADIO_READY, osFlagsWaitAny | osFlagsNoClear, osWaitFor
 990              		.loc 1 259 4
 991 0022 054B     		ldr	r3, .L58
 992 0024 1868     		ldr	r0, [r3]
 993 0026 4FF0FF33 		mov	r3, #-1
 994 002a 0222     		movs	r2, #2
 995 002c 0821     		movs	r1, #8
 996 002e FFF7FEFF 		bl	osEventFlagsWait
 260:Core/Src/radioenge_modem.c **** }
 997              		.loc 1 260 1
 998 0032 00BF     		nop
 999 0034 80BD     		pop	{r7, pc}
 1000              	.L59:
 1001 0036 00BF     		.align	2
 1002              	.L58:
 1003 0038 00000000 		.word	ModemStatusFlagsHandle
 1004 003c 00000000 		.word	LoRaTXSemaphoreHandle
 1005              		.cfi_endproc
 1006              	.LFE229:
 1008              		.section	.rodata
 1009 000d 000000   		.align	2
 1010              	.LC2:
 1011 0010 41542B53 		.ascii	"AT+SEND=%d:%s\015\012\000"
 1011      454E443D 
 1011      25643A25 
 1011      730D0A00 
 1012              		.section	.text.LoRaSendNow,"ax",%progbits
 1013              		.align	1
 1014              		.global	LoRaSendNow
 1015              		.syntax unified
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccR3YDcD.s 			page 24


 1016              		.thumb
 1017              		.thumb_func
 1018              		.fpu fpv4-sp-d16
 1020              	LoRaSendNow:
 1021              	.LFB230:
 261:Core/Src/radioenge_modem.c **** 
 262:Core/Src/radioenge_modem.c **** osStatus_t LoRaSendNow(uint32_t LoraWANPort, uint8_t* msg)
 263:Core/Src/radioenge_modem.c **** {
 1022              		.loc 1 263 1
 1023              		.cfi_startproc
 1024              		@ args = 0, pretend = 0, frame = 16
 1025              		@ frame_needed = 1, uses_anonymous_args = 0
 1026 0000 80B5     		push	{r7, lr}
 1027              	.LCFI42:
 1028              		.cfi_def_cfa_offset 8
 1029              		.cfi_offset 7, -8
 1030              		.cfi_offset 14, -4
 1031 0002 86B0     		sub	sp, sp, #24
 1032              	.LCFI43:
 1033              		.cfi_def_cfa_offset 32
 1034 0004 02AF     		add	r7, sp, #8
 1035              	.LCFI44:
 1036              		.cfi_def_cfa 7, 24
 1037 0006 7860     		str	r0, [r7, #4]
 1038 0008 3960     		str	r1, [r7]
 264:Core/Src/radioenge_modem.c ****     osStatus_t ret = osError;    
 1039              		.loc 1 264 16
 1040 000a 4FF0FF33 		mov	r3, #-1
 1041 000e FB60     		str	r3, [r7, #12]
 265:Core/Src/radioenge_modem.c ****     osSemaphoreAcquire(RadioStateSemaphoreHandle, osWaitForever);
 1042              		.loc 1 265 5
 1043 0010 164B     		ldr	r3, .L63
 1044 0012 1B68     		ldr	r3, [r3]
 1045 0014 4FF0FF31 		mov	r1, #-1
 1046 0018 1846     		mov	r0, r3
 1047 001a FFF7FEFF 		bl	osSemaphoreAcquire
 266:Core/Src/radioenge_modem.c ****     if (gRadioState == RADIO_READY)
 1048              		.loc 1 266 21
 1049 001e 144B     		ldr	r3, .L63+4
 1050 0020 1B78     		ldrb	r3, [r3]
 1051 0022 DBB2     		uxtb	r3, r3
 1052              		.loc 1 266 8
 1053 0024 082B     		cmp	r3, #8
 1054 0026 12D1     		bne	.L61
 1055              	.LBB6:
 267:Core/Src/radioenge_modem.c ****     {
 268:Core/Src/radioenge_modem.c ****         snprintf(gSendBuffer, OUT_BUFFER_SIZE + 16, "AT+SEND=%d:%s\r\n", LoraWANPort, msg);
 1056              		.loc 1 268 9
 1057 0028 3B68     		ldr	r3, [r7]
 1058 002a 0093     		str	r3, [sp]
 1059 002c 7B68     		ldr	r3, [r7, #4]
 1060 002e 114A     		ldr	r2, .L63+8
 1061 0030 5021     		movs	r1, #80
 1062 0032 1148     		ldr	r0, .L63+12
 1063 0034 FFF7FEFF 		bl	snprintf
 269:Core/Src/radioenge_modem.c ****         if (sendRAWAT(gSendBuffer) == AT_TX_OK)
 1064              		.loc 1 269 13
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccR3YDcD.s 			page 25


 1065 0038 0F48     		ldr	r0, .L63+12
 1066 003a FFF7FEFF 		bl	sendRAWAT
 1067 003e 0346     		mov	r3, r0
 1068              		.loc 1 269 12
 1069 0040 012B     		cmp	r3, #1
 1070 0042 04D1     		bne	.L61
 270:Core/Src/radioenge_modem.c ****         {
 271:Core/Src/radioenge_modem.c ****             SetRadioState(RADIO_DUTYCYCLED);
 1071              		.loc 1 271 13
 1072 0044 1020     		movs	r0, #16
 1073 0046 FFF7FEFF 		bl	SetRadioState
 272:Core/Src/radioenge_modem.c ****             ret = osOK;
 1074              		.loc 1 272 17
 1075 004a 0023     		movs	r3, #0
 1076 004c FB60     		str	r3, [r7, #12]
 1077              	.L61:
 1078              	.LBE6:
 273:Core/Src/radioenge_modem.c ****         }        
 274:Core/Src/radioenge_modem.c ****     }    
 275:Core/Src/radioenge_modem.c ****     osSemaphoreRelease(RadioStateSemaphoreHandle);
 1079              		.loc 1 275 5
 1080 004e 074B     		ldr	r3, .L63
 1081 0050 1B68     		ldr	r3, [r3]
 1082 0052 1846     		mov	r0, r3
 1083 0054 FFF7FEFF 		bl	osSemaphoreRelease
 276:Core/Src/radioenge_modem.c ****     osSemaphoreRelease(LoRaTXSemaphoreHandle);
 1084              		.loc 1 276 5
 1085 0058 084B     		ldr	r3, .L63+16
 1086 005a 1B68     		ldr	r3, [r3]
 1087 005c 1846     		mov	r0, r3
 1088 005e FFF7FEFF 		bl	osSemaphoreRelease
 277:Core/Src/radioenge_modem.c ****     return ret;
 1089              		.loc 1 277 12
 1090 0062 FB68     		ldr	r3, [r7, #12]
 278:Core/Src/radioenge_modem.c **** }
 1091              		.loc 1 278 1
 1092 0064 1846     		mov	r0, r3
 1093 0066 1037     		adds	r7, r7, #16
 1094              	.LCFI45:
 1095              		.cfi_def_cfa_offset 8
 1096 0068 BD46     		mov	sp, r7
 1097              	.LCFI46:
 1098              		.cfi_def_cfa_register 13
 1099              		@ sp needed
 1100 006a 80BD     		pop	{r7, pc}
 1101              	.L64:
 1102              		.align	2
 1103              	.L63:
 1104 006c 00000000 		.word	RadioStateSemaphoreHandle
 1105 0070 00000000 		.word	gRadioState
 1106 0074 10000000 		.word	.LC2
 1107 0078 00000000 		.word	gSendBuffer
 1108 007c 00000000 		.word	LoRaTXSemaphoreHandle
 1109              		.cfi_endproc
 1110              	.LFE230:
 1112              		.section	.rodata
 1113              		.align	2
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccR3YDcD.s 			page 26


 1114              	.LC3:
 1115 0020 41542B53 		.ascii	"AT+SENDB=%d:%s\015\012\000"
 1115      454E4442 
 1115      3D25643A 
 1115      25730D0A 
 1115      00
 1116              		.section	.text.LoRaSendBNow,"ax",%progbits
 1117              		.align	1
 1118              		.global	LoRaSendBNow
 1119              		.syntax unified
 1120              		.thumb
 1121              		.thumb_func
 1122              		.fpu fpv4-sp-d16
 1124              	LoRaSendBNow:
 1125              	.LFB231:
 279:Core/Src/radioenge_modem.c **** 
 280:Core/Src/radioenge_modem.c **** osStatus_t LoRaSendBNow(uint32_t LoraWANPort, uint8_t* msg, size_t size)
 281:Core/Src/radioenge_modem.c **** {
 1126              		.loc 1 281 1
 1127              		.cfi_startproc
 1128              		@ args = 0, pretend = 0, frame = 24
 1129              		@ frame_needed = 1, uses_anonymous_args = 0
 1130 0000 80B5     		push	{r7, lr}
 1131              	.LCFI47:
 1132              		.cfi_def_cfa_offset 8
 1133              		.cfi_offset 7, -8
 1134              		.cfi_offset 14, -4
 1135 0002 88B0     		sub	sp, sp, #32
 1136              	.LCFI48:
 1137              		.cfi_def_cfa_offset 40
 1138 0004 02AF     		add	r7, sp, #8
 1139              	.LCFI49:
 1140              		.cfi_def_cfa 7, 32
 1141 0006 F860     		str	r0, [r7, #12]
 1142 0008 B960     		str	r1, [r7, #8]
 1143 000a 7A60     		str	r2, [r7, #4]
 282:Core/Src/radioenge_modem.c ****     osStatus_t ret = osError;
 1144              		.loc 1 282 16
 1145 000c 4FF0FF33 		mov	r3, #-1
 1146 0010 7B61     		str	r3, [r7, #20]
 283:Core/Src/radioenge_modem.c ****     osSemaphoreAcquire(RadioStateSemaphoreHandle, osWaitForever);
 1147              		.loc 1 283 5
 1148 0012 1A4B     		ldr	r3, .L68
 1149 0014 1B68     		ldr	r3, [r3]
 1150 0016 4FF0FF31 		mov	r1, #-1
 1151 001a 1846     		mov	r0, r3
 1152 001c FFF7FEFF 		bl	osSemaphoreAcquire
 284:Core/Src/radioenge_modem.c ****     if (gRadioState == RADIO_READY)
 1153              		.loc 1 284 21
 1154 0020 174B     		ldr	r3, .L68+4
 1155 0022 1B78     		ldrb	r3, [r3]
 1156 0024 DBB2     		uxtb	r3, r3
 1157              		.loc 1 284 8
 1158 0026 082B     		cmp	r3, #8
 1159 0028 19D1     		bne	.L66
 1160              	.LBB7:
 285:Core/Src/radioenge_modem.c ****     {
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccR3YDcD.s 			page 27


 286:Core/Src/radioenge_modem.c ****         size_t encoded_size = bin_encode((void *)(msg), size, gEncodedString, OUT_BUFFER_SIZE);
 1161              		.loc 1 286 31
 1162 002a 4023     		movs	r3, #64
 1163 002c 154A     		ldr	r2, .L68+8
 1164 002e 7968     		ldr	r1, [r7, #4]
 1165 0030 B868     		ldr	r0, [r7, #8]
 1166 0032 FFF7FEFF 		bl	bin_encode
 1167 0036 3861     		str	r0, [r7, #16]
 287:Core/Src/radioenge_modem.c ****         snprintf(gSendBuffer, OUT_BUFFER_SIZE + 16, "AT+SENDB=%d:%s\r\n", LoraWANPort, gEncodedStri
 1168              		.loc 1 287 9
 1169 0038 124B     		ldr	r3, .L68+8
 1170 003a 0093     		str	r3, [sp]
 1171 003c FB68     		ldr	r3, [r7, #12]
 1172 003e 124A     		ldr	r2, .L68+12
 1173 0040 5021     		movs	r1, #80
 1174 0042 1248     		ldr	r0, .L68+16
 1175 0044 FFF7FEFF 		bl	snprintf
 288:Core/Src/radioenge_modem.c ****         if (sendRAWAT(gSendBuffer) == AT_TX_OK)
 1176              		.loc 1 288 13
 1177 0048 1048     		ldr	r0, .L68+16
 1178 004a FFF7FEFF 		bl	sendRAWAT
 1179 004e 0346     		mov	r3, r0
 1180              		.loc 1 288 12
 1181 0050 012B     		cmp	r3, #1
 1182 0052 04D1     		bne	.L66
 289:Core/Src/radioenge_modem.c ****         {
 290:Core/Src/radioenge_modem.c ****             SetRadioState(RADIO_DUTYCYCLED);
 1183              		.loc 1 290 13
 1184 0054 1020     		movs	r0, #16
 1185 0056 FFF7FEFF 		bl	SetRadioState
 291:Core/Src/radioenge_modem.c ****             ret = osOK;
 1186              		.loc 1 291 17
 1187 005a 0023     		movs	r3, #0
 1188 005c 7B61     		str	r3, [r7, #20]
 1189              	.L66:
 1190              	.LBE7:
 292:Core/Src/radioenge_modem.c ****         }
 293:Core/Src/radioenge_modem.c ****     }
 294:Core/Src/radioenge_modem.c ****     osSemaphoreRelease(RadioStateSemaphoreHandle);
 1191              		.loc 1 294 5
 1192 005e 074B     		ldr	r3, .L68
 1193 0060 1B68     		ldr	r3, [r3]
 1194 0062 1846     		mov	r0, r3
 1195 0064 FFF7FEFF 		bl	osSemaphoreRelease
 295:Core/Src/radioenge_modem.c ****     osSemaphoreRelease(LoRaTXSemaphoreHandle);
 1196              		.loc 1 295 5
 1197 0068 094B     		ldr	r3, .L68+20
 1198 006a 1B68     		ldr	r3, [r3]
 1199 006c 1846     		mov	r0, r3
 1200 006e FFF7FEFF 		bl	osSemaphoreRelease
 296:Core/Src/radioenge_modem.c ****     return ret;
 1201              		.loc 1 296 12
 1202 0072 7B69     		ldr	r3, [r7, #20]
 297:Core/Src/radioenge_modem.c **** }
 1203              		.loc 1 297 1
 1204 0074 1846     		mov	r0, r3
 1205 0076 1837     		adds	r7, r7, #24
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccR3YDcD.s 			page 28


 1206              	.LCFI50:
 1207              		.cfi_def_cfa_offset 8
 1208 0078 BD46     		mov	sp, r7
 1209              	.LCFI51:
 1210              		.cfi_def_cfa_register 13
 1211              		@ sp needed
 1212 007a 80BD     		pop	{r7, pc}
 1213              	.L69:
 1214              		.align	2
 1215              	.L68:
 1216 007c 00000000 		.word	RadioStateSemaphoreHandle
 1217 0080 00000000 		.word	gRadioState
 1218 0084 00000000 		.word	gEncodedString
 1219 0088 20000000 		.word	.LC3
 1220 008c 00000000 		.word	gSendBuffer
 1221 0090 00000000 		.word	LoRaTXSemaphoreHandle
 1222              		.cfi_endproc
 1223              	.LFE231:
 1225              		.text
 1226              	.Letext0:
 1227              		.file 2 "c:\\arm-gcc\\tools\\gcc-arm-none-eabi-10-2020-q4-major\\lib\\gcc\\arm-none-eabi\\10.2.1\\
 1228              		.file 3 "c:\\arm-gcc\\tools\\gcc-arm-none-eabi-10-2020-q4-major\\arm-none-eabi\\include\\machine\\
 1229              		.file 4 "c:\\arm-gcc\\tools\\gcc-arm-none-eabi-10-2020-q4-major\\arm-none-eabi\\include\\sys\\_std
 1230              		.file 5 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h"
 1231              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 1232              		.file 7 "Core/Inc/radioenge_modem.h"
 1233              		.file 8 "Core/Inc/uart_at.h"
 1234              		.file 9 "<built-in>"
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccR3YDcD.s 			page 29


DEFINED SYMBOLS
                            *ABS*:00000000 radioenge_modem.c
C:\Users\EI\AppData\Local\Temp\ccR3YDcD.s:21     .bss.gJoinedFSM:00000000 gJoinedFSM
C:\Users\EI\AppData\Local\Temp\ccR3YDcD.s:22     .bss.gJoinedFSM:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccR3YDcD.s:27     .data.gRadioState:00000000 gRadioState
C:\Users\EI\AppData\Local\Temp\ccR3YDcD.s:34     .data.gConfigCmds:00000000 gConfigCmds
C:\Users\EI\AppData\Local\Temp\ccR3YDcD.s:31     .data.gConfigCmds:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccR3YDcD.s:55     .bss.gConsecutiveJoinErrors:00000000 gConsecutiveJoinErrors
C:\Users\EI\AppData\Local\Temp\ccR3YDcD.s:52     .bss.gConsecutiveJoinErrors:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccR3YDcD.s:58     .text.LoRaWAN_JoinCallback:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccR3YDcD.s:66     .text.LoRaWAN_JoinCallback:00000000 LoRaWAN_JoinCallback
C:\Users\EI\AppData\Local\Temp\ccR3YDcD.s:291    .text.SetRadioState:00000000 SetRadioState
C:\Users\EI\AppData\Local\Temp\ccR3YDcD.s:157    .text.LoRaWAN_JoinCallback:0000006c $d
C:\Users\EI\AppData\Local\Temp\ccR3YDcD.s:165    .text.DutyCycleTimerCallback:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccR3YDcD.s:172    .text.DutyCycleTimerCallback:00000000 DutyCycleTimerCallback
C:\Users\EI\AppData\Local\Temp\ccR3YDcD.s:227    .text.DutyCycleTimerCallback:00000038 $d
C:\Users\EI\AppData\Local\Temp\ccR3YDcD.s:233    .rodata:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccR3YDcD.s:237    .text.resetRadio:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccR3YDcD.s:244    .text.resetRadio:00000000 resetRadio
C:\Users\EI\AppData\Local\Temp\ccR3YDcD.s:279    .text.resetRadio:00000020 $d
C:\Users\EI\AppData\Local\Temp\ccR3YDcD.s:284    .text.SetRadioState:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccR3YDcD.s:333    .text.SetRadioState:00000024 $d
C:\Users\EI\AppData\Local\Temp\ccR3YDcD.s:339    .text.ModemLedCallback:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccR3YDcD.s:346    .text.ModemLedCallback:00000000 ModemLedCallback
C:\Users\EI\AppData\Local\Temp\ccR3YDcD.s:375    .text.ModemLedCallback:0000001c $d
C:\Users\EI\AppData\Local\Temp\ccR3YDcD.s:391    .text.ModemLedCallback:0000005c $t
C:\Users\EI\AppData\Local\Temp\ccR3YDcD.s:536    .text.ModemLedCallback:00000150 $d
C:\Users\EI\AppData\Local\Temp\ccR3YDcD.s:542    .text.ModemManagerTaskCode:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccR3YDcD.s:549    .text.ModemManagerTaskCode:00000000 ModemManagerTaskCode
C:\Users\EI\AppData\Local\Temp\ccR3YDcD.s:612    .text.ModemManagerTaskCode:00000060 $d
C:\Users\EI\AppData\Local\Temp\ccR3YDcD.s:628    .text.ModemManagerTaskCode:000000a0 $t
C:\Users\EI\AppData\Local\Temp\ccR3YDcD.s:721    .text.ModemManagerTaskCode:00000138 $d
C:\Users\EI\AppData\Local\Temp\ccR3YDcD.s:736    .bss.gEncodedString:00000000 gEncodedString
C:\Users\EI\AppData\Local\Temp\ccR3YDcD.s:733    .bss.gEncodedString:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccR3YDcD.s:743    .bss.gSendBuffer:00000000 gSendBuffer
C:\Users\EI\AppData\Local\Temp\ccR3YDcD.s:740    .bss.gSendBuffer:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccR3YDcD.s:746    .text.LoRaSend:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccR3YDcD.s:753    .text.LoRaSend:00000000 LoRaSend
C:\Users\EI\AppData\Local\Temp\ccR3YDcD.s:963    .text.LoRaWaitDutyCycle:00000000 LoRaWaitDutyCycle
C:\Users\EI\AppData\Local\Temp\ccR3YDcD.s:1020   .text.LoRaSendNow:00000000 LoRaSendNow
C:\Users\EI\AppData\Local\Temp\ccR3YDcD.s:797    .text.bin_encode:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccR3YDcD.s:804    .text.bin_encode:00000000 bin_encode
C:\Users\EI\AppData\Local\Temp\ccR3YDcD.s:902    .text.bin_encode:0000006c $d
C:\Users\EI\AppData\Local\Temp\ccR3YDcD.s:907    .text.LoRaSendB:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccR3YDcD.s:914    .text.LoRaSendB:00000000 LoRaSendB
C:\Users\EI\AppData\Local\Temp\ccR3YDcD.s:1124   .text.LoRaSendBNow:00000000 LoRaSendBNow
C:\Users\EI\AppData\Local\Temp\ccR3YDcD.s:956    .text.LoRaWaitDutyCycle:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccR3YDcD.s:1003   .text.LoRaWaitDutyCycle:00000038 $d
C:\Users\EI\AppData\Local\Temp\ccR3YDcD.s:1013   .text.LoRaSendNow:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccR3YDcD.s:1104   .text.LoRaSendNow:0000006c $d
C:\Users\EI\AppData\Local\Temp\ccR3YDcD.s:1117   .text.LoRaSendBNow:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccR3YDcD.s:1216   .text.LoRaSendBNow:0000007c $d

UNDEFINED SYMBOLS
osSemaphoreAcquire
osThreadFlagsSet
osSemaphoreRelease
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccR3YDcD.s 			page 30


RadioStateSemaphoreHandle
ModemMngrTaskHandle
osDelay
sendRAWAT
HAL_GPIO_TogglePin
HAL_GPIO_WritePin
osTimerStart
osThreadFlagsWait
osEventFlagsClear
osEventFlagsSet
ModemLedTimerHandle
ModemStatusFlagsHandle
DutyCycleTimerHandle
sprintf
osEventFlagsWait
LoRaTXSemaphoreHandle
snprintf
