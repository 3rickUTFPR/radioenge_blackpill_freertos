ARM GAS  C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	hadc1
  20              		.section	.bss.hadc1,"aw",%nobits
  21              		.align	2
  24              	hadc1:
  25 0000 00000000 		.space	72
  25      00000000 
  25      00000000 
  25      00000000 
  25      00000000 
  26              		.global	htim1
  27              		.section	.bss.htim1,"aw",%nobits
  28              		.align	2
  31              	htim1:
  32 0000 00000000 		.space	72
  32      00000000 
  32      00000000 
  32      00000000 
  32      00000000 
  33              		.global	htim2
  34              		.section	.bss.htim2,"aw",%nobits
  35              		.align	2
  38              	htim2:
  39 0000 00000000 		.space	72
  39      00000000 
  39      00000000 
  39      00000000 
  39      00000000 
  40              		.global	htim3
  41              		.section	.bss.htim3,"aw",%nobits
  42              		.align	2
  45              	htim3:
  46 0000 00000000 		.space	72
  46      00000000 
  46      00000000 
  46      00000000 
  46      00000000 
  47              		.global	huart1
  48              		.section	.bss.huart1,"aw",%nobits
  49              		.align	2
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s 			page 2


  52              	huart1:
  53 0000 00000000 		.space	68
  53      00000000 
  53      00000000 
  53      00000000 
  53      00000000 
  54              		.global	hdma_usart1_rx
  55              		.section	.bss.hdma_usart1_rx,"aw",%nobits
  56              		.align	2
  59              	hdma_usart1_rx:
  60 0000 00000000 		.space	96
  60      00000000 
  60      00000000 
  60      00000000 
  60      00000000 
  61              		.global	hdma_usart1_tx
  62              		.section	.bss.hdma_usart1_tx,"aw",%nobits
  63              		.align	2
  66              	hdma_usart1_tx:
  67 0000 00000000 		.space	96
  67      00000000 
  67      00000000 
  67      00000000 
  67      00000000 
  68              		.global	defaultTaskHandle
  69              		.section	.bss.defaultTaskHandle,"aw",%nobits
  70              		.align	2
  73              	defaultTaskHandle:
  74 0000 00000000 		.space	4
  75              		.global	defaultTaskBuffer
  76              		.section	.bss.defaultTaskBuffer,"aw",%nobits
  77              		.align	2
  80              	defaultTaskBuffer:
  81 0000 00000000 		.space	512
  81      00000000 
  81      00000000 
  81      00000000 
  81      00000000 
  82              		.global	defaultTaskControlBlock
  83              		.section	.bss.defaultTaskControlBlock,"aw",%nobits
  84              		.align	2
  87              	defaultTaskControlBlock:
  88 0000 00000000 		.space	100
  88      00000000 
  88      00000000 
  88      00000000 
  88      00000000 
  89              		.global	defaultTask_attributes
  90              		.section	.rodata
  91              		.align	2
  92              	.LC0:
  93 0000 64656661 		.ascii	"defaultTask\000"
  93      756C7454 
  93      61736B00 
  94              		.section	.rodata.defaultTask_attributes,"a"
  95              		.align	2
  98              	defaultTask_attributes:
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s 			page 3


  99 0000 00000000 		.word	.LC0
 100 0004 00000000 		.space	4
 101 0008 00000000 		.word	defaultTaskControlBlock
 102 000c 64000000 		.word	100
 103 0010 00000000 		.word	defaultTaskBuffer
 104 0014 00020000 		.word	512
 105 0018 09000000 		.word	9
 106 001c 00000000 		.space	8
 106      00000000 
 107              		.global	ATParsingTaskHandle
 108              		.section	.bss.ATParsingTaskHandle,"aw",%nobits
 109              		.align	2
 112              	ATParsingTaskHandle:
 113 0000 00000000 		.space	4
 114              		.global	ATParsingTaskBuffer
 115              		.section	.bss.ATParsingTaskBuffer,"aw",%nobits
 116              		.align	2
 119              	ATParsingTaskBuffer:
 120 0000 00000000 		.space	2048
 120      00000000 
 120      00000000 
 120      00000000 
 120      00000000 
 121              		.global	ATParsingTaskControlBlock
 122              		.section	.bss.ATParsingTaskControlBlock,"aw",%nobits
 123              		.align	2
 126              	ATParsingTaskControlBlock:
 127 0000 00000000 		.space	100
 127      00000000 
 127      00000000 
 127      00000000 
 127      00000000 
 128              		.global	ATParsingTask_attributes
 129              		.section	.rodata
 130              		.align	2
 131              	.LC1:
 132 000c 41545061 		.ascii	"ATParsingTask\000"
 132      7273696E 
 132      67546173 
 132      6B00
 133              		.section	.rodata.ATParsingTask_attributes,"a"
 134              		.align	2
 137              	ATParsingTask_attributes:
 138 0000 0C000000 		.word	.LC1
 139 0004 00000000 		.space	4
 140 0008 00000000 		.word	ATParsingTaskControlBlock
 141 000c 64000000 		.word	100
 142 0010 00000000 		.word	ATParsingTaskBuffer
 143 0014 00080000 		.word	2048
 144 0018 27000000 		.word	39
 145 001c 00000000 		.space	8
 145      00000000 
 146              		.global	ATHandlingTaskHandle
 147              		.section	.bss.ATHandlingTaskHandle,"aw",%nobits
 148              		.align	2
 151              	ATHandlingTaskHandle:
 152 0000 00000000 		.space	4
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s 			page 4


 153              		.global	ATHandlingTaskBuffer
 154              		.section	.bss.ATHandlingTaskBuffer,"aw",%nobits
 155              		.align	2
 158              	ATHandlingTaskBuffer:
 159 0000 00000000 		.space	2048
 159      00000000 
 159      00000000 
 159      00000000 
 159      00000000 
 160              		.global	ATHandlingTaskControlBlock
 161              		.section	.bss.ATHandlingTaskControlBlock,"aw",%nobits
 162              		.align	2
 165              	ATHandlingTaskControlBlock:
 166 0000 00000000 		.space	100
 166      00000000 
 166      00000000 
 166      00000000 
 166      00000000 
 167              		.global	ATHandlingTask_attributes
 168              		.section	.rodata
 169 001a 0000     		.align	2
 170              	.LC2:
 171 001c 41544861 		.ascii	"ATHandlingTask\000"
 171      6E646C69 
 171      6E675461 
 171      736B00
 172              		.section	.rodata.ATHandlingTask_attributes,"a"
 173              		.align	2
 176              	ATHandlingTask_attributes:
 177 0000 1C000000 		.word	.LC2
 178 0004 00000000 		.space	4
 179 0008 00000000 		.word	ATHandlingTaskControlBlock
 180 000c 64000000 		.word	100
 181 0010 00000000 		.word	ATHandlingTaskBuffer
 182 0014 00080000 		.word	2048
 183 0018 26000000 		.word	38
 184 001c 00000000 		.space	8
 184      00000000 
 185              		.global	UARTProcTaskHandle
 186              		.section	.bss.UARTProcTaskHandle,"aw",%nobits
 187              		.align	2
 190              	UARTProcTaskHandle:
 191 0000 00000000 		.space	4
 192              		.global	UARTProcTaskBuffer
 193              		.section	.bss.UARTProcTaskBuffer,"aw",%nobits
 194              		.align	2
 197              	UARTProcTaskBuffer:
 198 0000 00000000 		.space	2048
 198      00000000 
 198      00000000 
 198      00000000 
 198      00000000 
 199              		.global	UARTProcTaskControlBlock
 200              		.section	.bss.UARTProcTaskControlBlock,"aw",%nobits
 201              		.align	2
 204              	UARTProcTaskControlBlock:
 205 0000 00000000 		.space	100
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s 			page 5


 205      00000000 
 205      00000000 
 205      00000000 
 205      00000000 
 206              		.global	UARTProcTask_attributes
 207              		.section	.rodata
 208 002b 00       		.align	2
 209              	.LC3:
 210 002c 55415254 		.ascii	"UARTProcTask\000"
 210      50726F63 
 210      5461736B 
 210      00
 211              		.section	.rodata.UARTProcTask_attributes,"a"
 212              		.align	2
 215              	UARTProcTask_attributes:
 216 0000 2C000000 		.word	.LC3
 217 0004 00000000 		.space	4
 218 0008 00000000 		.word	UARTProcTaskControlBlock
 219 000c 64000000 		.word	100
 220 0010 00000000 		.word	UARTProcTaskBuffer
 221 0014 00080000 		.word	2048
 222 0018 2F000000 		.word	47
 223 001c 00000000 		.space	8
 223      00000000 
 224              		.global	ModemMngrTaskHandle
 225              		.section	.bss.ModemMngrTaskHandle,"aw",%nobits
 226              		.align	2
 229              	ModemMngrTaskHandle:
 230 0000 00000000 		.space	4
 231              		.global	ModemMngrTaskBuffer
 232              		.section	.bss.ModemMngrTaskBuffer,"aw",%nobits
 233              		.align	2
 236              	ModemMngrTaskBuffer:
 237 0000 00000000 		.space	2048
 237      00000000 
 237      00000000 
 237      00000000 
 237      00000000 
 238              		.global	ModemMngrTaskControlBlock
 239              		.section	.bss.ModemMngrTaskControlBlock,"aw",%nobits
 240              		.align	2
 243              	ModemMngrTaskControlBlock:
 244 0000 00000000 		.space	100
 244      00000000 
 244      00000000 
 244      00000000 
 244      00000000 
 245              		.global	ModemMngrTask_attributes
 246              		.section	.rodata
 247 0039 000000   		.align	2
 248              	.LC4:
 249 003c 4D6F6465 		.ascii	"ModemMngrTask\000"
 249      6D4D6E67 
 249      72546173 
 249      6B00
 250              		.section	.rodata.ModemMngrTask_attributes,"a"
 251              		.align	2
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s 			page 6


 254              	ModemMngrTask_attributes:
 255 0000 3C000000 		.word	.LC4
 256 0004 00000000 		.space	4
 257 0008 00000000 		.word	ModemMngrTaskControlBlock
 258 000c 64000000 		.word	100
 259 0010 00000000 		.word	ModemMngrTaskBuffer
 260 0014 00080000 		.word	2048
 261 0018 1F000000 		.word	31
 262 001c 00000000 		.space	8
 262      00000000 
 263              		.global	AppSendTaskHandle
 264              		.section	.bss.AppSendTaskHandle,"aw",%nobits
 265              		.align	2
 268              	AppSendTaskHandle:
 269 0000 00000000 		.space	4
 270              		.global	SendTemperatureBuffer
 271              		.section	.bss.SendTemperatureBuffer,"aw",%nobits
 272              		.align	2
 275              	SendTemperatureBuffer:
 276 0000 00000000 		.space	2048
 276      00000000 
 276      00000000 
 276      00000000 
 276      00000000 
 277              		.global	SendTemperatureControlBlock
 278              		.section	.bss.SendTemperatureControlBlock,"aw",%nobits
 279              		.align	2
 282              	SendTemperatureControlBlock:
 283 0000 00000000 		.space	100
 283      00000000 
 283      00000000 
 283      00000000 
 283      00000000 
 284              		.global	AppSendTask_attributes
 285              		.section	.rodata
 286 004a 0000     		.align	2
 287              	.LC5:
 288 004c 41707053 		.ascii	"AppSendTask\000"
 288      656E6454 
 288      61736B00 
 289              		.section	.rodata.AppSendTask_attributes,"a"
 290              		.align	2
 293              	AppSendTask_attributes:
 294 0000 4C000000 		.word	.LC5
 295 0004 00000000 		.space	4
 296 0008 00000000 		.word	SendTemperatureControlBlock
 297 000c 64000000 		.word	100
 298 0010 00000000 		.word	SendTemperatureBuffer
 299 0014 00080000 		.word	2048
 300 0018 0F000000 		.word	15
 301 001c 00000000 		.space	8
 301      00000000 
 302              		.global	ReadFromADCTaskHandle
 303              		.section	.bss.ReadFromADCTaskHandle,"aw",%nobits
 304              		.align	2
 307              	ReadFromADCTaskHandle:
 308 0000 00000000 		.space	4
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s 			page 7


 309              		.global	ReadFromADCTaskBuffer
 310              		.section	.bss.ReadFromADCTaskBuffer,"aw",%nobits
 311              		.align	2
 314              	ReadFromADCTaskBuffer:
 315 0000 00000000 		.space	512
 315      00000000 
 315      00000000 
 315      00000000 
 315      00000000 
 316              		.global	ReadFromADCTaskControlBlock
 317              		.section	.bss.ReadFromADCTaskControlBlock,"aw",%nobits
 318              		.align	2
 321              	ReadFromADCTaskControlBlock:
 322 0000 00000000 		.space	100
 322      00000000 
 322      00000000 
 322      00000000 
 322      00000000 
 323              		.global	ReadFromADCTask_attributes
 324              		.section	.rodata
 325              		.align	2
 326              	.LC6:
 327 0058 52656164 		.ascii	"ReadFromADCTask\000"
 327      46726F6D 
 327      41444354 
 327      61736B00 
 328              		.section	.rodata.ReadFromADCTask_attributes,"a"
 329              		.align	2
 332              	ReadFromADCTask_attributes:
 333 0000 58000000 		.word	.LC6
 334 0004 00000000 		.space	4
 335 0008 00000000 		.word	ReadFromADCTaskControlBlock
 336 000c 64000000 		.word	100
 337 0010 00000000 		.word	ReadFromADCTaskBuffer
 338 0014 00020000 		.word	512
 339 0018 0F000000 		.word	15
 340 001c 00000000 		.space	8
 340      00000000 
 341              		.global	DutyCycleHandle
 342              		.section	.bss.DutyCycleHandle,"aw",%nobits
 343              		.align	2
 346              	DutyCycleHandle:
 347 0000 00000000 		.space	4
 348              		.global	DutyCycleBuffer
 349              		.section	.bss.DutyCycleBuffer,"aw",%nobits
 350              		.align	2
 353              	DutyCycleBuffer:
 354 0000 00000000 		.space	2048
 354      00000000 
 354      00000000 
 354      00000000 
 354      00000000 
 355              		.global	DutyCycleControlBlock
 356              		.section	.bss.DutyCycleControlBlock,"aw",%nobits
 357              		.align	2
 360              	DutyCycleControlBlock:
 361 0000 00000000 		.space	100
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s 			page 8


 361      00000000 
 361      00000000 
 361      00000000 
 361      00000000 
 362              		.global	DutyCycle_attributes
 363              		.section	.rodata
 364              		.align	2
 365              	.LC7:
 366 0068 44757479 		.ascii	"DutyCycle\000"
 366      4379636C 
 366      6500
 367              		.section	.rodata.DutyCycle_attributes,"a"
 368              		.align	2
 371              	DutyCycle_attributes:
 372 0000 68000000 		.word	.LC7
 373 0004 00000000 		.space	4
 374 0008 00000000 		.word	DutyCycleControlBlock
 375 000c 64000000 		.word	100
 376 0010 00000000 		.word	DutyCycleBuffer
 377 0014 00080000 		.word	2048
 378 0018 08000000 		.word	8
 379 001c 00000000 		.space	8
 379      00000000 
 380              		.global	uartQueueHandle
 381              		.section	.bss.uartQueueHandle,"aw",%nobits
 382              		.align	2
 385              	uartQueueHandle:
 386 0000 00000000 		.space	4
 387              		.global	uartQueueBuffer
 388              		.section	.bss.uartQueueBuffer,"aw",%nobits
 389              		.align	2
 392              	uartQueueBuffer:
 393 0000 00000000 		.space	16
 393      00000000 
 393      00000000 
 393      00000000 
 394              		.global	uartQueueControlBlock
 395              		.section	.bss.uartQueueControlBlock,"aw",%nobits
 396              		.align	2
 399              	uartQueueControlBlock:
 400 0000 00000000 		.space	80
 400      00000000 
 400      00000000 
 400      00000000 
 400      00000000 
 401              		.global	uartQueue_attributes
 402              		.section	.rodata
 403 0072 0000     		.align	2
 404              	.LC8:
 405 0074 75617274 		.ascii	"uartQueue\000"
 405      51756575 
 405      6500
 406              		.section	.rodata.uartQueue_attributes,"a"
 407              		.align	2
 410              	uartQueue_attributes:
 411 0000 74000000 		.word	.LC8
 412 0004 00000000 		.space	4
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s 			page 9


 413 0008 00000000 		.word	uartQueueControlBlock
 414 000c 50000000 		.word	80
 415 0010 00000000 		.word	uartQueueBuffer
 416 0014 10000000 		.word	16
 417              		.global	ATQueueHandle
 418              		.section	.bss.ATQueueHandle,"aw",%nobits
 419              		.align	2
 422              	ATQueueHandle:
 423 0000 00000000 		.space	4
 424              		.global	ATQueueBuffer
 425              		.section	.bss.ATQueueBuffer,"aw",%nobits
 426              		.align	2
 429              	ATQueueBuffer:
 430 0000 00000000 		.space	16
 430      00000000 
 430      00000000 
 430      00000000 
 431              		.global	ATQueueControlBlock
 432              		.section	.bss.ATQueueControlBlock,"aw",%nobits
 433              		.align	2
 436              	ATQueueControlBlock:
 437 0000 00000000 		.space	80
 437      00000000 
 437      00000000 
 437      00000000 
 437      00000000 
 438              		.global	ATQueue_attributes
 439              		.section	.rodata
 440 007e 0000     		.align	2
 441              	.LC9:
 442 0080 41545175 		.ascii	"ATQueue\000"
 442      65756500 
 443              		.section	.rodata.ATQueue_attributes,"a"
 444              		.align	2
 447              	ATQueue_attributes:
 448 0000 80000000 		.word	.LC9
 449 0004 00000000 		.space	4
 450 0008 00000000 		.word	ATQueueControlBlock
 451 000c 50000000 		.word	80
 452 0010 00000000 		.word	ATQueueBuffer
 453 0014 10000000 		.word	16
 454              		.global	ModemSendQueueHandle
 455              		.section	.bss.ModemSendQueueHandle,"aw",%nobits
 456              		.align	2
 459              	ModemSendQueueHandle:
 460 0000 00000000 		.space	4
 461              		.global	ModemSendQueueBuffer
 462              		.section	.bss.ModemSendQueueBuffer,"aw",%nobits
 463              		.align	2
 466              	ModemSendQueueBuffer:
 467 0000 00000000 		.space	16
 467      00000000 
 467      00000000 
 467      00000000 
 468              		.global	ModemSendQueueControlBlock
 469              		.section	.bss.ModemSendQueueControlBlock,"aw",%nobits
 470              		.align	2
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s 			page 10


 473              	ModemSendQueueControlBlock:
 474 0000 00000000 		.space	80
 474      00000000 
 474      00000000 
 474      00000000 
 474      00000000 
 475              		.global	ModemSendQueue_attributes
 476              		.section	.rodata
 477              		.align	2
 478              	.LC10:
 479 0088 4D6F6465 		.ascii	"ModemSendQueue\000"
 479      6D53656E 
 479      64517565 
 479      756500
 480              		.section	.rodata.ModemSendQueue_attributes,"a"
 481              		.align	2
 484              	ModemSendQueue_attributes:
 485 0000 88000000 		.word	.LC10
 486 0004 00000000 		.space	4
 487 0008 00000000 		.word	ModemSendQueueControlBlock
 488 000c 50000000 		.word	80
 489 0010 00000000 		.word	ModemSendQueueBuffer
 490 0014 10000000 		.word	16
 491              		.global	TemperatureQueueHandle
 492              		.section	.bss.TemperatureQueueHandle,"aw",%nobits
 493              		.align	2
 496              	TemperatureQueueHandle:
 497 0000 00000000 		.space	4
 498              		.global	TemperatureQueueBuffer
 499              		.section	.bss.TemperatureQueueBuffer,"aw",%nobits
 500              		.align	2
 503              	TemperatureQueueBuffer:
 504 0000 00000000 		.space	64
 504      00000000 
 504      00000000 
 504      00000000 
 504      00000000 
 505              		.global	TemperatureQueueControlBlock
 506              		.section	.bss.TemperatureQueueControlBlock,"aw",%nobits
 507              		.align	2
 510              	TemperatureQueueControlBlock:
 511 0000 00000000 		.space	80
 511      00000000 
 511      00000000 
 511      00000000 
 511      00000000 
 512              		.global	TemperatureQueue_attributes
 513              		.section	.rodata
 514 0097 00       		.align	2
 515              	.LC11:
 516 0098 54656D70 		.ascii	"TemperatureQueue\000"
 516      65726174 
 516      75726551 
 516      75657565 
 516      00
 517              		.section	.rodata.TemperatureQueue_attributes,"a"
 518              		.align	2
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s 			page 11


 521              	TemperatureQueue_attributes:
 522 0000 98000000 		.word	.LC11
 523 0004 00000000 		.space	4
 524 0008 00000000 		.word	TemperatureQueueControlBlock
 525 000c 50000000 		.word	80
 526 0010 00000000 		.word	TemperatureQueueBuffer
 527 0014 40000000 		.word	64
 528              		.global	AccontrollerQueueHandle
 529              		.section	.bss.AccontrollerQueueHandle,"aw",%nobits
 530              		.align	2
 533              	AccontrollerQueueHandle:
 534 0000 00000000 		.space	4
 535              		.global	AccontrollerQueueBuffer
 536              		.section	.bss.AccontrollerQueueBuffer,"aw",%nobits
 537              		.align	2
 540              	AccontrollerQueueBuffer:
 541 0000 00000000 		.space	48
 541      00000000 
 541      00000000 
 541      00000000 
 541      00000000 
 542              		.global	AccontrollerQueueControlBlock
 543              		.section	.bss.AccontrollerQueueControlBlock,"aw",%nobits
 544              		.align	2
 547              	AccontrollerQueueControlBlock:
 548 0000 00000000 		.space	80
 548      00000000 
 548      00000000 
 548      00000000 
 548      00000000 
 549              		.global	AccontrollerQueue_attributes
 550              		.section	.rodata
 551 00a9 000000   		.align	2
 552              	.LC12:
 553 00ac 4163636F 		.ascii	"AccontrollerQueue\000"
 553      6E74726F 
 553      6C6C6572 
 553      51756575 
 553      6500
 554              		.section	.rodata.AccontrollerQueue_attributes,"a"
 555              		.align	2
 558              	AccontrollerQueue_attributes:
 559 0000 AC000000 		.word	.LC12
 560 0004 00000000 		.space	4
 561 0008 00000000 		.word	AccontrollerQueueControlBlock
 562 000c 50000000 		.word	80
 563 0010 00000000 		.word	AccontrollerQueueBuffer
 564 0014 30000000 		.word	48
 565              		.global	PeriodicSendTimerHandle
 566              		.section	.bss.PeriodicSendTimerHandle,"aw",%nobits
 567              		.align	2
 570              	PeriodicSendTimerHandle:
 571 0000 00000000 		.space	4
 572              		.global	PeriodicSendTimerControlBlock
 573              		.section	.bss.PeriodicSendTimerControlBlock,"aw",%nobits
 574              		.align	2
 577              	PeriodicSendTimerControlBlock:
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s 			page 12


 578 0000 00000000 		.space	44
 578      00000000 
 578      00000000 
 578      00000000 
 578      00000000 
 579              		.global	PeriodicSendTimer_attributes
 580              		.section	.rodata
 581 00be 0000     		.align	2
 582              	.LC13:
 583 00c0 50657269 		.ascii	"PeriodicSendTimer\000"
 583      6F646963 
 583      53656E64 
 583      54696D65 
 583      7200
 584              		.section	.rodata.PeriodicSendTimer_attributes,"a"
 585              		.align	2
 588              	PeriodicSendTimer_attributes:
 589 0000 C0000000 		.word	.LC13
 590 0004 00000000 		.space	4
 591 0008 00000000 		.word	PeriodicSendTimerControlBlock
 592 000c 2C000000 		.word	44
 593              		.global	ModemLedTimerHandle
 594              		.section	.bss.ModemLedTimerHandle,"aw",%nobits
 595              		.align	2
 598              	ModemLedTimerHandle:
 599 0000 00000000 		.space	4
 600              		.global	ModemLedTimerControlBlock
 601              		.section	.bss.ModemLedTimerControlBlock,"aw",%nobits
 602              		.align	2
 605              	ModemLedTimerControlBlock:
 606 0000 00000000 		.space	44
 606      00000000 
 606      00000000 
 606      00000000 
 606      00000000 
 607              		.global	ModemLedTimer_attributes
 608              		.section	.rodata
 609 00d2 0000     		.align	2
 610              	.LC14:
 611 00d4 4D6F6465 		.ascii	"ModemLedTimer\000"
 611      6D4C6564 
 611      54696D65 
 611      7200
 612              		.section	.rodata.ModemLedTimer_attributes,"a"
 613              		.align	2
 616              	ModemLedTimer_attributes:
 617 0000 D4000000 		.word	.LC14
 618 0004 00000000 		.space	4
 619 0008 00000000 		.word	ModemLedTimerControlBlock
 620 000c 2C000000 		.word	44
 621              		.global	DutyCycleTimerHandle
 622              		.section	.bss.DutyCycleTimerHandle,"aw",%nobits
 623              		.align	2
 626              	DutyCycleTimerHandle:
 627 0000 00000000 		.space	4
 628              		.global	DutyCycleTimerControlBlock
 629              		.section	.bss.DutyCycleTimerControlBlock,"aw",%nobits
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s 			page 13


 630              		.align	2
 633              	DutyCycleTimerControlBlock:
 634 0000 00000000 		.space	44
 634      00000000 
 634      00000000 
 634      00000000 
 634      00000000 
 635              		.global	DutyCycleTimer_attributes
 636              		.section	.rodata
 637 00e2 0000     		.align	2
 638              	.LC15:
 639 00e4 44757479 		.ascii	"DutyCycleTimer\000"
 639      4379636C 
 639      6554696D 
 639      657200
 640              		.section	.rodata.DutyCycleTimer_attributes,"a"
 641              		.align	2
 644              	DutyCycleTimer_attributes:
 645 0000 E4000000 		.word	.LC15
 646 0004 00000000 		.space	4
 647 0008 00000000 		.word	DutyCycleTimerControlBlock
 648 000c 2C000000 		.word	44
 649              		.global	ATCommandSemaphoreHandle
 650              		.section	.bss.ATCommandSemaphoreHandle,"aw",%nobits
 651              		.align	2
 654              	ATCommandSemaphoreHandle:
 655 0000 00000000 		.space	4
 656              		.global	ATCommandSemaphoreControlBlock
 657              		.section	.bss.ATCommandSemaphoreControlBlock,"aw",%nobits
 658              		.align	2
 661              	ATCommandSemaphoreControlBlock:
 662 0000 00000000 		.space	80
 662      00000000 
 662      00000000 
 662      00000000 
 662      00000000 
 663              		.global	ATCommandSemaphore_attributes
 664              		.section	.rodata
 665 00f3 00       		.align	2
 666              	.LC16:
 667 00f4 4154436F 		.ascii	"ATCommandSemaphore\000"
 667      6D6D616E 
 667      6453656D 
 667      6170686F 
 667      726500
 668              		.section	.rodata.ATCommandSemaphore_attributes,"a"
 669              		.align	2
 672              	ATCommandSemaphore_attributes:
 673 0000 F4000000 		.word	.LC16
 674 0004 00000000 		.space	4
 675 0008 00000000 		.word	ATCommandSemaphoreControlBlock
 676 000c 50000000 		.word	80
 677              		.global	ATResponseSemaphoreHandle
 678              		.section	.bss.ATResponseSemaphoreHandle,"aw",%nobits
 679              		.align	2
 682              	ATResponseSemaphoreHandle:
 683 0000 00000000 		.space	4
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s 			page 14


 684              		.global	ATResponseSemaphoreControlBlock
 685              		.section	.bss.ATResponseSemaphoreControlBlock,"aw",%nobits
 686              		.align	2
 689              	ATResponseSemaphoreControlBlock:
 690 0000 00000000 		.space	80
 690      00000000 
 690      00000000 
 690      00000000 
 690      00000000 
 691              		.global	ATResponseSemaphore_attributes
 692              		.section	.rodata
 693 0107 00       		.align	2
 694              	.LC17:
 695 0108 41545265 		.ascii	"ATResponseSemaphore\000"
 695      73706F6E 
 695      73655365 
 695      6D617068 
 695      6F726500 
 696              		.section	.rodata.ATResponseSemaphore_attributes,"a"
 697              		.align	2
 700              	ATResponseSemaphore_attributes:
 701 0000 08010000 		.word	.LC17
 702 0004 00000000 		.space	4
 703 0008 00000000 		.word	ATResponseSemaphoreControlBlock
 704 000c 50000000 		.word	80
 705              		.global	UARTTXSemaphoreHandle
 706              		.section	.bss.UARTTXSemaphoreHandle,"aw",%nobits
 707              		.align	2
 710              	UARTTXSemaphoreHandle:
 711 0000 00000000 		.space	4
 712              		.global	UARTTXSemaphoreControlBlock
 713              		.section	.bss.UARTTXSemaphoreControlBlock,"aw",%nobits
 714              		.align	2
 717              	UARTTXSemaphoreControlBlock:
 718 0000 00000000 		.space	80
 718      00000000 
 718      00000000 
 718      00000000 
 718      00000000 
 719              		.global	UARTTXSemaphore_attributes
 720              		.section	.rodata
 721              		.align	2
 722              	.LC18:
 723 011c 55415254 		.ascii	"UARTTXSemaphore\000"
 723      54585365 
 723      6D617068 
 723      6F726500 
 724              		.section	.rodata.UARTTXSemaphore_attributes,"a"
 725              		.align	2
 728              	UARTTXSemaphore_attributes:
 729 0000 1C010000 		.word	.LC18
 730 0004 00000000 		.space	4
 731 0008 00000000 		.word	UARTTXSemaphoreControlBlock
 732 000c 50000000 		.word	80
 733              		.global	RadioStateSemaphoreHandle
 734              		.section	.bss.RadioStateSemaphoreHandle,"aw",%nobits
 735              		.align	2
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s 			page 15


 738              	RadioStateSemaphoreHandle:
 739 0000 00000000 		.space	4
 740              		.global	RadioStateSemaphoreControlBlock
 741              		.section	.bss.RadioStateSemaphoreControlBlock,"aw",%nobits
 742              		.align	2
 745              	RadioStateSemaphoreControlBlock:
 746 0000 00000000 		.space	80
 746      00000000 
 746      00000000 
 746      00000000 
 746      00000000 
 747              		.global	RadioStateSemaphore_attributes
 748              		.section	.rodata
 749              		.align	2
 750              	.LC19:
 751 012c 52616469 		.ascii	"RadioStateSemaphore\000"
 751      6F537461 
 751      74655365 
 751      6D617068 
 751      6F726500 
 752              		.section	.rodata.RadioStateSemaphore_attributes,"a"
 753              		.align	2
 756              	RadioStateSemaphore_attributes:
 757 0000 2C010000 		.word	.LC19
 758 0004 00000000 		.space	4
 759 0008 00000000 		.word	RadioStateSemaphoreControlBlock
 760 000c 50000000 		.word	80
 761              		.global	LoRaTXSemaphoreHandle
 762              		.section	.bss.LoRaTXSemaphoreHandle,"aw",%nobits
 763              		.align	2
 766              	LoRaTXSemaphoreHandle:
 767 0000 00000000 		.space	4
 768              		.global	LoRaTXSemaphoreControlBlock
 769              		.section	.bss.LoRaTXSemaphoreControlBlock,"aw",%nobits
 770              		.align	2
 773              	LoRaTXSemaphoreControlBlock:
 774 0000 00000000 		.space	80
 774      00000000 
 774      00000000 
 774      00000000 
 774      00000000 
 775              		.global	LoRaTXSemaphore_attributes
 776              		.section	.rodata
 777              		.align	2
 778              	.LC20:
 779 0140 4C6F5261 		.ascii	"LoRaTXSemaphore\000"
 779      54585365 
 779      6D617068 
 779      6F726500 
 780              		.section	.rodata.LoRaTXSemaphore_attributes,"a"
 781              		.align	2
 784              	LoRaTXSemaphore_attributes:
 785 0000 40010000 		.word	.LC20
 786 0004 00000000 		.space	4
 787 0008 00000000 		.word	LoRaTXSemaphoreControlBlock
 788 000c 50000000 		.word	80
 789              		.global	ModemStatusFlagsHandle
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s 			page 16


 790              		.section	.bss.ModemStatusFlagsHandle,"aw",%nobits
 791              		.align	2
 794              	ModemStatusFlagsHandle:
 795 0000 00000000 		.space	4
 796              		.global	ModemStatusFlagsControlBlock
 797              		.section	.bss.ModemStatusFlagsControlBlock,"aw",%nobits
 798              		.align	2
 801              	ModemStatusFlagsControlBlock:
 802 0000 00000000 		.space	32
 802      00000000 
 802      00000000 
 802      00000000 
 802      00000000 
 803              		.global	ModemStatusFlags_attributes
 804              		.section	.rodata
 805              		.align	2
 806              	.LC21:
 807 0150 4D6F6465 		.ascii	"ModemStatusFlags\000"
 807      6D537461 
 807      74757346 
 807      6C616773 
 807      00
 808              		.section	.rodata.ModemStatusFlags_attributes,"a"
 809              		.align	2
 812              	ModemStatusFlags_attributes:
 813 0000 50010000 		.word	.LC21
 814 0004 00000000 		.space	4
 815 0008 00000000 		.word	ModemStatusFlagsControlBlock
 816 000c 20000000 		.word	32
 817              		.global	vector
 818              		.section	.bss.vector,"aw",%nobits
 819              		.align	2
 822              	vector:
 823 0000 00000000 		.space	1020
 823      00000000 
 823      00000000 
 823      00000000 
 823      00000000 
 824              		.section	.text.CONFIGURE_TIMER_FOR_RUN_TIME_STATS,"ax",%progbits
 825              		.align	1
 826              		.global	CONFIGURE_TIMER_FOR_RUN_TIME_STATS
 827              		.syntax unified
 828              		.thumb
 829              		.thumb_func
 831              	CONFIGURE_TIMER_FOR_RUN_TIME_STATS:
 832              	.LFB224:
 833              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s 			page 17


  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "cmsis_os.h"
  22:Core/Src/main.c **** #include "usb_device.h"
  23:Core/Src/main.c **** 
  24:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  25:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* USER CODE END Includes */
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  30:Core/Src/main.c **** typedef StaticTask_t osStaticThreadDef_t;
  31:Core/Src/main.c **** typedef StaticQueue_t osStaticMessageQDef_t;
  32:Core/Src/main.c **** typedef StaticTimer_t osStaticTimerDef_t;
  33:Core/Src/main.c **** typedef StaticSemaphore_t osStaticSemaphoreDef_t;
  34:Core/Src/main.c **** typedef StaticEventGroup_t osStaticEventGroupDef_t;
  35:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* USER CODE END PTD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PD */
  41:Core/Src/main.c **** /* USER CODE END PD */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  44:Core/Src/main.c **** /* USER CODE BEGIN PM */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE END PM */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  49:Core/Src/main.c **** ADC_HandleTypeDef hadc1;
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** TIM_HandleTypeDef htim1;
  52:Core/Src/main.c **** TIM_HandleTypeDef htim2;
  53:Core/Src/main.c **** TIM_HandleTypeDef htim3;
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** UART_HandleTypeDef huart1;
  56:Core/Src/main.c **** DMA_HandleTypeDef hdma_usart1_rx;
  57:Core/Src/main.c **** DMA_HandleTypeDef hdma_usart1_tx;
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* Definitions for defaultTask */
  60:Core/Src/main.c **** osThreadId_t defaultTaskHandle;
  61:Core/Src/main.c **** uint32_t defaultTaskBuffer[ 128 ];
  62:Core/Src/main.c **** osStaticThreadDef_t defaultTaskControlBlock;
  63:Core/Src/main.c **** const osThreadAttr_t defaultTask_attributes = {
  64:Core/Src/main.c ****   .name = "defaultTask",
  65:Core/Src/main.c ****   .cb_mem = &defaultTaskControlBlock,
  66:Core/Src/main.c ****   .cb_size = sizeof(defaultTaskControlBlock),
  67:Core/Src/main.c ****   .stack_mem = &defaultTaskBuffer[0],
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s 			page 18


  68:Core/Src/main.c ****   .stack_size = sizeof(defaultTaskBuffer),
  69:Core/Src/main.c ****   .priority = (osPriority_t) osPriorityLow1,
  70:Core/Src/main.c **** };
  71:Core/Src/main.c **** /* Definitions for ATParsingTask */
  72:Core/Src/main.c **** osThreadId_t ATParsingTaskHandle;
  73:Core/Src/main.c **** uint32_t ATParsingTaskBuffer[ 512 ];
  74:Core/Src/main.c **** osStaticThreadDef_t ATParsingTaskControlBlock;
  75:Core/Src/main.c **** const osThreadAttr_t ATParsingTask_attributes = {
  76:Core/Src/main.c ****   .name = "ATParsingTask",
  77:Core/Src/main.c ****   .cb_mem = &ATParsingTaskControlBlock,
  78:Core/Src/main.c ****   .cb_size = sizeof(ATParsingTaskControlBlock),
  79:Core/Src/main.c ****   .stack_mem = &ATParsingTaskBuffer[0],
  80:Core/Src/main.c ****   .stack_size = sizeof(ATParsingTaskBuffer),
  81:Core/Src/main.c ****   .priority = (osPriority_t) osPriorityAboveNormal7,
  82:Core/Src/main.c **** };
  83:Core/Src/main.c **** /* Definitions for ATHandlingTask */
  84:Core/Src/main.c **** osThreadId_t ATHandlingTaskHandle;
  85:Core/Src/main.c **** uint32_t ATHandlingTaskBuffer[ 512 ];
  86:Core/Src/main.c **** osStaticThreadDef_t ATHandlingTaskControlBlock;
  87:Core/Src/main.c **** const osThreadAttr_t ATHandlingTask_attributes = {
  88:Core/Src/main.c ****   .name = "ATHandlingTask",
  89:Core/Src/main.c ****   .cb_mem = &ATHandlingTaskControlBlock,
  90:Core/Src/main.c ****   .cb_size = sizeof(ATHandlingTaskControlBlock),
  91:Core/Src/main.c ****   .stack_mem = &ATHandlingTaskBuffer[0],
  92:Core/Src/main.c ****   .stack_size = sizeof(ATHandlingTaskBuffer),
  93:Core/Src/main.c ****   .priority = (osPriority_t) osPriorityAboveNormal6,
  94:Core/Src/main.c **** };
  95:Core/Src/main.c **** /* Definitions for UARTProcTask */
  96:Core/Src/main.c **** osThreadId_t UARTProcTaskHandle;
  97:Core/Src/main.c **** uint32_t UARTProcTaskBuffer[ 512 ];
  98:Core/Src/main.c **** osStaticThreadDef_t UARTProcTaskControlBlock;
  99:Core/Src/main.c **** const osThreadAttr_t UARTProcTask_attributes = {
 100:Core/Src/main.c ****   .name = "UARTProcTask",
 101:Core/Src/main.c ****   .cb_mem = &UARTProcTaskControlBlock,
 102:Core/Src/main.c ****   .cb_size = sizeof(UARTProcTaskControlBlock),
 103:Core/Src/main.c ****   .stack_mem = &UARTProcTaskBuffer[0],
 104:Core/Src/main.c ****   .stack_size = sizeof(UARTProcTaskBuffer),
 105:Core/Src/main.c ****   .priority = (osPriority_t) osPriorityHigh7,
 106:Core/Src/main.c **** };
 107:Core/Src/main.c **** /* Definitions for ModemMngrTask */
 108:Core/Src/main.c **** osThreadId_t ModemMngrTaskHandle;
 109:Core/Src/main.c **** uint32_t ModemMngrTaskBuffer[ 512 ];
 110:Core/Src/main.c **** osStaticThreadDef_t ModemMngrTaskControlBlock;
 111:Core/Src/main.c **** const osThreadAttr_t ModemMngrTask_attributes = {
 112:Core/Src/main.c ****   .name = "ModemMngrTask",
 113:Core/Src/main.c ****   .cb_mem = &ModemMngrTaskControlBlock,
 114:Core/Src/main.c ****   .cb_size = sizeof(ModemMngrTaskControlBlock),
 115:Core/Src/main.c ****   .stack_mem = &ModemMngrTaskBuffer[0],
 116:Core/Src/main.c ****   .stack_size = sizeof(ModemMngrTaskBuffer),
 117:Core/Src/main.c ****   .priority = (osPriority_t) osPriorityNormal7,
 118:Core/Src/main.c **** };
 119:Core/Src/main.c **** /* Definitions for AppSendTask */
 120:Core/Src/main.c **** osThreadId_t AppSendTaskHandle;
 121:Core/Src/main.c **** uint32_t SendTemperatureBuffer[ 512 ];
 122:Core/Src/main.c **** osStaticThreadDef_t SendTemperatureControlBlock;
 123:Core/Src/main.c **** const osThreadAttr_t AppSendTask_attributes = {
 124:Core/Src/main.c ****   .name = "AppSendTask",
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s 			page 19


 125:Core/Src/main.c ****   .cb_mem = &SendTemperatureControlBlock,
 126:Core/Src/main.c ****   .cb_size = sizeof(SendTemperatureControlBlock),
 127:Core/Src/main.c ****   .stack_mem = &SendTemperatureBuffer[0],
 128:Core/Src/main.c ****   .stack_size = sizeof(SendTemperatureBuffer),
 129:Core/Src/main.c ****   .priority = (osPriority_t) osPriorityLow7,
 130:Core/Src/main.c **** };
 131:Core/Src/main.c **** /* Definitions for ReadFromADCTask */
 132:Core/Src/main.c **** osThreadId_t ReadFromADCTaskHandle;
 133:Core/Src/main.c **** uint32_t ReadFromADCTaskBuffer[ 128 ];
 134:Core/Src/main.c **** osStaticThreadDef_t ReadFromADCTaskControlBlock;
 135:Core/Src/main.c **** const osThreadAttr_t ReadFromADCTask_attributes = {
 136:Core/Src/main.c ****   .name = "ReadFromADCTask",
 137:Core/Src/main.c ****   .cb_mem = &ReadFromADCTaskControlBlock,
 138:Core/Src/main.c ****   .cb_size = sizeof(ReadFromADCTaskControlBlock),
 139:Core/Src/main.c ****   .stack_mem = &ReadFromADCTaskBuffer[0],
 140:Core/Src/main.c ****   .stack_size = sizeof(ReadFromADCTaskBuffer),
 141:Core/Src/main.c ****   .priority = (osPriority_t) osPriorityLow7,
 142:Core/Src/main.c **** };
 143:Core/Src/main.c **** /* Definitions for DutyCycle */
 144:Core/Src/main.c **** osThreadId_t DutyCycleHandle;
 145:Core/Src/main.c **** uint32_t DutyCycleBuffer[ 512 ];
 146:Core/Src/main.c **** osStaticThreadDef_t DutyCycleControlBlock;
 147:Core/Src/main.c **** const osThreadAttr_t DutyCycle_attributes = {
 148:Core/Src/main.c ****   .name = "DutyCycle",
 149:Core/Src/main.c ****   .cb_mem = &DutyCycleControlBlock,
 150:Core/Src/main.c ****   .cb_size = sizeof(DutyCycleControlBlock),
 151:Core/Src/main.c ****   .stack_mem = &DutyCycleBuffer[0],
 152:Core/Src/main.c ****   .stack_size = sizeof(DutyCycleBuffer),
 153:Core/Src/main.c ****   .priority = (osPriority_t) osPriorityLow,
 154:Core/Src/main.c **** };
 155:Core/Src/main.c **** /* Definitions for uartQueue */
 156:Core/Src/main.c **** osMessageQueueId_t uartQueueHandle;
 157:Core/Src/main.c **** uint8_t uartQueueBuffer[ 4 * sizeof( void* ) ];
 158:Core/Src/main.c **** osStaticMessageQDef_t uartQueueControlBlock;
 159:Core/Src/main.c **** const osMessageQueueAttr_t uartQueue_attributes = {
 160:Core/Src/main.c ****   .name = "uartQueue",
 161:Core/Src/main.c ****   .cb_mem = &uartQueueControlBlock,
 162:Core/Src/main.c ****   .cb_size = sizeof(uartQueueControlBlock),
 163:Core/Src/main.c ****   .mq_mem = &uartQueueBuffer,
 164:Core/Src/main.c ****   .mq_size = sizeof(uartQueueBuffer)
 165:Core/Src/main.c **** };
 166:Core/Src/main.c **** /* Definitions for ATQueue */
 167:Core/Src/main.c **** osMessageQueueId_t ATQueueHandle;
 168:Core/Src/main.c **** uint8_t ATQueueBuffer[ 4 * sizeof( void* ) ];
 169:Core/Src/main.c **** osStaticMessageQDef_t ATQueueControlBlock;
 170:Core/Src/main.c **** const osMessageQueueAttr_t ATQueue_attributes = {
 171:Core/Src/main.c ****   .name = "ATQueue",
 172:Core/Src/main.c ****   .cb_mem = &ATQueueControlBlock,
 173:Core/Src/main.c ****   .cb_size = sizeof(ATQueueControlBlock),
 174:Core/Src/main.c ****   .mq_mem = &ATQueueBuffer,
 175:Core/Src/main.c ****   .mq_size = sizeof(ATQueueBuffer)
 176:Core/Src/main.c **** };
 177:Core/Src/main.c **** /* Definitions for ModemSendQueue */
 178:Core/Src/main.c **** osMessageQueueId_t ModemSendQueueHandle;
 179:Core/Src/main.c **** uint8_t ModemSendQueueBuffer[ 4 * sizeof( void* ) ];
 180:Core/Src/main.c **** osStaticMessageQDef_t ModemSendQueueControlBlock;
 181:Core/Src/main.c **** const osMessageQueueAttr_t ModemSendQueue_attributes = {
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s 			page 20


 182:Core/Src/main.c ****   .name = "ModemSendQueue",
 183:Core/Src/main.c ****   .cb_mem = &ModemSendQueueControlBlock,
 184:Core/Src/main.c ****   .cb_size = sizeof(ModemSendQueueControlBlock),
 185:Core/Src/main.c ****   .mq_mem = &ModemSendQueueBuffer,
 186:Core/Src/main.c ****   .mq_size = sizeof(ModemSendQueueBuffer)
 187:Core/Src/main.c **** };
 188:Core/Src/main.c **** /* Definitions for TemperatureQueue */
 189:Core/Src/main.c **** osMessageQueueId_t TemperatureQueueHandle;
 190:Core/Src/main.c **** uint8_t TemperatureQueueBuffer[ 8 * sizeof( TEMPERATURE_OBJ_t ) ];
 191:Core/Src/main.c **** osStaticMessageQDef_t TemperatureQueueControlBlock;
 192:Core/Src/main.c **** const osMessageQueueAttr_t TemperatureQueue_attributes = {
 193:Core/Src/main.c ****   .name = "TemperatureQueue",
 194:Core/Src/main.c ****   .cb_mem = &TemperatureQueueControlBlock,
 195:Core/Src/main.c ****   .cb_size = sizeof(TemperatureQueueControlBlock),
 196:Core/Src/main.c ****   .mq_mem = &TemperatureQueueBuffer,
 197:Core/Src/main.c ****   .mq_size = sizeof(TemperatureQueueBuffer)
 198:Core/Src/main.c **** };
 199:Core/Src/main.c **** /* Definitions for AccontrollerQueue */
 200:Core/Src/main.c **** osMessageQueueId_t AccontrollerQueueHandle;
 201:Core/Src/main.c **** uint8_t AccontrollerQueueBuffer[ 16 * sizeof( ACCONTROLLER_OBJ_t ) ];
 202:Core/Src/main.c **** osStaticMessageQDef_t AccontrollerQueueControlBlock;
 203:Core/Src/main.c **** const osMessageQueueAttr_t AccontrollerQueue_attributes = {
 204:Core/Src/main.c ****   .name = "AccontrollerQueue",
 205:Core/Src/main.c ****   .cb_mem = &AccontrollerQueueControlBlock,
 206:Core/Src/main.c ****   .cb_size = sizeof(AccontrollerQueueControlBlock),
 207:Core/Src/main.c ****   .mq_mem = &AccontrollerQueueBuffer,
 208:Core/Src/main.c ****   .mq_size = sizeof(AccontrollerQueueBuffer)
 209:Core/Src/main.c **** };
 210:Core/Src/main.c **** /* Definitions for PeriodicSendTimer */
 211:Core/Src/main.c **** osTimerId_t PeriodicSendTimerHandle;
 212:Core/Src/main.c **** osStaticTimerDef_t PeriodicSendTimerControlBlock;
 213:Core/Src/main.c **** const osTimerAttr_t PeriodicSendTimer_attributes = {
 214:Core/Src/main.c ****   .name = "PeriodicSendTimer",
 215:Core/Src/main.c ****   .cb_mem = &PeriodicSendTimerControlBlock,
 216:Core/Src/main.c ****   .cb_size = sizeof(PeriodicSendTimerControlBlock),
 217:Core/Src/main.c **** };
 218:Core/Src/main.c **** /* Definitions for ModemLedTimer */
 219:Core/Src/main.c **** osTimerId_t ModemLedTimerHandle;
 220:Core/Src/main.c **** osStaticTimerDef_t ModemLedTimerControlBlock;
 221:Core/Src/main.c **** const osTimerAttr_t ModemLedTimer_attributes = {
 222:Core/Src/main.c ****   .name = "ModemLedTimer",
 223:Core/Src/main.c ****   .cb_mem = &ModemLedTimerControlBlock,
 224:Core/Src/main.c ****   .cb_size = sizeof(ModemLedTimerControlBlock),
 225:Core/Src/main.c **** };
 226:Core/Src/main.c **** /* Definitions for DutyCycleTimer */
 227:Core/Src/main.c **** osTimerId_t DutyCycleTimerHandle;
 228:Core/Src/main.c **** osStaticTimerDef_t DutyCycleTimerControlBlock;
 229:Core/Src/main.c **** const osTimerAttr_t DutyCycleTimer_attributes = {
 230:Core/Src/main.c ****   .name = "DutyCycleTimer",
 231:Core/Src/main.c ****   .cb_mem = &DutyCycleTimerControlBlock,
 232:Core/Src/main.c ****   .cb_size = sizeof(DutyCycleTimerControlBlock),
 233:Core/Src/main.c **** };
 234:Core/Src/main.c **** /* Definitions for ATCommandSemaphore */
 235:Core/Src/main.c **** osSemaphoreId_t ATCommandSemaphoreHandle;
 236:Core/Src/main.c **** osStaticSemaphoreDef_t ATCommandSemaphoreControlBlock;
 237:Core/Src/main.c **** const osSemaphoreAttr_t ATCommandSemaphore_attributes = {
 238:Core/Src/main.c ****   .name = "ATCommandSemaphore",
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s 			page 21


 239:Core/Src/main.c ****   .cb_mem = &ATCommandSemaphoreControlBlock,
 240:Core/Src/main.c ****   .cb_size = sizeof(ATCommandSemaphoreControlBlock),
 241:Core/Src/main.c **** };
 242:Core/Src/main.c **** /* Definitions for ATResponseSemaphore */
 243:Core/Src/main.c **** osSemaphoreId_t ATResponseSemaphoreHandle;
 244:Core/Src/main.c **** osStaticSemaphoreDef_t ATResponseSemaphoreControlBlock;
 245:Core/Src/main.c **** const osSemaphoreAttr_t ATResponseSemaphore_attributes = {
 246:Core/Src/main.c ****   .name = "ATResponseSemaphore",
 247:Core/Src/main.c ****   .cb_mem = &ATResponseSemaphoreControlBlock,
 248:Core/Src/main.c ****   .cb_size = sizeof(ATResponseSemaphoreControlBlock),
 249:Core/Src/main.c **** };
 250:Core/Src/main.c **** /* Definitions for UARTTXSemaphore */
 251:Core/Src/main.c **** osSemaphoreId_t UARTTXSemaphoreHandle;
 252:Core/Src/main.c **** osStaticSemaphoreDef_t UARTTXSemaphoreControlBlock;
 253:Core/Src/main.c **** const osSemaphoreAttr_t UARTTXSemaphore_attributes = {
 254:Core/Src/main.c ****   .name = "UARTTXSemaphore",
 255:Core/Src/main.c ****   .cb_mem = &UARTTXSemaphoreControlBlock,
 256:Core/Src/main.c ****   .cb_size = sizeof(UARTTXSemaphoreControlBlock),
 257:Core/Src/main.c **** };
 258:Core/Src/main.c **** /* Definitions for RadioStateSemaphore */
 259:Core/Src/main.c **** osSemaphoreId_t RadioStateSemaphoreHandle;
 260:Core/Src/main.c **** osStaticSemaphoreDef_t RadioStateSemaphoreControlBlock;
 261:Core/Src/main.c **** const osSemaphoreAttr_t RadioStateSemaphore_attributes = {
 262:Core/Src/main.c ****   .name = "RadioStateSemaphore",
 263:Core/Src/main.c ****   .cb_mem = &RadioStateSemaphoreControlBlock,
 264:Core/Src/main.c ****   .cb_size = sizeof(RadioStateSemaphoreControlBlock),
 265:Core/Src/main.c **** };
 266:Core/Src/main.c **** /* Definitions for LoRaTXSemaphore */
 267:Core/Src/main.c **** osSemaphoreId_t LoRaTXSemaphoreHandle;
 268:Core/Src/main.c **** osStaticSemaphoreDef_t LoRaTXSemaphoreControlBlock;
 269:Core/Src/main.c **** const osSemaphoreAttr_t LoRaTXSemaphore_attributes = {
 270:Core/Src/main.c ****   .name = "LoRaTXSemaphore",
 271:Core/Src/main.c ****   .cb_mem = &LoRaTXSemaphoreControlBlock,
 272:Core/Src/main.c ****   .cb_size = sizeof(LoRaTXSemaphoreControlBlock),
 273:Core/Src/main.c **** };
 274:Core/Src/main.c **** /* Definitions for ModemStatusFlags */
 275:Core/Src/main.c **** osEventFlagsId_t ModemStatusFlagsHandle;
 276:Core/Src/main.c **** osStaticEventGroupDef_t ModemStatusFlagsControlBlock;
 277:Core/Src/main.c **** const osEventFlagsAttr_t ModemStatusFlags_attributes = {
 278:Core/Src/main.c ****   .name = "ModemStatusFlags",
 279:Core/Src/main.c ****   .cb_mem = &ModemStatusFlagsControlBlock,
 280:Core/Src/main.c ****   .cb_size = sizeof(ModemStatusFlagsControlBlock),
 281:Core/Src/main.c **** };
 282:Core/Src/main.c **** /* USER CODE BEGIN PV */
 283:Core/Src/main.c **** volatile float vector[255];
 284:Core/Src/main.c **** extern UART_HandleTypeDef huart1;
 285:Core/Src/main.c **** extern DMA_HandleTypeDef hdma_usart1_rx;
 286:Core/Src/main.c **** extern DMA_HandleTypeDef hdma_usart1_tx;
 287:Core/Src/main.c **** /* USER CODE END PV */
 288:Core/Src/main.c **** 
 289:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
 290:Core/Src/main.c **** void SystemClock_Config(void);
 291:Core/Src/main.c **** static void MX_GPIO_Init(void);
 292:Core/Src/main.c **** static void MX_DMA_Init(void);
 293:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
 294:Core/Src/main.c **** static void MX_ADC1_Init(void);
 295:Core/Src/main.c **** static void MX_TIM2_Init(void);
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s 			page 22


 296:Core/Src/main.c **** static void MX_TIM1_Init(void);
 297:Core/Src/main.c **** static void MX_TIM3_Init(void);
 298:Core/Src/main.c **** void StartDefaultTask(void *argument);
 299:Core/Src/main.c **** extern void ATParsingTaskCode(void *argument);
 300:Core/Src/main.c **** extern void ATHandlingTaskCode(void *argument);
 301:Core/Src/main.c **** extern void UARTProcTaskCode(void *argument);
 302:Core/Src/main.c **** extern void ModemManagerTaskCode(void *argument);
 303:Core/Src/main.c **** extern void AppSendTaskCode(void *argument);
 304:Core/Src/main.c **** extern void ReadFromADCTaskCode(void *argument);
 305:Core/Src/main.c **** extern void DutyCycleCode(void *argument);
 306:Core/Src/main.c **** extern void PeriodicSendTimerCallback(void *argument);
 307:Core/Src/main.c **** extern void ModemLedCallback(void *argument);
 308:Core/Src/main.c **** extern void DutyCycleTimerCallback(void *argument);
 309:Core/Src/main.c **** 
 310:Core/Src/main.c **** /* USER CODE BEGIN PFP */
 311:Core/Src/main.c **** void CONFIGURE_TIMER_FOR_RUN_TIME_STATS()
 312:Core/Src/main.c **** {
 834              		.loc 1 312 1
 835              		.cfi_startproc
 836              		@ args = 0, pretend = 0, frame = 0
 837              		@ frame_needed = 1, uses_anonymous_args = 0
 838 0000 80B5     		push	{r7, lr}
 839              	.LCFI0:
 840              		.cfi_def_cfa_offset 8
 841              		.cfi_offset 7, -8
 842              		.cfi_offset 14, -4
 843 0002 00AF     		add	r7, sp, #0
 844              	.LCFI1:
 845              		.cfi_def_cfa_register 7
 313:Core/Src/main.c ****   HAL_TIM_Base_Start(&htim2); /* Define this to initialize your timer/counter */
 846              		.loc 1 313 3
 847 0004 0248     		ldr	r0, .L2
 848 0006 FFF7FEFF 		bl	HAL_TIM_Base_Start
 314:Core/Src/main.c **** }
 849              		.loc 1 314 1
 850 000a 00BF     		nop
 851 000c 80BD     		pop	{r7, pc}
 852              	.L3:
 853 000e 00BF     		.align	2
 854              	.L2:
 855 0010 00000000 		.word	htim2
 856              		.cfi_endproc
 857              	.LFE224:
 859              		.section	.text.GET_RUN_TIME_COUNTER_VALUE,"ax",%progbits
 860              		.align	1
 861              		.global	GET_RUN_TIME_COUNTER_VALUE
 862              		.syntax unified
 863              		.thumb
 864              		.thumb_func
 866              	GET_RUN_TIME_COUNTER_VALUE:
 867              	.LFB225:
 315:Core/Src/main.c **** 
 316:Core/Src/main.c **** uint32_t GET_RUN_TIME_COUNTER_VALUE()
 317:Core/Src/main.c **** {
 868              		.loc 1 317 1
 869              		.cfi_startproc
 870              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s 			page 23


 871              		@ frame_needed = 1, uses_anonymous_args = 0
 872              		@ link register save eliminated.
 873 0000 80B4     		push	{r7}
 874              	.LCFI2:
 875              		.cfi_def_cfa_offset 4
 876              		.cfi_offset 7, -4
 877 0002 00AF     		add	r7, sp, #0
 878              	.LCFI3:
 879              		.cfi_def_cfa_register 7
 318:Core/Src/main.c ****   return __HAL_TIM_GET_COUNTER(&htim2); /* Define this to sample the timer/counter */
 880              		.loc 1 318 10
 881 0004 034B     		ldr	r3, .L6
 882 0006 1B68     		ldr	r3, [r3]
 883 0008 5B6A     		ldr	r3, [r3, #36]
 319:Core/Src/main.c **** }
 884              		.loc 1 319 1
 885 000a 1846     		mov	r0, r3
 886 000c BD46     		mov	sp, r7
 887              	.LCFI4:
 888              		.cfi_def_cfa_register 13
 889              		@ sp needed
 890 000e 5DF8047B 		ldr	r7, [sp], #4
 891              	.LCFI5:
 892              		.cfi_restore 7
 893              		.cfi_def_cfa_offset 0
 894 0012 7047     		bx	lr
 895              	.L7:
 896              		.align	2
 897              	.L6:
 898 0014 00000000 		.word	htim2
 899              		.cfi_endproc
 900              	.LFE225:
 902              		.global	uxTopUsedPriority
 903              		.section	.data.uxTopUsedPriority,"aw"
 904              		.align	2
 907              	uxTopUsedPriority:
 908 0000 37000000 		.word	55
 909              		.section	.text.main,"ax",%progbits
 910              		.align	1
 911              		.global	main
 912              		.syntax unified
 913              		.thumb
 914              		.thumb_func
 916              	main:
 917              	.LFB226:
 320:Core/Src/main.c **** 
 321:Core/Src/main.c **** /* USER CODE END PFP */
 322:Core/Src/main.c **** 
 323:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 324:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 325:Core/Src/main.c **** const volatile int uxTopUsedPriority = configMAX_PRIORITIES - 1; //this declaration enables thread 
 326:Core/Src/main.c **** 
 327:Core/Src/main.c **** // Paste this code to Core/Inc/FreeRTOSConfig.h to enable kernel statistics (will be overwritten by
 328:Core/Src/main.c **** // #define portCONFIGURE_TIMER_FOR_RUN_TIME_STATS() CONFIGURE_TIMER_FOR_RUN_TIME_STATS()/* Define t
 329:Core/Src/main.c **** // #define portGET_RUN_TIME_COUNTER_VALUE() GET_RUN_TIME_COUNTER_VALUE()        /* Define this to s
 330:Core/Src/main.c **** // #define configGENERATE_RUN_TIME_STATS (1)
 331:Core/Src/main.c **** // #define configRECORD_STACK_HIGH_ADDRESS (1)
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s 			page 24


 332:Core/Src/main.c **** 
 333:Core/Src/main.c **** /* USER CODE END 0 */
 334:Core/Src/main.c **** 
 335:Core/Src/main.c **** /**
 336:Core/Src/main.c ****   * @brief  The application entry point.
 337:Core/Src/main.c ****   * @retval int
 338:Core/Src/main.c ****   */
 339:Core/Src/main.c **** int main(void)
 340:Core/Src/main.c **** {
 918              		.loc 1 340 1
 919              		.cfi_startproc
 920              		@ args = 0, pretend = 0, frame = 8
 921              		@ frame_needed = 1, uses_anonymous_args = 0
 922 0000 80B5     		push	{r7, lr}
 923              	.LCFI6:
 924              		.cfi_def_cfa_offset 8
 925              		.cfi_offset 7, -8
 926              		.cfi_offset 14, -4
 927 0002 82B0     		sub	sp, sp, #8
 928              	.LCFI7:
 929              		.cfi_def_cfa_offset 16
 930 0004 00AF     		add	r7, sp, #0
 931              	.LCFI8:
 932              		.cfi_def_cfa_register 7
 341:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 342:Core/Src/main.c ****   uint32_t i;  
 343:Core/Src/main.c ****   (void)uxTopUsedPriority; //this declaration enables thread awareness for FreeRTOS using OpenOCD
 933              		.loc 1 343 3
 934 0006 784B     		ldr	r3, .L12
 935 0008 1B68     		ldr	r3, [r3]
 344:Core/Src/main.c ****   /* USER CODE END 1 */
 345:Core/Src/main.c **** 
 346:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 347:Core/Src/main.c **** 
 348:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 349:Core/Src/main.c ****   HAL_Init();
 936              		.loc 1 349 3
 937 000a FFF7FEFF 		bl	HAL_Init
 350:Core/Src/main.c **** 
 351:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 352:Core/Src/main.c **** 
 353:Core/Src/main.c ****   /* USER CODE END Init */
 354:Core/Src/main.c **** 
 355:Core/Src/main.c ****   /* Configure the system clock */
 356:Core/Src/main.c ****   SystemClock_Config();
 938              		.loc 1 356 3
 939 000e FFF7FEFF 		bl	SystemClock_Config
 357:Core/Src/main.c **** 
 358:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 359:Core/Src/main.c **** 
 360:Core/Src/main.c ****   /* USER CODE END SysInit */
 361:Core/Src/main.c **** 
 362:Core/Src/main.c ****   /* Initialize all configured peripherals */
 363:Core/Src/main.c ****   MX_GPIO_Init();
 940              		.loc 1 363 3
 941 0012 FFF7FEFF 		bl	MX_GPIO_Init
 364:Core/Src/main.c ****   MX_DMA_Init();
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s 			page 25


 942              		.loc 1 364 3
 943 0016 FFF7FEFF 		bl	MX_DMA_Init
 365:Core/Src/main.c ****   MX_USART1_UART_Init();
 944              		.loc 1 365 3
 945 001a FFF7FEFF 		bl	MX_USART1_UART_Init
 366:Core/Src/main.c ****   MX_ADC1_Init();
 946              		.loc 1 366 3
 947 001e FFF7FEFF 		bl	MX_ADC1_Init
 367:Core/Src/main.c ****   MX_TIM2_Init();
 948              		.loc 1 367 3
 949 0022 FFF7FEFF 		bl	MX_TIM2_Init
 368:Core/Src/main.c ****   MX_TIM1_Init();
 950              		.loc 1 368 3
 951 0026 FFF7FEFF 		bl	MX_TIM1_Init
 369:Core/Src/main.c ****   MX_TIM3_Init();
 952              		.loc 1 369 3
 953 002a FFF7FEFF 		bl	MX_TIM3_Init
 370:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 371:Core/Src/main.c ****   
 372:Core/Src/main.c ****   //H-Bridge PWMs
 373:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_1);
 954              		.loc 1 373 3
 955 002e 0021     		movs	r1, #0
 956 0030 6E48     		ldr	r0, .L12+4
 957 0032 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 374:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_2);
 958              		.loc 1 374 3
 959 0036 0421     		movs	r1, #4
 960 0038 6D48     		ldr	r0, .L12+8
 961 003a FFF7FEFF 		bl	HAL_TIM_PWM_Start
 375:Core/Src/main.c ****   /* USER CODE END 2 */
 376:Core/Src/main.c **** 
 377:Core/Src/main.c ****   /* Init scheduler */
 378:Core/Src/main.c ****   osKernelInitialize();
 962              		.loc 1 378 3
 963 003e FFF7FEFF 		bl	osKernelInitialize
 379:Core/Src/main.c **** 
 380:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_MUTEX */
 381:Core/Src/main.c ****   /* add mutexes, ... */
 382:Core/Src/main.c ****   /* USER CODE END RTOS_MUTEX */
 383:Core/Src/main.c **** 
 384:Core/Src/main.c ****   /* Create the semaphores(s) */
 385:Core/Src/main.c ****   /* creation of ATCommandSemaphore */
 386:Core/Src/main.c ****   ATCommandSemaphoreHandle = osSemaphoreNew(1, 1, &ATCommandSemaphore_attributes);
 964              		.loc 1 386 30
 965 0042 6C4A     		ldr	r2, .L12+12
 966 0044 0121     		movs	r1, #1
 967 0046 0120     		movs	r0, #1
 968 0048 FFF7FEFF 		bl	osSemaphoreNew
 969 004c 0346     		mov	r3, r0
 970              		.loc 1 386 28
 971 004e 6A4A     		ldr	r2, .L12+16
 972 0050 1360     		str	r3, [r2]
 387:Core/Src/main.c **** 
 388:Core/Src/main.c ****   /* creation of ATResponseSemaphore */
 389:Core/Src/main.c ****   ATResponseSemaphoreHandle = osSemaphoreNew(1, 1, &ATResponseSemaphore_attributes);
 973              		.loc 1 389 31
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s 			page 26


 974 0052 6A4A     		ldr	r2, .L12+20
 975 0054 0121     		movs	r1, #1
 976 0056 0120     		movs	r0, #1
 977 0058 FFF7FEFF 		bl	osSemaphoreNew
 978 005c 0346     		mov	r3, r0
 979              		.loc 1 389 29
 980 005e 684A     		ldr	r2, .L12+24
 981 0060 1360     		str	r3, [r2]
 390:Core/Src/main.c **** 
 391:Core/Src/main.c ****   /* creation of UARTTXSemaphore */
 392:Core/Src/main.c ****   UARTTXSemaphoreHandle = osSemaphoreNew(1, 1, &UARTTXSemaphore_attributes);
 982              		.loc 1 392 27
 983 0062 684A     		ldr	r2, .L12+28
 984 0064 0121     		movs	r1, #1
 985 0066 0120     		movs	r0, #1
 986 0068 FFF7FEFF 		bl	osSemaphoreNew
 987 006c 0346     		mov	r3, r0
 988              		.loc 1 392 25
 989 006e 664A     		ldr	r2, .L12+32
 990 0070 1360     		str	r3, [r2]
 393:Core/Src/main.c **** 
 394:Core/Src/main.c ****   /* creation of RadioStateSemaphore */
 395:Core/Src/main.c ****   RadioStateSemaphoreHandle = osSemaphoreNew(1, 1, &RadioStateSemaphore_attributes);
 991              		.loc 1 395 31
 992 0072 664A     		ldr	r2, .L12+36
 993 0074 0121     		movs	r1, #1
 994 0076 0120     		movs	r0, #1
 995 0078 FFF7FEFF 		bl	osSemaphoreNew
 996 007c 0346     		mov	r3, r0
 997              		.loc 1 395 29
 998 007e 644A     		ldr	r2, .L12+40
 999 0080 1360     		str	r3, [r2]
 396:Core/Src/main.c **** 
 397:Core/Src/main.c ****   /* creation of LoRaTXSemaphore */
 398:Core/Src/main.c ****   LoRaTXSemaphoreHandle = osSemaphoreNew(1, 1, &LoRaTXSemaphore_attributes);
 1000              		.loc 1 398 27
 1001 0082 644A     		ldr	r2, .L12+44
 1002 0084 0121     		movs	r1, #1
 1003 0086 0120     		movs	r0, #1
 1004 0088 FFF7FEFF 		bl	osSemaphoreNew
 1005 008c 0346     		mov	r3, r0
 1006              		.loc 1 398 25
 1007 008e 624A     		ldr	r2, .L12+48
 1008 0090 1360     		str	r3, [r2]
 399:Core/Src/main.c **** 
 400:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 401:Core/Src/main.c ****   /* add semaphores, ... */
 402:Core/Src/main.c ****   /* USER CODE END RTOS_SEMAPHORES */
 403:Core/Src/main.c **** 
 404:Core/Src/main.c ****   /* Create the timer(s) */
 405:Core/Src/main.c ****   /* creation of PeriodicSendTimer */
 406:Core/Src/main.c ****   PeriodicSendTimerHandle = osTimerNew(PeriodicSendTimerCallback, osTimerPeriodic, NULL, &PeriodicS
 1009              		.loc 1 406 29
 1010 0092 624B     		ldr	r3, .L12+52
 1011 0094 0022     		movs	r2, #0
 1012 0096 0121     		movs	r1, #1
 1013 0098 6148     		ldr	r0, .L12+56
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s 			page 27


 1014 009a FFF7FEFF 		bl	osTimerNew
 1015 009e 0346     		mov	r3, r0
 1016              		.loc 1 406 27
 1017 00a0 604A     		ldr	r2, .L12+60
 1018 00a2 1360     		str	r3, [r2]
 407:Core/Src/main.c **** 
 408:Core/Src/main.c ****   /* creation of ModemLedTimer */
 409:Core/Src/main.c ****   ModemLedTimerHandle = osTimerNew(ModemLedCallback, osTimerPeriodic, NULL, &ModemLedTimer_attribut
 1019              		.loc 1 409 25
 1020 00a4 604B     		ldr	r3, .L12+64
 1021 00a6 0022     		movs	r2, #0
 1022 00a8 0121     		movs	r1, #1
 1023 00aa 6048     		ldr	r0, .L12+68
 1024 00ac FFF7FEFF 		bl	osTimerNew
 1025 00b0 0346     		mov	r3, r0
 1026              		.loc 1 409 23
 1027 00b2 5F4A     		ldr	r2, .L12+72
 1028 00b4 1360     		str	r3, [r2]
 410:Core/Src/main.c **** 
 411:Core/Src/main.c ****   /* creation of DutyCycleTimer */
 412:Core/Src/main.c ****   DutyCycleTimerHandle = osTimerNew(DutyCycleTimerCallback, osTimerOnce, NULL, &DutyCycleTimer_attr
 1029              		.loc 1 412 26
 1030 00b6 5F4B     		ldr	r3, .L12+76
 1031 00b8 0022     		movs	r2, #0
 1032 00ba 0021     		movs	r1, #0
 1033 00bc 5E48     		ldr	r0, .L12+80
 1034 00be FFF7FEFF 		bl	osTimerNew
 1035 00c2 0346     		mov	r3, r0
 1036              		.loc 1 412 24
 1037 00c4 5D4A     		ldr	r2, .L12+84
 1038 00c6 1360     		str	r3, [r2]
 413:Core/Src/main.c **** 
 414:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_TIMERS */
 415:Core/Src/main.c ****   /* start timers, add new ones, ... */
 416:Core/Src/main.c ****   /* USER CODE END RTOS_TIMERS */
 417:Core/Src/main.c **** 
 418:Core/Src/main.c ****   /* Create the queue(s) */
 419:Core/Src/main.c ****   /* creation of uartQueue */
 420:Core/Src/main.c ****   uartQueueHandle = osMessageQueueNew (4, sizeof(void*), &uartQueue_attributes);
 1039              		.loc 1 420 21
 1040 00c8 5D4A     		ldr	r2, .L12+88
 1041 00ca 0421     		movs	r1, #4
 1042 00cc 0420     		movs	r0, #4
 1043 00ce FFF7FEFF 		bl	osMessageQueueNew
 1044 00d2 0346     		mov	r3, r0
 1045              		.loc 1 420 19
 1046 00d4 5B4A     		ldr	r2, .L12+92
 1047 00d6 1360     		str	r3, [r2]
 421:Core/Src/main.c **** 
 422:Core/Src/main.c ****   /* creation of ATQueue */
 423:Core/Src/main.c ****   ATQueueHandle = osMessageQueueNew (4, sizeof(void*), &ATQueue_attributes);
 1048              		.loc 1 423 19
 1049 00d8 5B4A     		ldr	r2, .L12+96
 1050 00da 0421     		movs	r1, #4
 1051 00dc 0420     		movs	r0, #4
 1052 00de FFF7FEFF 		bl	osMessageQueueNew
 1053 00e2 0346     		mov	r3, r0
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s 			page 28


 1054              		.loc 1 423 17
 1055 00e4 594A     		ldr	r2, .L12+100
 1056 00e6 1360     		str	r3, [r2]
 424:Core/Src/main.c **** 
 425:Core/Src/main.c ****   /* creation of ModemSendQueue */
 426:Core/Src/main.c ****   ModemSendQueueHandle = osMessageQueueNew (4, sizeof(void*), &ModemSendQueue_attributes);
 1057              		.loc 1 426 26
 1058 00e8 594A     		ldr	r2, .L12+104
 1059 00ea 0421     		movs	r1, #4
 1060 00ec 0420     		movs	r0, #4
 1061 00ee FFF7FEFF 		bl	osMessageQueueNew
 1062 00f2 0346     		mov	r3, r0
 1063              		.loc 1 426 24
 1064 00f4 574A     		ldr	r2, .L12+108
 1065 00f6 1360     		str	r3, [r2]
 427:Core/Src/main.c **** 
 428:Core/Src/main.c ****   /* creation of TemperatureQueue */
 429:Core/Src/main.c ****   TemperatureQueueHandle = osMessageQueueNew (8, sizeof(TEMPERATURE_OBJ_t), &TemperatureQueue_attri
 1066              		.loc 1 429 28
 1067 00f8 574A     		ldr	r2, .L12+112
 1068 00fa 0821     		movs	r1, #8
 1069 00fc 0820     		movs	r0, #8
 1070 00fe FFF7FEFF 		bl	osMessageQueueNew
 1071 0102 0346     		mov	r3, r0
 1072              		.loc 1 429 26
 1073 0104 554A     		ldr	r2, .L12+116
 1074 0106 1360     		str	r3, [r2]
 430:Core/Src/main.c **** 
 431:Core/Src/main.c ****   /* creation of AccontrollerQueue */
 432:Core/Src/main.c ****   AccontrollerQueueHandle = osMessageQueueNew (16, sizeof(ACCONTROLLER_OBJ_t), &AccontrollerQueue_a
 1075              		.loc 1 432 29
 1076 0108 554A     		ldr	r2, .L12+120
 1077 010a 0321     		movs	r1, #3
 1078 010c 1020     		movs	r0, #16
 1079 010e FFF7FEFF 		bl	osMessageQueueNew
 1080 0112 0346     		mov	r3, r0
 1081              		.loc 1 432 27
 1082 0114 534A     		ldr	r2, .L12+124
 1083 0116 1360     		str	r3, [r2]
 433:Core/Src/main.c **** 
 434:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_QUEUES */
 435:Core/Src/main.c ****   /* add queues, ... */
 436:Core/Src/main.c ****   /* USER CODE END RTOS_QUEUES */
 437:Core/Src/main.c **** 
 438:Core/Src/main.c ****   /* Create the thread(s) */
 439:Core/Src/main.c ****   /* creation of defaultTask */
 440:Core/Src/main.c ****   defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 1084              		.loc 1 440 23
 1085 0118 534A     		ldr	r2, .L12+128
 1086 011a 0021     		movs	r1, #0
 1087 011c 5348     		ldr	r0, .L12+132
 1088 011e FFF7FEFF 		bl	osThreadNew
 1089 0122 0346     		mov	r3, r0
 1090              		.loc 1 440 21
 1091 0124 524A     		ldr	r2, .L12+136
 1092 0126 1360     		str	r3, [r2]
 441:Core/Src/main.c **** 
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s 			page 29


 442:Core/Src/main.c ****   /* creation of ATParsingTask */
 443:Core/Src/main.c ****   ATParsingTaskHandle = osThreadNew(ATParsingTaskCode, NULL, &ATParsingTask_attributes);
 1093              		.loc 1 443 25
 1094 0128 524A     		ldr	r2, .L12+140
 1095 012a 0021     		movs	r1, #0
 1096 012c 5248     		ldr	r0, .L12+144
 1097 012e FFF7FEFF 		bl	osThreadNew
 1098 0132 0346     		mov	r3, r0
 1099              		.loc 1 443 23
 1100 0134 514A     		ldr	r2, .L12+148
 1101 0136 1360     		str	r3, [r2]
 444:Core/Src/main.c **** 
 445:Core/Src/main.c ****   /* creation of ATHandlingTask */
 446:Core/Src/main.c ****   ATHandlingTaskHandle = osThreadNew(ATHandlingTaskCode, NULL, &ATHandlingTask_attributes);
 1102              		.loc 1 446 26
 1103 0138 514A     		ldr	r2, .L12+152
 1104 013a 0021     		movs	r1, #0
 1105 013c 5148     		ldr	r0, .L12+156
 1106 013e FFF7FEFF 		bl	osThreadNew
 1107 0142 0346     		mov	r3, r0
 1108              		.loc 1 446 24
 1109 0144 504A     		ldr	r2, .L12+160
 1110 0146 1360     		str	r3, [r2]
 447:Core/Src/main.c **** 
 448:Core/Src/main.c ****   /* creation of UARTProcTask */
 449:Core/Src/main.c ****   UARTProcTaskHandle = osThreadNew(UARTProcTaskCode, NULL, &UARTProcTask_attributes);
 1111              		.loc 1 449 24
 1112 0148 504A     		ldr	r2, .L12+164
 1113 014a 0021     		movs	r1, #0
 1114 014c 5048     		ldr	r0, .L12+168
 1115 014e FFF7FEFF 		bl	osThreadNew
 1116 0152 0346     		mov	r3, r0
 1117              		.loc 1 449 22
 1118 0154 4F4A     		ldr	r2, .L12+172
 1119 0156 1360     		str	r3, [r2]
 450:Core/Src/main.c **** 
 451:Core/Src/main.c ****   /* creation of ModemMngrTask */
 452:Core/Src/main.c ****   ModemMngrTaskHandle = osThreadNew(ModemManagerTaskCode, NULL, &ModemMngrTask_attributes);
 1120              		.loc 1 452 25
 1121 0158 4F4A     		ldr	r2, .L12+176
 1122 015a 0021     		movs	r1, #0
 1123 015c 4F48     		ldr	r0, .L12+180
 1124 015e FFF7FEFF 		bl	osThreadNew
 1125 0162 0346     		mov	r3, r0
 1126              		.loc 1 452 23
 1127 0164 4E4A     		ldr	r2, .L12+184
 1128 0166 1360     		str	r3, [r2]
 453:Core/Src/main.c **** 
 454:Core/Src/main.c ****   /* creation of AppSendTask */
 455:Core/Src/main.c ****   AppSendTaskHandle = osThreadNew(AppSendTaskCode, NULL, &AppSendTask_attributes);
 1129              		.loc 1 455 23
 1130 0168 4E4A     		ldr	r2, .L12+188
 1131 016a 0021     		movs	r1, #0
 1132 016c 4E48     		ldr	r0, .L12+192
 1133 016e FFF7FEFF 		bl	osThreadNew
 1134 0172 0346     		mov	r3, r0
 1135              		.loc 1 455 21
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s 			page 30


 1136 0174 4D4A     		ldr	r2, .L12+196
 1137 0176 1360     		str	r3, [r2]
 456:Core/Src/main.c **** 
 457:Core/Src/main.c ****   /* creation of ReadFromADCTask */
 458:Core/Src/main.c ****   ReadFromADCTaskHandle = osThreadNew(ReadFromADCTaskCode, NULL, &ReadFromADCTask_attributes);
 1138              		.loc 1 458 27
 1139 0178 4D4A     		ldr	r2, .L12+200
 1140 017a 0021     		movs	r1, #0
 1141 017c 4D48     		ldr	r0, .L12+204
 1142 017e FFF7FEFF 		bl	osThreadNew
 1143 0182 0346     		mov	r3, r0
 1144              		.loc 1 458 25
 1145 0184 4C4A     		ldr	r2, .L12+208
 1146 0186 1360     		str	r3, [r2]
 459:Core/Src/main.c **** 
 460:Core/Src/main.c ****   /* creation of DutyCycle */
 461:Core/Src/main.c ****   DutyCycleHandle = osThreadNew(DutyCycleCode, NULL, &DutyCycle_attributes);
 1147              		.loc 1 461 21
 1148 0188 4C4A     		ldr	r2, .L12+212
 1149 018a 0021     		movs	r1, #0
 1150 018c 4C48     		ldr	r0, .L12+216
 1151 018e FFF7FEFF 		bl	osThreadNew
 1152 0192 0346     		mov	r3, r0
 1153              		.loc 1 461 19
 1154 0194 4B4A     		ldr	r2, .L12+220
 1155 0196 1360     		str	r3, [r2]
 462:Core/Src/main.c **** 
 463:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_THREADS */
 464:Core/Src/main.c ****   /* add threads, ... */
 465:Core/Src/main.c ****   /* USER CODE END RTOS_THREADS */
 466:Core/Src/main.c **** 
 467:Core/Src/main.c ****   /* Create the event(s) */
 468:Core/Src/main.c ****   /* creation of ModemStatusFlags */
 469:Core/Src/main.c ****   ModemStatusFlagsHandle = osEventFlagsNew(&ModemStatusFlags_attributes);
 1156              		.loc 1 469 28
 1157 0198 4B48     		ldr	r0, .L12+224
 1158 019a FFF7FEFF 		bl	osEventFlagsNew
 1159 019e 0346     		mov	r3, r0
 1160              		.loc 1 469 26
 1161 01a0 4A4A     		ldr	r2, .L12+228
 1162 01a2 1360     		str	r3, [r2]
 470:Core/Src/main.c **** 
 471:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_EVENTS */
 472:Core/Src/main.c ****   /* add events, ... */
 473:Core/Src/main.c ****   /* USER CODE END RTOS_EVENTS */
 474:Core/Src/main.c **** 
 475:Core/Src/main.c ****   /* Start scheduler */
 476:Core/Src/main.c ****   osKernelStart();
 1163              		.loc 1 476 3
 1164 01a4 FFF7FEFF 		bl	osKernelStart
 1165              	.L11:
 477:Core/Src/main.c **** 
 478:Core/Src/main.c ****   /* We should never get here as control is now taken by the scheduler */
 479:Core/Src/main.c ****   /* Infinite loop */
 480:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 481:Core/Src/main.c ****   while (1)
 482:Core/Src/main.c ****   {
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s 			page 31


 483:Core/Src/main.c ****     for (i = 0; i < 8; i++)
 1166              		.loc 1 483 12
 1167 01a8 0023     		movs	r3, #0
 1168 01aa 7B60     		str	r3, [r7, #4]
 1169              		.loc 1 483 5
 1170 01ac 14E0     		b	.L9
 1171              	.L10:
 484:Core/Src/main.c ****     {
 485:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, 0);
 1172              		.loc 1 485 7 discriminator 3
 1173 01ae 0022     		movs	r2, #0
 1174 01b0 4FF40051 		mov	r1, #8192
 1175 01b4 4648     		ldr	r0, .L12+232
 1176 01b6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 486:Core/Src/main.c ****       HAL_Delay(25);
 1177              		.loc 1 486 7 discriminator 3
 1178 01ba 1920     		movs	r0, #25
 1179 01bc FFF7FEFF 		bl	HAL_Delay
 487:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, 1);
 1180              		.loc 1 487 7 discriminator 3
 1181 01c0 0122     		movs	r2, #1
 1182 01c2 4FF40051 		mov	r1, #8192
 1183 01c6 4248     		ldr	r0, .L12+232
 1184 01c8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 488:Core/Src/main.c ****       HAL_Delay(50);
 1185              		.loc 1 488 7 discriminator 3
 1186 01cc 3220     		movs	r0, #50
 1187 01ce FFF7FEFF 		bl	HAL_Delay
 483:Core/Src/main.c ****     {
 1188              		.loc 1 483 25 discriminator 3
 1189 01d2 7B68     		ldr	r3, [r7, #4]
 1190 01d4 0133     		adds	r3, r3, #1
 1191 01d6 7B60     		str	r3, [r7, #4]
 1192              	.L9:
 483:Core/Src/main.c ****     {
 1193              		.loc 1 483 19 discriminator 1
 1194 01d8 7B68     		ldr	r3, [r7, #4]
 1195 01da 072B     		cmp	r3, #7
 1196 01dc E7D9     		bls	.L10
 489:Core/Src/main.c ****     }
 490:Core/Src/main.c ****     HAL_Delay(800);
 1197              		.loc 1 490 5
 1198 01de 4FF44870 		mov	r0, #800
 1199 01e2 FFF7FEFF 		bl	HAL_Delay
 483:Core/Src/main.c ****     {
 1200              		.loc 1 483 12
 1201 01e6 DFE7     		b	.L11
 1202              	.L13:
 1203              		.align	2
 1204              	.L12:
 1205 01e8 00000000 		.word	uxTopUsedPriority
 1206 01ec 00000000 		.word	htim1
 1207 01f0 00000000 		.word	htim3
 1208 01f4 00000000 		.word	ATCommandSemaphore_attributes
 1209 01f8 00000000 		.word	ATCommandSemaphoreHandle
 1210 01fc 00000000 		.word	ATResponseSemaphore_attributes
 1211 0200 00000000 		.word	ATResponseSemaphoreHandle
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s 			page 32


 1212 0204 00000000 		.word	UARTTXSemaphore_attributes
 1213 0208 00000000 		.word	UARTTXSemaphoreHandle
 1214 020c 00000000 		.word	RadioStateSemaphore_attributes
 1215 0210 00000000 		.word	RadioStateSemaphoreHandle
 1216 0214 00000000 		.word	LoRaTXSemaphore_attributes
 1217 0218 00000000 		.word	LoRaTXSemaphoreHandle
 1218 021c 00000000 		.word	PeriodicSendTimer_attributes
 1219 0220 00000000 		.word	PeriodicSendTimerCallback
 1220 0224 00000000 		.word	PeriodicSendTimerHandle
 1221 0228 00000000 		.word	ModemLedTimer_attributes
 1222 022c 00000000 		.word	ModemLedCallback
 1223 0230 00000000 		.word	ModemLedTimerHandle
 1224 0234 00000000 		.word	DutyCycleTimer_attributes
 1225 0238 00000000 		.word	DutyCycleTimerCallback
 1226 023c 00000000 		.word	DutyCycleTimerHandle
 1227 0240 00000000 		.word	uartQueue_attributes
 1228 0244 00000000 		.word	uartQueueHandle
 1229 0248 00000000 		.word	ATQueue_attributes
 1230 024c 00000000 		.word	ATQueueHandle
 1231 0250 00000000 		.word	ModemSendQueue_attributes
 1232 0254 00000000 		.word	ModemSendQueueHandle
 1233 0258 00000000 		.word	TemperatureQueue_attributes
 1234 025c 00000000 		.word	TemperatureQueueHandle
 1235 0260 00000000 		.word	AccontrollerQueue_attributes
 1236 0264 00000000 		.word	AccontrollerQueueHandle
 1237 0268 00000000 		.word	defaultTask_attributes
 1238 026c 00000000 		.word	StartDefaultTask
 1239 0270 00000000 		.word	defaultTaskHandle
 1240 0274 00000000 		.word	ATParsingTask_attributes
 1241 0278 00000000 		.word	ATParsingTaskCode
 1242 027c 00000000 		.word	ATParsingTaskHandle
 1243 0280 00000000 		.word	ATHandlingTask_attributes
 1244 0284 00000000 		.word	ATHandlingTaskCode
 1245 0288 00000000 		.word	ATHandlingTaskHandle
 1246 028c 00000000 		.word	UARTProcTask_attributes
 1247 0290 00000000 		.word	UARTProcTaskCode
 1248 0294 00000000 		.word	UARTProcTaskHandle
 1249 0298 00000000 		.word	ModemMngrTask_attributes
 1250 029c 00000000 		.word	ModemManagerTaskCode
 1251 02a0 00000000 		.word	ModemMngrTaskHandle
 1252 02a4 00000000 		.word	AppSendTask_attributes
 1253 02a8 00000000 		.word	AppSendTaskCode
 1254 02ac 00000000 		.word	AppSendTaskHandle
 1255 02b0 00000000 		.word	ReadFromADCTask_attributes
 1256 02b4 00000000 		.word	ReadFromADCTaskCode
 1257 02b8 00000000 		.word	ReadFromADCTaskHandle
 1258 02bc 00000000 		.word	DutyCycle_attributes
 1259 02c0 00000000 		.word	DutyCycleCode
 1260 02c4 00000000 		.word	DutyCycleHandle
 1261 02c8 00000000 		.word	ModemStatusFlags_attributes
 1262 02cc 00000000 		.word	ModemStatusFlagsHandle
 1263 02d0 00080240 		.word	1073874944
 1264              		.cfi_endproc
 1265              	.LFE226:
 1267              		.section	.text.SystemClock_Config,"ax",%progbits
 1268              		.align	1
 1269              		.global	SystemClock_Config
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s 			page 33


 1270              		.syntax unified
 1271              		.thumb
 1272              		.thumb_func
 1274              	SystemClock_Config:
 1275              	.LFB227:
 491:Core/Src/main.c **** 
 492:Core/Src/main.c ****     /* USER CODE END WHILE */
 493:Core/Src/main.c **** 
 494:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 495:Core/Src/main.c ****   }
 496:Core/Src/main.c ****   /* USER CODE END 3 */
 497:Core/Src/main.c **** }
 498:Core/Src/main.c **** 
 499:Core/Src/main.c **** /**
 500:Core/Src/main.c ****   * @brief System Clock Configuration
 501:Core/Src/main.c ****   * @retval None
 502:Core/Src/main.c ****   */
 503:Core/Src/main.c **** void SystemClock_Config(void)
 504:Core/Src/main.c **** {
 1276              		.loc 1 504 1
 1277              		.cfi_startproc
 1278              		@ args = 0, pretend = 0, frame = 80
 1279              		@ frame_needed = 1, uses_anonymous_args = 0
 1280 0000 80B5     		push	{r7, lr}
 1281              	.LCFI9:
 1282              		.cfi_def_cfa_offset 8
 1283              		.cfi_offset 7, -8
 1284              		.cfi_offset 14, -4
 1285 0002 94B0     		sub	sp, sp, #80
 1286              	.LCFI10:
 1287              		.cfi_def_cfa_offset 88
 1288 0004 00AF     		add	r7, sp, #0
 1289              	.LCFI11:
 1290              		.cfi_def_cfa_register 7
 505:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1291              		.loc 1 505 22
 1292 0006 07F12003 		add	r3, r7, #32
 1293 000a 3022     		movs	r2, #48
 1294 000c 0021     		movs	r1, #0
 1295 000e 1846     		mov	r0, r3
 1296 0010 FFF7FEFF 		bl	memset
 506:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1297              		.loc 1 506 22
 1298 0014 07F10C03 		add	r3, r7, #12
 1299 0018 0022     		movs	r2, #0
 1300 001a 1A60     		str	r2, [r3]
 1301 001c 5A60     		str	r2, [r3, #4]
 1302 001e 9A60     		str	r2, [r3, #8]
 1303 0020 DA60     		str	r2, [r3, #12]
 1304 0022 1A61     		str	r2, [r3, #16]
 1305              	.LBB4:
 507:Core/Src/main.c **** 
 508:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 509:Core/Src/main.c ****   */
 510:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 1306              		.loc 1 510 3
 1307 0024 0023     		movs	r3, #0
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s 			page 34


 1308 0026 BB60     		str	r3, [r7, #8]
 1309 0028 274B     		ldr	r3, .L18
 1310 002a 1B6C     		ldr	r3, [r3, #64]
 1311 002c 264A     		ldr	r2, .L18
 1312 002e 43F08053 		orr	r3, r3, #268435456
 1313 0032 1364     		str	r3, [r2, #64]
 1314 0034 244B     		ldr	r3, .L18
 1315 0036 1B6C     		ldr	r3, [r3, #64]
 1316 0038 03F08053 		and	r3, r3, #268435456
 1317 003c BB60     		str	r3, [r7, #8]
 1318 003e BB68     		ldr	r3, [r7, #8]
 1319              	.LBE4:
 1320              	.LBB5:
 511:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1321              		.loc 1 511 3
 1322 0040 0023     		movs	r3, #0
 1323 0042 7B60     		str	r3, [r7, #4]
 1324 0044 214B     		ldr	r3, .L18+4
 1325 0046 1B68     		ldr	r3, [r3]
 1326 0048 204A     		ldr	r2, .L18+4
 1327 004a 43F44043 		orr	r3, r3, #49152
 1328 004e 1360     		str	r3, [r2]
 1329 0050 1E4B     		ldr	r3, .L18+4
 1330 0052 1B68     		ldr	r3, [r3]
 1331 0054 03F44043 		and	r3, r3, #49152
 1332 0058 7B60     		str	r3, [r7, #4]
 1333 005a 7B68     		ldr	r3, [r7, #4]
 1334              	.LBE5:
 512:Core/Src/main.c **** 
 513:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 514:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 515:Core/Src/main.c ****   */
 516:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 1335              		.loc 1 516 36
 1336 005c 0123     		movs	r3, #1
 1337 005e 3B62     		str	r3, [r7, #32]
 517:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1338              		.loc 1 517 30
 1339 0060 4FF48033 		mov	r3, #65536
 1340 0064 7B62     		str	r3, [r7, #36]
 518:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1341              		.loc 1 518 34
 1342 0066 0223     		movs	r3, #2
 1343 0068 BB63     		str	r3, [r7, #56]
 519:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1344              		.loc 1 519 35
 1345 006a 4FF48003 		mov	r3, #4194304
 1346 006e FB63     		str	r3, [r7, #60]
 520:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
 1347              		.loc 1 520 30
 1348 0070 1923     		movs	r3, #25
 1349 0072 3B64     		str	r3, [r7, #64]
 521:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 192;
 1350              		.loc 1 521 30
 1351 0074 C023     		movs	r3, #192
 1352 0076 7B64     		str	r3, [r7, #68]
 522:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s 			page 35


 1353              		.loc 1 522 30
 1354 0078 0223     		movs	r3, #2
 1355 007a BB64     		str	r3, [r7, #72]
 523:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 1356              		.loc 1 523 30
 1357 007c 0423     		movs	r3, #4
 1358 007e FB64     		str	r3, [r7, #76]
 524:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1359              		.loc 1 524 7
 1360 0080 07F12003 		add	r3, r7, #32
 1361 0084 1846     		mov	r0, r3
 1362 0086 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1363 008a 0346     		mov	r3, r0
 1364              		.loc 1 524 6
 1365 008c 002B     		cmp	r3, #0
 1366 008e 01D0     		beq	.L15
 525:Core/Src/main.c ****   {
 526:Core/Src/main.c ****     Error_Handler();
 1367              		.loc 1 526 5
 1368 0090 FFF7FEFF 		bl	Error_Handler
 1369              	.L15:
 527:Core/Src/main.c ****   }
 528:Core/Src/main.c **** 
 529:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 530:Core/Src/main.c ****   */
 531:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 1370              		.loc 1 531 31
 1371 0094 0F23     		movs	r3, #15
 1372 0096 FB60     		str	r3, [r7, #12]
 532:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 533:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 1373              		.loc 1 533 34
 1374 0098 0223     		movs	r3, #2
 1375 009a 3B61     		str	r3, [r7, #16]
 534:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1376              		.loc 1 534 35
 1377 009c 0023     		movs	r3, #0
 1378 009e 7B61     		str	r3, [r7, #20]
 535:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1379              		.loc 1 535 36
 1380 00a0 4FF48053 		mov	r3, #4096
 1381 00a4 BB61     		str	r3, [r7, #24]
 536:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1382              		.loc 1 536 36
 1383 00a6 0023     		movs	r3, #0
 1384 00a8 FB61     		str	r3, [r7, #28]
 537:Core/Src/main.c **** 
 538:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 1385              		.loc 1 538 7
 1386 00aa 07F10C03 		add	r3, r7, #12
 1387 00ae 0321     		movs	r1, #3
 1388 00b0 1846     		mov	r0, r3
 1389 00b2 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1390 00b6 0346     		mov	r3, r0
 1391              		.loc 1 538 6
 1392 00b8 002B     		cmp	r3, #0
 1393 00ba 01D0     		beq	.L17
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s 			page 36


 539:Core/Src/main.c ****   {
 540:Core/Src/main.c ****     Error_Handler();
 1394              		.loc 1 540 5
 1395 00bc FFF7FEFF 		bl	Error_Handler
 1396              	.L17:
 541:Core/Src/main.c ****   }
 542:Core/Src/main.c **** }
 1397              		.loc 1 542 1
 1398 00c0 00BF     		nop
 1399 00c2 5037     		adds	r7, r7, #80
 1400              	.LCFI12:
 1401              		.cfi_def_cfa_offset 8
 1402 00c4 BD46     		mov	sp, r7
 1403              	.LCFI13:
 1404              		.cfi_def_cfa_register 13
 1405              		@ sp needed
 1406 00c6 80BD     		pop	{r7, pc}
 1407              	.L19:
 1408              		.align	2
 1409              	.L18:
 1410 00c8 00380240 		.word	1073887232
 1411 00cc 00700040 		.word	1073770496
 1412              		.cfi_endproc
 1413              	.LFE227:
 1415              		.section	.text.MX_ADC1_Init,"ax",%progbits
 1416              		.align	1
 1417              		.syntax unified
 1418              		.thumb
 1419              		.thumb_func
 1421              	MX_ADC1_Init:
 1422              	.LFB228:
 543:Core/Src/main.c **** 
 544:Core/Src/main.c **** /**
 545:Core/Src/main.c ****   * @brief ADC1 Initialization Function
 546:Core/Src/main.c ****   * @param None
 547:Core/Src/main.c ****   * @retval None
 548:Core/Src/main.c ****   */
 549:Core/Src/main.c **** static void MX_ADC1_Init(void)
 550:Core/Src/main.c **** {
 1423              		.loc 1 550 1
 1424              		.cfi_startproc
 1425              		@ args = 0, pretend = 0, frame = 16
 1426              		@ frame_needed = 1, uses_anonymous_args = 0
 1427 0000 80B5     		push	{r7, lr}
 1428              	.LCFI14:
 1429              		.cfi_def_cfa_offset 8
 1430              		.cfi_offset 7, -8
 1431              		.cfi_offset 14, -4
 1432 0002 84B0     		sub	sp, sp, #16
 1433              	.LCFI15:
 1434              		.cfi_def_cfa_offset 24
 1435 0004 00AF     		add	r7, sp, #0
 1436              	.LCFI16:
 1437              		.cfi_def_cfa_register 7
 551:Core/Src/main.c **** 
 552:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 0 */
 553:Core/Src/main.c **** 
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s 			page 37


 554:Core/Src/main.c ****   /* USER CODE END ADC1_Init 0 */
 555:Core/Src/main.c **** 
 556:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 1438              		.loc 1 556 26
 1439 0006 3B46     		mov	r3, r7
 1440 0008 0022     		movs	r2, #0
 1441 000a 1A60     		str	r2, [r3]
 1442 000c 5A60     		str	r2, [r3, #4]
 1443 000e 9A60     		str	r2, [r3, #8]
 1444 0010 DA60     		str	r2, [r3, #12]
 557:Core/Src/main.c **** 
 558:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 1 */
 559:Core/Src/main.c **** 
 560:Core/Src/main.c ****   /* USER CODE END ADC1_Init 1 */
 561:Core/Src/main.c **** 
 562:Core/Src/main.c ****   /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of con
 563:Core/Src/main.c ****   */
 564:Core/Src/main.c ****   hadc1.Instance = ADC1;
 1445              		.loc 1 564 18
 1446 0012 214B     		ldr	r3, .L24
 1447 0014 214A     		ldr	r2, .L24+4
 1448 0016 1A60     		str	r2, [r3]
 565:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 1449              		.loc 1 565 29
 1450 0018 1F4B     		ldr	r3, .L24
 1451 001a 4FF48032 		mov	r2, #65536
 1452 001e 5A60     		str	r2, [r3, #4]
 566:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 1453              		.loc 1 566 25
 1454 0020 1D4B     		ldr	r3, .L24
 1455 0022 0022     		movs	r2, #0
 1456 0024 9A60     		str	r2, [r3, #8]
 567:Core/Src/main.c ****   hadc1.Init.ScanConvMode = DISABLE;
 1457              		.loc 1 567 27
 1458 0026 1C4B     		ldr	r3, .L24
 1459 0028 0022     		movs	r2, #0
 1460 002a 1A61     		str	r2, [r3, #16]
 568:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 1461              		.loc 1 568 33
 1462 002c 1A4B     		ldr	r3, .L24
 1463 002e 0022     		movs	r2, #0
 1464 0030 1A76     		strb	r2, [r3, #24]
 569:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 1465              		.loc 1 569 36
 1466 0032 194B     		ldr	r3, .L24
 1467 0034 0022     		movs	r2, #0
 1468 0036 83F82020 		strb	r2, [r3, #32]
 570:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 1469              		.loc 1 570 35
 1470 003a 174B     		ldr	r3, .L24
 1471 003c 0022     		movs	r2, #0
 1472 003e DA62     		str	r2, [r3, #44]
 571:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 1473              		.loc 1 571 31
 1474 0040 154B     		ldr	r3, .L24
 1475 0042 174A     		ldr	r2, .L24+8
 1476 0044 9A62     		str	r2, [r3, #40]
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s 			page 38


 572:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 1477              		.loc 1 572 24
 1478 0046 144B     		ldr	r3, .L24
 1479 0048 0022     		movs	r2, #0
 1480 004a DA60     		str	r2, [r3, #12]
 573:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 1481              		.loc 1 573 30
 1482 004c 124B     		ldr	r3, .L24
 1483 004e 0122     		movs	r2, #1
 1484 0050 DA61     		str	r2, [r3, #28]
 574:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 1485              		.loc 1 574 36
 1486 0052 114B     		ldr	r3, .L24
 1487 0054 0022     		movs	r2, #0
 1488 0056 83F83020 		strb	r2, [r3, #48]
 575:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 1489              		.loc 1 575 27
 1490 005a 0F4B     		ldr	r3, .L24
 1491 005c 0122     		movs	r2, #1
 1492 005e 5A61     		str	r2, [r3, #20]
 576:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 1493              		.loc 1 576 7
 1494 0060 0D48     		ldr	r0, .L24
 1495 0062 FFF7FEFF 		bl	HAL_ADC_Init
 1496 0066 0346     		mov	r3, r0
 1497              		.loc 1 576 6
 1498 0068 002B     		cmp	r3, #0
 1499 006a 01D0     		beq	.L21
 577:Core/Src/main.c ****   {
 578:Core/Src/main.c ****     Error_Handler();
 1500              		.loc 1 578 5
 1501 006c FFF7FEFF 		bl	Error_Handler
 1502              	.L21:
 579:Core/Src/main.c ****   }
 580:Core/Src/main.c **** 
 581:Core/Src/main.c ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
 582:Core/Src/main.c ****   */
 583:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_0;
 1503              		.loc 1 583 19
 1504 0070 0023     		movs	r3, #0
 1505 0072 3B60     		str	r3, [r7]
 584:Core/Src/main.c ****   sConfig.Rank = 1;
 1506              		.loc 1 584 16
 1507 0074 0123     		movs	r3, #1
 1508 0076 7B60     		str	r3, [r7, #4]
 585:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 1509              		.loc 1 585 24
 1510 0078 0023     		movs	r3, #0
 1511 007a BB60     		str	r3, [r7, #8]
 586:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 1512              		.loc 1 586 7
 1513 007c 3B46     		mov	r3, r7
 1514 007e 1946     		mov	r1, r3
 1515 0080 0548     		ldr	r0, .L24
 1516 0082 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 1517 0086 0346     		mov	r3, r0
 1518              		.loc 1 586 6
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s 			page 39


 1519 0088 002B     		cmp	r3, #0
 1520 008a 01D0     		beq	.L23
 587:Core/Src/main.c ****   {
 588:Core/Src/main.c ****     Error_Handler();
 1521              		.loc 1 588 5
 1522 008c FFF7FEFF 		bl	Error_Handler
 1523              	.L23:
 589:Core/Src/main.c ****   }
 590:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 2 */
 591:Core/Src/main.c **** 
 592:Core/Src/main.c ****   /* USER CODE END ADC1_Init 2 */
 593:Core/Src/main.c **** 
 594:Core/Src/main.c **** }
 1524              		.loc 1 594 1
 1525 0090 00BF     		nop
 1526 0092 1037     		adds	r7, r7, #16
 1527              	.LCFI17:
 1528              		.cfi_def_cfa_offset 8
 1529 0094 BD46     		mov	sp, r7
 1530              	.LCFI18:
 1531              		.cfi_def_cfa_register 13
 1532              		@ sp needed
 1533 0096 80BD     		pop	{r7, pc}
 1534              	.L25:
 1535              		.align	2
 1536              	.L24:
 1537 0098 00000000 		.word	hadc1
 1538 009c 00200140 		.word	1073815552
 1539 00a0 0100000F 		.word	251658241
 1540              		.cfi_endproc
 1541              	.LFE228:
 1543              		.section	.text.MX_TIM1_Init,"ax",%progbits
 1544              		.align	1
 1545              		.syntax unified
 1546              		.thumb
 1547              		.thumb_func
 1549              	MX_TIM1_Init:
 1550              	.LFB229:
 595:Core/Src/main.c **** 
 596:Core/Src/main.c **** /**
 597:Core/Src/main.c ****   * @brief TIM1 Initialization Function
 598:Core/Src/main.c ****   * @param None
 599:Core/Src/main.c ****   * @retval None
 600:Core/Src/main.c ****   */
 601:Core/Src/main.c **** static void MX_TIM1_Init(void)
 602:Core/Src/main.c **** {
 1551              		.loc 1 602 1
 1552              		.cfi_startproc
 1553              		@ args = 0, pretend = 0, frame = 88
 1554              		@ frame_needed = 1, uses_anonymous_args = 0
 1555 0000 80B5     		push	{r7, lr}
 1556              	.LCFI19:
 1557              		.cfi_def_cfa_offset 8
 1558              		.cfi_offset 7, -8
 1559              		.cfi_offset 14, -4
 1560 0002 96B0     		sub	sp, sp, #88
 1561              	.LCFI20:
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s 			page 40


 1562              		.cfi_def_cfa_offset 96
 1563 0004 00AF     		add	r7, sp, #0
 1564              	.LCFI21:
 1565              		.cfi_def_cfa_register 7
 603:Core/Src/main.c **** 
 604:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 0 */
 605:Core/Src/main.c **** 
 606:Core/Src/main.c ****   /* USER CODE END TIM1_Init 0 */
 607:Core/Src/main.c **** 
 608:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 1566              		.loc 1 608 26
 1567 0006 07F14803 		add	r3, r7, #72
 1568 000a 0022     		movs	r2, #0
 1569 000c 1A60     		str	r2, [r3]
 1570 000e 5A60     		str	r2, [r3, #4]
 1571 0010 9A60     		str	r2, [r3, #8]
 1572 0012 DA60     		str	r2, [r3, #12]
 609:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1573              		.loc 1 609 27
 1574 0014 07F14003 		add	r3, r7, #64
 1575 0018 0022     		movs	r2, #0
 1576 001a 1A60     		str	r2, [r3]
 1577 001c 5A60     		str	r2, [r3, #4]
 610:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 1578              		.loc 1 610 22
 1579 001e 07F12403 		add	r3, r7, #36
 1580 0022 0022     		movs	r2, #0
 1581 0024 1A60     		str	r2, [r3]
 1582 0026 5A60     		str	r2, [r3, #4]
 1583 0028 9A60     		str	r2, [r3, #8]
 1584 002a DA60     		str	r2, [r3, #12]
 1585 002c 1A61     		str	r2, [r3, #16]
 1586 002e 5A61     		str	r2, [r3, #20]
 1587 0030 9A61     		str	r2, [r3, #24]
 611:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 1588              		.loc 1 611 34
 1589 0032 3B1D     		adds	r3, r7, #4
 1590 0034 2022     		movs	r2, #32
 1591 0036 0021     		movs	r1, #0
 1592 0038 1846     		mov	r0, r3
 1593 003a FFF7FEFF 		bl	memset
 612:Core/Src/main.c **** 
 613:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 1 */
 614:Core/Src/main.c **** 
 615:Core/Src/main.c ****   /* USER CODE END TIM1_Init 1 */
 616:Core/Src/main.c ****   htim1.Instance = TIM1;
 1594              		.loc 1 616 18
 1595 003e 3F4B     		ldr	r3, .L33
 1596 0040 3F4A     		ldr	r2, .L33+4
 1597 0042 1A60     		str	r2, [r3]
 617:Core/Src/main.c ****   htim1.Init.Prescaler = 0;
 1598              		.loc 1 617 24
 1599 0044 3D4B     		ldr	r3, .L33
 1600 0046 0022     		movs	r2, #0
 1601 0048 5A60     		str	r2, [r3, #4]
 618:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 1602              		.loc 1 618 26
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s 			page 41


 1603 004a 3C4B     		ldr	r3, .L33
 1604 004c 0022     		movs	r2, #0
 1605 004e 9A60     		str	r2, [r3, #8]
 619:Core/Src/main.c ****   htim1.Init.Period = 9600-1;
 1606              		.loc 1 619 21
 1607 0050 3A4B     		ldr	r3, .L33
 1608 0052 42F27F52 		movw	r2, #9599
 1609 0056 DA60     		str	r2, [r3, #12]
 620:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1610              		.loc 1 620 28
 1611 0058 384B     		ldr	r3, .L33
 1612 005a 0022     		movs	r2, #0
 1613 005c 1A61     		str	r2, [r3, #16]
 621:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 1614              		.loc 1 621 32
 1615 005e 374B     		ldr	r3, .L33
 1616 0060 0022     		movs	r2, #0
 1617 0062 5A61     		str	r2, [r3, #20]
 622:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1618              		.loc 1 622 32
 1619 0064 354B     		ldr	r3, .L33
 1620 0066 0022     		movs	r2, #0
 1621 0068 9A61     		str	r2, [r3, #24]
 623:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 1622              		.loc 1 623 7
 1623 006a 3448     		ldr	r0, .L33
 1624 006c FFF7FEFF 		bl	HAL_TIM_Base_Init
 1625 0070 0346     		mov	r3, r0
 1626              		.loc 1 623 6
 1627 0072 002B     		cmp	r3, #0
 1628 0074 01D0     		beq	.L27
 624:Core/Src/main.c ****   {
 625:Core/Src/main.c ****     Error_Handler();
 1629              		.loc 1 625 5
 1630 0076 FFF7FEFF 		bl	Error_Handler
 1631              	.L27:
 626:Core/Src/main.c ****   }
 627:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 1632              		.loc 1 627 34
 1633 007a 4FF48053 		mov	r3, #4096
 1634 007e BB64     		str	r3, [r7, #72]
 628:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 1635              		.loc 1 628 7
 1636 0080 07F14803 		add	r3, r7, #72
 1637 0084 1946     		mov	r1, r3
 1638 0086 2D48     		ldr	r0, .L33
 1639 0088 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 1640 008c 0346     		mov	r3, r0
 1641              		.loc 1 628 6
 1642 008e 002B     		cmp	r3, #0
 1643 0090 01D0     		beq	.L28
 629:Core/Src/main.c ****   {
 630:Core/Src/main.c ****     Error_Handler();
 1644              		.loc 1 630 5
 1645 0092 FFF7FEFF 		bl	Error_Handler
 1646              	.L28:
 631:Core/Src/main.c ****   }
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s 			page 42


 632:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 1647              		.loc 1 632 7
 1648 0096 2948     		ldr	r0, .L33
 1649 0098 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 1650 009c 0346     		mov	r3, r0
 1651              		.loc 1 632 6
 1652 009e 002B     		cmp	r3, #0
 1653 00a0 01D0     		beq	.L29
 633:Core/Src/main.c ****   {
 634:Core/Src/main.c ****     Error_Handler();
 1654              		.loc 1 634 5
 1655 00a2 FFF7FEFF 		bl	Error_Handler
 1656              	.L29:
 635:Core/Src/main.c ****   }
 636:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 1657              		.loc 1 636 37
 1658 00a6 0023     		movs	r3, #0
 1659 00a8 3B64     		str	r3, [r7, #64]
 637:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1660              		.loc 1 637 33
 1661 00aa 0023     		movs	r3, #0
 1662 00ac 7B64     		str	r3, [r7, #68]
 638:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 1663              		.loc 1 638 7
 1664 00ae 07F14003 		add	r3, r7, #64
 1665 00b2 1946     		mov	r1, r3
 1666 00b4 2148     		ldr	r0, .L33
 1667 00b6 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1668 00ba 0346     		mov	r3, r0
 1669              		.loc 1 638 6
 1670 00bc 002B     		cmp	r3, #0
 1671 00be 01D0     		beq	.L30
 639:Core/Src/main.c ****   {
 640:Core/Src/main.c ****     Error_Handler();
 1672              		.loc 1 640 5
 1673 00c0 FFF7FEFF 		bl	Error_Handler
 1674              	.L30:
 641:Core/Src/main.c ****   }
 642:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 1675              		.loc 1 642 20
 1676 00c4 6023     		movs	r3, #96
 1677 00c6 7B62     		str	r3, [r7, #36]
 643:Core/Src/main.c ****   sConfigOC.Pulse = 9600-1;
 1678              		.loc 1 643 19
 1679 00c8 42F27F53 		movw	r3, #9599
 1680 00cc BB62     		str	r3, [r7, #40]
 644:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1681              		.loc 1 644 24
 1682 00ce 0023     		movs	r3, #0
 1683 00d0 FB62     		str	r3, [r7, #44]
 645:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 1684              		.loc 1 645 25
 1685 00d2 0023     		movs	r3, #0
 1686 00d4 3B63     		str	r3, [r7, #48]
 646:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1687              		.loc 1 646 24
 1688 00d6 0023     		movs	r3, #0
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s 			page 43


 1689 00d8 7B63     		str	r3, [r7, #52]
 647:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 1690              		.loc 1 647 25
 1691 00da 0023     		movs	r3, #0
 1692 00dc BB63     		str	r3, [r7, #56]
 648:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 1693              		.loc 1 648 26
 1694 00de 0023     		movs	r3, #0
 1695 00e0 FB63     		str	r3, [r7, #60]
 649:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 1696              		.loc 1 649 7
 1697 00e2 07F12403 		add	r3, r7, #36
 1698 00e6 0022     		movs	r2, #0
 1699 00e8 1946     		mov	r1, r3
 1700 00ea 1448     		ldr	r0, .L33
 1701 00ec FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1702 00f0 0346     		mov	r3, r0
 1703              		.loc 1 649 6
 1704 00f2 002B     		cmp	r3, #0
 1705 00f4 01D0     		beq	.L31
 650:Core/Src/main.c ****   {
 651:Core/Src/main.c ****     Error_Handler();
 1706              		.loc 1 651 5
 1707 00f6 FFF7FEFF 		bl	Error_Handler
 1708              	.L31:
 652:Core/Src/main.c ****   }
 653:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 1709              		.loc 1 653 40
 1710 00fa 0023     		movs	r3, #0
 1711 00fc 7B60     		str	r3, [r7, #4]
 654:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 1712              		.loc 1 654 41
 1713 00fe 0023     		movs	r3, #0
 1714 0100 BB60     		str	r3, [r7, #8]
 655:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 1715              		.loc 1 655 34
 1716 0102 0023     		movs	r3, #0
 1717 0104 FB60     		str	r3, [r7, #12]
 656:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 1718              		.loc 1 656 33
 1719 0106 0023     		movs	r3, #0
 1720 0108 3B61     		str	r3, [r7, #16]
 657:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 1721              		.loc 1 657 35
 1722 010a 0023     		movs	r3, #0
 1723 010c 7B61     		str	r3, [r7, #20]
 658:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 1724              		.loc 1 658 38
 1725 010e 4FF40053 		mov	r3, #8192
 1726 0112 BB61     		str	r3, [r7, #24]
 659:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 1727              		.loc 1 659 40
 1728 0114 0023     		movs	r3, #0
 1729 0116 3B62     		str	r3, [r7, #32]
 660:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 1730              		.loc 1 660 7
 1731 0118 3B1D     		adds	r3, r7, #4
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s 			page 44


 1732 011a 1946     		mov	r1, r3
 1733 011c 0748     		ldr	r0, .L33
 1734 011e FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 1735 0122 0346     		mov	r3, r0
 1736              		.loc 1 660 6
 1737 0124 002B     		cmp	r3, #0
 1738 0126 01D0     		beq	.L32
 661:Core/Src/main.c ****   {
 662:Core/Src/main.c ****     Error_Handler();
 1739              		.loc 1 662 5
 1740 0128 FFF7FEFF 		bl	Error_Handler
 1741              	.L32:
 663:Core/Src/main.c ****   }
 664:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 2 */
 665:Core/Src/main.c **** 
 666:Core/Src/main.c ****   /* USER CODE END TIM1_Init 2 */
 667:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim1);
 1742              		.loc 1 667 3
 1743 012c 0348     		ldr	r0, .L33
 1744 012e FFF7FEFF 		bl	HAL_TIM_MspPostInit
 668:Core/Src/main.c **** 
 669:Core/Src/main.c **** }
 1745              		.loc 1 669 1
 1746 0132 00BF     		nop
 1747 0134 5837     		adds	r7, r7, #88
 1748              	.LCFI22:
 1749              		.cfi_def_cfa_offset 8
 1750 0136 BD46     		mov	sp, r7
 1751              	.LCFI23:
 1752              		.cfi_def_cfa_register 13
 1753              		@ sp needed
 1754 0138 80BD     		pop	{r7, pc}
 1755              	.L34:
 1756 013a 00BF     		.align	2
 1757              	.L33:
 1758 013c 00000000 		.word	htim1
 1759 0140 00000140 		.word	1073807360
 1760              		.cfi_endproc
 1761              	.LFE229:
 1763              		.section	.text.MX_TIM2_Init,"ax",%progbits
 1764              		.align	1
 1765              		.syntax unified
 1766              		.thumb
 1767              		.thumb_func
 1769              	MX_TIM2_Init:
 1770              	.LFB230:
 670:Core/Src/main.c **** 
 671:Core/Src/main.c **** /**
 672:Core/Src/main.c ****   * @brief TIM2 Initialization Function
 673:Core/Src/main.c ****   * @param None
 674:Core/Src/main.c ****   * @retval None
 675:Core/Src/main.c ****   */
 676:Core/Src/main.c **** static void MX_TIM2_Init(void)
 677:Core/Src/main.c **** {
 1771              		.loc 1 677 1
 1772              		.cfi_startproc
 1773              		@ args = 0, pretend = 0, frame = 24
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s 			page 45


 1774              		@ frame_needed = 1, uses_anonymous_args = 0
 1775 0000 80B5     		push	{r7, lr}
 1776              	.LCFI24:
 1777              		.cfi_def_cfa_offset 8
 1778              		.cfi_offset 7, -8
 1779              		.cfi_offset 14, -4
 1780 0002 86B0     		sub	sp, sp, #24
 1781              	.LCFI25:
 1782              		.cfi_def_cfa_offset 32
 1783 0004 00AF     		add	r7, sp, #0
 1784              	.LCFI26:
 1785              		.cfi_def_cfa_register 7
 678:Core/Src/main.c **** 
 679:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 0 */
 680:Core/Src/main.c **** 
 681:Core/Src/main.c ****   /* USER CODE END TIM2_Init 0 */
 682:Core/Src/main.c **** 
 683:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 1786              		.loc 1 683 26
 1787 0006 07F10803 		add	r3, r7, #8
 1788 000a 0022     		movs	r2, #0
 1789 000c 1A60     		str	r2, [r3]
 1790 000e 5A60     		str	r2, [r3, #4]
 1791 0010 9A60     		str	r2, [r3, #8]
 1792 0012 DA60     		str	r2, [r3, #12]
 684:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1793              		.loc 1 684 27
 1794 0014 3B46     		mov	r3, r7
 1795 0016 0022     		movs	r2, #0
 1796 0018 1A60     		str	r2, [r3]
 1797 001a 5A60     		str	r2, [r3, #4]
 685:Core/Src/main.c **** 
 686:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 1 */
 687:Core/Src/main.c **** 
 688:Core/Src/main.c ****   /* USER CODE END TIM2_Init 1 */
 689:Core/Src/main.c ****   htim2.Instance = TIM2;
 1798              		.loc 1 689 18
 1799 001c 1E4B     		ldr	r3, .L40
 1800 001e 4FF08042 		mov	r2, #1073741824
 1801 0022 1A60     		str	r2, [r3]
 690:Core/Src/main.c ****   htim2.Init.Prescaler = 9600-1;
 1802              		.loc 1 690 24
 1803 0024 1C4B     		ldr	r3, .L40
 1804 0026 42F27F52 		movw	r2, #9599
 1805 002a 5A60     		str	r2, [r3, #4]
 691:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 1806              		.loc 1 691 26
 1807 002c 1A4B     		ldr	r3, .L40
 1808 002e 0022     		movs	r2, #0
 1809 0030 9A60     		str	r2, [r3, #8]
 692:Core/Src/main.c ****   htim2.Init.Period = 4294967295;
 1810              		.loc 1 692 21
 1811 0032 194B     		ldr	r3, .L40
 1812 0034 4FF0FF32 		mov	r2, #-1
 1813 0038 DA60     		str	r2, [r3, #12]
 693:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1814              		.loc 1 693 28
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s 			page 46


 1815 003a 174B     		ldr	r3, .L40
 1816 003c 0022     		movs	r2, #0
 1817 003e 1A61     		str	r2, [r3, #16]
 694:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1818              		.loc 1 694 32
 1819 0040 154B     		ldr	r3, .L40
 1820 0042 0022     		movs	r2, #0
 1821 0044 9A61     		str	r2, [r3, #24]
 695:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 1822              		.loc 1 695 7
 1823 0046 1448     		ldr	r0, .L40
 1824 0048 FFF7FEFF 		bl	HAL_TIM_Base_Init
 1825 004c 0346     		mov	r3, r0
 1826              		.loc 1 695 6
 1827 004e 002B     		cmp	r3, #0
 1828 0050 01D0     		beq	.L36
 696:Core/Src/main.c ****   {
 697:Core/Src/main.c ****     Error_Handler();
 1829              		.loc 1 697 5
 1830 0052 FFF7FEFF 		bl	Error_Handler
 1831              	.L36:
 698:Core/Src/main.c ****   }
 699:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 1832              		.loc 1 699 34
 1833 0056 4FF48053 		mov	r3, #4096
 1834 005a BB60     		str	r3, [r7, #8]
 700:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 1835              		.loc 1 700 7
 1836 005c 07F10803 		add	r3, r7, #8
 1837 0060 1946     		mov	r1, r3
 1838 0062 0D48     		ldr	r0, .L40
 1839 0064 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 1840 0068 0346     		mov	r3, r0
 1841              		.loc 1 700 6
 1842 006a 002B     		cmp	r3, #0
 1843 006c 01D0     		beq	.L37
 701:Core/Src/main.c ****   {
 702:Core/Src/main.c ****     Error_Handler();
 1844              		.loc 1 702 5
 1845 006e FFF7FEFF 		bl	Error_Handler
 1846              	.L37:
 703:Core/Src/main.c ****   }
 704:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 1847              		.loc 1 704 37
 1848 0072 0023     		movs	r3, #0
 1849 0074 3B60     		str	r3, [r7]
 705:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1850              		.loc 1 705 33
 1851 0076 0023     		movs	r3, #0
 1852 0078 7B60     		str	r3, [r7, #4]
 706:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 1853              		.loc 1 706 7
 1854 007a 3B46     		mov	r3, r7
 1855 007c 1946     		mov	r1, r3
 1856 007e 0648     		ldr	r0, .L40
 1857 0080 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1858 0084 0346     		mov	r3, r0
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s 			page 47


 1859              		.loc 1 706 6
 1860 0086 002B     		cmp	r3, #0
 1861 0088 01D0     		beq	.L39
 707:Core/Src/main.c ****   {
 708:Core/Src/main.c ****     Error_Handler();
 1862              		.loc 1 708 5
 1863 008a FFF7FEFF 		bl	Error_Handler
 1864              	.L39:
 709:Core/Src/main.c ****   }
 710:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 2 */
 711:Core/Src/main.c **** 
 712:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 713:Core/Src/main.c **** 
 714:Core/Src/main.c **** }
 1865              		.loc 1 714 1
 1866 008e 00BF     		nop
 1867 0090 1837     		adds	r7, r7, #24
 1868              	.LCFI27:
 1869              		.cfi_def_cfa_offset 8
 1870 0092 BD46     		mov	sp, r7
 1871              	.LCFI28:
 1872              		.cfi_def_cfa_register 13
 1873              		@ sp needed
 1874 0094 80BD     		pop	{r7, pc}
 1875              	.L41:
 1876 0096 00BF     		.align	2
 1877              	.L40:
 1878 0098 00000000 		.word	htim2
 1879              		.cfi_endproc
 1880              	.LFE230:
 1882              		.section	.text.MX_TIM3_Init,"ax",%progbits
 1883              		.align	1
 1884              		.syntax unified
 1885              		.thumb
 1886              		.thumb_func
 1888              	MX_TIM3_Init:
 1889              	.LFB231:
 715:Core/Src/main.c **** 
 716:Core/Src/main.c **** /**
 717:Core/Src/main.c ****   * @brief TIM3 Initialization Function
 718:Core/Src/main.c ****   * @param None
 719:Core/Src/main.c ****   * @retval None
 720:Core/Src/main.c ****   */
 721:Core/Src/main.c **** static void MX_TIM3_Init(void)
 722:Core/Src/main.c **** {
 1890              		.loc 1 722 1
 1891              		.cfi_startproc
 1892              		@ args = 0, pretend = 0, frame = 56
 1893              		@ frame_needed = 1, uses_anonymous_args = 0
 1894 0000 80B5     		push	{r7, lr}
 1895              	.LCFI29:
 1896              		.cfi_def_cfa_offset 8
 1897              		.cfi_offset 7, -8
 1898              		.cfi_offset 14, -4
 1899 0002 8EB0     		sub	sp, sp, #56
 1900              	.LCFI30:
 1901              		.cfi_def_cfa_offset 64
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s 			page 48


 1902 0004 00AF     		add	r7, sp, #0
 1903              	.LCFI31:
 1904              		.cfi_def_cfa_register 7
 723:Core/Src/main.c **** 
 724:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 0 */
 725:Core/Src/main.c **** 
 726:Core/Src/main.c ****   /* USER CODE END TIM3_Init 0 */
 727:Core/Src/main.c **** 
 728:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 1905              		.loc 1 728 26
 1906 0006 07F12803 		add	r3, r7, #40
 1907 000a 0022     		movs	r2, #0
 1908 000c 1A60     		str	r2, [r3]
 1909 000e 5A60     		str	r2, [r3, #4]
 1910 0010 9A60     		str	r2, [r3, #8]
 1911 0012 DA60     		str	r2, [r3, #12]
 729:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1912              		.loc 1 729 27
 1913 0014 07F12003 		add	r3, r7, #32
 1914 0018 0022     		movs	r2, #0
 1915 001a 1A60     		str	r2, [r3]
 1916 001c 5A60     		str	r2, [r3, #4]
 730:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 1917              		.loc 1 730 22
 1918 001e 3B1D     		adds	r3, r7, #4
 1919 0020 0022     		movs	r2, #0
 1920 0022 1A60     		str	r2, [r3]
 1921 0024 5A60     		str	r2, [r3, #4]
 1922 0026 9A60     		str	r2, [r3, #8]
 1923 0028 DA60     		str	r2, [r3, #12]
 1924 002a 1A61     		str	r2, [r3, #16]
 1925 002c 5A61     		str	r2, [r3, #20]
 1926 002e 9A61     		str	r2, [r3, #24]
 731:Core/Src/main.c **** 
 732:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 1 */
 733:Core/Src/main.c **** 
 734:Core/Src/main.c ****   /* USER CODE END TIM3_Init 1 */
 735:Core/Src/main.c ****   htim3.Instance = TIM3;
 1927              		.loc 1 735 18
 1928 0030 2D4B     		ldr	r3, .L48
 1929 0032 2E4A     		ldr	r2, .L48+4
 1930 0034 1A60     		str	r2, [r3]
 736:Core/Src/main.c ****   htim3.Init.Prescaler = 0;
 1931              		.loc 1 736 24
 1932 0036 2C4B     		ldr	r3, .L48
 1933 0038 0022     		movs	r2, #0
 1934 003a 5A60     		str	r2, [r3, #4]
 737:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 1935              		.loc 1 737 26
 1936 003c 2A4B     		ldr	r3, .L48
 1937 003e 0022     		movs	r2, #0
 1938 0040 9A60     		str	r2, [r3, #8]
 738:Core/Src/main.c ****   htim3.Init.Period = 9600-1;
 1939              		.loc 1 738 21
 1940 0042 294B     		ldr	r3, .L48
 1941 0044 42F27F52 		movw	r2, #9599
 1942 0048 DA60     		str	r2, [r3, #12]
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s 			page 49


 739:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1943              		.loc 1 739 28
 1944 004a 274B     		ldr	r3, .L48
 1945 004c 0022     		movs	r2, #0
 1946 004e 1A61     		str	r2, [r3, #16]
 740:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1947              		.loc 1 740 32
 1948 0050 254B     		ldr	r3, .L48
 1949 0052 0022     		movs	r2, #0
 1950 0054 9A61     		str	r2, [r3, #24]
 741:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 1951              		.loc 1 741 7
 1952 0056 2448     		ldr	r0, .L48
 1953 0058 FFF7FEFF 		bl	HAL_TIM_Base_Init
 1954 005c 0346     		mov	r3, r0
 1955              		.loc 1 741 6
 1956 005e 002B     		cmp	r3, #0
 1957 0060 01D0     		beq	.L43
 742:Core/Src/main.c ****   {
 743:Core/Src/main.c ****     Error_Handler();
 1958              		.loc 1 743 5
 1959 0062 FFF7FEFF 		bl	Error_Handler
 1960              	.L43:
 744:Core/Src/main.c ****   }
 745:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 1961              		.loc 1 745 34
 1962 0066 4FF48053 		mov	r3, #4096
 1963 006a BB62     		str	r3, [r7, #40]
 746:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 1964              		.loc 1 746 7
 1965 006c 07F12803 		add	r3, r7, #40
 1966 0070 1946     		mov	r1, r3
 1967 0072 1D48     		ldr	r0, .L48
 1968 0074 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 1969 0078 0346     		mov	r3, r0
 1970              		.loc 1 746 6
 1971 007a 002B     		cmp	r3, #0
 1972 007c 01D0     		beq	.L44
 747:Core/Src/main.c ****   {
 748:Core/Src/main.c ****     Error_Handler();
 1973              		.loc 1 748 5
 1974 007e FFF7FEFF 		bl	Error_Handler
 1975              	.L44:
 749:Core/Src/main.c ****   }
 750:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 1976              		.loc 1 750 7
 1977 0082 1948     		ldr	r0, .L48
 1978 0084 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 1979 0088 0346     		mov	r3, r0
 1980              		.loc 1 750 6
 1981 008a 002B     		cmp	r3, #0
 1982 008c 01D0     		beq	.L45
 751:Core/Src/main.c ****   {
 752:Core/Src/main.c ****     Error_Handler();
 1983              		.loc 1 752 5
 1984 008e FFF7FEFF 		bl	Error_Handler
 1985              	.L45:
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s 			page 50


 753:Core/Src/main.c ****   }
 754:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 1986              		.loc 1 754 37
 1987 0092 0023     		movs	r3, #0
 1988 0094 3B62     		str	r3, [r7, #32]
 755:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1989              		.loc 1 755 33
 1990 0096 0023     		movs	r3, #0
 1991 0098 7B62     		str	r3, [r7, #36]
 756:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 1992              		.loc 1 756 7
 1993 009a 07F12003 		add	r3, r7, #32
 1994 009e 1946     		mov	r1, r3
 1995 00a0 1148     		ldr	r0, .L48
 1996 00a2 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1997 00a6 0346     		mov	r3, r0
 1998              		.loc 1 756 6
 1999 00a8 002B     		cmp	r3, #0
 2000 00aa 01D0     		beq	.L46
 757:Core/Src/main.c ****   {
 758:Core/Src/main.c ****     Error_Handler();
 2001              		.loc 1 758 5
 2002 00ac FFF7FEFF 		bl	Error_Handler
 2003              	.L46:
 759:Core/Src/main.c ****   }
 760:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 2004              		.loc 1 760 20
 2005 00b0 6023     		movs	r3, #96
 2006 00b2 7B60     		str	r3, [r7, #4]
 761:Core/Src/main.c ****   sConfigOC.Pulse = 9600-1;
 2007              		.loc 1 761 19
 2008 00b4 42F27F53 		movw	r3, #9599
 2009 00b8 BB60     		str	r3, [r7, #8]
 762:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 2010              		.loc 1 762 24
 2011 00ba 0023     		movs	r3, #0
 2012 00bc FB60     		str	r3, [r7, #12]
 763:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 2013              		.loc 1 763 24
 2014 00be 0023     		movs	r3, #0
 2015 00c0 7B61     		str	r3, [r7, #20]
 764:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 2016              		.loc 1 764 7
 2017 00c2 3B1D     		adds	r3, r7, #4
 2018 00c4 0422     		movs	r2, #4
 2019 00c6 1946     		mov	r1, r3
 2020 00c8 0748     		ldr	r0, .L48
 2021 00ca FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 2022 00ce 0346     		mov	r3, r0
 2023              		.loc 1 764 6
 2024 00d0 002B     		cmp	r3, #0
 2025 00d2 01D0     		beq	.L47
 765:Core/Src/main.c ****   {
 766:Core/Src/main.c ****     Error_Handler();
 2026              		.loc 1 766 5
 2027 00d4 FFF7FEFF 		bl	Error_Handler
 2028              	.L47:
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s 			page 51


 767:Core/Src/main.c ****   }
 768:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 2 */
 769:Core/Src/main.c **** 
 770:Core/Src/main.c ****   /* USER CODE END TIM3_Init 2 */
 771:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim3);
 2029              		.loc 1 771 3
 2030 00d8 0348     		ldr	r0, .L48
 2031 00da FFF7FEFF 		bl	HAL_TIM_MspPostInit
 772:Core/Src/main.c **** 
 773:Core/Src/main.c **** }
 2032              		.loc 1 773 1
 2033 00de 00BF     		nop
 2034 00e0 3837     		adds	r7, r7, #56
 2035              	.LCFI32:
 2036              		.cfi_def_cfa_offset 8
 2037 00e2 BD46     		mov	sp, r7
 2038              	.LCFI33:
 2039              		.cfi_def_cfa_register 13
 2040              		@ sp needed
 2041 00e4 80BD     		pop	{r7, pc}
 2042              	.L49:
 2043 00e6 00BF     		.align	2
 2044              	.L48:
 2045 00e8 00000000 		.word	htim3
 2046 00ec 00040040 		.word	1073742848
 2047              		.cfi_endproc
 2048              	.LFE231:
 2050              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 2051              		.align	1
 2052              		.syntax unified
 2053              		.thumb
 2054              		.thumb_func
 2056              	MX_USART1_UART_Init:
 2057              	.LFB232:
 774:Core/Src/main.c **** 
 775:Core/Src/main.c **** /**
 776:Core/Src/main.c ****   * @brief USART1 Initialization Function
 777:Core/Src/main.c ****   * @param None
 778:Core/Src/main.c ****   * @retval None
 779:Core/Src/main.c ****   */
 780:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 781:Core/Src/main.c **** {
 2058              		.loc 1 781 1
 2059              		.cfi_startproc
 2060              		@ args = 0, pretend = 0, frame = 0
 2061              		@ frame_needed = 1, uses_anonymous_args = 0
 2062 0000 80B5     		push	{r7, lr}
 2063              	.LCFI34:
 2064              		.cfi_def_cfa_offset 8
 2065              		.cfi_offset 7, -8
 2066              		.cfi_offset 14, -4
 2067 0002 00AF     		add	r7, sp, #0
 2068              	.LCFI35:
 2069              		.cfi_def_cfa_register 7
 782:Core/Src/main.c **** 
 783:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 784:Core/Src/main.c **** 
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s 			page 52


 785:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 786:Core/Src/main.c **** 
 787:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 788:Core/Src/main.c **** 
 789:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 790:Core/Src/main.c ****   huart1.Instance = USART1;
 2070              		.loc 1 790 19
 2071 0004 114B     		ldr	r3, .L53
 2072 0006 124A     		ldr	r2, .L53+4
 2073 0008 1A60     		str	r2, [r3]
 791:Core/Src/main.c ****   huart1.Init.BaudRate = 9600;
 2074              		.loc 1 791 24
 2075 000a 104B     		ldr	r3, .L53
 2076 000c 4FF41652 		mov	r2, #9600
 2077 0010 5A60     		str	r2, [r3, #4]
 792:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 2078              		.loc 1 792 26
 2079 0012 0E4B     		ldr	r3, .L53
 2080 0014 0022     		movs	r2, #0
 2081 0016 9A60     		str	r2, [r3, #8]
 793:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 2082              		.loc 1 793 24
 2083 0018 0C4B     		ldr	r3, .L53
 2084 001a 0022     		movs	r2, #0
 2085 001c DA60     		str	r2, [r3, #12]
 794:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 2086              		.loc 1 794 22
 2087 001e 0B4B     		ldr	r3, .L53
 2088 0020 0022     		movs	r2, #0
 2089 0022 1A61     		str	r2, [r3, #16]
 795:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 2090              		.loc 1 795 20
 2091 0024 094B     		ldr	r3, .L53
 2092 0026 0C22     		movs	r2, #12
 2093 0028 5A61     		str	r2, [r3, #20]
 796:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 2094              		.loc 1 796 25
 2095 002a 084B     		ldr	r3, .L53
 2096 002c 0022     		movs	r2, #0
 2097 002e 9A61     		str	r2, [r3, #24]
 797:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 2098              		.loc 1 797 28
 2099 0030 064B     		ldr	r3, .L53
 2100 0032 0022     		movs	r2, #0
 2101 0034 DA61     		str	r2, [r3, #28]
 798:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 2102              		.loc 1 798 7
 2103 0036 0548     		ldr	r0, .L53
 2104 0038 FFF7FEFF 		bl	HAL_UART_Init
 2105 003c 0346     		mov	r3, r0
 2106              		.loc 1 798 6
 2107 003e 002B     		cmp	r3, #0
 2108 0040 01D0     		beq	.L52
 799:Core/Src/main.c ****   {
 800:Core/Src/main.c ****     Error_Handler();
 2109              		.loc 1 800 5
 2110 0042 FFF7FEFF 		bl	Error_Handler
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s 			page 53


 2111              	.L52:
 801:Core/Src/main.c ****   }
 802:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 803:Core/Src/main.c **** 
 804:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 805:Core/Src/main.c **** 
 806:Core/Src/main.c **** }
 2112              		.loc 1 806 1
 2113 0046 00BF     		nop
 2114 0048 80BD     		pop	{r7, pc}
 2115              	.L54:
 2116 004a 00BF     		.align	2
 2117              	.L53:
 2118 004c 00000000 		.word	huart1
 2119 0050 00100140 		.word	1073811456
 2120              		.cfi_endproc
 2121              	.LFE232:
 2123              		.section	.text.MX_DMA_Init,"ax",%progbits
 2124              		.align	1
 2125              		.syntax unified
 2126              		.thumb
 2127              		.thumb_func
 2129              	MX_DMA_Init:
 2130              	.LFB233:
 807:Core/Src/main.c **** 
 808:Core/Src/main.c **** /**
 809:Core/Src/main.c ****   * Enable DMA controller clock
 810:Core/Src/main.c ****   */
 811:Core/Src/main.c **** static void MX_DMA_Init(void)
 812:Core/Src/main.c **** {
 2131              		.loc 1 812 1
 2132              		.cfi_startproc
 2133              		@ args = 0, pretend = 0, frame = 8
 2134              		@ frame_needed = 1, uses_anonymous_args = 0
 2135 0000 80B5     		push	{r7, lr}
 2136              	.LCFI36:
 2137              		.cfi_def_cfa_offset 8
 2138              		.cfi_offset 7, -8
 2139              		.cfi_offset 14, -4
 2140 0002 82B0     		sub	sp, sp, #8
 2141              	.LCFI37:
 2142              		.cfi_def_cfa_offset 16
 2143 0004 00AF     		add	r7, sp, #0
 2144              	.LCFI38:
 2145              		.cfi_def_cfa_register 7
 2146              	.LBB6:
 813:Core/Src/main.c **** 
 814:Core/Src/main.c ****   /* DMA controller clock enable */
 815:Core/Src/main.c ****   __HAL_RCC_DMA2_CLK_ENABLE();
 2147              		.loc 1 815 3
 2148 0006 0023     		movs	r3, #0
 2149 0008 7B60     		str	r3, [r7, #4]
 2150 000a 104B     		ldr	r3, .L56
 2151 000c 1B6B     		ldr	r3, [r3, #48]
 2152 000e 0F4A     		ldr	r2, .L56
 2153 0010 43F48003 		orr	r3, r3, #4194304
 2154 0014 1363     		str	r3, [r2, #48]
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s 			page 54


 2155 0016 0D4B     		ldr	r3, .L56
 2156 0018 1B6B     		ldr	r3, [r3, #48]
 2157 001a 03F48003 		and	r3, r3, #4194304
 2158 001e 7B60     		str	r3, [r7, #4]
 2159 0020 7B68     		ldr	r3, [r7, #4]
 2160              	.LBE6:
 816:Core/Src/main.c **** 
 817:Core/Src/main.c ****   /* DMA interrupt init */
 818:Core/Src/main.c ****   /* DMA2_Stream2_IRQn interrupt configuration */
 819:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA2_Stream2_IRQn, 5, 0);
 2161              		.loc 1 819 3
 2162 0022 0022     		movs	r2, #0
 2163 0024 0521     		movs	r1, #5
 2164 0026 3A20     		movs	r0, #58
 2165 0028 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 820:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Stream2_IRQn);
 2166              		.loc 1 820 3
 2167 002c 3A20     		movs	r0, #58
 2168 002e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 821:Core/Src/main.c ****   /* DMA2_Stream7_IRQn interrupt configuration */
 822:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA2_Stream7_IRQn, 5, 0);
 2169              		.loc 1 822 3
 2170 0032 0022     		movs	r2, #0
 2171 0034 0521     		movs	r1, #5
 2172 0036 4620     		movs	r0, #70
 2173 0038 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 823:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Stream7_IRQn);
 2174              		.loc 1 823 3
 2175 003c 4620     		movs	r0, #70
 2176 003e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 824:Core/Src/main.c **** 
 825:Core/Src/main.c **** }
 2177              		.loc 1 825 1
 2178 0042 00BF     		nop
 2179 0044 0837     		adds	r7, r7, #8
 2180              	.LCFI39:
 2181              		.cfi_def_cfa_offset 8
 2182 0046 BD46     		mov	sp, r7
 2183              	.LCFI40:
 2184              		.cfi_def_cfa_register 13
 2185              		@ sp needed
 2186 0048 80BD     		pop	{r7, pc}
 2187              	.L57:
 2188 004a 00BF     		.align	2
 2189              	.L56:
 2190 004c 00380240 		.word	1073887232
 2191              		.cfi_endproc
 2192              	.LFE233:
 2194              		.section	.text.MX_GPIO_Init,"ax",%progbits
 2195              		.align	1
 2196              		.syntax unified
 2197              		.thumb
 2198              		.thumb_func
 2200              	MX_GPIO_Init:
 2201              	.LFB234:
 826:Core/Src/main.c **** 
 827:Core/Src/main.c **** /**
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s 			page 55


 828:Core/Src/main.c ****   * @brief GPIO Initialization Function
 829:Core/Src/main.c ****   * @param None
 830:Core/Src/main.c ****   * @retval None
 831:Core/Src/main.c ****   */
 832:Core/Src/main.c **** static void MX_GPIO_Init(void)
 833:Core/Src/main.c **** {
 2202              		.loc 1 833 1
 2203              		.cfi_startproc
 2204              		@ args = 0, pretend = 0, frame = 40
 2205              		@ frame_needed = 1, uses_anonymous_args = 0
 2206 0000 80B5     		push	{r7, lr}
 2207              	.LCFI41:
 2208              		.cfi_def_cfa_offset 8
 2209              		.cfi_offset 7, -8
 2210              		.cfi_offset 14, -4
 2211 0002 8AB0     		sub	sp, sp, #40
 2212              	.LCFI42:
 2213              		.cfi_def_cfa_offset 48
 2214 0004 00AF     		add	r7, sp, #0
 2215              	.LCFI43:
 2216              		.cfi_def_cfa_register 7
 834:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 2217              		.loc 1 834 20
 2218 0006 07F11403 		add	r3, r7, #20
 2219 000a 0022     		movs	r2, #0
 2220 000c 1A60     		str	r2, [r3]
 2221 000e 5A60     		str	r2, [r3, #4]
 2222 0010 9A60     		str	r2, [r3, #8]
 2223 0012 DA60     		str	r2, [r3, #12]
 2224 0014 1A61     		str	r2, [r3, #16]
 2225              	.LBB7:
 835:Core/Src/main.c **** 
 836:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 837:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 2226              		.loc 1 837 3
 2227 0016 0023     		movs	r3, #0
 2228 0018 3B61     		str	r3, [r7, #16]
 2229 001a 414B     		ldr	r3, .L59
 2230 001c 1B6B     		ldr	r3, [r3, #48]
 2231 001e 404A     		ldr	r2, .L59
 2232 0020 43F00403 		orr	r3, r3, #4
 2233 0024 1363     		str	r3, [r2, #48]
 2234 0026 3E4B     		ldr	r3, .L59
 2235 0028 1B6B     		ldr	r3, [r3, #48]
 2236 002a 03F00403 		and	r3, r3, #4
 2237 002e 3B61     		str	r3, [r7, #16]
 2238 0030 3B69     		ldr	r3, [r7, #16]
 2239              	.LBE7:
 2240              	.LBB8:
 838:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 2241              		.loc 1 838 3
 2242 0032 0023     		movs	r3, #0
 2243 0034 FB60     		str	r3, [r7, #12]
 2244 0036 3A4B     		ldr	r3, .L59
 2245 0038 1B6B     		ldr	r3, [r3, #48]
 2246 003a 394A     		ldr	r2, .L59
 2247 003c 43F08003 		orr	r3, r3, #128
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s 			page 56


 2248 0040 1363     		str	r3, [r2, #48]
 2249 0042 374B     		ldr	r3, .L59
 2250 0044 1B6B     		ldr	r3, [r3, #48]
 2251 0046 03F08003 		and	r3, r3, #128
 2252 004a FB60     		str	r3, [r7, #12]
 2253 004c FB68     		ldr	r3, [r7, #12]
 2254              	.LBE8:
 2255              	.LBB9:
 839:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 2256              		.loc 1 839 3
 2257 004e 0023     		movs	r3, #0
 2258 0050 BB60     		str	r3, [r7, #8]
 2259 0052 334B     		ldr	r3, .L59
 2260 0054 1B6B     		ldr	r3, [r3, #48]
 2261 0056 324A     		ldr	r2, .L59
 2262 0058 43F00103 		orr	r3, r3, #1
 2263 005c 1363     		str	r3, [r2, #48]
 2264 005e 304B     		ldr	r3, .L59
 2265 0060 1B6B     		ldr	r3, [r3, #48]
 2266 0062 03F00103 		and	r3, r3, #1
 2267 0066 BB60     		str	r3, [r7, #8]
 2268 0068 BB68     		ldr	r3, [r7, #8]
 2269              	.LBE9:
 2270              	.LBB10:
 840:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 2271              		.loc 1 840 3
 2272 006a 0023     		movs	r3, #0
 2273 006c 7B60     		str	r3, [r7, #4]
 2274 006e 2C4B     		ldr	r3, .L59
 2275 0070 1B6B     		ldr	r3, [r3, #48]
 2276 0072 2B4A     		ldr	r2, .L59
 2277 0074 43F00203 		orr	r3, r3, #2
 2278 0078 1363     		str	r3, [r2, #48]
 2279 007a 294B     		ldr	r3, .L59
 2280 007c 1B6B     		ldr	r3, [r3, #48]
 2281 007e 03F00203 		and	r3, r3, #2
 2282 0082 7B60     		str	r3, [r7, #4]
 2283 0084 7B68     		ldr	r3, [r7, #4]
 2284              	.LBE10:
 841:Core/Src/main.c **** 
 842:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 843:Core/Src/main.c ****   HAL_GPIO_WritePin(KIT_LED_GPIO_Port, KIT_LED_Pin, GPIO_PIN_RESET);
 2285              		.loc 1 843 3
 2286 0086 0022     		movs	r2, #0
 2287 0088 4FF40051 		mov	r1, #8192
 2288 008c 2548     		ldr	r0, .L59+4
 2289 008e FFF7FEFF 		bl	HAL_GPIO_WritePin
 844:Core/Src/main.c **** 
 845:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 846:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, LED3_GREEN_Pin|LED1_RED_Pin|LED4_BLUE_Pin|LED2_YELLOW_Pin, GPIO_PIN_RESE
 2290              		.loc 1 846 3
 2291 0092 0022     		movs	r2, #0
 2292 0094 1E21     		movs	r1, #30
 2293 0096 2448     		ldr	r0, .L59+8
 2294 0098 FFF7FEFF 		bl	HAL_GPIO_WritePin
 847:Core/Src/main.c **** 
 848:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s 			page 57


 849:Core/Src/main.c ****   HAL_GPIO_WritePin(BRIDGE_1_2_EN_GPIO_Port, BRIDGE_1_2_EN_Pin, GPIO_PIN_SET);
 2295              		.loc 1 849 3
 2296 009c 0122     		movs	r2, #1
 2297 009e 4021     		movs	r1, #64
 2298 00a0 2148     		ldr	r0, .L59+8
 2299 00a2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 850:Core/Src/main.c **** 
 851:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 852:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, BRIDGE_1A_Pin|BRIDGE_3A_Pin, GPIO_PIN_RESET);
 2300              		.loc 1 852 3
 2301 00a6 0022     		movs	r2, #0
 2302 00a8 42F20401 		movw	r1, #8196
 2303 00ac 1F48     		ldr	r0, .L59+12
 2304 00ae FFF7FEFF 		bl	HAL_GPIO_WritePin
 853:Core/Src/main.c **** 
 854:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 855:Core/Src/main.c ****   HAL_GPIO_WritePin(BRIDGE_3_4_EN_GPIO_Port, BRIDGE_3_4_EN_Pin, GPIO_PIN_SET);
 2305              		.loc 1 855 3
 2306 00b2 0122     		movs	r2, #1
 2307 00b4 4FF48051 		mov	r1, #4096
 2308 00b8 1C48     		ldr	r0, .L59+12
 2309 00ba FFF7FEFF 		bl	HAL_GPIO_WritePin
 856:Core/Src/main.c **** 
 857:Core/Src/main.c ****   /*Configure GPIO pin : KIT_LED_Pin */
 858:Core/Src/main.c ****   GPIO_InitStruct.Pin = KIT_LED_Pin;
 2310              		.loc 1 858 23
 2311 00be 4FF40053 		mov	r3, #8192
 2312 00c2 7B61     		str	r3, [r7, #20]
 859:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 2313              		.loc 1 859 24
 2314 00c4 0123     		movs	r3, #1
 2315 00c6 BB61     		str	r3, [r7, #24]
 860:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2316              		.loc 1 860 24
 2317 00c8 0023     		movs	r3, #0
 2318 00ca FB61     		str	r3, [r7, #28]
 861:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 2319              		.loc 1 861 25
 2320 00cc 0023     		movs	r3, #0
 2321 00ce 3B62     		str	r3, [r7, #32]
 862:Core/Src/main.c ****   HAL_GPIO_Init(KIT_LED_GPIO_Port, &GPIO_InitStruct);
 2322              		.loc 1 862 3
 2323 00d0 07F11403 		add	r3, r7, #20
 2324 00d4 1946     		mov	r1, r3
 2325 00d6 1348     		ldr	r0, .L59+4
 2326 00d8 FFF7FEFF 		bl	HAL_GPIO_Init
 863:Core/Src/main.c **** 
 864:Core/Src/main.c ****   /*Configure GPIO pins : LED3_GREEN_Pin LED1_RED_Pin LED4_BLUE_Pin LED2_YELLOW_Pin
 865:Core/Src/main.c ****                            BRIDGE_1_2_EN_Pin */
 866:Core/Src/main.c ****   GPIO_InitStruct.Pin = LED3_GREEN_Pin|LED1_RED_Pin|LED4_BLUE_Pin|LED2_YELLOW_Pin
 2327              		.loc 1 866 23
 2328 00dc 5E23     		movs	r3, #94
 2329 00de 7B61     		str	r3, [r7, #20]
 867:Core/Src/main.c ****                           |BRIDGE_1_2_EN_Pin;
 868:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 2330              		.loc 1 868 24
 2331 00e0 0123     		movs	r3, #1
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s 			page 58


 2332 00e2 BB61     		str	r3, [r7, #24]
 869:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2333              		.loc 1 869 24
 2334 00e4 0023     		movs	r3, #0
 2335 00e6 FB61     		str	r3, [r7, #28]
 870:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 2336              		.loc 1 870 25
 2337 00e8 0023     		movs	r3, #0
 2338 00ea 3B62     		str	r3, [r7, #32]
 871:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 2339              		.loc 1 871 3
 2340 00ec 07F11403 		add	r3, r7, #20
 2341 00f0 1946     		mov	r1, r3
 2342 00f2 0D48     		ldr	r0, .L59+8
 2343 00f4 FFF7FEFF 		bl	HAL_GPIO_Init
 872:Core/Src/main.c **** 
 873:Core/Src/main.c ****   /*Configure GPIO pins : BRIDGE_1A_Pin BRIDGE_3_4_EN_Pin BRIDGE_3A_Pin */
 874:Core/Src/main.c ****   GPIO_InitStruct.Pin = BRIDGE_1A_Pin|BRIDGE_3_4_EN_Pin|BRIDGE_3A_Pin;
 2344              		.loc 1 874 23
 2345 00f8 43F20403 		movw	r3, #12292
 2346 00fc 7B61     		str	r3, [r7, #20]
 875:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 2347              		.loc 1 875 24
 2348 00fe 0123     		movs	r3, #1
 2349 0100 BB61     		str	r3, [r7, #24]
 876:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2350              		.loc 1 876 24
 2351 0102 0023     		movs	r3, #0
 2352 0104 FB61     		str	r3, [r7, #28]
 877:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 2353              		.loc 1 877 25
 2354 0106 0023     		movs	r3, #0
 2355 0108 3B62     		str	r3, [r7, #32]
 878:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 2356              		.loc 1 878 3
 2357 010a 07F11403 		add	r3, r7, #20
 2358 010e 1946     		mov	r1, r3
 2359 0110 0648     		ldr	r0, .L59+12
 2360 0112 FFF7FEFF 		bl	HAL_GPIO_Init
 879:Core/Src/main.c **** 
 880:Core/Src/main.c **** }
 2361              		.loc 1 880 1
 2362 0116 00BF     		nop
 2363 0118 2837     		adds	r7, r7, #40
 2364              	.LCFI44:
 2365              		.cfi_def_cfa_offset 8
 2366 011a BD46     		mov	sp, r7
 2367              	.LCFI45:
 2368              		.cfi_def_cfa_register 13
 2369              		@ sp needed
 2370 011c 80BD     		pop	{r7, pc}
 2371              	.L60:
 2372 011e 00BF     		.align	2
 2373              	.L59:
 2374 0120 00380240 		.word	1073887232
 2375 0124 00080240 		.word	1073874944
 2376 0128 00000240 		.word	1073872896
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s 			page 59


 2377 012c 00040240 		.word	1073873920
 2378              		.cfi_endproc
 2379              	.LFE234:
 2381              		.section	.text.StartDefaultTask,"ax",%progbits
 2382              		.align	1
 2383              		.global	StartDefaultTask
 2384              		.syntax unified
 2385              		.thumb
 2386              		.thumb_func
 2388              	StartDefaultTask:
 2389              	.LFB235:
 881:Core/Src/main.c **** 
 882:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 883:Core/Src/main.c **** 
 884:Core/Src/main.c **** /* USER CODE END 4 */
 885:Core/Src/main.c **** 
 886:Core/Src/main.c **** /* USER CODE BEGIN Header_StartDefaultTask */
 887:Core/Src/main.c **** /**
 888:Core/Src/main.c ****   * @brief  Function implementing the defaultTask thread.
 889:Core/Src/main.c ****   * @param  argument: Not used
 890:Core/Src/main.c ****   * @retval None
 891:Core/Src/main.c ****   */
 892:Core/Src/main.c **** /* USER CODE END Header_StartDefaultTask */
 893:Core/Src/main.c **** void StartDefaultTask(void *argument)
 894:Core/Src/main.c **** {
 2390              		.loc 1 894 1
 2391              		.cfi_startproc
 2392              		@ args = 0, pretend = 0, frame = 8
 2393              		@ frame_needed = 1, uses_anonymous_args = 0
 2394 0000 80B5     		push	{r7, lr}
 2395              	.LCFI46:
 2396              		.cfi_def_cfa_offset 8
 2397              		.cfi_offset 7, -8
 2398              		.cfi_offset 14, -4
 2399 0002 82B0     		sub	sp, sp, #8
 2400              	.LCFI47:
 2401              		.cfi_def_cfa_offset 16
 2402 0004 00AF     		add	r7, sp, #0
 2403              	.LCFI48:
 2404              		.cfi_def_cfa_register 7
 2405 0006 7860     		str	r0, [r7, #4]
 895:Core/Src/main.c ****   /* init code for USB_DEVICE */
 896:Core/Src/main.c ****   MX_USB_DEVICE_Init();
 2406              		.loc 1 896 3
 2407 0008 FFF7FEFF 		bl	MX_USB_DEVICE_Init
 2408              	.L62:
 897:Core/Src/main.c ****   /* USER CODE BEGIN 5 */
 898:Core/Src/main.c ****   /* Infinite loop */
 899:Core/Src/main.c ****   for(;;)
 900:Core/Src/main.c ****   {
 901:Core/Src/main.c ****     osDelay(1);
 2409              		.loc 1 901 5 discriminator 1
 2410 000c 0120     		movs	r0, #1
 2411 000e FFF7FEFF 		bl	osDelay
 2412 0012 FBE7     		b	.L62
 2413              		.cfi_endproc
 2414              	.LFE235:
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s 			page 60


 2416              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 2417              		.align	1
 2418              		.global	HAL_TIM_PeriodElapsedCallback
 2419              		.syntax unified
 2420              		.thumb
 2421              		.thumb_func
 2423              	HAL_TIM_PeriodElapsedCallback:
 2424              	.LFB236:
 902:Core/Src/main.c ****   }
 903:Core/Src/main.c ****   /* USER CODE END 5 */
 904:Core/Src/main.c **** }
 905:Core/Src/main.c **** 
 906:Core/Src/main.c **** /**
 907:Core/Src/main.c ****   * @brief  Period elapsed callback in non blocking mode
 908:Core/Src/main.c ****   * @note   This function is called  when TIM11 interrupt took place, inside
 909:Core/Src/main.c ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 910:Core/Src/main.c ****   * a global variable "uwTick" used as application time base.
 911:Core/Src/main.c ****   * @param  htim : TIM handle
 912:Core/Src/main.c ****   * @retval None
 913:Core/Src/main.c ****   */
 914:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 915:Core/Src/main.c **** {
 2425              		.loc 1 915 1
 2426              		.cfi_startproc
 2427              		@ args = 0, pretend = 0, frame = 8
 2428              		@ frame_needed = 1, uses_anonymous_args = 0
 2429 0000 80B5     		push	{r7, lr}
 2430              	.LCFI49:
 2431              		.cfi_def_cfa_offset 8
 2432              		.cfi_offset 7, -8
 2433              		.cfi_offset 14, -4
 2434 0002 82B0     		sub	sp, sp, #8
 2435              	.LCFI50:
 2436              		.cfi_def_cfa_offset 16
 2437 0004 00AF     		add	r7, sp, #0
 2438              	.LCFI51:
 2439              		.cfi_def_cfa_register 7
 2440 0006 7860     		str	r0, [r7, #4]
 916:Core/Src/main.c ****   /* USER CODE BEGIN Callback 0 */
 917:Core/Src/main.c **** 
 918:Core/Src/main.c ****   /* USER CODE END Callback 0 */
 919:Core/Src/main.c ****   if (htim->Instance == TIM11) {
 2441              		.loc 1 919 11
 2442 0008 7B68     		ldr	r3, [r7, #4]
 2443 000a 1B68     		ldr	r3, [r3]
 2444              		.loc 1 919 6
 2445 000c 044A     		ldr	r2, .L66
 2446 000e 9342     		cmp	r3, r2
 2447 0010 01D1     		bne	.L65
 920:Core/Src/main.c ****     HAL_IncTick();
 2448              		.loc 1 920 5
 2449 0012 FFF7FEFF 		bl	HAL_IncTick
 2450              	.L65:
 921:Core/Src/main.c ****   }
 922:Core/Src/main.c ****   /* USER CODE BEGIN Callback 1 */
 923:Core/Src/main.c **** 
 924:Core/Src/main.c ****   /* USER CODE END Callback 1 */
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s 			page 61


 925:Core/Src/main.c **** }
 2451              		.loc 1 925 1
 2452 0016 00BF     		nop
 2453 0018 0837     		adds	r7, r7, #8
 2454              	.LCFI52:
 2455              		.cfi_def_cfa_offset 8
 2456 001a BD46     		mov	sp, r7
 2457              	.LCFI53:
 2458              		.cfi_def_cfa_register 13
 2459              		@ sp needed
 2460 001c 80BD     		pop	{r7, pc}
 2461              	.L67:
 2462 001e 00BF     		.align	2
 2463              	.L66:
 2464 0020 00480140 		.word	1073825792
 2465              		.cfi_endproc
 2466              	.LFE236:
 2468              		.section	.text.Error_Handler,"ax",%progbits
 2469              		.align	1
 2470              		.global	Error_Handler
 2471              		.syntax unified
 2472              		.thumb
 2473              		.thumb_func
 2475              	Error_Handler:
 2476              	.LFB237:
 926:Core/Src/main.c **** 
 927:Core/Src/main.c **** /**
 928:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 929:Core/Src/main.c ****   * @retval None
 930:Core/Src/main.c ****   */
 931:Core/Src/main.c **** void Error_Handler(void)
 932:Core/Src/main.c **** {
 2477              		.loc 1 932 1
 2478              		.cfi_startproc
 2479              		@ args = 0, pretend = 0, frame = 0
 2480              		@ frame_needed = 1, uses_anonymous_args = 0
 2481              		@ link register save eliminated.
 2482 0000 80B4     		push	{r7}
 2483              	.LCFI54:
 2484              		.cfi_def_cfa_offset 4
 2485              		.cfi_offset 7, -4
 2486 0002 00AF     		add	r7, sp, #0
 2487              	.LCFI55:
 2488              		.cfi_def_cfa_register 7
 2489              	.LBB11:
 2490              	.LBB12:
 2491              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s 			page 62


  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s 			page 63


  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s 			page 64


 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 2492              		.loc 2 142 3
 2493              		.syntax unified
 2494              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2495 0004 72B6     		cpsid i
 2496              	@ 0 "" 2
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2497              		.loc 2 143 1
 2498              		.thumb
 2499              		.syntax unified
 2500 0006 00BF     		nop
 2501              	.L69:
 2502              	.LBE12:
 2503              	.LBE11:
 933:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 934:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 935:Core/Src/main.c ****   __disable_irq();
 936:Core/Src/main.c ****   while (1)
 2504              		.loc 1 936 9 discriminator 1
 2505 0008 FEE7     		b	.L69
 2506              		.cfi_endproc
 2507              	.LFE237:
 2509              		.text
 2510              	.Letext0:
 2511              		.file 3 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 2512              		.file 4 "c:\\arm-gcc\\arm-gnu-toolchain-11.3.rel1-mingw-w64-i686-arm-none-eabi\\arm-none-eabi\\inc
 2513              		.file 5 "c:\\arm-gcc\\arm-gnu-toolchain-11.3.rel1-mingw-w64-i686-arm-none-eabi\\arm-none-eabi\\inc
 2514              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 2515              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 2516              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 2517              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 2518              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 2519              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 2520              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 2521              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 2522              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 2523              		.file 15 "Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h"
 2524              		.file 16 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
 2525              		.file 17 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 2526              		.file 18 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h"
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s 			page 65


 2527              		.file 19 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 2528              		.file 20 "USB_DEVICE/App/usb_device.h"
 2529              		.file 21 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 2530              		.file 22 "Core/Inc/main.h"
 2531              		.file 23 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s 			page 66


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:24     .bss.hadc1:00000000 hadc1
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:21     .bss.hadc1:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:31     .bss.htim1:00000000 htim1
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:28     .bss.htim1:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:38     .bss.htim2:00000000 htim2
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:35     .bss.htim2:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:45     .bss.htim3:00000000 htim3
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:42     .bss.htim3:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:52     .bss.huart1:00000000 huart1
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:49     .bss.huart1:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:59     .bss.hdma_usart1_rx:00000000 hdma_usart1_rx
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:56     .bss.hdma_usart1_rx:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:66     .bss.hdma_usart1_tx:00000000 hdma_usart1_tx
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:63     .bss.hdma_usart1_tx:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:73     .bss.defaultTaskHandle:00000000 defaultTaskHandle
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:70     .bss.defaultTaskHandle:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:80     .bss.defaultTaskBuffer:00000000 defaultTaskBuffer
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:77     .bss.defaultTaskBuffer:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:87     .bss.defaultTaskControlBlock:00000000 defaultTaskControlBlock
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:84     .bss.defaultTaskControlBlock:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:98     .rodata.defaultTask_attributes:00000000 defaultTask_attributes
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:91     .rodata:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:95     .rodata.defaultTask_attributes:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:112    .bss.ATParsingTaskHandle:00000000 ATParsingTaskHandle
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:109    .bss.ATParsingTaskHandle:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:119    .bss.ATParsingTaskBuffer:00000000 ATParsingTaskBuffer
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:116    .bss.ATParsingTaskBuffer:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:126    .bss.ATParsingTaskControlBlock:00000000 ATParsingTaskControlBlock
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:123    .bss.ATParsingTaskControlBlock:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:137    .rodata.ATParsingTask_attributes:00000000 ATParsingTask_attributes
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:134    .rodata.ATParsingTask_attributes:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:151    .bss.ATHandlingTaskHandle:00000000 ATHandlingTaskHandle
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:148    .bss.ATHandlingTaskHandle:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:158    .bss.ATHandlingTaskBuffer:00000000 ATHandlingTaskBuffer
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:155    .bss.ATHandlingTaskBuffer:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:165    .bss.ATHandlingTaskControlBlock:00000000 ATHandlingTaskControlBlock
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:162    .bss.ATHandlingTaskControlBlock:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:176    .rodata.ATHandlingTask_attributes:00000000 ATHandlingTask_attributes
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:173    .rodata.ATHandlingTask_attributes:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:190    .bss.UARTProcTaskHandle:00000000 UARTProcTaskHandle
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:187    .bss.UARTProcTaskHandle:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:197    .bss.UARTProcTaskBuffer:00000000 UARTProcTaskBuffer
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:194    .bss.UARTProcTaskBuffer:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:204    .bss.UARTProcTaskControlBlock:00000000 UARTProcTaskControlBlock
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:201    .bss.UARTProcTaskControlBlock:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:215    .rodata.UARTProcTask_attributes:00000000 UARTProcTask_attributes
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:212    .rodata.UARTProcTask_attributes:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:229    .bss.ModemMngrTaskHandle:00000000 ModemMngrTaskHandle
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:226    .bss.ModemMngrTaskHandle:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:236    .bss.ModemMngrTaskBuffer:00000000 ModemMngrTaskBuffer
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:233    .bss.ModemMngrTaskBuffer:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:243    .bss.ModemMngrTaskControlBlock:00000000 ModemMngrTaskControlBlock
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:240    .bss.ModemMngrTaskControlBlock:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:254    .rodata.ModemMngrTask_attributes:00000000 ModemMngrTask_attributes
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:251    .rodata.ModemMngrTask_attributes:00000000 $d
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s 			page 67


C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:268    .bss.AppSendTaskHandle:00000000 AppSendTaskHandle
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:265    .bss.AppSendTaskHandle:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:275    .bss.SendTemperatureBuffer:00000000 SendTemperatureBuffer
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:272    .bss.SendTemperatureBuffer:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:282    .bss.SendTemperatureControlBlock:00000000 SendTemperatureControlBlock
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:279    .bss.SendTemperatureControlBlock:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:293    .rodata.AppSendTask_attributes:00000000 AppSendTask_attributes
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:290    .rodata.AppSendTask_attributes:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:307    .bss.ReadFromADCTaskHandle:00000000 ReadFromADCTaskHandle
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:304    .bss.ReadFromADCTaskHandle:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:314    .bss.ReadFromADCTaskBuffer:00000000 ReadFromADCTaskBuffer
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:311    .bss.ReadFromADCTaskBuffer:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:321    .bss.ReadFromADCTaskControlBlock:00000000 ReadFromADCTaskControlBlock
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:318    .bss.ReadFromADCTaskControlBlock:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:332    .rodata.ReadFromADCTask_attributes:00000000 ReadFromADCTask_attributes
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:329    .rodata.ReadFromADCTask_attributes:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:346    .bss.DutyCycleHandle:00000000 DutyCycleHandle
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:343    .bss.DutyCycleHandle:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:353    .bss.DutyCycleBuffer:00000000 DutyCycleBuffer
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:350    .bss.DutyCycleBuffer:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:360    .bss.DutyCycleControlBlock:00000000 DutyCycleControlBlock
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:357    .bss.DutyCycleControlBlock:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:371    .rodata.DutyCycle_attributes:00000000 DutyCycle_attributes
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:368    .rodata.DutyCycle_attributes:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:385    .bss.uartQueueHandle:00000000 uartQueueHandle
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:382    .bss.uartQueueHandle:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:392    .bss.uartQueueBuffer:00000000 uartQueueBuffer
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:389    .bss.uartQueueBuffer:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:399    .bss.uartQueueControlBlock:00000000 uartQueueControlBlock
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:396    .bss.uartQueueControlBlock:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:410    .rodata.uartQueue_attributes:00000000 uartQueue_attributes
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:407    .rodata.uartQueue_attributes:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:422    .bss.ATQueueHandle:00000000 ATQueueHandle
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:419    .bss.ATQueueHandle:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:429    .bss.ATQueueBuffer:00000000 ATQueueBuffer
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:426    .bss.ATQueueBuffer:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:436    .bss.ATQueueControlBlock:00000000 ATQueueControlBlock
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:433    .bss.ATQueueControlBlock:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:447    .rodata.ATQueue_attributes:00000000 ATQueue_attributes
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:444    .rodata.ATQueue_attributes:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:459    .bss.ModemSendQueueHandle:00000000 ModemSendQueueHandle
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:456    .bss.ModemSendQueueHandle:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:466    .bss.ModemSendQueueBuffer:00000000 ModemSendQueueBuffer
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:463    .bss.ModemSendQueueBuffer:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:473    .bss.ModemSendQueueControlBlock:00000000 ModemSendQueueControlBlock
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:470    .bss.ModemSendQueueControlBlock:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:484    .rodata.ModemSendQueue_attributes:00000000 ModemSendQueue_attributes
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:481    .rodata.ModemSendQueue_attributes:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:496    .bss.TemperatureQueueHandle:00000000 TemperatureQueueHandle
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:493    .bss.TemperatureQueueHandle:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:503    .bss.TemperatureQueueBuffer:00000000 TemperatureQueueBuffer
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:500    .bss.TemperatureQueueBuffer:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:510    .bss.TemperatureQueueControlBlock:00000000 TemperatureQueueControlBlock
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:507    .bss.TemperatureQueueControlBlock:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:521    .rodata.TemperatureQueue_attributes:00000000 TemperatureQueue_attributes
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:518    .rodata.TemperatureQueue_attributes:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:533    .bss.AccontrollerQueueHandle:00000000 AccontrollerQueueHandle
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s 			page 68


C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:530    .bss.AccontrollerQueueHandle:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:540    .bss.AccontrollerQueueBuffer:00000000 AccontrollerQueueBuffer
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:537    .bss.AccontrollerQueueBuffer:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:547    .bss.AccontrollerQueueControlBlock:00000000 AccontrollerQueueControlBlock
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:544    .bss.AccontrollerQueueControlBlock:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:558    .rodata.AccontrollerQueue_attributes:00000000 AccontrollerQueue_attributes
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:555    .rodata.AccontrollerQueue_attributes:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:570    .bss.PeriodicSendTimerHandle:00000000 PeriodicSendTimerHandle
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:567    .bss.PeriodicSendTimerHandle:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:577    .bss.PeriodicSendTimerControlBlock:00000000 PeriodicSendTimerControlBlock
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:574    .bss.PeriodicSendTimerControlBlock:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:588    .rodata.PeriodicSendTimer_attributes:00000000 PeriodicSendTimer_attributes
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:585    .rodata.PeriodicSendTimer_attributes:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:598    .bss.ModemLedTimerHandle:00000000 ModemLedTimerHandle
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:595    .bss.ModemLedTimerHandle:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:605    .bss.ModemLedTimerControlBlock:00000000 ModemLedTimerControlBlock
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:602    .bss.ModemLedTimerControlBlock:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:616    .rodata.ModemLedTimer_attributes:00000000 ModemLedTimer_attributes
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:613    .rodata.ModemLedTimer_attributes:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:626    .bss.DutyCycleTimerHandle:00000000 DutyCycleTimerHandle
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:623    .bss.DutyCycleTimerHandle:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:633    .bss.DutyCycleTimerControlBlock:00000000 DutyCycleTimerControlBlock
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:630    .bss.DutyCycleTimerControlBlock:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:644    .rodata.DutyCycleTimer_attributes:00000000 DutyCycleTimer_attributes
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:641    .rodata.DutyCycleTimer_attributes:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:654    .bss.ATCommandSemaphoreHandle:00000000 ATCommandSemaphoreHandle
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:651    .bss.ATCommandSemaphoreHandle:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:661    .bss.ATCommandSemaphoreControlBlock:00000000 ATCommandSemaphoreControlBlock
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:658    .bss.ATCommandSemaphoreControlBlock:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:672    .rodata.ATCommandSemaphore_attributes:00000000 ATCommandSemaphore_attributes
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:669    .rodata.ATCommandSemaphore_attributes:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:682    .bss.ATResponseSemaphoreHandle:00000000 ATResponseSemaphoreHandle
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:679    .bss.ATResponseSemaphoreHandle:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:689    .bss.ATResponseSemaphoreControlBlock:00000000 ATResponseSemaphoreControlBlock
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:686    .bss.ATResponseSemaphoreControlBlock:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:700    .rodata.ATResponseSemaphore_attributes:00000000 ATResponseSemaphore_attributes
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:697    .rodata.ATResponseSemaphore_attributes:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:710    .bss.UARTTXSemaphoreHandle:00000000 UARTTXSemaphoreHandle
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:707    .bss.UARTTXSemaphoreHandle:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:717    .bss.UARTTXSemaphoreControlBlock:00000000 UARTTXSemaphoreControlBlock
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:714    .bss.UARTTXSemaphoreControlBlock:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:728    .rodata.UARTTXSemaphore_attributes:00000000 UARTTXSemaphore_attributes
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:725    .rodata.UARTTXSemaphore_attributes:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:738    .bss.RadioStateSemaphoreHandle:00000000 RadioStateSemaphoreHandle
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:735    .bss.RadioStateSemaphoreHandle:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:745    .bss.RadioStateSemaphoreControlBlock:00000000 RadioStateSemaphoreControlBlock
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:742    .bss.RadioStateSemaphoreControlBlock:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:756    .rodata.RadioStateSemaphore_attributes:00000000 RadioStateSemaphore_attributes
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:753    .rodata.RadioStateSemaphore_attributes:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:766    .bss.LoRaTXSemaphoreHandle:00000000 LoRaTXSemaphoreHandle
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:763    .bss.LoRaTXSemaphoreHandle:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:773    .bss.LoRaTXSemaphoreControlBlock:00000000 LoRaTXSemaphoreControlBlock
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:770    .bss.LoRaTXSemaphoreControlBlock:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:784    .rodata.LoRaTXSemaphore_attributes:00000000 LoRaTXSemaphore_attributes
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:781    .rodata.LoRaTXSemaphore_attributes:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:794    .bss.ModemStatusFlagsHandle:00000000 ModemStatusFlagsHandle
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:791    .bss.ModemStatusFlagsHandle:00000000 $d
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s 			page 69


C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:801    .bss.ModemStatusFlagsControlBlock:00000000 ModemStatusFlagsControlBlock
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:798    .bss.ModemStatusFlagsControlBlock:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:812    .rodata.ModemStatusFlags_attributes:00000000 ModemStatusFlags_attributes
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:809    .rodata.ModemStatusFlags_attributes:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:822    .bss.vector:00000000 vector
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:819    .bss.vector:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:825    .text.CONFIGURE_TIMER_FOR_RUN_TIME_STATS:00000000 $t
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:831    .text.CONFIGURE_TIMER_FOR_RUN_TIME_STATS:00000000 CONFIGURE_TIMER_FOR_RUN_TIME_STATS
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:855    .text.CONFIGURE_TIMER_FOR_RUN_TIME_STATS:00000010 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:860    .text.GET_RUN_TIME_COUNTER_VALUE:00000000 $t
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:866    .text.GET_RUN_TIME_COUNTER_VALUE:00000000 GET_RUN_TIME_COUNTER_VALUE
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:898    .text.GET_RUN_TIME_COUNTER_VALUE:00000014 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:907    .data.uxTopUsedPriority:00000000 uxTopUsedPriority
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:904    .data.uxTopUsedPriority:00000000 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:910    .text.main:00000000 $t
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:916    .text.main:00000000 main
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:1274   .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:2200   .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:2129   .text.MX_DMA_Init:00000000 MX_DMA_Init
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:2056   .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:1421   .text.MX_ADC1_Init:00000000 MX_ADC1_Init
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:1769   .text.MX_TIM2_Init:00000000 MX_TIM2_Init
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:1549   .text.MX_TIM1_Init:00000000 MX_TIM1_Init
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:1888   .text.MX_TIM3_Init:00000000 MX_TIM3_Init
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:1205   .text.main:000001e8 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:2388   .text.StartDefaultTask:00000000 StartDefaultTask
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:1268   .text.SystemClock_Config:00000000 $t
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:2475   .text.Error_Handler:00000000 Error_Handler
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:1410   .text.SystemClock_Config:000000c8 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:1416   .text.MX_ADC1_Init:00000000 $t
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:1537   .text.MX_ADC1_Init:00000098 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:1544   .text.MX_TIM1_Init:00000000 $t
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:1758   .text.MX_TIM1_Init:0000013c $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:1764   .text.MX_TIM2_Init:00000000 $t
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:1878   .text.MX_TIM2_Init:00000098 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:1883   .text.MX_TIM3_Init:00000000 $t
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:2045   .text.MX_TIM3_Init:000000e8 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:2051   .text.MX_USART1_UART_Init:00000000 $t
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:2118   .text.MX_USART1_UART_Init:0000004c $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:2124   .text.MX_DMA_Init:00000000 $t
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:2190   .text.MX_DMA_Init:0000004c $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:2195   .text.MX_GPIO_Init:00000000 $t
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:2374   .text.MX_GPIO_Init:00000120 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:2382   .text.StartDefaultTask:00000000 $t
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:2417   .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:2423   .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:2464   .text.HAL_TIM_PeriodElapsedCallback:00000020 $d
C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s:2469   .text.Error_Handler:00000000 $t

UNDEFINED SYMBOLS
HAL_TIM_Base_Start
HAL_Init
HAL_TIM_PWM_Start
osKernelInitialize
osSemaphoreNew
osTimerNew
osMessageQueueNew
ARM GAS  C:\Users\DAELT\AppData\Local\Temp\cclBXZgm.s 			page 70


osThreadNew
osEventFlagsNew
osKernelStart
HAL_GPIO_WritePin
HAL_Delay
PeriodicSendTimerCallback
ModemLedCallback
DutyCycleTimerCallback
ATParsingTaskCode
ATHandlingTaskCode
UARTProcTaskCode
ModemManagerTaskCode
AppSendTaskCode
ReadFromADCTaskCode
DutyCycleCode
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
HAL_TIM_MspPostInit
HAL_UART_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_Init
MX_USB_DEVICE_Init
osDelay
HAL_IncTick
