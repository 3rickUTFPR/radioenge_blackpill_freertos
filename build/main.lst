ARM GAS  C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	hadc1
  18              		.section	.bss.hadc1,"aw",%nobits
  19              		.align	2
  22              	hadc1:
  23 0000 00000000 		.space	72
  23      00000000 
  23      00000000 
  23      00000000 
  23      00000000 
  24              		.global	htim1
  25              		.section	.bss.htim1,"aw",%nobits
  26              		.align	2
  29              	htim1:
  30 0000 00000000 		.space	72
  30      00000000 
  30      00000000 
  30      00000000 
  30      00000000 
  31              		.global	htim2
  32              		.section	.bss.htim2,"aw",%nobits
  33              		.align	2
  36              	htim2:
  37 0000 00000000 		.space	72
  37      00000000 
  37      00000000 
  37      00000000 
  37      00000000 
  38              		.global	htim3
  39              		.section	.bss.htim3,"aw",%nobits
  40              		.align	2
  43              	htim3:
  44 0000 00000000 		.space	72
  44      00000000 
  44      00000000 
  44      00000000 
  44      00000000 
  45              		.global	huart1
  46              		.section	.bss.huart1,"aw",%nobits
  47              		.align	2
  50              	huart1:
  51 0000 00000000 		.space	68
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s 			page 2


  51      00000000 
  51      00000000 
  51      00000000 
  51      00000000 
  52              		.global	hdma_usart1_rx
  53              		.section	.bss.hdma_usart1_rx,"aw",%nobits
  54              		.align	2
  57              	hdma_usart1_rx:
  58 0000 00000000 		.space	96
  58      00000000 
  58      00000000 
  58      00000000 
  58      00000000 
  59              		.global	hdma_usart1_tx
  60              		.section	.bss.hdma_usart1_tx,"aw",%nobits
  61              		.align	2
  64              	hdma_usart1_tx:
  65 0000 00000000 		.space	96
  65      00000000 
  65      00000000 
  65      00000000 
  65      00000000 
  66              		.global	defaultTaskHandle
  67              		.section	.bss.defaultTaskHandle,"aw",%nobits
  68              		.align	2
  71              	defaultTaskHandle:
  72 0000 00000000 		.space	4
  73              		.global	defaultTaskBuffer
  74              		.section	.bss.defaultTaskBuffer,"aw",%nobits
  75              		.align	2
  78              	defaultTaskBuffer:
  79 0000 00000000 		.space	512
  79      00000000 
  79      00000000 
  79      00000000 
  79      00000000 
  80              		.global	defaultTaskControlBlock
  81              		.section	.bss.defaultTaskControlBlock,"aw",%nobits
  82              		.align	2
  85              	defaultTaskControlBlock:
  86 0000 00000000 		.space	100
  86      00000000 
  86      00000000 
  86      00000000 
  86      00000000 
  87              		.global	defaultTask_attributes
  88              		.section	.rodata
  89              		.align	2
  90              	.LC0:
  91 0000 64656661 		.ascii	"defaultTask\000"
  91      756C7454 
  91      61736B00 
  92              		.section	.rodata.defaultTask_attributes,"a"
  93              		.align	2
  96              	defaultTask_attributes:
  97 0000 00000000 		.word	.LC0
  98 0004 00000000 		.space	4
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s 			page 3


  99 0008 00000000 		.word	defaultTaskControlBlock
 100 000c 64000000 		.word	100
 101 0010 00000000 		.word	defaultTaskBuffer
 102 0014 00020000 		.word	512
 103 0018 09000000 		.word	9
 104 001c 00000000 		.space	8
 104      00000000 
 105              		.global	ATParsingTaskHandle
 106              		.section	.bss.ATParsingTaskHandle,"aw",%nobits
 107              		.align	2
 110              	ATParsingTaskHandle:
 111 0000 00000000 		.space	4
 112              		.global	ATParsingTaskBuffer
 113              		.section	.bss.ATParsingTaskBuffer,"aw",%nobits
 114              		.align	2
 117              	ATParsingTaskBuffer:
 118 0000 00000000 		.space	2048
 118      00000000 
 118      00000000 
 118      00000000 
 118      00000000 
 119              		.global	ATParsingTaskControlBlock
 120              		.section	.bss.ATParsingTaskControlBlock,"aw",%nobits
 121              		.align	2
 124              	ATParsingTaskControlBlock:
 125 0000 00000000 		.space	100
 125      00000000 
 125      00000000 
 125      00000000 
 125      00000000 
 126              		.global	ATParsingTask_attributes
 127              		.section	.rodata
 128              		.align	2
 129              	.LC1:
 130 000c 41545061 		.ascii	"ATParsingTask\000"
 130      7273696E 
 130      67546173 
 130      6B00
 131              		.section	.rodata.ATParsingTask_attributes,"a"
 132              		.align	2
 135              	ATParsingTask_attributes:
 136 0000 0C000000 		.word	.LC1
 137 0004 00000000 		.space	4
 138 0008 00000000 		.word	ATParsingTaskControlBlock
 139 000c 64000000 		.word	100
 140 0010 00000000 		.word	ATParsingTaskBuffer
 141 0014 00080000 		.word	2048
 142 0018 27000000 		.word	39
 143 001c 00000000 		.space	8
 143      00000000 
 144              		.global	ATHandlingTaskHandle
 145              		.section	.bss.ATHandlingTaskHandle,"aw",%nobits
 146              		.align	2
 149              	ATHandlingTaskHandle:
 150 0000 00000000 		.space	4
 151              		.global	ATHandlingTaskBuffer
 152              		.section	.bss.ATHandlingTaskBuffer,"aw",%nobits
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s 			page 4


 153              		.align	2
 156              	ATHandlingTaskBuffer:
 157 0000 00000000 		.space	2048
 157      00000000 
 157      00000000 
 157      00000000 
 157      00000000 
 158              		.global	ATHandlingTaskControlBlock
 159              		.section	.bss.ATHandlingTaskControlBlock,"aw",%nobits
 160              		.align	2
 163              	ATHandlingTaskControlBlock:
 164 0000 00000000 		.space	100
 164      00000000 
 164      00000000 
 164      00000000 
 164      00000000 
 165              		.global	ATHandlingTask_attributes
 166              		.section	.rodata
 167 001a 0000     		.align	2
 168              	.LC2:
 169 001c 41544861 		.ascii	"ATHandlingTask\000"
 169      6E646C69 
 169      6E675461 
 169      736B00
 170              		.section	.rodata.ATHandlingTask_attributes,"a"
 171              		.align	2
 174              	ATHandlingTask_attributes:
 175 0000 1C000000 		.word	.LC2
 176 0004 00000000 		.space	4
 177 0008 00000000 		.word	ATHandlingTaskControlBlock
 178 000c 64000000 		.word	100
 179 0010 00000000 		.word	ATHandlingTaskBuffer
 180 0014 00080000 		.word	2048
 181 0018 26000000 		.word	38
 182 001c 00000000 		.space	8
 182      00000000 
 183              		.global	UARTProcTaskHandle
 184              		.section	.bss.UARTProcTaskHandle,"aw",%nobits
 185              		.align	2
 188              	UARTProcTaskHandle:
 189 0000 00000000 		.space	4
 190              		.global	UARTProcTaskBuffer
 191              		.section	.bss.UARTProcTaskBuffer,"aw",%nobits
 192              		.align	2
 195              	UARTProcTaskBuffer:
 196 0000 00000000 		.space	2048
 196      00000000 
 196      00000000 
 196      00000000 
 196      00000000 
 197              		.global	UARTProcTaskControlBlock
 198              		.section	.bss.UARTProcTaskControlBlock,"aw",%nobits
 199              		.align	2
 202              	UARTProcTaskControlBlock:
 203 0000 00000000 		.space	100
 203      00000000 
 203      00000000 
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s 			page 5


 203      00000000 
 203      00000000 
 204              		.global	UARTProcTask_attributes
 205              		.section	.rodata
 206 002b 00       		.align	2
 207              	.LC3:
 208 002c 55415254 		.ascii	"UARTProcTask\000"
 208      50726F63 
 208      5461736B 
 208      00
 209              		.section	.rodata.UARTProcTask_attributes,"a"
 210              		.align	2
 213              	UARTProcTask_attributes:
 214 0000 2C000000 		.word	.LC3
 215 0004 00000000 		.space	4
 216 0008 00000000 		.word	UARTProcTaskControlBlock
 217 000c 64000000 		.word	100
 218 0010 00000000 		.word	UARTProcTaskBuffer
 219 0014 00080000 		.word	2048
 220 0018 2F000000 		.word	47
 221 001c 00000000 		.space	8
 221      00000000 
 222              		.global	ModemMngrTaskHandle
 223              		.section	.bss.ModemMngrTaskHandle,"aw",%nobits
 224              		.align	2
 227              	ModemMngrTaskHandle:
 228 0000 00000000 		.space	4
 229              		.global	ModemMngrTaskBuffer
 230              		.section	.bss.ModemMngrTaskBuffer,"aw",%nobits
 231              		.align	2
 234              	ModemMngrTaskBuffer:
 235 0000 00000000 		.space	2048
 235      00000000 
 235      00000000 
 235      00000000 
 235      00000000 
 236              		.global	ModemMngrTaskControlBlock
 237              		.section	.bss.ModemMngrTaskControlBlock,"aw",%nobits
 238              		.align	2
 241              	ModemMngrTaskControlBlock:
 242 0000 00000000 		.space	100
 242      00000000 
 242      00000000 
 242      00000000 
 242      00000000 
 243              		.global	ModemMngrTask_attributes
 244              		.section	.rodata
 245 0039 000000   		.align	2
 246              	.LC4:
 247 003c 4D6F6465 		.ascii	"ModemMngrTask\000"
 247      6D4D6E67 
 247      72546173 
 247      6B00
 248              		.section	.rodata.ModemMngrTask_attributes,"a"
 249              		.align	2
 252              	ModemMngrTask_attributes:
 253 0000 3C000000 		.word	.LC4
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s 			page 6


 254 0004 00000000 		.space	4
 255 0008 00000000 		.word	ModemMngrTaskControlBlock
 256 000c 64000000 		.word	100
 257 0010 00000000 		.word	ModemMngrTaskBuffer
 258 0014 00080000 		.word	2048
 259 0018 1F000000 		.word	31
 260 001c 00000000 		.space	8
 260      00000000 
 261              		.global	AppSendTaskHandle
 262              		.section	.bss.AppSendTaskHandle,"aw",%nobits
 263              		.align	2
 266              	AppSendTaskHandle:
 267 0000 00000000 		.space	4
 268              		.global	SendTemperatureBuffer
 269              		.section	.bss.SendTemperatureBuffer,"aw",%nobits
 270              		.align	2
 273              	SendTemperatureBuffer:
 274 0000 00000000 		.space	2048
 274      00000000 
 274      00000000 
 274      00000000 
 274      00000000 
 275              		.global	SendTemperatureControlBlock
 276              		.section	.bss.SendTemperatureControlBlock,"aw",%nobits
 277              		.align	2
 280              	SendTemperatureControlBlock:
 281 0000 00000000 		.space	100
 281      00000000 
 281      00000000 
 281      00000000 
 281      00000000 
 282              		.global	AppSendTask_attributes
 283              		.section	.rodata
 284 004a 0000     		.align	2
 285              	.LC5:
 286 004c 41707053 		.ascii	"AppSendTask\000"
 286      656E6454 
 286      61736B00 
 287              		.section	.rodata.AppSendTask_attributes,"a"
 288              		.align	2
 291              	AppSendTask_attributes:
 292 0000 4C000000 		.word	.LC5
 293 0004 00000000 		.space	4
 294 0008 00000000 		.word	SendTemperatureControlBlock
 295 000c 64000000 		.word	100
 296 0010 00000000 		.word	SendTemperatureBuffer
 297 0014 00080000 		.word	2048
 298 0018 0F000000 		.word	15
 299 001c 00000000 		.space	8
 299      00000000 
 300              		.global	ReadFromADCTaskHandle
 301              		.section	.bss.ReadFromADCTaskHandle,"aw",%nobits
 302              		.align	2
 305              	ReadFromADCTaskHandle:
 306 0000 00000000 		.space	4
 307              		.global	ReadFromADCTaskBuffer
 308              		.section	.bss.ReadFromADCTaskBuffer,"aw",%nobits
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s 			page 7


 309              		.align	2
 312              	ReadFromADCTaskBuffer:
 313 0000 00000000 		.space	512
 313      00000000 
 313      00000000 
 313      00000000 
 313      00000000 
 314              		.global	ReadFromADCTaskControlBlock
 315              		.section	.bss.ReadFromADCTaskControlBlock,"aw",%nobits
 316              		.align	2
 319              	ReadFromADCTaskControlBlock:
 320 0000 00000000 		.space	100
 320      00000000 
 320      00000000 
 320      00000000 
 320      00000000 
 321              		.global	ReadFromADCTask_attributes
 322              		.section	.rodata
 323              		.align	2
 324              	.LC6:
 325 0058 52656164 		.ascii	"ReadFromADCTask\000"
 325      46726F6D 
 325      41444354 
 325      61736B00 
 326              		.section	.rodata.ReadFromADCTask_attributes,"a"
 327              		.align	2
 330              	ReadFromADCTask_attributes:
 331 0000 58000000 		.word	.LC6
 332 0004 00000000 		.space	4
 333 0008 00000000 		.word	ReadFromADCTaskControlBlock
 334 000c 64000000 		.word	100
 335 0010 00000000 		.word	ReadFromADCTaskBuffer
 336 0014 00020000 		.word	512
 337 0018 0F000000 		.word	15
 338 001c 00000000 		.space	8
 338      00000000 
 339              		.global	DutyCycleHandle
 340              		.section	.bss.DutyCycleHandle,"aw",%nobits
 341              		.align	2
 344              	DutyCycleHandle:
 345 0000 00000000 		.space	4
 346              		.global	DutyCycleBuffer
 347              		.section	.bss.DutyCycleBuffer,"aw",%nobits
 348              		.align	2
 351              	DutyCycleBuffer:
 352 0000 00000000 		.space	2048
 352      00000000 
 352      00000000 
 352      00000000 
 352      00000000 
 353              		.global	DutyCycleControlBlock
 354              		.section	.bss.DutyCycleControlBlock,"aw",%nobits
 355              		.align	2
 358              	DutyCycleControlBlock:
 359 0000 00000000 		.space	100
 359      00000000 
 359      00000000 
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s 			page 8


 359      00000000 
 359      00000000 
 360              		.global	DutyCycle_attributes
 361              		.section	.rodata
 362              		.align	2
 363              	.LC7:
 364 0068 44757479 		.ascii	"DutyCycle\000"
 364      4379636C 
 364      6500
 365              		.section	.rodata.DutyCycle_attributes,"a"
 366              		.align	2
 369              	DutyCycle_attributes:
 370 0000 68000000 		.word	.LC7
 371 0004 00000000 		.space	4
 372 0008 00000000 		.word	DutyCycleControlBlock
 373 000c 64000000 		.word	100
 374 0010 00000000 		.word	DutyCycleBuffer
 375 0014 00080000 		.word	2048
 376 0018 08000000 		.word	8
 377 001c 00000000 		.space	8
 377      00000000 
 378              		.global	uartQueueHandle
 379              		.section	.bss.uartQueueHandle,"aw",%nobits
 380              		.align	2
 383              	uartQueueHandle:
 384 0000 00000000 		.space	4
 385              		.global	uartQueueBuffer
 386              		.section	.bss.uartQueueBuffer,"aw",%nobits
 387              		.align	2
 390              	uartQueueBuffer:
 391 0000 00000000 		.space	16
 391      00000000 
 391      00000000 
 391      00000000 
 392              		.global	uartQueueControlBlock
 393              		.section	.bss.uartQueueControlBlock,"aw",%nobits
 394              		.align	2
 397              	uartQueueControlBlock:
 398 0000 00000000 		.space	80
 398      00000000 
 398      00000000 
 398      00000000 
 398      00000000 
 399              		.global	uartQueue_attributes
 400              		.section	.rodata
 401 0072 0000     		.align	2
 402              	.LC8:
 403 0074 75617274 		.ascii	"uartQueue\000"
 403      51756575 
 403      6500
 404              		.section	.rodata.uartQueue_attributes,"a"
 405              		.align	2
 408              	uartQueue_attributes:
 409 0000 74000000 		.word	.LC8
 410 0004 00000000 		.space	4
 411 0008 00000000 		.word	uartQueueControlBlock
 412 000c 50000000 		.word	80
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s 			page 9


 413 0010 00000000 		.word	uartQueueBuffer
 414 0014 10000000 		.word	16
 415              		.global	ATQueueHandle
 416              		.section	.bss.ATQueueHandle,"aw",%nobits
 417              		.align	2
 420              	ATQueueHandle:
 421 0000 00000000 		.space	4
 422              		.global	ATQueueBuffer
 423              		.section	.bss.ATQueueBuffer,"aw",%nobits
 424              		.align	2
 427              	ATQueueBuffer:
 428 0000 00000000 		.space	16
 428      00000000 
 428      00000000 
 428      00000000 
 429              		.global	ATQueueControlBlock
 430              		.section	.bss.ATQueueControlBlock,"aw",%nobits
 431              		.align	2
 434              	ATQueueControlBlock:
 435 0000 00000000 		.space	80
 435      00000000 
 435      00000000 
 435      00000000 
 435      00000000 
 436              		.global	ATQueue_attributes
 437              		.section	.rodata
 438 007e 0000     		.align	2
 439              	.LC9:
 440 0080 41545175 		.ascii	"ATQueue\000"
 440      65756500 
 441              		.section	.rodata.ATQueue_attributes,"a"
 442              		.align	2
 445              	ATQueue_attributes:
 446 0000 80000000 		.word	.LC9
 447 0004 00000000 		.space	4
 448 0008 00000000 		.word	ATQueueControlBlock
 449 000c 50000000 		.word	80
 450 0010 00000000 		.word	ATQueueBuffer
 451 0014 10000000 		.word	16
 452              		.global	ModemSendQueueHandle
 453              		.section	.bss.ModemSendQueueHandle,"aw",%nobits
 454              		.align	2
 457              	ModemSendQueueHandle:
 458 0000 00000000 		.space	4
 459              		.global	ModemSendQueueBuffer
 460              		.section	.bss.ModemSendQueueBuffer,"aw",%nobits
 461              		.align	2
 464              	ModemSendQueueBuffer:
 465 0000 00000000 		.space	16
 465      00000000 
 465      00000000 
 465      00000000 
 466              		.global	ModemSendQueueControlBlock
 467              		.section	.bss.ModemSendQueueControlBlock,"aw",%nobits
 468              		.align	2
 471              	ModemSendQueueControlBlock:
 472 0000 00000000 		.space	80
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s 			page 10


 472      00000000 
 472      00000000 
 472      00000000 
 472      00000000 
 473              		.global	ModemSendQueue_attributes
 474              		.section	.rodata
 475              		.align	2
 476              	.LC10:
 477 0088 4D6F6465 		.ascii	"ModemSendQueue\000"
 477      6D53656E 
 477      64517565 
 477      756500
 478              		.section	.rodata.ModemSendQueue_attributes,"a"
 479              		.align	2
 482              	ModemSendQueue_attributes:
 483 0000 88000000 		.word	.LC10
 484 0004 00000000 		.space	4
 485 0008 00000000 		.word	ModemSendQueueControlBlock
 486 000c 50000000 		.word	80
 487 0010 00000000 		.word	ModemSendQueueBuffer
 488 0014 10000000 		.word	16
 489              		.global	TemperatureQueueHandle
 490              		.section	.bss.TemperatureQueueHandle,"aw",%nobits
 491              		.align	2
 494              	TemperatureQueueHandle:
 495 0000 00000000 		.space	4
 496              		.global	TemperatureQueueBuffer
 497              		.section	.bss.TemperatureQueueBuffer,"aw",%nobits
 498              		.align	2
 501              	TemperatureQueueBuffer:
 502 0000 00000000 		.space	64
 502      00000000 
 502      00000000 
 502      00000000 
 502      00000000 
 503              		.global	TemperatureQueueControlBlock
 504              		.section	.bss.TemperatureQueueControlBlock,"aw",%nobits
 505              		.align	2
 508              	TemperatureQueueControlBlock:
 509 0000 00000000 		.space	80
 509      00000000 
 509      00000000 
 509      00000000 
 509      00000000 
 510              		.global	TemperatureQueue_attributes
 511              		.section	.rodata
 512 0097 00       		.align	2
 513              	.LC11:
 514 0098 54656D70 		.ascii	"TemperatureQueue\000"
 514      65726174 
 514      75726551 
 514      75657565 
 514      00
 515              		.section	.rodata.TemperatureQueue_attributes,"a"
 516              		.align	2
 519              	TemperatureQueue_attributes:
 520 0000 98000000 		.word	.LC11
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s 			page 11


 521 0004 00000000 		.space	4
 522 0008 00000000 		.word	TemperatureQueueControlBlock
 523 000c 50000000 		.word	80
 524 0010 00000000 		.word	TemperatureQueueBuffer
 525 0014 40000000 		.word	64
 526              		.global	AccontrollerQueueHandle
 527              		.section	.bss.AccontrollerQueueHandle,"aw",%nobits
 528              		.align	2
 531              	AccontrollerQueueHandle:
 532 0000 00000000 		.space	4
 533              		.global	AccontrollerQueueBuffer
 534              		.section	.bss.AccontrollerQueueBuffer,"aw",%nobits
 535              		.align	2
 538              	AccontrollerQueueBuffer:
 539 0000 00000000 		.space	48
 539      00000000 
 539      00000000 
 539      00000000 
 539      00000000 
 540              		.global	AccontrollerQueueControlBlock
 541              		.section	.bss.AccontrollerQueueControlBlock,"aw",%nobits
 542              		.align	2
 545              	AccontrollerQueueControlBlock:
 546 0000 00000000 		.space	80
 546      00000000 
 546      00000000 
 546      00000000 
 546      00000000 
 547              		.global	AccontrollerQueue_attributes
 548              		.section	.rodata
 549 00a9 000000   		.align	2
 550              	.LC12:
 551 00ac 4163636F 		.ascii	"AccontrollerQueue\000"
 551      6E74726F 
 551      6C6C6572 
 551      51756575 
 551      6500
 552              		.section	.rodata.AccontrollerQueue_attributes,"a"
 553              		.align	2
 556              	AccontrollerQueue_attributes:
 557 0000 AC000000 		.word	.LC12
 558 0004 00000000 		.space	4
 559 0008 00000000 		.word	AccontrollerQueueControlBlock
 560 000c 50000000 		.word	80
 561 0010 00000000 		.word	AccontrollerQueueBuffer
 562 0014 30000000 		.word	48
 563              		.global	PeriodicSendTimerHandle
 564              		.section	.bss.PeriodicSendTimerHandle,"aw",%nobits
 565              		.align	2
 568              	PeriodicSendTimerHandle:
 569 0000 00000000 		.space	4
 570              		.global	PeriodicSendTimerControlBlock
 571              		.section	.bss.PeriodicSendTimerControlBlock,"aw",%nobits
 572              		.align	2
 575              	PeriodicSendTimerControlBlock:
 576 0000 00000000 		.space	44
 576      00000000 
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s 			page 12


 576      00000000 
 576      00000000 
 576      00000000 
 577              		.global	PeriodicSendTimer_attributes
 578              		.section	.rodata
 579 00be 0000     		.align	2
 580              	.LC13:
 581 00c0 50657269 		.ascii	"PeriodicSendTimer\000"
 581      6F646963 
 581      53656E64 
 581      54696D65 
 581      7200
 582              		.section	.rodata.PeriodicSendTimer_attributes,"a"
 583              		.align	2
 586              	PeriodicSendTimer_attributes:
 587 0000 C0000000 		.word	.LC13
 588 0004 00000000 		.space	4
 589 0008 00000000 		.word	PeriodicSendTimerControlBlock
 590 000c 2C000000 		.word	44
 591              		.global	ModemLedTimerHandle
 592              		.section	.bss.ModemLedTimerHandle,"aw",%nobits
 593              		.align	2
 596              	ModemLedTimerHandle:
 597 0000 00000000 		.space	4
 598              		.global	ModemLedTimerControlBlock
 599              		.section	.bss.ModemLedTimerControlBlock,"aw",%nobits
 600              		.align	2
 603              	ModemLedTimerControlBlock:
 604 0000 00000000 		.space	44
 604      00000000 
 604      00000000 
 604      00000000 
 604      00000000 
 605              		.global	ModemLedTimer_attributes
 606              		.section	.rodata
 607 00d2 0000     		.align	2
 608              	.LC14:
 609 00d4 4D6F6465 		.ascii	"ModemLedTimer\000"
 609      6D4C6564 
 609      54696D65 
 609      7200
 610              		.section	.rodata.ModemLedTimer_attributes,"a"
 611              		.align	2
 614              	ModemLedTimer_attributes:
 615 0000 D4000000 		.word	.LC14
 616 0004 00000000 		.space	4
 617 0008 00000000 		.word	ModemLedTimerControlBlock
 618 000c 2C000000 		.word	44
 619              		.global	DutyCycleTimerHandle
 620              		.section	.bss.DutyCycleTimerHandle,"aw",%nobits
 621              		.align	2
 624              	DutyCycleTimerHandle:
 625 0000 00000000 		.space	4
 626              		.global	DutyCycleTimerControlBlock
 627              		.section	.bss.DutyCycleTimerControlBlock,"aw",%nobits
 628              		.align	2
 631              	DutyCycleTimerControlBlock:
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s 			page 13


 632 0000 00000000 		.space	44
 632      00000000 
 632      00000000 
 632      00000000 
 632      00000000 
 633              		.global	DutyCycleTimer_attributes
 634              		.section	.rodata
 635 00e2 0000     		.align	2
 636              	.LC15:
 637 00e4 44757479 		.ascii	"DutyCycleTimer\000"
 637      4379636C 
 637      6554696D 
 637      657200
 638              		.section	.rodata.DutyCycleTimer_attributes,"a"
 639              		.align	2
 642              	DutyCycleTimer_attributes:
 643 0000 E4000000 		.word	.LC15
 644 0004 00000000 		.space	4
 645 0008 00000000 		.word	DutyCycleTimerControlBlock
 646 000c 2C000000 		.word	44
 647              		.global	ATCommandSemaphoreHandle
 648              		.section	.bss.ATCommandSemaphoreHandle,"aw",%nobits
 649              		.align	2
 652              	ATCommandSemaphoreHandle:
 653 0000 00000000 		.space	4
 654              		.global	ATCommandSemaphoreControlBlock
 655              		.section	.bss.ATCommandSemaphoreControlBlock,"aw",%nobits
 656              		.align	2
 659              	ATCommandSemaphoreControlBlock:
 660 0000 00000000 		.space	80
 660      00000000 
 660      00000000 
 660      00000000 
 660      00000000 
 661              		.global	ATCommandSemaphore_attributes
 662              		.section	.rodata
 663 00f3 00       		.align	2
 664              	.LC16:
 665 00f4 4154436F 		.ascii	"ATCommandSemaphore\000"
 665      6D6D616E 
 665      6453656D 
 665      6170686F 
 665      726500
 666              		.section	.rodata.ATCommandSemaphore_attributes,"a"
 667              		.align	2
 670              	ATCommandSemaphore_attributes:
 671 0000 F4000000 		.word	.LC16
 672 0004 00000000 		.space	4
 673 0008 00000000 		.word	ATCommandSemaphoreControlBlock
 674 000c 50000000 		.word	80
 675              		.global	ATResponseSemaphoreHandle
 676              		.section	.bss.ATResponseSemaphoreHandle,"aw",%nobits
 677              		.align	2
 680              	ATResponseSemaphoreHandle:
 681 0000 00000000 		.space	4
 682              		.global	ATResponseSemaphoreControlBlock
 683              		.section	.bss.ATResponseSemaphoreControlBlock,"aw",%nobits
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s 			page 14


 684              		.align	2
 687              	ATResponseSemaphoreControlBlock:
 688 0000 00000000 		.space	80
 688      00000000 
 688      00000000 
 688      00000000 
 688      00000000 
 689              		.global	ATResponseSemaphore_attributes
 690              		.section	.rodata
 691 0107 00       		.align	2
 692              	.LC17:
 693 0108 41545265 		.ascii	"ATResponseSemaphore\000"
 693      73706F6E 
 693      73655365 
 693      6D617068 
 693      6F726500 
 694              		.section	.rodata.ATResponseSemaphore_attributes,"a"
 695              		.align	2
 698              	ATResponseSemaphore_attributes:
 699 0000 08010000 		.word	.LC17
 700 0004 00000000 		.space	4
 701 0008 00000000 		.word	ATResponseSemaphoreControlBlock
 702 000c 50000000 		.word	80
 703              		.global	UARTTXSemaphoreHandle
 704              		.section	.bss.UARTTXSemaphoreHandle,"aw",%nobits
 705              		.align	2
 708              	UARTTXSemaphoreHandle:
 709 0000 00000000 		.space	4
 710              		.global	UARTTXSemaphoreControlBlock
 711              		.section	.bss.UARTTXSemaphoreControlBlock,"aw",%nobits
 712              		.align	2
 715              	UARTTXSemaphoreControlBlock:
 716 0000 00000000 		.space	80
 716      00000000 
 716      00000000 
 716      00000000 
 716      00000000 
 717              		.global	UARTTXSemaphore_attributes
 718              		.section	.rodata
 719              		.align	2
 720              	.LC18:
 721 011c 55415254 		.ascii	"UARTTXSemaphore\000"
 721      54585365 
 721      6D617068 
 721      6F726500 
 722              		.section	.rodata.UARTTXSemaphore_attributes,"a"
 723              		.align	2
 726              	UARTTXSemaphore_attributes:
 727 0000 1C010000 		.word	.LC18
 728 0004 00000000 		.space	4
 729 0008 00000000 		.word	UARTTXSemaphoreControlBlock
 730 000c 50000000 		.word	80
 731              		.global	RadioStateSemaphoreHandle
 732              		.section	.bss.RadioStateSemaphoreHandle,"aw",%nobits
 733              		.align	2
 736              	RadioStateSemaphoreHandle:
 737 0000 00000000 		.space	4
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s 			page 15


 738              		.global	RadioStateSemaphoreControlBlock
 739              		.section	.bss.RadioStateSemaphoreControlBlock,"aw",%nobits
 740              		.align	2
 743              	RadioStateSemaphoreControlBlock:
 744 0000 00000000 		.space	80
 744      00000000 
 744      00000000 
 744      00000000 
 744      00000000 
 745              		.global	RadioStateSemaphore_attributes
 746              		.section	.rodata
 747              		.align	2
 748              	.LC19:
 749 012c 52616469 		.ascii	"RadioStateSemaphore\000"
 749      6F537461 
 749      74655365 
 749      6D617068 
 749      6F726500 
 750              		.section	.rodata.RadioStateSemaphore_attributes,"a"
 751              		.align	2
 754              	RadioStateSemaphore_attributes:
 755 0000 2C010000 		.word	.LC19
 756 0004 00000000 		.space	4
 757 0008 00000000 		.word	RadioStateSemaphoreControlBlock
 758 000c 50000000 		.word	80
 759              		.global	LoRaTXSemaphoreHandle
 760              		.section	.bss.LoRaTXSemaphoreHandle,"aw",%nobits
 761              		.align	2
 764              	LoRaTXSemaphoreHandle:
 765 0000 00000000 		.space	4
 766              		.global	LoRaTXSemaphoreControlBlock
 767              		.section	.bss.LoRaTXSemaphoreControlBlock,"aw",%nobits
 768              		.align	2
 771              	LoRaTXSemaphoreControlBlock:
 772 0000 00000000 		.space	80
 772      00000000 
 772      00000000 
 772      00000000 
 772      00000000 
 773              		.global	LoRaTXSemaphore_attributes
 774              		.section	.rodata
 775              		.align	2
 776              	.LC20:
 777 0140 4C6F5261 		.ascii	"LoRaTXSemaphore\000"
 777      54585365 
 777      6D617068 
 777      6F726500 
 778              		.section	.rodata.LoRaTXSemaphore_attributes,"a"
 779              		.align	2
 782              	LoRaTXSemaphore_attributes:
 783 0000 40010000 		.word	.LC20
 784 0004 00000000 		.space	4
 785 0008 00000000 		.word	LoRaTXSemaphoreControlBlock
 786 000c 50000000 		.word	80
 787              		.global	ModemStatusFlagsHandle
 788              		.section	.bss.ModemStatusFlagsHandle,"aw",%nobits
 789              		.align	2
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s 			page 16


 792              	ModemStatusFlagsHandle:
 793 0000 00000000 		.space	4
 794              		.global	ModemStatusFlagsControlBlock
 795              		.section	.bss.ModemStatusFlagsControlBlock,"aw",%nobits
 796              		.align	2
 799              	ModemStatusFlagsControlBlock:
 800 0000 00000000 		.space	32
 800      00000000 
 800      00000000 
 800      00000000 
 800      00000000 
 801              		.global	ModemStatusFlags_attributes
 802              		.section	.rodata
 803              		.align	2
 804              	.LC21:
 805 0150 4D6F6465 		.ascii	"ModemStatusFlags\000"
 805      6D537461 
 805      74757346 
 805      6C616773 
 805      00
 806              		.section	.rodata.ModemStatusFlags_attributes,"a"
 807              		.align	2
 810              	ModemStatusFlags_attributes:
 811 0000 50010000 		.word	.LC21
 812 0004 00000000 		.space	4
 813 0008 00000000 		.word	ModemStatusFlagsControlBlock
 814 000c 20000000 		.word	32
 815              		.global	vector
 816              		.section	.bss.vector,"aw",%nobits
 817              		.align	2
 820              	vector:
 821 0000 00000000 		.space	1020
 821      00000000 
 821      00000000 
 821      00000000 
 821      00000000 
 822              		.section	.text.CONFIGURE_TIMER_FOR_RUN_TIME_STATS,"ax",%progbits
 823              		.align	1
 824              		.global	CONFIGURE_TIMER_FOR_RUN_TIME_STATS
 825              		.arch armv7e-m
 826              		.syntax unified
 827              		.thumb
 828              		.thumb_func
 829              		.fpu fpv4-sp-d16
 831              	CONFIGURE_TIMER_FOR_RUN_TIME_STATS:
 832              	.LFB224:
 833              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s 			page 17


  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "cmsis_os.h"
  22:Core/Src/main.c **** #include "usb_device.h"
  23:Core/Src/main.c **** 
  24:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  25:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* USER CODE END Includes */
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  30:Core/Src/main.c **** typedef StaticTask_t osStaticThreadDef_t;
  31:Core/Src/main.c **** typedef StaticQueue_t osStaticMessageQDef_t;
  32:Core/Src/main.c **** typedef StaticTimer_t osStaticTimerDef_t;
  33:Core/Src/main.c **** typedef StaticSemaphore_t osStaticSemaphoreDef_t;
  34:Core/Src/main.c **** typedef StaticEventGroup_t osStaticEventGroupDef_t;
  35:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* USER CODE END PTD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PD */
  41:Core/Src/main.c **** /* USER CODE END PD */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  44:Core/Src/main.c **** /* USER CODE BEGIN PM */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE END PM */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  49:Core/Src/main.c **** ADC_HandleTypeDef hadc1;
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** TIM_HandleTypeDef htim1;
  52:Core/Src/main.c **** TIM_HandleTypeDef htim2;
  53:Core/Src/main.c **** TIM_HandleTypeDef htim3;
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** UART_HandleTypeDef huart1;
  56:Core/Src/main.c **** DMA_HandleTypeDef hdma_usart1_rx;
  57:Core/Src/main.c **** DMA_HandleTypeDef hdma_usart1_tx;
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* Definitions for defaultTask */
  60:Core/Src/main.c **** osThreadId_t defaultTaskHandle;
  61:Core/Src/main.c **** uint32_t defaultTaskBuffer[ 128 ];
  62:Core/Src/main.c **** osStaticThreadDef_t defaultTaskControlBlock;
  63:Core/Src/main.c **** const osThreadAttr_t defaultTask_attributes = {
  64:Core/Src/main.c ****   .name = "defaultTask",
  65:Core/Src/main.c ****   .cb_mem = &defaultTaskControlBlock,
  66:Core/Src/main.c ****   .cb_size = sizeof(defaultTaskControlBlock),
  67:Core/Src/main.c ****   .stack_mem = &defaultTaskBuffer[0],
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s 			page 18


  68:Core/Src/main.c ****   .stack_size = sizeof(defaultTaskBuffer),
  69:Core/Src/main.c ****   .priority = (osPriority_t) osPriorityLow1,
  70:Core/Src/main.c **** };
  71:Core/Src/main.c **** /* Definitions for ATParsingTask */
  72:Core/Src/main.c **** osThreadId_t ATParsingTaskHandle;
  73:Core/Src/main.c **** uint32_t ATParsingTaskBuffer[ 512 ];
  74:Core/Src/main.c **** osStaticThreadDef_t ATParsingTaskControlBlock;
  75:Core/Src/main.c **** const osThreadAttr_t ATParsingTask_attributes = {
  76:Core/Src/main.c ****   .name = "ATParsingTask",
  77:Core/Src/main.c ****   .cb_mem = &ATParsingTaskControlBlock,
  78:Core/Src/main.c ****   .cb_size = sizeof(ATParsingTaskControlBlock),
  79:Core/Src/main.c ****   .stack_mem = &ATParsingTaskBuffer[0],
  80:Core/Src/main.c ****   .stack_size = sizeof(ATParsingTaskBuffer),
  81:Core/Src/main.c ****   .priority = (osPriority_t) osPriorityAboveNormal7,
  82:Core/Src/main.c **** };
  83:Core/Src/main.c **** /* Definitions for ATHandlingTask */
  84:Core/Src/main.c **** osThreadId_t ATHandlingTaskHandle;
  85:Core/Src/main.c **** uint32_t ATHandlingTaskBuffer[ 512 ];
  86:Core/Src/main.c **** osStaticThreadDef_t ATHandlingTaskControlBlock;
  87:Core/Src/main.c **** const osThreadAttr_t ATHandlingTask_attributes = {
  88:Core/Src/main.c ****   .name = "ATHandlingTask",
  89:Core/Src/main.c ****   .cb_mem = &ATHandlingTaskControlBlock,
  90:Core/Src/main.c ****   .cb_size = sizeof(ATHandlingTaskControlBlock),
  91:Core/Src/main.c ****   .stack_mem = &ATHandlingTaskBuffer[0],
  92:Core/Src/main.c ****   .stack_size = sizeof(ATHandlingTaskBuffer),
  93:Core/Src/main.c ****   .priority = (osPriority_t) osPriorityAboveNormal6,
  94:Core/Src/main.c **** };
  95:Core/Src/main.c **** /* Definitions for UARTProcTask */
  96:Core/Src/main.c **** osThreadId_t UARTProcTaskHandle;
  97:Core/Src/main.c **** uint32_t UARTProcTaskBuffer[ 512 ];
  98:Core/Src/main.c **** osStaticThreadDef_t UARTProcTaskControlBlock;
  99:Core/Src/main.c **** const osThreadAttr_t UARTProcTask_attributes = {
 100:Core/Src/main.c ****   .name = "UARTProcTask",
 101:Core/Src/main.c ****   .cb_mem = &UARTProcTaskControlBlock,
 102:Core/Src/main.c ****   .cb_size = sizeof(UARTProcTaskControlBlock),
 103:Core/Src/main.c ****   .stack_mem = &UARTProcTaskBuffer[0],
 104:Core/Src/main.c ****   .stack_size = sizeof(UARTProcTaskBuffer),
 105:Core/Src/main.c ****   .priority = (osPriority_t) osPriorityHigh7,
 106:Core/Src/main.c **** };
 107:Core/Src/main.c **** /* Definitions for ModemMngrTask */
 108:Core/Src/main.c **** osThreadId_t ModemMngrTaskHandle;
 109:Core/Src/main.c **** uint32_t ModemMngrTaskBuffer[ 512 ];
 110:Core/Src/main.c **** osStaticThreadDef_t ModemMngrTaskControlBlock;
 111:Core/Src/main.c **** const osThreadAttr_t ModemMngrTask_attributes = {
 112:Core/Src/main.c ****   .name = "ModemMngrTask",
 113:Core/Src/main.c ****   .cb_mem = &ModemMngrTaskControlBlock,
 114:Core/Src/main.c ****   .cb_size = sizeof(ModemMngrTaskControlBlock),
 115:Core/Src/main.c ****   .stack_mem = &ModemMngrTaskBuffer[0],
 116:Core/Src/main.c ****   .stack_size = sizeof(ModemMngrTaskBuffer),
 117:Core/Src/main.c ****   .priority = (osPriority_t) osPriorityNormal7,
 118:Core/Src/main.c **** };
 119:Core/Src/main.c **** /* Definitions for AppSendTask */
 120:Core/Src/main.c **** osThreadId_t AppSendTaskHandle;
 121:Core/Src/main.c **** uint32_t SendTemperatureBuffer[ 512 ];
 122:Core/Src/main.c **** osStaticThreadDef_t SendTemperatureControlBlock;
 123:Core/Src/main.c **** const osThreadAttr_t AppSendTask_attributes = {
 124:Core/Src/main.c ****   .name = "AppSendTask",
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s 			page 19


 125:Core/Src/main.c ****   .cb_mem = &SendTemperatureControlBlock,
 126:Core/Src/main.c ****   .cb_size = sizeof(SendTemperatureControlBlock),
 127:Core/Src/main.c ****   .stack_mem = &SendTemperatureBuffer[0],
 128:Core/Src/main.c ****   .stack_size = sizeof(SendTemperatureBuffer),
 129:Core/Src/main.c ****   .priority = (osPriority_t) osPriorityLow7,
 130:Core/Src/main.c **** };
 131:Core/Src/main.c **** /* Definitions for ReadFromADCTask */
 132:Core/Src/main.c **** osThreadId_t ReadFromADCTaskHandle;
 133:Core/Src/main.c **** uint32_t ReadFromADCTaskBuffer[ 128 ];
 134:Core/Src/main.c **** osStaticThreadDef_t ReadFromADCTaskControlBlock;
 135:Core/Src/main.c **** const osThreadAttr_t ReadFromADCTask_attributes = {
 136:Core/Src/main.c ****   .name = "ReadFromADCTask",
 137:Core/Src/main.c ****   .cb_mem = &ReadFromADCTaskControlBlock,
 138:Core/Src/main.c ****   .cb_size = sizeof(ReadFromADCTaskControlBlock),
 139:Core/Src/main.c ****   .stack_mem = &ReadFromADCTaskBuffer[0],
 140:Core/Src/main.c ****   .stack_size = sizeof(ReadFromADCTaskBuffer),
 141:Core/Src/main.c ****   .priority = (osPriority_t) osPriorityLow7,
 142:Core/Src/main.c **** };
 143:Core/Src/main.c **** /* Definitions for DutyCycle */
 144:Core/Src/main.c **** osThreadId_t DutyCycleHandle;
 145:Core/Src/main.c **** uint32_t DutyCycleBuffer[ 512 ];
 146:Core/Src/main.c **** osStaticThreadDef_t DutyCycleControlBlock;
 147:Core/Src/main.c **** const osThreadAttr_t DutyCycle_attributes = {
 148:Core/Src/main.c ****   .name = "DutyCycle",
 149:Core/Src/main.c ****   .cb_mem = &DutyCycleControlBlock,
 150:Core/Src/main.c ****   .cb_size = sizeof(DutyCycleControlBlock),
 151:Core/Src/main.c ****   .stack_mem = &DutyCycleBuffer[0],
 152:Core/Src/main.c ****   .stack_size = sizeof(DutyCycleBuffer),
 153:Core/Src/main.c ****   .priority = (osPriority_t) osPriorityLow,
 154:Core/Src/main.c **** };
 155:Core/Src/main.c **** /* Definitions for uartQueue */
 156:Core/Src/main.c **** osMessageQueueId_t uartQueueHandle;
 157:Core/Src/main.c **** uint8_t uartQueueBuffer[ 4 * sizeof( void* ) ];
 158:Core/Src/main.c **** osStaticMessageQDef_t uartQueueControlBlock;
 159:Core/Src/main.c **** const osMessageQueueAttr_t uartQueue_attributes = {
 160:Core/Src/main.c ****   .name = "uartQueue",
 161:Core/Src/main.c ****   .cb_mem = &uartQueueControlBlock,
 162:Core/Src/main.c ****   .cb_size = sizeof(uartQueueControlBlock),
 163:Core/Src/main.c ****   .mq_mem = &uartQueueBuffer,
 164:Core/Src/main.c ****   .mq_size = sizeof(uartQueueBuffer)
 165:Core/Src/main.c **** };
 166:Core/Src/main.c **** /* Definitions for ATQueue */
 167:Core/Src/main.c **** osMessageQueueId_t ATQueueHandle;
 168:Core/Src/main.c **** uint8_t ATQueueBuffer[ 4 * sizeof( void* ) ];
 169:Core/Src/main.c **** osStaticMessageQDef_t ATQueueControlBlock;
 170:Core/Src/main.c **** const osMessageQueueAttr_t ATQueue_attributes = {
 171:Core/Src/main.c ****   .name = "ATQueue",
 172:Core/Src/main.c ****   .cb_mem = &ATQueueControlBlock,
 173:Core/Src/main.c ****   .cb_size = sizeof(ATQueueControlBlock),
 174:Core/Src/main.c ****   .mq_mem = &ATQueueBuffer,
 175:Core/Src/main.c ****   .mq_size = sizeof(ATQueueBuffer)
 176:Core/Src/main.c **** };
 177:Core/Src/main.c **** /* Definitions for ModemSendQueue */
 178:Core/Src/main.c **** osMessageQueueId_t ModemSendQueueHandle;
 179:Core/Src/main.c **** uint8_t ModemSendQueueBuffer[ 4 * sizeof( void* ) ];
 180:Core/Src/main.c **** osStaticMessageQDef_t ModemSendQueueControlBlock;
 181:Core/Src/main.c **** const osMessageQueueAttr_t ModemSendQueue_attributes = {
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s 			page 20


 182:Core/Src/main.c ****   .name = "ModemSendQueue",
 183:Core/Src/main.c ****   .cb_mem = &ModemSendQueueControlBlock,
 184:Core/Src/main.c ****   .cb_size = sizeof(ModemSendQueueControlBlock),
 185:Core/Src/main.c ****   .mq_mem = &ModemSendQueueBuffer,
 186:Core/Src/main.c ****   .mq_size = sizeof(ModemSendQueueBuffer)
 187:Core/Src/main.c **** };
 188:Core/Src/main.c **** /* Definitions for TemperatureQueue */
 189:Core/Src/main.c **** osMessageQueueId_t TemperatureQueueHandle;
 190:Core/Src/main.c **** uint8_t TemperatureQueueBuffer[ 8 * sizeof( TEMPERATURE_OBJ_t ) ];
 191:Core/Src/main.c **** osStaticMessageQDef_t TemperatureQueueControlBlock;
 192:Core/Src/main.c **** const osMessageQueueAttr_t TemperatureQueue_attributes = {
 193:Core/Src/main.c ****   .name = "TemperatureQueue",
 194:Core/Src/main.c ****   .cb_mem = &TemperatureQueueControlBlock,
 195:Core/Src/main.c ****   .cb_size = sizeof(TemperatureQueueControlBlock),
 196:Core/Src/main.c ****   .mq_mem = &TemperatureQueueBuffer,
 197:Core/Src/main.c ****   .mq_size = sizeof(TemperatureQueueBuffer)
 198:Core/Src/main.c **** };
 199:Core/Src/main.c **** /* Definitions for AccontrollerQueue */
 200:Core/Src/main.c **** osMessageQueueId_t AccontrollerQueueHandle;
 201:Core/Src/main.c **** uint8_t AccontrollerQueueBuffer[ 16 * sizeof( ACCONTROLLER_OBJ_t ) ];
 202:Core/Src/main.c **** osStaticMessageQDef_t AccontrollerQueueControlBlock;
 203:Core/Src/main.c **** const osMessageQueueAttr_t AccontrollerQueue_attributes = {
 204:Core/Src/main.c ****   .name = "AccontrollerQueue",
 205:Core/Src/main.c ****   .cb_mem = &AccontrollerQueueControlBlock,
 206:Core/Src/main.c ****   .cb_size = sizeof(AccontrollerQueueControlBlock),
 207:Core/Src/main.c ****   .mq_mem = &AccontrollerQueueBuffer,
 208:Core/Src/main.c ****   .mq_size = sizeof(AccontrollerQueueBuffer)
 209:Core/Src/main.c **** };
 210:Core/Src/main.c **** /* Definitions for PeriodicSendTimer */
 211:Core/Src/main.c **** osTimerId_t PeriodicSendTimerHandle;
 212:Core/Src/main.c **** osStaticTimerDef_t PeriodicSendTimerControlBlock;
 213:Core/Src/main.c **** const osTimerAttr_t PeriodicSendTimer_attributes = {
 214:Core/Src/main.c ****   .name = "PeriodicSendTimer",
 215:Core/Src/main.c ****   .cb_mem = &PeriodicSendTimerControlBlock,
 216:Core/Src/main.c ****   .cb_size = sizeof(PeriodicSendTimerControlBlock),
 217:Core/Src/main.c **** };
 218:Core/Src/main.c **** /* Definitions for ModemLedTimer */
 219:Core/Src/main.c **** osTimerId_t ModemLedTimerHandle;
 220:Core/Src/main.c **** osStaticTimerDef_t ModemLedTimerControlBlock;
 221:Core/Src/main.c **** const osTimerAttr_t ModemLedTimer_attributes = {
 222:Core/Src/main.c ****   .name = "ModemLedTimer",
 223:Core/Src/main.c ****   .cb_mem = &ModemLedTimerControlBlock,
 224:Core/Src/main.c ****   .cb_size = sizeof(ModemLedTimerControlBlock),
 225:Core/Src/main.c **** };
 226:Core/Src/main.c **** /* Definitions for DutyCycleTimer */
 227:Core/Src/main.c **** osTimerId_t DutyCycleTimerHandle;
 228:Core/Src/main.c **** osStaticTimerDef_t DutyCycleTimerControlBlock;
 229:Core/Src/main.c **** const osTimerAttr_t DutyCycleTimer_attributes = {
 230:Core/Src/main.c ****   .name = "DutyCycleTimer",
 231:Core/Src/main.c ****   .cb_mem = &DutyCycleTimerControlBlock,
 232:Core/Src/main.c ****   .cb_size = sizeof(DutyCycleTimerControlBlock),
 233:Core/Src/main.c **** };
 234:Core/Src/main.c **** /* Definitions for ATCommandSemaphore */
 235:Core/Src/main.c **** osSemaphoreId_t ATCommandSemaphoreHandle;
 236:Core/Src/main.c **** osStaticSemaphoreDef_t ATCommandSemaphoreControlBlock;
 237:Core/Src/main.c **** const osSemaphoreAttr_t ATCommandSemaphore_attributes = {
 238:Core/Src/main.c ****   .name = "ATCommandSemaphore",
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s 			page 21


 239:Core/Src/main.c ****   .cb_mem = &ATCommandSemaphoreControlBlock,
 240:Core/Src/main.c ****   .cb_size = sizeof(ATCommandSemaphoreControlBlock),
 241:Core/Src/main.c **** };
 242:Core/Src/main.c **** /* Definitions for ATResponseSemaphore */
 243:Core/Src/main.c **** osSemaphoreId_t ATResponseSemaphoreHandle;
 244:Core/Src/main.c **** osStaticSemaphoreDef_t ATResponseSemaphoreControlBlock;
 245:Core/Src/main.c **** const osSemaphoreAttr_t ATResponseSemaphore_attributes = {
 246:Core/Src/main.c ****   .name = "ATResponseSemaphore",
 247:Core/Src/main.c ****   .cb_mem = &ATResponseSemaphoreControlBlock,
 248:Core/Src/main.c ****   .cb_size = sizeof(ATResponseSemaphoreControlBlock),
 249:Core/Src/main.c **** };
 250:Core/Src/main.c **** /* Definitions for UARTTXSemaphore */
 251:Core/Src/main.c **** osSemaphoreId_t UARTTXSemaphoreHandle;
 252:Core/Src/main.c **** osStaticSemaphoreDef_t UARTTXSemaphoreControlBlock;
 253:Core/Src/main.c **** const osSemaphoreAttr_t UARTTXSemaphore_attributes = {
 254:Core/Src/main.c ****   .name = "UARTTXSemaphore",
 255:Core/Src/main.c ****   .cb_mem = &UARTTXSemaphoreControlBlock,
 256:Core/Src/main.c ****   .cb_size = sizeof(UARTTXSemaphoreControlBlock),
 257:Core/Src/main.c **** };
 258:Core/Src/main.c **** /* Definitions for RadioStateSemaphore */
 259:Core/Src/main.c **** osSemaphoreId_t RadioStateSemaphoreHandle;
 260:Core/Src/main.c **** osStaticSemaphoreDef_t RadioStateSemaphoreControlBlock;
 261:Core/Src/main.c **** const osSemaphoreAttr_t RadioStateSemaphore_attributes = {
 262:Core/Src/main.c ****   .name = "RadioStateSemaphore",
 263:Core/Src/main.c ****   .cb_mem = &RadioStateSemaphoreControlBlock,
 264:Core/Src/main.c ****   .cb_size = sizeof(RadioStateSemaphoreControlBlock),
 265:Core/Src/main.c **** };
 266:Core/Src/main.c **** /* Definitions for LoRaTXSemaphore */
 267:Core/Src/main.c **** osSemaphoreId_t LoRaTXSemaphoreHandle;
 268:Core/Src/main.c **** osStaticSemaphoreDef_t LoRaTXSemaphoreControlBlock;
 269:Core/Src/main.c **** const osSemaphoreAttr_t LoRaTXSemaphore_attributes = {
 270:Core/Src/main.c ****   .name = "LoRaTXSemaphore",
 271:Core/Src/main.c ****   .cb_mem = &LoRaTXSemaphoreControlBlock,
 272:Core/Src/main.c ****   .cb_size = sizeof(LoRaTXSemaphoreControlBlock),
 273:Core/Src/main.c **** };
 274:Core/Src/main.c **** /* Definitions for ModemStatusFlags */
 275:Core/Src/main.c **** osEventFlagsId_t ModemStatusFlagsHandle;
 276:Core/Src/main.c **** osStaticEventGroupDef_t ModemStatusFlagsControlBlock;
 277:Core/Src/main.c **** const osEventFlagsAttr_t ModemStatusFlags_attributes = {
 278:Core/Src/main.c ****   .name = "ModemStatusFlags",
 279:Core/Src/main.c ****   .cb_mem = &ModemStatusFlagsControlBlock,
 280:Core/Src/main.c ****   .cb_size = sizeof(ModemStatusFlagsControlBlock),
 281:Core/Src/main.c **** };
 282:Core/Src/main.c **** /* USER CODE BEGIN PV */
 283:Core/Src/main.c **** volatile float vector[255];
 284:Core/Src/main.c **** extern UART_HandleTypeDef huart1;
 285:Core/Src/main.c **** extern DMA_HandleTypeDef hdma_usart1_rx;
 286:Core/Src/main.c **** extern DMA_HandleTypeDef hdma_usart1_tx;
 287:Core/Src/main.c **** /* USER CODE END PV */
 288:Core/Src/main.c **** 
 289:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
 290:Core/Src/main.c **** void SystemClock_Config(void);
 291:Core/Src/main.c **** static void MX_GPIO_Init(void);
 292:Core/Src/main.c **** static void MX_DMA_Init(void);
 293:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
 294:Core/Src/main.c **** static void MX_ADC1_Init(void);
 295:Core/Src/main.c **** static void MX_TIM2_Init(void);
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s 			page 22


 296:Core/Src/main.c **** static void MX_TIM1_Init(void);
 297:Core/Src/main.c **** static void MX_TIM3_Init(void);
 298:Core/Src/main.c **** void StartDefaultTask(void *argument);
 299:Core/Src/main.c **** extern void ATParsingTaskCode(void *argument);
 300:Core/Src/main.c **** extern void ATHandlingTaskCode(void *argument);
 301:Core/Src/main.c **** extern void UARTProcTaskCode(void *argument);
 302:Core/Src/main.c **** extern void ModemManagerTaskCode(void *argument);
 303:Core/Src/main.c **** extern void AppSendTaskCode(void *argument);
 304:Core/Src/main.c **** extern void ReadFromADCTaskCode(void *argument);
 305:Core/Src/main.c **** extern void DutyCycleCode(void *argument);
 306:Core/Src/main.c **** extern void PeriodicSendTimerCallback(void *argument);
 307:Core/Src/main.c **** extern void ModemLedCallback(void *argument);
 308:Core/Src/main.c **** extern void DutyCycleTimerCallback(void *argument);
 309:Core/Src/main.c **** 
 310:Core/Src/main.c **** /* USER CODE BEGIN PFP */
 311:Core/Src/main.c **** void CONFIGURE_TIMER_FOR_RUN_TIME_STATS()
 312:Core/Src/main.c **** {
 834              		.loc 1 312 1
 835              		.cfi_startproc
 836              		@ args = 0, pretend = 0, frame = 0
 837              		@ frame_needed = 1, uses_anonymous_args = 0
 838 0000 80B5     		push	{r7, lr}
 839              	.LCFI0:
 840              		.cfi_def_cfa_offset 8
 841              		.cfi_offset 7, -8
 842              		.cfi_offset 14, -4
 843 0002 00AF     		add	r7, sp, #0
 844              	.LCFI1:
 845              		.cfi_def_cfa_register 7
 313:Core/Src/main.c ****   HAL_TIM_Base_Start(&htim2); /* Define this to initialize your timer/counter */
 846              		.loc 1 313 3
 847 0004 0248     		ldr	r0, .L2
 848 0006 FFF7FEFF 		bl	HAL_TIM_Base_Start
 314:Core/Src/main.c **** }
 849              		.loc 1 314 1
 850 000a 00BF     		nop
 851 000c 80BD     		pop	{r7, pc}
 852              	.L3:
 853 000e 00BF     		.align	2
 854              	.L2:
 855 0010 00000000 		.word	htim2
 856              		.cfi_endproc
 857              	.LFE224:
 859              		.section	.text.GET_RUN_TIME_COUNTER_VALUE,"ax",%progbits
 860              		.align	1
 861              		.global	GET_RUN_TIME_COUNTER_VALUE
 862              		.syntax unified
 863              		.thumb
 864              		.thumb_func
 865              		.fpu fpv4-sp-d16
 867              	GET_RUN_TIME_COUNTER_VALUE:
 868              	.LFB225:
 315:Core/Src/main.c **** 
 316:Core/Src/main.c **** uint32_t GET_RUN_TIME_COUNTER_VALUE()
 317:Core/Src/main.c **** {
 869              		.loc 1 317 1
 870              		.cfi_startproc
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s 			page 23


 871              		@ args = 0, pretend = 0, frame = 0
 872              		@ frame_needed = 1, uses_anonymous_args = 0
 873              		@ link register save eliminated.
 874 0000 80B4     		push	{r7}
 875              	.LCFI2:
 876              		.cfi_def_cfa_offset 4
 877              		.cfi_offset 7, -4
 878 0002 00AF     		add	r7, sp, #0
 879              	.LCFI3:
 880              		.cfi_def_cfa_register 7
 318:Core/Src/main.c ****   return __HAL_TIM_GET_COUNTER(&htim2); /* Define this to sample the timer/counter */
 881              		.loc 1 318 10
 882 0004 034B     		ldr	r3, .L6
 883 0006 1B68     		ldr	r3, [r3]
 884 0008 5B6A     		ldr	r3, [r3, #36]
 319:Core/Src/main.c **** }
 885              		.loc 1 319 1
 886 000a 1846     		mov	r0, r3
 887 000c BD46     		mov	sp, r7
 888              	.LCFI4:
 889              		.cfi_def_cfa_register 13
 890              		@ sp needed
 891 000e 5DF8047B 		ldr	r7, [sp], #4
 892              	.LCFI5:
 893              		.cfi_restore 7
 894              		.cfi_def_cfa_offset 0
 895 0012 7047     		bx	lr
 896              	.L7:
 897              		.align	2
 898              	.L6:
 899 0014 00000000 		.word	htim2
 900              		.cfi_endproc
 901              	.LFE225:
 903              		.global	uxTopUsedPriority
 904              		.section	.data.uxTopUsedPriority,"aw"
 905              		.align	2
 908              	uxTopUsedPriority:
 909 0000 37000000 		.word	55
 910              		.section	.text.main,"ax",%progbits
 911              		.align	1
 912              		.global	main
 913              		.syntax unified
 914              		.thumb
 915              		.thumb_func
 916              		.fpu fpv4-sp-d16
 918              	main:
 919              	.LFB226:
 320:Core/Src/main.c **** 
 321:Core/Src/main.c **** /* USER CODE END PFP */
 322:Core/Src/main.c **** 
 323:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 324:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 325:Core/Src/main.c **** const volatile int uxTopUsedPriority = configMAX_PRIORITIES - 1; //this declaration enables thread 
 326:Core/Src/main.c **** 
 327:Core/Src/main.c **** // Paste this code to Core/Inc/FreeRTOSConfig.h to enable kernel statistics (will be overwritten by
 328:Core/Src/main.c **** // #define portCONFIGURE_TIMER_FOR_RUN_TIME_STATS() CONFIGURE_TIMER_FOR_RUN_TIME_STATS()/* Define t
 329:Core/Src/main.c **** // #define portGET_RUN_TIME_COUNTER_VALUE() GET_RUN_TIME_COUNTER_VALUE()        /* Define this to s
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s 			page 24


 330:Core/Src/main.c **** // #define configGENERATE_RUN_TIME_STATS (1)
 331:Core/Src/main.c **** // #define configRECORD_STACK_HIGH_ADDRESS (1)
 332:Core/Src/main.c **** 
 333:Core/Src/main.c **** /* USER CODE END 0 */
 334:Core/Src/main.c **** 
 335:Core/Src/main.c **** /**
 336:Core/Src/main.c ****   * @brief  The application entry point.
 337:Core/Src/main.c ****   * @retval int
 338:Core/Src/main.c ****   */
 339:Core/Src/main.c **** int main(void)
 340:Core/Src/main.c **** {
 920              		.loc 1 340 1
 921              		.cfi_startproc
 922              		@ args = 0, pretend = 0, frame = 8
 923              		@ frame_needed = 1, uses_anonymous_args = 0
 924 0000 80B5     		push	{r7, lr}
 925              	.LCFI6:
 926              		.cfi_def_cfa_offset 8
 927              		.cfi_offset 7, -8
 928              		.cfi_offset 14, -4
 929 0002 82B0     		sub	sp, sp, #8
 930              	.LCFI7:
 931              		.cfi_def_cfa_offset 16
 932 0004 00AF     		add	r7, sp, #0
 933              	.LCFI8:
 934              		.cfi_def_cfa_register 7
 341:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 342:Core/Src/main.c ****   uint32_t i;  
 343:Core/Src/main.c ****   (void)uxTopUsedPriority; //this declaration enables thread awareness for FreeRTOS using OpenOCD
 935              		.loc 1 343 3
 936 0006 784B     		ldr	r3, .L12
 937 0008 1B68     		ldr	r3, [r3]
 344:Core/Src/main.c ****   /* USER CODE END 1 */
 345:Core/Src/main.c **** 
 346:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 347:Core/Src/main.c **** 
 348:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 349:Core/Src/main.c ****   HAL_Init();
 938              		.loc 1 349 3
 939 000a FFF7FEFF 		bl	HAL_Init
 350:Core/Src/main.c **** 
 351:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 352:Core/Src/main.c **** 
 353:Core/Src/main.c ****   /* USER CODE END Init */
 354:Core/Src/main.c **** 
 355:Core/Src/main.c ****   /* Configure the system clock */
 356:Core/Src/main.c ****   SystemClock_Config();
 940              		.loc 1 356 3
 941 000e FFF7FEFF 		bl	SystemClock_Config
 357:Core/Src/main.c **** 
 358:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 359:Core/Src/main.c **** 
 360:Core/Src/main.c ****   /* USER CODE END SysInit */
 361:Core/Src/main.c **** 
 362:Core/Src/main.c ****   /* Initialize all configured peripherals */
 363:Core/Src/main.c ****   MX_GPIO_Init();
 942              		.loc 1 363 3
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s 			page 25


 943 0012 FFF7FEFF 		bl	MX_GPIO_Init
 364:Core/Src/main.c ****   MX_DMA_Init();
 944              		.loc 1 364 3
 945 0016 FFF7FEFF 		bl	MX_DMA_Init
 365:Core/Src/main.c ****   MX_USART1_UART_Init();
 946              		.loc 1 365 3
 947 001a FFF7FEFF 		bl	MX_USART1_UART_Init
 366:Core/Src/main.c ****   MX_ADC1_Init();
 948              		.loc 1 366 3
 949 001e FFF7FEFF 		bl	MX_ADC1_Init
 367:Core/Src/main.c ****   MX_TIM2_Init();
 950              		.loc 1 367 3
 951 0022 FFF7FEFF 		bl	MX_TIM2_Init
 368:Core/Src/main.c ****   MX_TIM1_Init();
 952              		.loc 1 368 3
 953 0026 FFF7FEFF 		bl	MX_TIM1_Init
 369:Core/Src/main.c ****   MX_TIM3_Init();
 954              		.loc 1 369 3
 955 002a FFF7FEFF 		bl	MX_TIM3_Init
 370:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 371:Core/Src/main.c ****   
 372:Core/Src/main.c ****   //H-Bridge PWMs
 373:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_1);
 956              		.loc 1 373 3
 957 002e 0021     		movs	r1, #0
 958 0030 6E48     		ldr	r0, .L12+4
 959 0032 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 374:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_2);
 960              		.loc 1 374 3
 961 0036 0421     		movs	r1, #4
 962 0038 6D48     		ldr	r0, .L12+8
 963 003a FFF7FEFF 		bl	HAL_TIM_PWM_Start
 375:Core/Src/main.c ****   /* USER CODE END 2 */
 376:Core/Src/main.c **** 
 377:Core/Src/main.c ****   /* Init scheduler */
 378:Core/Src/main.c ****   osKernelInitialize();
 964              		.loc 1 378 3
 965 003e FFF7FEFF 		bl	osKernelInitialize
 379:Core/Src/main.c **** 
 380:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_MUTEX */
 381:Core/Src/main.c ****   /* add mutexes, ... */
 382:Core/Src/main.c ****   /* USER CODE END RTOS_MUTEX */
 383:Core/Src/main.c **** 
 384:Core/Src/main.c ****   /* Create the semaphores(s) */
 385:Core/Src/main.c ****   /* creation of ATCommandSemaphore */
 386:Core/Src/main.c ****   ATCommandSemaphoreHandle = osSemaphoreNew(1, 1, &ATCommandSemaphore_attributes);
 966              		.loc 1 386 30
 967 0042 6C4A     		ldr	r2, .L12+12
 968 0044 0121     		movs	r1, #1
 969 0046 0120     		movs	r0, #1
 970 0048 FFF7FEFF 		bl	osSemaphoreNew
 971 004c 0346     		mov	r3, r0
 972              		.loc 1 386 28
 973 004e 6A4A     		ldr	r2, .L12+16
 974 0050 1360     		str	r3, [r2]
 387:Core/Src/main.c **** 
 388:Core/Src/main.c ****   /* creation of ATResponseSemaphore */
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s 			page 26


 389:Core/Src/main.c ****   ATResponseSemaphoreHandle = osSemaphoreNew(1, 1, &ATResponseSemaphore_attributes);
 975              		.loc 1 389 31
 976 0052 6A4A     		ldr	r2, .L12+20
 977 0054 0121     		movs	r1, #1
 978 0056 0120     		movs	r0, #1
 979 0058 FFF7FEFF 		bl	osSemaphoreNew
 980 005c 0346     		mov	r3, r0
 981              		.loc 1 389 29
 982 005e 684A     		ldr	r2, .L12+24
 983 0060 1360     		str	r3, [r2]
 390:Core/Src/main.c **** 
 391:Core/Src/main.c ****   /* creation of UARTTXSemaphore */
 392:Core/Src/main.c ****   UARTTXSemaphoreHandle = osSemaphoreNew(1, 1, &UARTTXSemaphore_attributes);
 984              		.loc 1 392 27
 985 0062 684A     		ldr	r2, .L12+28
 986 0064 0121     		movs	r1, #1
 987 0066 0120     		movs	r0, #1
 988 0068 FFF7FEFF 		bl	osSemaphoreNew
 989 006c 0346     		mov	r3, r0
 990              		.loc 1 392 25
 991 006e 664A     		ldr	r2, .L12+32
 992 0070 1360     		str	r3, [r2]
 393:Core/Src/main.c **** 
 394:Core/Src/main.c ****   /* creation of RadioStateSemaphore */
 395:Core/Src/main.c ****   RadioStateSemaphoreHandle = osSemaphoreNew(1, 1, &RadioStateSemaphore_attributes);
 993              		.loc 1 395 31
 994 0072 664A     		ldr	r2, .L12+36
 995 0074 0121     		movs	r1, #1
 996 0076 0120     		movs	r0, #1
 997 0078 FFF7FEFF 		bl	osSemaphoreNew
 998 007c 0346     		mov	r3, r0
 999              		.loc 1 395 29
 1000 007e 644A     		ldr	r2, .L12+40
 1001 0080 1360     		str	r3, [r2]
 396:Core/Src/main.c **** 
 397:Core/Src/main.c ****   /* creation of LoRaTXSemaphore */
 398:Core/Src/main.c ****   LoRaTXSemaphoreHandle = osSemaphoreNew(1, 1, &LoRaTXSemaphore_attributes);
 1002              		.loc 1 398 27
 1003 0082 644A     		ldr	r2, .L12+44
 1004 0084 0121     		movs	r1, #1
 1005 0086 0120     		movs	r0, #1
 1006 0088 FFF7FEFF 		bl	osSemaphoreNew
 1007 008c 0346     		mov	r3, r0
 1008              		.loc 1 398 25
 1009 008e 624A     		ldr	r2, .L12+48
 1010 0090 1360     		str	r3, [r2]
 399:Core/Src/main.c **** 
 400:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 401:Core/Src/main.c ****   /* add semaphores, ... */
 402:Core/Src/main.c ****   /* USER CODE END RTOS_SEMAPHORES */
 403:Core/Src/main.c **** 
 404:Core/Src/main.c ****   /* Create the timer(s) */
 405:Core/Src/main.c ****   /* creation of PeriodicSendTimer */
 406:Core/Src/main.c ****   PeriodicSendTimerHandle = osTimerNew(PeriodicSendTimerCallback, osTimerPeriodic, NULL, &PeriodicS
 1011              		.loc 1 406 29
 1012 0092 624B     		ldr	r3, .L12+52
 1013 0094 0022     		movs	r2, #0
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s 			page 27


 1014 0096 0121     		movs	r1, #1
 1015 0098 6148     		ldr	r0, .L12+56
 1016 009a FFF7FEFF 		bl	osTimerNew
 1017 009e 0346     		mov	r3, r0
 1018              		.loc 1 406 27
 1019 00a0 604A     		ldr	r2, .L12+60
 1020 00a2 1360     		str	r3, [r2]
 407:Core/Src/main.c **** 
 408:Core/Src/main.c ****   /* creation of ModemLedTimer */
 409:Core/Src/main.c ****   ModemLedTimerHandle = osTimerNew(ModemLedCallback, osTimerPeriodic, NULL, &ModemLedTimer_attribut
 1021              		.loc 1 409 25
 1022 00a4 604B     		ldr	r3, .L12+64
 1023 00a6 0022     		movs	r2, #0
 1024 00a8 0121     		movs	r1, #1
 1025 00aa 6048     		ldr	r0, .L12+68
 1026 00ac FFF7FEFF 		bl	osTimerNew
 1027 00b0 0346     		mov	r3, r0
 1028              		.loc 1 409 23
 1029 00b2 5F4A     		ldr	r2, .L12+72
 1030 00b4 1360     		str	r3, [r2]
 410:Core/Src/main.c **** 
 411:Core/Src/main.c ****   /* creation of DutyCycleTimer */
 412:Core/Src/main.c ****   DutyCycleTimerHandle = osTimerNew(DutyCycleTimerCallback, osTimerOnce, NULL, &DutyCycleTimer_attr
 1031              		.loc 1 412 26
 1032 00b6 5F4B     		ldr	r3, .L12+76
 1033 00b8 0022     		movs	r2, #0
 1034 00ba 0021     		movs	r1, #0
 1035 00bc 5E48     		ldr	r0, .L12+80
 1036 00be FFF7FEFF 		bl	osTimerNew
 1037 00c2 0346     		mov	r3, r0
 1038              		.loc 1 412 24
 1039 00c4 5D4A     		ldr	r2, .L12+84
 1040 00c6 1360     		str	r3, [r2]
 413:Core/Src/main.c **** 
 414:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_TIMERS */
 415:Core/Src/main.c ****   /* start timers, add new ones, ... */
 416:Core/Src/main.c ****   /* USER CODE END RTOS_TIMERS */
 417:Core/Src/main.c **** 
 418:Core/Src/main.c ****   /* Create the queue(s) */
 419:Core/Src/main.c ****   /* creation of uartQueue */
 420:Core/Src/main.c ****   uartQueueHandle = osMessageQueueNew (4, sizeof(void*), &uartQueue_attributes);
 1041              		.loc 1 420 21
 1042 00c8 5D4A     		ldr	r2, .L12+88
 1043 00ca 0421     		movs	r1, #4
 1044 00cc 0420     		movs	r0, #4
 1045 00ce FFF7FEFF 		bl	osMessageQueueNew
 1046 00d2 0346     		mov	r3, r0
 1047              		.loc 1 420 19
 1048 00d4 5B4A     		ldr	r2, .L12+92
 1049 00d6 1360     		str	r3, [r2]
 421:Core/Src/main.c **** 
 422:Core/Src/main.c ****   /* creation of ATQueue */
 423:Core/Src/main.c ****   ATQueueHandle = osMessageQueueNew (4, sizeof(void*), &ATQueue_attributes);
 1050              		.loc 1 423 19
 1051 00d8 5B4A     		ldr	r2, .L12+96
 1052 00da 0421     		movs	r1, #4
 1053 00dc 0420     		movs	r0, #4
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s 			page 28


 1054 00de FFF7FEFF 		bl	osMessageQueueNew
 1055 00e2 0346     		mov	r3, r0
 1056              		.loc 1 423 17
 1057 00e4 594A     		ldr	r2, .L12+100
 1058 00e6 1360     		str	r3, [r2]
 424:Core/Src/main.c **** 
 425:Core/Src/main.c ****   /* creation of ModemSendQueue */
 426:Core/Src/main.c ****   ModemSendQueueHandle = osMessageQueueNew (4, sizeof(void*), &ModemSendQueue_attributes);
 1059              		.loc 1 426 26
 1060 00e8 594A     		ldr	r2, .L12+104
 1061 00ea 0421     		movs	r1, #4
 1062 00ec 0420     		movs	r0, #4
 1063 00ee FFF7FEFF 		bl	osMessageQueueNew
 1064 00f2 0346     		mov	r3, r0
 1065              		.loc 1 426 24
 1066 00f4 574A     		ldr	r2, .L12+108
 1067 00f6 1360     		str	r3, [r2]
 427:Core/Src/main.c **** 
 428:Core/Src/main.c ****   /* creation of TemperatureQueue */
 429:Core/Src/main.c ****   TemperatureQueueHandle = osMessageQueueNew (8, sizeof(TEMPERATURE_OBJ_t), &TemperatureQueue_attri
 1068              		.loc 1 429 28
 1069 00f8 574A     		ldr	r2, .L12+112
 1070 00fa 0821     		movs	r1, #8
 1071 00fc 0820     		movs	r0, #8
 1072 00fe FFF7FEFF 		bl	osMessageQueueNew
 1073 0102 0346     		mov	r3, r0
 1074              		.loc 1 429 26
 1075 0104 554A     		ldr	r2, .L12+116
 1076 0106 1360     		str	r3, [r2]
 430:Core/Src/main.c **** 
 431:Core/Src/main.c ****   /* creation of AccontrollerQueue */
 432:Core/Src/main.c ****   AccontrollerQueueHandle = osMessageQueueNew (16, sizeof(ACCONTROLLER_OBJ_t), &AccontrollerQueue_a
 1077              		.loc 1 432 29
 1078 0108 554A     		ldr	r2, .L12+120
 1079 010a 0321     		movs	r1, #3
 1080 010c 1020     		movs	r0, #16
 1081 010e FFF7FEFF 		bl	osMessageQueueNew
 1082 0112 0346     		mov	r3, r0
 1083              		.loc 1 432 27
 1084 0114 534A     		ldr	r2, .L12+124
 1085 0116 1360     		str	r3, [r2]
 433:Core/Src/main.c **** 
 434:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_QUEUES */
 435:Core/Src/main.c ****   /* add queues, ... */
 436:Core/Src/main.c ****   /* USER CODE END RTOS_QUEUES */
 437:Core/Src/main.c **** 
 438:Core/Src/main.c ****   /* Create the thread(s) */
 439:Core/Src/main.c ****   /* creation of defaultTask */
 440:Core/Src/main.c ****   defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 1086              		.loc 1 440 23
 1087 0118 534A     		ldr	r2, .L12+128
 1088 011a 0021     		movs	r1, #0
 1089 011c 5348     		ldr	r0, .L12+132
 1090 011e FFF7FEFF 		bl	osThreadNew
 1091 0122 0346     		mov	r3, r0
 1092              		.loc 1 440 21
 1093 0124 524A     		ldr	r2, .L12+136
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s 			page 29


 1094 0126 1360     		str	r3, [r2]
 441:Core/Src/main.c **** 
 442:Core/Src/main.c ****   /* creation of ATParsingTask */
 443:Core/Src/main.c ****   ATParsingTaskHandle = osThreadNew(ATParsingTaskCode, NULL, &ATParsingTask_attributes);
 1095              		.loc 1 443 25
 1096 0128 524A     		ldr	r2, .L12+140
 1097 012a 0021     		movs	r1, #0
 1098 012c 5248     		ldr	r0, .L12+144
 1099 012e FFF7FEFF 		bl	osThreadNew
 1100 0132 0346     		mov	r3, r0
 1101              		.loc 1 443 23
 1102 0134 514A     		ldr	r2, .L12+148
 1103 0136 1360     		str	r3, [r2]
 444:Core/Src/main.c **** 
 445:Core/Src/main.c ****   /* creation of ATHandlingTask */
 446:Core/Src/main.c ****   ATHandlingTaskHandle = osThreadNew(ATHandlingTaskCode, NULL, &ATHandlingTask_attributes);
 1104              		.loc 1 446 26
 1105 0138 514A     		ldr	r2, .L12+152
 1106 013a 0021     		movs	r1, #0
 1107 013c 5148     		ldr	r0, .L12+156
 1108 013e FFF7FEFF 		bl	osThreadNew
 1109 0142 0346     		mov	r3, r0
 1110              		.loc 1 446 24
 1111 0144 504A     		ldr	r2, .L12+160
 1112 0146 1360     		str	r3, [r2]
 447:Core/Src/main.c **** 
 448:Core/Src/main.c ****   /* creation of UARTProcTask */
 449:Core/Src/main.c ****   UARTProcTaskHandle = osThreadNew(UARTProcTaskCode, NULL, &UARTProcTask_attributes);
 1113              		.loc 1 449 24
 1114 0148 504A     		ldr	r2, .L12+164
 1115 014a 0021     		movs	r1, #0
 1116 014c 5048     		ldr	r0, .L12+168
 1117 014e FFF7FEFF 		bl	osThreadNew
 1118 0152 0346     		mov	r3, r0
 1119              		.loc 1 449 22
 1120 0154 4F4A     		ldr	r2, .L12+172
 1121 0156 1360     		str	r3, [r2]
 450:Core/Src/main.c **** 
 451:Core/Src/main.c ****   /* creation of ModemMngrTask */
 452:Core/Src/main.c ****   ModemMngrTaskHandle = osThreadNew(ModemManagerTaskCode, NULL, &ModemMngrTask_attributes);
 1122              		.loc 1 452 25
 1123 0158 4F4A     		ldr	r2, .L12+176
 1124 015a 0021     		movs	r1, #0
 1125 015c 4F48     		ldr	r0, .L12+180
 1126 015e FFF7FEFF 		bl	osThreadNew
 1127 0162 0346     		mov	r3, r0
 1128              		.loc 1 452 23
 1129 0164 4E4A     		ldr	r2, .L12+184
 1130 0166 1360     		str	r3, [r2]
 453:Core/Src/main.c **** 
 454:Core/Src/main.c ****   /* creation of AppSendTask */
 455:Core/Src/main.c ****   AppSendTaskHandle = osThreadNew(AppSendTaskCode, NULL, &AppSendTask_attributes);
 1131              		.loc 1 455 23
 1132 0168 4E4A     		ldr	r2, .L12+188
 1133 016a 0021     		movs	r1, #0
 1134 016c 4E48     		ldr	r0, .L12+192
 1135 016e FFF7FEFF 		bl	osThreadNew
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s 			page 30


 1136 0172 0346     		mov	r3, r0
 1137              		.loc 1 455 21
 1138 0174 4D4A     		ldr	r2, .L12+196
 1139 0176 1360     		str	r3, [r2]
 456:Core/Src/main.c **** 
 457:Core/Src/main.c ****   /* creation of ReadFromADCTask */
 458:Core/Src/main.c ****   ReadFromADCTaskHandle = osThreadNew(ReadFromADCTaskCode, NULL, &ReadFromADCTask_attributes);
 1140              		.loc 1 458 27
 1141 0178 4D4A     		ldr	r2, .L12+200
 1142 017a 0021     		movs	r1, #0
 1143 017c 4D48     		ldr	r0, .L12+204
 1144 017e FFF7FEFF 		bl	osThreadNew
 1145 0182 0346     		mov	r3, r0
 1146              		.loc 1 458 25
 1147 0184 4C4A     		ldr	r2, .L12+208
 1148 0186 1360     		str	r3, [r2]
 459:Core/Src/main.c **** 
 460:Core/Src/main.c ****   /* creation of DutyCycle */
 461:Core/Src/main.c ****   DutyCycleHandle = osThreadNew(DutyCycleCode, NULL, &DutyCycle_attributes);
 1149              		.loc 1 461 21
 1150 0188 4C4A     		ldr	r2, .L12+212
 1151 018a 0021     		movs	r1, #0
 1152 018c 4C48     		ldr	r0, .L12+216
 1153 018e FFF7FEFF 		bl	osThreadNew
 1154 0192 0346     		mov	r3, r0
 1155              		.loc 1 461 19
 1156 0194 4B4A     		ldr	r2, .L12+220
 1157 0196 1360     		str	r3, [r2]
 462:Core/Src/main.c **** 
 463:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_THREADS */
 464:Core/Src/main.c ****   /* add threads, ... */
 465:Core/Src/main.c ****   /* USER CODE END RTOS_THREADS */
 466:Core/Src/main.c **** 
 467:Core/Src/main.c ****   /* Create the event(s) */
 468:Core/Src/main.c ****   /* creation of ModemStatusFlags */
 469:Core/Src/main.c ****   ModemStatusFlagsHandle = osEventFlagsNew(&ModemStatusFlags_attributes);
 1158              		.loc 1 469 28
 1159 0198 4B48     		ldr	r0, .L12+224
 1160 019a FFF7FEFF 		bl	osEventFlagsNew
 1161 019e 0346     		mov	r3, r0
 1162              		.loc 1 469 26
 1163 01a0 4A4A     		ldr	r2, .L12+228
 1164 01a2 1360     		str	r3, [r2]
 470:Core/Src/main.c **** 
 471:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_EVENTS */
 472:Core/Src/main.c ****   /* add events, ... */
 473:Core/Src/main.c ****   /* USER CODE END RTOS_EVENTS */
 474:Core/Src/main.c **** 
 475:Core/Src/main.c ****   /* Start scheduler */
 476:Core/Src/main.c ****   osKernelStart();
 1165              		.loc 1 476 3
 1166 01a4 FFF7FEFF 		bl	osKernelStart
 1167              	.L11:
 477:Core/Src/main.c **** 
 478:Core/Src/main.c ****   /* We should never get here as control is now taken by the scheduler */
 479:Core/Src/main.c ****   /* Infinite loop */
 480:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s 			page 31


 481:Core/Src/main.c ****   while (1)
 482:Core/Src/main.c ****   {
 483:Core/Src/main.c ****     for (i = 0; i < 8; i++)
 1168              		.loc 1 483 12
 1169 01a8 0023     		movs	r3, #0
 1170 01aa 7B60     		str	r3, [r7, #4]
 1171              		.loc 1 483 5
 1172 01ac 14E0     		b	.L9
 1173              	.L10:
 484:Core/Src/main.c ****     {
 485:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, 0);
 1174              		.loc 1 485 7 discriminator 3
 1175 01ae 0022     		movs	r2, #0
 1176 01b0 4FF40051 		mov	r1, #8192
 1177 01b4 4648     		ldr	r0, .L12+232
 1178 01b6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 486:Core/Src/main.c ****       HAL_Delay(25);
 1179              		.loc 1 486 7 discriminator 3
 1180 01ba 1920     		movs	r0, #25
 1181 01bc FFF7FEFF 		bl	HAL_Delay
 487:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, 1);
 1182              		.loc 1 487 7 discriminator 3
 1183 01c0 0122     		movs	r2, #1
 1184 01c2 4FF40051 		mov	r1, #8192
 1185 01c6 4248     		ldr	r0, .L12+232
 1186 01c8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 488:Core/Src/main.c ****       HAL_Delay(50);
 1187              		.loc 1 488 7 discriminator 3
 1188 01cc 3220     		movs	r0, #50
 1189 01ce FFF7FEFF 		bl	HAL_Delay
 483:Core/Src/main.c ****     {
 1190              		.loc 1 483 25 discriminator 3
 1191 01d2 7B68     		ldr	r3, [r7, #4]
 1192 01d4 0133     		adds	r3, r3, #1
 1193 01d6 7B60     		str	r3, [r7, #4]
 1194              	.L9:
 483:Core/Src/main.c ****     {
 1195              		.loc 1 483 5 discriminator 1
 1196 01d8 7B68     		ldr	r3, [r7, #4]
 1197 01da 072B     		cmp	r3, #7
 1198 01dc E7D9     		bls	.L10
 489:Core/Src/main.c ****     }
 490:Core/Src/main.c ****     HAL_Delay(800);
 1199              		.loc 1 490 5
 1200 01de 4FF44870 		mov	r0, #800
 1201 01e2 FFF7FEFF 		bl	HAL_Delay
 483:Core/Src/main.c ****     {
 1202              		.loc 1 483 12
 1203 01e6 DFE7     		b	.L11
 1204              	.L13:
 1205              		.align	2
 1206              	.L12:
 1207 01e8 00000000 		.word	uxTopUsedPriority
 1208 01ec 00000000 		.word	htim1
 1209 01f0 00000000 		.word	htim3
 1210 01f4 00000000 		.word	ATCommandSemaphore_attributes
 1211 01f8 00000000 		.word	ATCommandSemaphoreHandle
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s 			page 32


 1212 01fc 00000000 		.word	ATResponseSemaphore_attributes
 1213 0200 00000000 		.word	ATResponseSemaphoreHandle
 1214 0204 00000000 		.word	UARTTXSemaphore_attributes
 1215 0208 00000000 		.word	UARTTXSemaphoreHandle
 1216 020c 00000000 		.word	RadioStateSemaphore_attributes
 1217 0210 00000000 		.word	RadioStateSemaphoreHandle
 1218 0214 00000000 		.word	LoRaTXSemaphore_attributes
 1219 0218 00000000 		.word	LoRaTXSemaphoreHandle
 1220 021c 00000000 		.word	PeriodicSendTimer_attributes
 1221 0220 00000000 		.word	PeriodicSendTimerCallback
 1222 0224 00000000 		.word	PeriodicSendTimerHandle
 1223 0228 00000000 		.word	ModemLedTimer_attributes
 1224 022c 00000000 		.word	ModemLedCallback
 1225 0230 00000000 		.word	ModemLedTimerHandle
 1226 0234 00000000 		.word	DutyCycleTimer_attributes
 1227 0238 00000000 		.word	DutyCycleTimerCallback
 1228 023c 00000000 		.word	DutyCycleTimerHandle
 1229 0240 00000000 		.word	uartQueue_attributes
 1230 0244 00000000 		.word	uartQueueHandle
 1231 0248 00000000 		.word	ATQueue_attributes
 1232 024c 00000000 		.word	ATQueueHandle
 1233 0250 00000000 		.word	ModemSendQueue_attributes
 1234 0254 00000000 		.word	ModemSendQueueHandle
 1235 0258 00000000 		.word	TemperatureQueue_attributes
 1236 025c 00000000 		.word	TemperatureQueueHandle
 1237 0260 00000000 		.word	AccontrollerQueue_attributes
 1238 0264 00000000 		.word	AccontrollerQueueHandle
 1239 0268 00000000 		.word	defaultTask_attributes
 1240 026c 00000000 		.word	StartDefaultTask
 1241 0270 00000000 		.word	defaultTaskHandle
 1242 0274 00000000 		.word	ATParsingTask_attributes
 1243 0278 00000000 		.word	ATParsingTaskCode
 1244 027c 00000000 		.word	ATParsingTaskHandle
 1245 0280 00000000 		.word	ATHandlingTask_attributes
 1246 0284 00000000 		.word	ATHandlingTaskCode
 1247 0288 00000000 		.word	ATHandlingTaskHandle
 1248 028c 00000000 		.word	UARTProcTask_attributes
 1249 0290 00000000 		.word	UARTProcTaskCode
 1250 0294 00000000 		.word	UARTProcTaskHandle
 1251 0298 00000000 		.word	ModemMngrTask_attributes
 1252 029c 00000000 		.word	ModemManagerTaskCode
 1253 02a0 00000000 		.word	ModemMngrTaskHandle
 1254 02a4 00000000 		.word	AppSendTask_attributes
 1255 02a8 00000000 		.word	AppSendTaskCode
 1256 02ac 00000000 		.word	AppSendTaskHandle
 1257 02b0 00000000 		.word	ReadFromADCTask_attributes
 1258 02b4 00000000 		.word	ReadFromADCTaskCode
 1259 02b8 00000000 		.word	ReadFromADCTaskHandle
 1260 02bc 00000000 		.word	DutyCycle_attributes
 1261 02c0 00000000 		.word	DutyCycleCode
 1262 02c4 00000000 		.word	DutyCycleHandle
 1263 02c8 00000000 		.word	ModemStatusFlags_attributes
 1264 02cc 00000000 		.word	ModemStatusFlagsHandle
 1265 02d0 00080240 		.word	1073874944
 1266              		.cfi_endproc
 1267              	.LFE226:
 1269              		.section	.text.SystemClock_Config,"ax",%progbits
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s 			page 33


 1270              		.align	1
 1271              		.global	SystemClock_Config
 1272              		.syntax unified
 1273              		.thumb
 1274              		.thumb_func
 1275              		.fpu fpv4-sp-d16
 1277              	SystemClock_Config:
 1278              	.LFB227:
 491:Core/Src/main.c **** 
 492:Core/Src/main.c ****     /* USER CODE END WHILE */
 493:Core/Src/main.c **** 
 494:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 495:Core/Src/main.c ****   }
 496:Core/Src/main.c ****   /* USER CODE END 3 */
 497:Core/Src/main.c **** }
 498:Core/Src/main.c **** 
 499:Core/Src/main.c **** /**
 500:Core/Src/main.c ****   * @brief System Clock Configuration
 501:Core/Src/main.c ****   * @retval None
 502:Core/Src/main.c ****   */
 503:Core/Src/main.c **** void SystemClock_Config(void)
 504:Core/Src/main.c **** {
 1279              		.loc 1 504 1
 1280              		.cfi_startproc
 1281              		@ args = 0, pretend = 0, frame = 80
 1282              		@ frame_needed = 1, uses_anonymous_args = 0
 1283 0000 80B5     		push	{r7, lr}
 1284              	.LCFI9:
 1285              		.cfi_def_cfa_offset 8
 1286              		.cfi_offset 7, -8
 1287              		.cfi_offset 14, -4
 1288 0002 94B0     		sub	sp, sp, #80
 1289              	.LCFI10:
 1290              		.cfi_def_cfa_offset 88
 1291 0004 00AF     		add	r7, sp, #0
 1292              	.LCFI11:
 1293              		.cfi_def_cfa_register 7
 505:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1294              		.loc 1 505 22
 1295 0006 07F12003 		add	r3, r7, #32
 1296 000a 3022     		movs	r2, #48
 1297 000c 0021     		movs	r1, #0
 1298 000e 1846     		mov	r0, r3
 1299 0010 FFF7FEFF 		bl	memset
 506:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1300              		.loc 1 506 22
 1301 0014 07F10C03 		add	r3, r7, #12
 1302 0018 0022     		movs	r2, #0
 1303 001a 1A60     		str	r2, [r3]
 1304 001c 5A60     		str	r2, [r3, #4]
 1305 001e 9A60     		str	r2, [r3, #8]
 1306 0020 DA60     		str	r2, [r3, #12]
 1307 0022 1A61     		str	r2, [r3, #16]
 1308              	.LBB4:
 507:Core/Src/main.c **** 
 508:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 509:Core/Src/main.c ****   */
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s 			page 34


 510:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 1309              		.loc 1 510 3
 1310 0024 0023     		movs	r3, #0
 1311 0026 BB60     		str	r3, [r7, #8]
 1312 0028 274B     		ldr	r3, .L18
 1313 002a 1B6C     		ldr	r3, [r3, #64]
 1314 002c 264A     		ldr	r2, .L18
 1315 002e 43F08053 		orr	r3, r3, #268435456
 1316 0032 1364     		str	r3, [r2, #64]
 1317 0034 244B     		ldr	r3, .L18
 1318 0036 1B6C     		ldr	r3, [r3, #64]
 1319 0038 03F08053 		and	r3, r3, #268435456
 1320 003c BB60     		str	r3, [r7, #8]
 1321 003e BB68     		ldr	r3, [r7, #8]
 1322              	.LBE4:
 1323              	.LBB5:
 511:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1324              		.loc 1 511 3
 1325 0040 0023     		movs	r3, #0
 1326 0042 7B60     		str	r3, [r7, #4]
 1327 0044 214B     		ldr	r3, .L18+4
 1328 0046 1B68     		ldr	r3, [r3]
 1329 0048 204A     		ldr	r2, .L18+4
 1330 004a 43F44043 		orr	r3, r3, #49152
 1331 004e 1360     		str	r3, [r2]
 1332 0050 1E4B     		ldr	r3, .L18+4
 1333 0052 1B68     		ldr	r3, [r3]
 1334 0054 03F44043 		and	r3, r3, #49152
 1335 0058 7B60     		str	r3, [r7, #4]
 1336 005a 7B68     		ldr	r3, [r7, #4]
 1337              	.LBE5:
 512:Core/Src/main.c **** 
 513:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 514:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 515:Core/Src/main.c ****   */
 516:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 1338              		.loc 1 516 36
 1339 005c 0123     		movs	r3, #1
 1340 005e 3B62     		str	r3, [r7, #32]
 517:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1341              		.loc 1 517 30
 1342 0060 4FF48033 		mov	r3, #65536
 1343 0064 7B62     		str	r3, [r7, #36]
 518:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1344              		.loc 1 518 34
 1345 0066 0223     		movs	r3, #2
 1346 0068 BB63     		str	r3, [r7, #56]
 519:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1347              		.loc 1 519 35
 1348 006a 4FF48003 		mov	r3, #4194304
 1349 006e FB63     		str	r3, [r7, #60]
 520:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
 1350              		.loc 1 520 30
 1351 0070 1923     		movs	r3, #25
 1352 0072 3B64     		str	r3, [r7, #64]
 521:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 192;
 1353              		.loc 1 521 30
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s 			page 35


 1354 0074 C023     		movs	r3, #192
 1355 0076 7B64     		str	r3, [r7, #68]
 522:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1356              		.loc 1 522 30
 1357 0078 0223     		movs	r3, #2
 1358 007a BB64     		str	r3, [r7, #72]
 523:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 1359              		.loc 1 523 30
 1360 007c 0423     		movs	r3, #4
 1361 007e FB64     		str	r3, [r7, #76]
 524:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1362              		.loc 1 524 7
 1363 0080 07F12003 		add	r3, r7, #32
 1364 0084 1846     		mov	r0, r3
 1365 0086 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1366 008a 0346     		mov	r3, r0
 1367              		.loc 1 524 6
 1368 008c 002B     		cmp	r3, #0
 1369 008e 01D0     		beq	.L15
 525:Core/Src/main.c ****   {
 526:Core/Src/main.c ****     Error_Handler();
 1370              		.loc 1 526 5
 1371 0090 FFF7FEFF 		bl	Error_Handler
 1372              	.L15:
 527:Core/Src/main.c ****   }
 528:Core/Src/main.c **** 
 529:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 530:Core/Src/main.c ****   */
 531:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 1373              		.loc 1 531 31
 1374 0094 0F23     		movs	r3, #15
 1375 0096 FB60     		str	r3, [r7, #12]
 532:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 533:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 1376              		.loc 1 533 34
 1377 0098 0223     		movs	r3, #2
 1378 009a 3B61     		str	r3, [r7, #16]
 534:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1379              		.loc 1 534 35
 1380 009c 0023     		movs	r3, #0
 1381 009e 7B61     		str	r3, [r7, #20]
 535:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1382              		.loc 1 535 36
 1383 00a0 4FF48053 		mov	r3, #4096
 1384 00a4 BB61     		str	r3, [r7, #24]
 536:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1385              		.loc 1 536 36
 1386 00a6 0023     		movs	r3, #0
 1387 00a8 FB61     		str	r3, [r7, #28]
 537:Core/Src/main.c **** 
 538:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 1388              		.loc 1 538 7
 1389 00aa 07F10C03 		add	r3, r7, #12
 1390 00ae 0321     		movs	r1, #3
 1391 00b0 1846     		mov	r0, r3
 1392 00b2 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1393 00b6 0346     		mov	r3, r0
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s 			page 36


 1394              		.loc 1 538 6
 1395 00b8 002B     		cmp	r3, #0
 1396 00ba 01D0     		beq	.L17
 539:Core/Src/main.c ****   {
 540:Core/Src/main.c ****     Error_Handler();
 1397              		.loc 1 540 5
 1398 00bc FFF7FEFF 		bl	Error_Handler
 1399              	.L17:
 541:Core/Src/main.c ****   }
 542:Core/Src/main.c **** }
 1400              		.loc 1 542 1
 1401 00c0 00BF     		nop
 1402 00c2 5037     		adds	r7, r7, #80
 1403              	.LCFI12:
 1404              		.cfi_def_cfa_offset 8
 1405 00c4 BD46     		mov	sp, r7
 1406              	.LCFI13:
 1407              		.cfi_def_cfa_register 13
 1408              		@ sp needed
 1409 00c6 80BD     		pop	{r7, pc}
 1410              	.L19:
 1411              		.align	2
 1412              	.L18:
 1413 00c8 00380240 		.word	1073887232
 1414 00cc 00700040 		.word	1073770496
 1415              		.cfi_endproc
 1416              	.LFE227:
 1418              		.section	.text.MX_ADC1_Init,"ax",%progbits
 1419              		.align	1
 1420              		.syntax unified
 1421              		.thumb
 1422              		.thumb_func
 1423              		.fpu fpv4-sp-d16
 1425              	MX_ADC1_Init:
 1426              	.LFB228:
 543:Core/Src/main.c **** 
 544:Core/Src/main.c **** /**
 545:Core/Src/main.c ****   * @brief ADC1 Initialization Function
 546:Core/Src/main.c ****   * @param None
 547:Core/Src/main.c ****   * @retval None
 548:Core/Src/main.c ****   */
 549:Core/Src/main.c **** static void MX_ADC1_Init(void)
 550:Core/Src/main.c **** {
 1427              		.loc 1 550 1
 1428              		.cfi_startproc
 1429              		@ args = 0, pretend = 0, frame = 16
 1430              		@ frame_needed = 1, uses_anonymous_args = 0
 1431 0000 80B5     		push	{r7, lr}
 1432              	.LCFI14:
 1433              		.cfi_def_cfa_offset 8
 1434              		.cfi_offset 7, -8
 1435              		.cfi_offset 14, -4
 1436 0002 84B0     		sub	sp, sp, #16
 1437              	.LCFI15:
 1438              		.cfi_def_cfa_offset 24
 1439 0004 00AF     		add	r7, sp, #0
 1440              	.LCFI16:
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s 			page 37


 1441              		.cfi_def_cfa_register 7
 551:Core/Src/main.c **** 
 552:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 0 */
 553:Core/Src/main.c **** 
 554:Core/Src/main.c ****   /* USER CODE END ADC1_Init 0 */
 555:Core/Src/main.c **** 
 556:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 1442              		.loc 1 556 26
 1443 0006 3B46     		mov	r3, r7
 1444 0008 0022     		movs	r2, #0
 1445 000a 1A60     		str	r2, [r3]
 1446 000c 5A60     		str	r2, [r3, #4]
 1447 000e 9A60     		str	r2, [r3, #8]
 1448 0010 DA60     		str	r2, [r3, #12]
 557:Core/Src/main.c **** 
 558:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 1 */
 559:Core/Src/main.c **** 
 560:Core/Src/main.c ****   /* USER CODE END ADC1_Init 1 */
 561:Core/Src/main.c **** 
 562:Core/Src/main.c ****   /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of con
 563:Core/Src/main.c ****   */
 564:Core/Src/main.c ****   hadc1.Instance = ADC1;
 1449              		.loc 1 564 18
 1450 0012 214B     		ldr	r3, .L24
 1451 0014 214A     		ldr	r2, .L24+4
 1452 0016 1A60     		str	r2, [r3]
 565:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 1453              		.loc 1 565 29
 1454 0018 1F4B     		ldr	r3, .L24
 1455 001a 4FF48032 		mov	r2, #65536
 1456 001e 5A60     		str	r2, [r3, #4]
 566:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 1457              		.loc 1 566 25
 1458 0020 1D4B     		ldr	r3, .L24
 1459 0022 0022     		movs	r2, #0
 1460 0024 9A60     		str	r2, [r3, #8]
 567:Core/Src/main.c ****   hadc1.Init.ScanConvMode = DISABLE;
 1461              		.loc 1 567 27
 1462 0026 1C4B     		ldr	r3, .L24
 1463 0028 0022     		movs	r2, #0
 1464 002a 1A61     		str	r2, [r3, #16]
 568:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 1465              		.loc 1 568 33
 1466 002c 1A4B     		ldr	r3, .L24
 1467 002e 0022     		movs	r2, #0
 1468 0030 1A76     		strb	r2, [r3, #24]
 569:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 1469              		.loc 1 569 36
 1470 0032 194B     		ldr	r3, .L24
 1471 0034 0022     		movs	r2, #0
 1472 0036 83F82020 		strb	r2, [r3, #32]
 570:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 1473              		.loc 1 570 35
 1474 003a 174B     		ldr	r3, .L24
 1475 003c 0022     		movs	r2, #0
 1476 003e DA62     		str	r2, [r3, #44]
 571:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s 			page 38


 1477              		.loc 1 571 31
 1478 0040 154B     		ldr	r3, .L24
 1479 0042 174A     		ldr	r2, .L24+8
 1480 0044 9A62     		str	r2, [r3, #40]
 572:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 1481              		.loc 1 572 24
 1482 0046 144B     		ldr	r3, .L24
 1483 0048 0022     		movs	r2, #0
 1484 004a DA60     		str	r2, [r3, #12]
 573:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 1485              		.loc 1 573 30
 1486 004c 124B     		ldr	r3, .L24
 1487 004e 0122     		movs	r2, #1
 1488 0050 DA61     		str	r2, [r3, #28]
 574:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 1489              		.loc 1 574 36
 1490 0052 114B     		ldr	r3, .L24
 1491 0054 0022     		movs	r2, #0
 1492 0056 83F83020 		strb	r2, [r3, #48]
 575:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 1493              		.loc 1 575 27
 1494 005a 0F4B     		ldr	r3, .L24
 1495 005c 0122     		movs	r2, #1
 1496 005e 5A61     		str	r2, [r3, #20]
 576:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 1497              		.loc 1 576 7
 1498 0060 0D48     		ldr	r0, .L24
 1499 0062 FFF7FEFF 		bl	HAL_ADC_Init
 1500 0066 0346     		mov	r3, r0
 1501              		.loc 1 576 6
 1502 0068 002B     		cmp	r3, #0
 1503 006a 01D0     		beq	.L21
 577:Core/Src/main.c ****   {
 578:Core/Src/main.c ****     Error_Handler();
 1504              		.loc 1 578 5
 1505 006c FFF7FEFF 		bl	Error_Handler
 1506              	.L21:
 579:Core/Src/main.c ****   }
 580:Core/Src/main.c **** 
 581:Core/Src/main.c ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
 582:Core/Src/main.c ****   */
 583:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_0;
 1507              		.loc 1 583 19
 1508 0070 0023     		movs	r3, #0
 1509 0072 3B60     		str	r3, [r7]
 584:Core/Src/main.c ****   sConfig.Rank = 1;
 1510              		.loc 1 584 16
 1511 0074 0123     		movs	r3, #1
 1512 0076 7B60     		str	r3, [r7, #4]
 585:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 1513              		.loc 1 585 24
 1514 0078 0023     		movs	r3, #0
 1515 007a BB60     		str	r3, [r7, #8]
 586:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 1516              		.loc 1 586 7
 1517 007c 3B46     		mov	r3, r7
 1518 007e 1946     		mov	r1, r3
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s 			page 39


 1519 0080 0548     		ldr	r0, .L24
 1520 0082 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 1521 0086 0346     		mov	r3, r0
 1522              		.loc 1 586 6
 1523 0088 002B     		cmp	r3, #0
 1524 008a 01D0     		beq	.L23
 587:Core/Src/main.c ****   {
 588:Core/Src/main.c ****     Error_Handler();
 1525              		.loc 1 588 5
 1526 008c FFF7FEFF 		bl	Error_Handler
 1527              	.L23:
 589:Core/Src/main.c ****   }
 590:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 2 */
 591:Core/Src/main.c **** 
 592:Core/Src/main.c ****   /* USER CODE END ADC1_Init 2 */
 593:Core/Src/main.c **** 
 594:Core/Src/main.c **** }
 1528              		.loc 1 594 1
 1529 0090 00BF     		nop
 1530 0092 1037     		adds	r7, r7, #16
 1531              	.LCFI17:
 1532              		.cfi_def_cfa_offset 8
 1533 0094 BD46     		mov	sp, r7
 1534              	.LCFI18:
 1535              		.cfi_def_cfa_register 13
 1536              		@ sp needed
 1537 0096 80BD     		pop	{r7, pc}
 1538              	.L25:
 1539              		.align	2
 1540              	.L24:
 1541 0098 00000000 		.word	hadc1
 1542 009c 00200140 		.word	1073815552
 1543 00a0 0100000F 		.word	251658241
 1544              		.cfi_endproc
 1545              	.LFE228:
 1547              		.section	.text.MX_TIM1_Init,"ax",%progbits
 1548              		.align	1
 1549              		.syntax unified
 1550              		.thumb
 1551              		.thumb_func
 1552              		.fpu fpv4-sp-d16
 1554              	MX_TIM1_Init:
 1555              	.LFB229:
 595:Core/Src/main.c **** 
 596:Core/Src/main.c **** /**
 597:Core/Src/main.c ****   * @brief TIM1 Initialization Function
 598:Core/Src/main.c ****   * @param None
 599:Core/Src/main.c ****   * @retval None
 600:Core/Src/main.c ****   */
 601:Core/Src/main.c **** static void MX_TIM1_Init(void)
 602:Core/Src/main.c **** {
 1556              		.loc 1 602 1
 1557              		.cfi_startproc
 1558              		@ args = 0, pretend = 0, frame = 88
 1559              		@ frame_needed = 1, uses_anonymous_args = 0
 1560 0000 80B5     		push	{r7, lr}
 1561              	.LCFI19:
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s 			page 40


 1562              		.cfi_def_cfa_offset 8
 1563              		.cfi_offset 7, -8
 1564              		.cfi_offset 14, -4
 1565 0002 96B0     		sub	sp, sp, #88
 1566              	.LCFI20:
 1567              		.cfi_def_cfa_offset 96
 1568 0004 00AF     		add	r7, sp, #0
 1569              	.LCFI21:
 1570              		.cfi_def_cfa_register 7
 603:Core/Src/main.c **** 
 604:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 0 */
 605:Core/Src/main.c **** 
 606:Core/Src/main.c ****   /* USER CODE END TIM1_Init 0 */
 607:Core/Src/main.c **** 
 608:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 1571              		.loc 1 608 26
 1572 0006 07F14803 		add	r3, r7, #72
 1573 000a 0022     		movs	r2, #0
 1574 000c 1A60     		str	r2, [r3]
 1575 000e 5A60     		str	r2, [r3, #4]
 1576 0010 9A60     		str	r2, [r3, #8]
 1577 0012 DA60     		str	r2, [r3, #12]
 609:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1578              		.loc 1 609 27
 1579 0014 07F14003 		add	r3, r7, #64
 1580 0018 0022     		movs	r2, #0
 1581 001a 1A60     		str	r2, [r3]
 1582 001c 5A60     		str	r2, [r3, #4]
 610:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 1583              		.loc 1 610 22
 1584 001e 07F12403 		add	r3, r7, #36
 1585 0022 0022     		movs	r2, #0
 1586 0024 1A60     		str	r2, [r3]
 1587 0026 5A60     		str	r2, [r3, #4]
 1588 0028 9A60     		str	r2, [r3, #8]
 1589 002a DA60     		str	r2, [r3, #12]
 1590 002c 1A61     		str	r2, [r3, #16]
 1591 002e 5A61     		str	r2, [r3, #20]
 1592 0030 9A61     		str	r2, [r3, #24]
 611:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 1593              		.loc 1 611 34
 1594 0032 3B1D     		adds	r3, r7, #4
 1595 0034 2022     		movs	r2, #32
 1596 0036 0021     		movs	r1, #0
 1597 0038 1846     		mov	r0, r3
 1598 003a FFF7FEFF 		bl	memset
 612:Core/Src/main.c **** 
 613:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 1 */
 614:Core/Src/main.c **** 
 615:Core/Src/main.c ****   /* USER CODE END TIM1_Init 1 */
 616:Core/Src/main.c ****   htim1.Instance = TIM1;
 1599              		.loc 1 616 18
 1600 003e 3F4B     		ldr	r3, .L33
 1601 0040 3F4A     		ldr	r2, .L33+4
 1602 0042 1A60     		str	r2, [r3]
 617:Core/Src/main.c ****   htim1.Init.Prescaler = 0;
 1603              		.loc 1 617 24
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s 			page 41


 1604 0044 3D4B     		ldr	r3, .L33
 1605 0046 0022     		movs	r2, #0
 1606 0048 5A60     		str	r2, [r3, #4]
 618:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 1607              		.loc 1 618 26
 1608 004a 3C4B     		ldr	r3, .L33
 1609 004c 0022     		movs	r2, #0
 1610 004e 9A60     		str	r2, [r3, #8]
 619:Core/Src/main.c ****   htim1.Init.Period = 9600-1;
 1611              		.loc 1 619 21
 1612 0050 3A4B     		ldr	r3, .L33
 1613 0052 42F27F52 		movw	r2, #9599
 1614 0056 DA60     		str	r2, [r3, #12]
 620:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1615              		.loc 1 620 28
 1616 0058 384B     		ldr	r3, .L33
 1617 005a 0022     		movs	r2, #0
 1618 005c 1A61     		str	r2, [r3, #16]
 621:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 1619              		.loc 1 621 32
 1620 005e 374B     		ldr	r3, .L33
 1621 0060 0022     		movs	r2, #0
 1622 0062 5A61     		str	r2, [r3, #20]
 622:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1623              		.loc 1 622 32
 1624 0064 354B     		ldr	r3, .L33
 1625 0066 0022     		movs	r2, #0
 1626 0068 9A61     		str	r2, [r3, #24]
 623:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 1627              		.loc 1 623 7
 1628 006a 3448     		ldr	r0, .L33
 1629 006c FFF7FEFF 		bl	HAL_TIM_Base_Init
 1630 0070 0346     		mov	r3, r0
 1631              		.loc 1 623 6
 1632 0072 002B     		cmp	r3, #0
 1633 0074 01D0     		beq	.L27
 624:Core/Src/main.c ****   {
 625:Core/Src/main.c ****     Error_Handler();
 1634              		.loc 1 625 5
 1635 0076 FFF7FEFF 		bl	Error_Handler
 1636              	.L27:
 626:Core/Src/main.c ****   }
 627:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 1637              		.loc 1 627 34
 1638 007a 4FF48053 		mov	r3, #4096
 1639 007e BB64     		str	r3, [r7, #72]
 628:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 1640              		.loc 1 628 7
 1641 0080 07F14803 		add	r3, r7, #72
 1642 0084 1946     		mov	r1, r3
 1643 0086 2D48     		ldr	r0, .L33
 1644 0088 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 1645 008c 0346     		mov	r3, r0
 1646              		.loc 1 628 6
 1647 008e 002B     		cmp	r3, #0
 1648 0090 01D0     		beq	.L28
 629:Core/Src/main.c ****   {
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s 			page 42


 630:Core/Src/main.c ****     Error_Handler();
 1649              		.loc 1 630 5
 1650 0092 FFF7FEFF 		bl	Error_Handler
 1651              	.L28:
 631:Core/Src/main.c ****   }
 632:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 1652              		.loc 1 632 7
 1653 0096 2948     		ldr	r0, .L33
 1654 0098 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 1655 009c 0346     		mov	r3, r0
 1656              		.loc 1 632 6
 1657 009e 002B     		cmp	r3, #0
 1658 00a0 01D0     		beq	.L29
 633:Core/Src/main.c ****   {
 634:Core/Src/main.c ****     Error_Handler();
 1659              		.loc 1 634 5
 1660 00a2 FFF7FEFF 		bl	Error_Handler
 1661              	.L29:
 635:Core/Src/main.c ****   }
 636:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 1662              		.loc 1 636 37
 1663 00a6 0023     		movs	r3, #0
 1664 00a8 3B64     		str	r3, [r7, #64]
 637:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1665              		.loc 1 637 33
 1666 00aa 0023     		movs	r3, #0
 1667 00ac 7B64     		str	r3, [r7, #68]
 638:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 1668              		.loc 1 638 7
 1669 00ae 07F14003 		add	r3, r7, #64
 1670 00b2 1946     		mov	r1, r3
 1671 00b4 2148     		ldr	r0, .L33
 1672 00b6 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1673 00ba 0346     		mov	r3, r0
 1674              		.loc 1 638 6
 1675 00bc 002B     		cmp	r3, #0
 1676 00be 01D0     		beq	.L30
 639:Core/Src/main.c ****   {
 640:Core/Src/main.c ****     Error_Handler();
 1677              		.loc 1 640 5
 1678 00c0 FFF7FEFF 		bl	Error_Handler
 1679              	.L30:
 641:Core/Src/main.c ****   }
 642:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 1680              		.loc 1 642 20
 1681 00c4 6023     		movs	r3, #96
 1682 00c6 7B62     		str	r3, [r7, #36]
 643:Core/Src/main.c ****   sConfigOC.Pulse = 9600-1;
 1683              		.loc 1 643 19
 1684 00c8 42F27F53 		movw	r3, #9599
 1685 00cc BB62     		str	r3, [r7, #40]
 644:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1686              		.loc 1 644 24
 1687 00ce 0023     		movs	r3, #0
 1688 00d0 FB62     		str	r3, [r7, #44]
 645:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 1689              		.loc 1 645 25
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s 			page 43


 1690 00d2 0023     		movs	r3, #0
 1691 00d4 3B63     		str	r3, [r7, #48]
 646:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1692              		.loc 1 646 24
 1693 00d6 0023     		movs	r3, #0
 1694 00d8 7B63     		str	r3, [r7, #52]
 647:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 1695              		.loc 1 647 25
 1696 00da 0023     		movs	r3, #0
 1697 00dc BB63     		str	r3, [r7, #56]
 648:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 1698              		.loc 1 648 26
 1699 00de 0023     		movs	r3, #0
 1700 00e0 FB63     		str	r3, [r7, #60]
 649:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 1701              		.loc 1 649 7
 1702 00e2 07F12403 		add	r3, r7, #36
 1703 00e6 0022     		movs	r2, #0
 1704 00e8 1946     		mov	r1, r3
 1705 00ea 1448     		ldr	r0, .L33
 1706 00ec FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1707 00f0 0346     		mov	r3, r0
 1708              		.loc 1 649 6
 1709 00f2 002B     		cmp	r3, #0
 1710 00f4 01D0     		beq	.L31
 650:Core/Src/main.c ****   {
 651:Core/Src/main.c ****     Error_Handler();
 1711              		.loc 1 651 5
 1712 00f6 FFF7FEFF 		bl	Error_Handler
 1713              	.L31:
 652:Core/Src/main.c ****   }
 653:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 1714              		.loc 1 653 40
 1715 00fa 0023     		movs	r3, #0
 1716 00fc 7B60     		str	r3, [r7, #4]
 654:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 1717              		.loc 1 654 41
 1718 00fe 0023     		movs	r3, #0
 1719 0100 BB60     		str	r3, [r7, #8]
 655:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 1720              		.loc 1 655 34
 1721 0102 0023     		movs	r3, #0
 1722 0104 FB60     		str	r3, [r7, #12]
 656:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 1723              		.loc 1 656 33
 1724 0106 0023     		movs	r3, #0
 1725 0108 3B61     		str	r3, [r7, #16]
 657:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 1726              		.loc 1 657 35
 1727 010a 0023     		movs	r3, #0
 1728 010c 7B61     		str	r3, [r7, #20]
 658:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 1729              		.loc 1 658 38
 1730 010e 4FF40053 		mov	r3, #8192
 1731 0112 BB61     		str	r3, [r7, #24]
 659:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 1732              		.loc 1 659 40
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s 			page 44


 1733 0114 0023     		movs	r3, #0
 1734 0116 3B62     		str	r3, [r7, #32]
 660:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 1735              		.loc 1 660 7
 1736 0118 3B1D     		adds	r3, r7, #4
 1737 011a 1946     		mov	r1, r3
 1738 011c 0748     		ldr	r0, .L33
 1739 011e FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 1740 0122 0346     		mov	r3, r0
 1741              		.loc 1 660 6
 1742 0124 002B     		cmp	r3, #0
 1743 0126 01D0     		beq	.L32
 661:Core/Src/main.c ****   {
 662:Core/Src/main.c ****     Error_Handler();
 1744              		.loc 1 662 5
 1745 0128 FFF7FEFF 		bl	Error_Handler
 1746              	.L32:
 663:Core/Src/main.c ****   }
 664:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 2 */
 665:Core/Src/main.c **** 
 666:Core/Src/main.c ****   /* USER CODE END TIM1_Init 2 */
 667:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim1);
 1747              		.loc 1 667 3
 1748 012c 0348     		ldr	r0, .L33
 1749 012e FFF7FEFF 		bl	HAL_TIM_MspPostInit
 668:Core/Src/main.c **** 
 669:Core/Src/main.c **** }
 1750              		.loc 1 669 1
 1751 0132 00BF     		nop
 1752 0134 5837     		adds	r7, r7, #88
 1753              	.LCFI22:
 1754              		.cfi_def_cfa_offset 8
 1755 0136 BD46     		mov	sp, r7
 1756              	.LCFI23:
 1757              		.cfi_def_cfa_register 13
 1758              		@ sp needed
 1759 0138 80BD     		pop	{r7, pc}
 1760              	.L34:
 1761 013a 00BF     		.align	2
 1762              	.L33:
 1763 013c 00000000 		.word	htim1
 1764 0140 00000140 		.word	1073807360
 1765              		.cfi_endproc
 1766              	.LFE229:
 1768              		.section	.text.MX_TIM2_Init,"ax",%progbits
 1769              		.align	1
 1770              		.syntax unified
 1771              		.thumb
 1772              		.thumb_func
 1773              		.fpu fpv4-sp-d16
 1775              	MX_TIM2_Init:
 1776              	.LFB230:
 670:Core/Src/main.c **** 
 671:Core/Src/main.c **** /**
 672:Core/Src/main.c ****   * @brief TIM2 Initialization Function
 673:Core/Src/main.c ****   * @param None
 674:Core/Src/main.c ****   * @retval None
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s 			page 45


 675:Core/Src/main.c ****   */
 676:Core/Src/main.c **** static void MX_TIM2_Init(void)
 677:Core/Src/main.c **** {
 1777              		.loc 1 677 1
 1778              		.cfi_startproc
 1779              		@ args = 0, pretend = 0, frame = 24
 1780              		@ frame_needed = 1, uses_anonymous_args = 0
 1781 0000 80B5     		push	{r7, lr}
 1782              	.LCFI24:
 1783              		.cfi_def_cfa_offset 8
 1784              		.cfi_offset 7, -8
 1785              		.cfi_offset 14, -4
 1786 0002 86B0     		sub	sp, sp, #24
 1787              	.LCFI25:
 1788              		.cfi_def_cfa_offset 32
 1789 0004 00AF     		add	r7, sp, #0
 1790              	.LCFI26:
 1791              		.cfi_def_cfa_register 7
 678:Core/Src/main.c **** 
 679:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 0 */
 680:Core/Src/main.c **** 
 681:Core/Src/main.c ****   /* USER CODE END TIM2_Init 0 */
 682:Core/Src/main.c **** 
 683:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 1792              		.loc 1 683 26
 1793 0006 07F10803 		add	r3, r7, #8
 1794 000a 0022     		movs	r2, #0
 1795 000c 1A60     		str	r2, [r3]
 1796 000e 5A60     		str	r2, [r3, #4]
 1797 0010 9A60     		str	r2, [r3, #8]
 1798 0012 DA60     		str	r2, [r3, #12]
 684:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1799              		.loc 1 684 27
 1800 0014 3B46     		mov	r3, r7
 1801 0016 0022     		movs	r2, #0
 1802 0018 1A60     		str	r2, [r3]
 1803 001a 5A60     		str	r2, [r3, #4]
 685:Core/Src/main.c **** 
 686:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 1 */
 687:Core/Src/main.c **** 
 688:Core/Src/main.c ****   /* USER CODE END TIM2_Init 1 */
 689:Core/Src/main.c ****   htim2.Instance = TIM2;
 1804              		.loc 1 689 18
 1805 001c 1E4B     		ldr	r3, .L40
 1806 001e 4FF08042 		mov	r2, #1073741824
 1807 0022 1A60     		str	r2, [r3]
 690:Core/Src/main.c ****   htim2.Init.Prescaler = 9600-1;
 1808              		.loc 1 690 24
 1809 0024 1C4B     		ldr	r3, .L40
 1810 0026 42F27F52 		movw	r2, #9599
 1811 002a 5A60     		str	r2, [r3, #4]
 691:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 1812              		.loc 1 691 26
 1813 002c 1A4B     		ldr	r3, .L40
 1814 002e 0022     		movs	r2, #0
 1815 0030 9A60     		str	r2, [r3, #8]
 692:Core/Src/main.c ****   htim2.Init.Period = 4294967295;
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s 			page 46


 1816              		.loc 1 692 21
 1817 0032 194B     		ldr	r3, .L40
 1818 0034 4FF0FF32 		mov	r2, #-1
 1819 0038 DA60     		str	r2, [r3, #12]
 693:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1820              		.loc 1 693 28
 1821 003a 174B     		ldr	r3, .L40
 1822 003c 0022     		movs	r2, #0
 1823 003e 1A61     		str	r2, [r3, #16]
 694:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1824              		.loc 1 694 32
 1825 0040 154B     		ldr	r3, .L40
 1826 0042 0022     		movs	r2, #0
 1827 0044 9A61     		str	r2, [r3, #24]
 695:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 1828              		.loc 1 695 7
 1829 0046 1448     		ldr	r0, .L40
 1830 0048 FFF7FEFF 		bl	HAL_TIM_Base_Init
 1831 004c 0346     		mov	r3, r0
 1832              		.loc 1 695 6
 1833 004e 002B     		cmp	r3, #0
 1834 0050 01D0     		beq	.L36
 696:Core/Src/main.c ****   {
 697:Core/Src/main.c ****     Error_Handler();
 1835              		.loc 1 697 5
 1836 0052 FFF7FEFF 		bl	Error_Handler
 1837              	.L36:
 698:Core/Src/main.c ****   }
 699:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 1838              		.loc 1 699 34
 1839 0056 4FF48053 		mov	r3, #4096
 1840 005a BB60     		str	r3, [r7, #8]
 700:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 1841              		.loc 1 700 7
 1842 005c 07F10803 		add	r3, r7, #8
 1843 0060 1946     		mov	r1, r3
 1844 0062 0D48     		ldr	r0, .L40
 1845 0064 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 1846 0068 0346     		mov	r3, r0
 1847              		.loc 1 700 6
 1848 006a 002B     		cmp	r3, #0
 1849 006c 01D0     		beq	.L37
 701:Core/Src/main.c ****   {
 702:Core/Src/main.c ****     Error_Handler();
 1850              		.loc 1 702 5
 1851 006e FFF7FEFF 		bl	Error_Handler
 1852              	.L37:
 703:Core/Src/main.c ****   }
 704:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 1853              		.loc 1 704 37
 1854 0072 0023     		movs	r3, #0
 1855 0074 3B60     		str	r3, [r7]
 705:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1856              		.loc 1 705 33
 1857 0076 0023     		movs	r3, #0
 1858 0078 7B60     		str	r3, [r7, #4]
 706:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s 			page 47


 1859              		.loc 1 706 7
 1860 007a 3B46     		mov	r3, r7
 1861 007c 1946     		mov	r1, r3
 1862 007e 0648     		ldr	r0, .L40
 1863 0080 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1864 0084 0346     		mov	r3, r0
 1865              		.loc 1 706 6
 1866 0086 002B     		cmp	r3, #0
 1867 0088 01D0     		beq	.L39
 707:Core/Src/main.c ****   {
 708:Core/Src/main.c ****     Error_Handler();
 1868              		.loc 1 708 5
 1869 008a FFF7FEFF 		bl	Error_Handler
 1870              	.L39:
 709:Core/Src/main.c ****   }
 710:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 2 */
 711:Core/Src/main.c **** 
 712:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 713:Core/Src/main.c **** 
 714:Core/Src/main.c **** }
 1871              		.loc 1 714 1
 1872 008e 00BF     		nop
 1873 0090 1837     		adds	r7, r7, #24
 1874              	.LCFI27:
 1875              		.cfi_def_cfa_offset 8
 1876 0092 BD46     		mov	sp, r7
 1877              	.LCFI28:
 1878              		.cfi_def_cfa_register 13
 1879              		@ sp needed
 1880 0094 80BD     		pop	{r7, pc}
 1881              	.L41:
 1882 0096 00BF     		.align	2
 1883              	.L40:
 1884 0098 00000000 		.word	htim2
 1885              		.cfi_endproc
 1886              	.LFE230:
 1888              		.section	.text.MX_TIM3_Init,"ax",%progbits
 1889              		.align	1
 1890              		.syntax unified
 1891              		.thumb
 1892              		.thumb_func
 1893              		.fpu fpv4-sp-d16
 1895              	MX_TIM3_Init:
 1896              	.LFB231:
 715:Core/Src/main.c **** 
 716:Core/Src/main.c **** /**
 717:Core/Src/main.c ****   * @brief TIM3 Initialization Function
 718:Core/Src/main.c ****   * @param None
 719:Core/Src/main.c ****   * @retval None
 720:Core/Src/main.c ****   */
 721:Core/Src/main.c **** static void MX_TIM3_Init(void)
 722:Core/Src/main.c **** {
 1897              		.loc 1 722 1
 1898              		.cfi_startproc
 1899              		@ args = 0, pretend = 0, frame = 56
 1900              		@ frame_needed = 1, uses_anonymous_args = 0
 1901 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s 			page 48


 1902              	.LCFI29:
 1903              		.cfi_def_cfa_offset 8
 1904              		.cfi_offset 7, -8
 1905              		.cfi_offset 14, -4
 1906 0002 8EB0     		sub	sp, sp, #56
 1907              	.LCFI30:
 1908              		.cfi_def_cfa_offset 64
 1909 0004 00AF     		add	r7, sp, #0
 1910              	.LCFI31:
 1911              		.cfi_def_cfa_register 7
 723:Core/Src/main.c **** 
 724:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 0 */
 725:Core/Src/main.c **** 
 726:Core/Src/main.c ****   /* USER CODE END TIM3_Init 0 */
 727:Core/Src/main.c **** 
 728:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 1912              		.loc 1 728 26
 1913 0006 07F12803 		add	r3, r7, #40
 1914 000a 0022     		movs	r2, #0
 1915 000c 1A60     		str	r2, [r3]
 1916 000e 5A60     		str	r2, [r3, #4]
 1917 0010 9A60     		str	r2, [r3, #8]
 1918 0012 DA60     		str	r2, [r3, #12]
 729:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1919              		.loc 1 729 27
 1920 0014 07F12003 		add	r3, r7, #32
 1921 0018 0022     		movs	r2, #0
 1922 001a 1A60     		str	r2, [r3]
 1923 001c 5A60     		str	r2, [r3, #4]
 730:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 1924              		.loc 1 730 22
 1925 001e 3B1D     		adds	r3, r7, #4
 1926 0020 0022     		movs	r2, #0
 1927 0022 1A60     		str	r2, [r3]
 1928 0024 5A60     		str	r2, [r3, #4]
 1929 0026 9A60     		str	r2, [r3, #8]
 1930 0028 DA60     		str	r2, [r3, #12]
 1931 002a 1A61     		str	r2, [r3, #16]
 1932 002c 5A61     		str	r2, [r3, #20]
 1933 002e 9A61     		str	r2, [r3, #24]
 731:Core/Src/main.c **** 
 732:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 1 */
 733:Core/Src/main.c **** 
 734:Core/Src/main.c ****   /* USER CODE END TIM3_Init 1 */
 735:Core/Src/main.c ****   htim3.Instance = TIM3;
 1934              		.loc 1 735 18
 1935 0030 2D4B     		ldr	r3, .L48
 1936 0032 2E4A     		ldr	r2, .L48+4
 1937 0034 1A60     		str	r2, [r3]
 736:Core/Src/main.c ****   htim3.Init.Prescaler = 0;
 1938              		.loc 1 736 24
 1939 0036 2C4B     		ldr	r3, .L48
 1940 0038 0022     		movs	r2, #0
 1941 003a 5A60     		str	r2, [r3, #4]
 737:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 1942              		.loc 1 737 26
 1943 003c 2A4B     		ldr	r3, .L48
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s 			page 49


 1944 003e 0022     		movs	r2, #0
 1945 0040 9A60     		str	r2, [r3, #8]
 738:Core/Src/main.c ****   htim3.Init.Period = 9600-1;
 1946              		.loc 1 738 21
 1947 0042 294B     		ldr	r3, .L48
 1948 0044 42F27F52 		movw	r2, #9599
 1949 0048 DA60     		str	r2, [r3, #12]
 739:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1950              		.loc 1 739 28
 1951 004a 274B     		ldr	r3, .L48
 1952 004c 0022     		movs	r2, #0
 1953 004e 1A61     		str	r2, [r3, #16]
 740:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1954              		.loc 1 740 32
 1955 0050 254B     		ldr	r3, .L48
 1956 0052 0022     		movs	r2, #0
 1957 0054 9A61     		str	r2, [r3, #24]
 741:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 1958              		.loc 1 741 7
 1959 0056 2448     		ldr	r0, .L48
 1960 0058 FFF7FEFF 		bl	HAL_TIM_Base_Init
 1961 005c 0346     		mov	r3, r0
 1962              		.loc 1 741 6
 1963 005e 002B     		cmp	r3, #0
 1964 0060 01D0     		beq	.L43
 742:Core/Src/main.c ****   {
 743:Core/Src/main.c ****     Error_Handler();
 1965              		.loc 1 743 5
 1966 0062 FFF7FEFF 		bl	Error_Handler
 1967              	.L43:
 744:Core/Src/main.c ****   }
 745:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 1968              		.loc 1 745 34
 1969 0066 4FF48053 		mov	r3, #4096
 1970 006a BB62     		str	r3, [r7, #40]
 746:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 1971              		.loc 1 746 7
 1972 006c 07F12803 		add	r3, r7, #40
 1973 0070 1946     		mov	r1, r3
 1974 0072 1D48     		ldr	r0, .L48
 1975 0074 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 1976 0078 0346     		mov	r3, r0
 1977              		.loc 1 746 6
 1978 007a 002B     		cmp	r3, #0
 1979 007c 01D0     		beq	.L44
 747:Core/Src/main.c ****   {
 748:Core/Src/main.c ****     Error_Handler();
 1980              		.loc 1 748 5
 1981 007e FFF7FEFF 		bl	Error_Handler
 1982              	.L44:
 749:Core/Src/main.c ****   }
 750:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 1983              		.loc 1 750 7
 1984 0082 1948     		ldr	r0, .L48
 1985 0084 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 1986 0088 0346     		mov	r3, r0
 1987              		.loc 1 750 6
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s 			page 50


 1988 008a 002B     		cmp	r3, #0
 1989 008c 01D0     		beq	.L45
 751:Core/Src/main.c ****   {
 752:Core/Src/main.c ****     Error_Handler();
 1990              		.loc 1 752 5
 1991 008e FFF7FEFF 		bl	Error_Handler
 1992              	.L45:
 753:Core/Src/main.c ****   }
 754:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 1993              		.loc 1 754 37
 1994 0092 0023     		movs	r3, #0
 1995 0094 3B62     		str	r3, [r7, #32]
 755:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1996              		.loc 1 755 33
 1997 0096 0023     		movs	r3, #0
 1998 0098 7B62     		str	r3, [r7, #36]
 756:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 1999              		.loc 1 756 7
 2000 009a 07F12003 		add	r3, r7, #32
 2001 009e 1946     		mov	r1, r3
 2002 00a0 1148     		ldr	r0, .L48
 2003 00a2 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 2004 00a6 0346     		mov	r3, r0
 2005              		.loc 1 756 6
 2006 00a8 002B     		cmp	r3, #0
 2007 00aa 01D0     		beq	.L46
 757:Core/Src/main.c ****   {
 758:Core/Src/main.c ****     Error_Handler();
 2008              		.loc 1 758 5
 2009 00ac FFF7FEFF 		bl	Error_Handler
 2010              	.L46:
 759:Core/Src/main.c ****   }
 760:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 2011              		.loc 1 760 20
 2012 00b0 6023     		movs	r3, #96
 2013 00b2 7B60     		str	r3, [r7, #4]
 761:Core/Src/main.c ****   sConfigOC.Pulse = 9600-1;
 2014              		.loc 1 761 19
 2015 00b4 42F27F53 		movw	r3, #9599
 2016 00b8 BB60     		str	r3, [r7, #8]
 762:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 2017              		.loc 1 762 24
 2018 00ba 0023     		movs	r3, #0
 2019 00bc FB60     		str	r3, [r7, #12]
 763:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 2020              		.loc 1 763 24
 2021 00be 0023     		movs	r3, #0
 2022 00c0 7B61     		str	r3, [r7, #20]
 764:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 2023              		.loc 1 764 7
 2024 00c2 3B1D     		adds	r3, r7, #4
 2025 00c4 0422     		movs	r2, #4
 2026 00c6 1946     		mov	r1, r3
 2027 00c8 0748     		ldr	r0, .L48
 2028 00ca FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 2029 00ce 0346     		mov	r3, r0
 2030              		.loc 1 764 6
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s 			page 51


 2031 00d0 002B     		cmp	r3, #0
 2032 00d2 01D0     		beq	.L47
 765:Core/Src/main.c ****   {
 766:Core/Src/main.c ****     Error_Handler();
 2033              		.loc 1 766 5
 2034 00d4 FFF7FEFF 		bl	Error_Handler
 2035              	.L47:
 767:Core/Src/main.c ****   }
 768:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 2 */
 769:Core/Src/main.c **** 
 770:Core/Src/main.c ****   /* USER CODE END TIM3_Init 2 */
 771:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim3);
 2036              		.loc 1 771 3
 2037 00d8 0348     		ldr	r0, .L48
 2038 00da FFF7FEFF 		bl	HAL_TIM_MspPostInit
 772:Core/Src/main.c **** 
 773:Core/Src/main.c **** }
 2039              		.loc 1 773 1
 2040 00de 00BF     		nop
 2041 00e0 3837     		adds	r7, r7, #56
 2042              	.LCFI32:
 2043              		.cfi_def_cfa_offset 8
 2044 00e2 BD46     		mov	sp, r7
 2045              	.LCFI33:
 2046              		.cfi_def_cfa_register 13
 2047              		@ sp needed
 2048 00e4 80BD     		pop	{r7, pc}
 2049              	.L49:
 2050 00e6 00BF     		.align	2
 2051              	.L48:
 2052 00e8 00000000 		.word	htim3
 2053 00ec 00040040 		.word	1073742848
 2054              		.cfi_endproc
 2055              	.LFE231:
 2057              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 2058              		.align	1
 2059              		.syntax unified
 2060              		.thumb
 2061              		.thumb_func
 2062              		.fpu fpv4-sp-d16
 2064              	MX_USART1_UART_Init:
 2065              	.LFB232:
 774:Core/Src/main.c **** 
 775:Core/Src/main.c **** /**
 776:Core/Src/main.c ****   * @brief USART1 Initialization Function
 777:Core/Src/main.c ****   * @param None
 778:Core/Src/main.c ****   * @retval None
 779:Core/Src/main.c ****   */
 780:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 781:Core/Src/main.c **** {
 2066              		.loc 1 781 1
 2067              		.cfi_startproc
 2068              		@ args = 0, pretend = 0, frame = 0
 2069              		@ frame_needed = 1, uses_anonymous_args = 0
 2070 0000 80B5     		push	{r7, lr}
 2071              	.LCFI34:
 2072              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s 			page 52


 2073              		.cfi_offset 7, -8
 2074              		.cfi_offset 14, -4
 2075 0002 00AF     		add	r7, sp, #0
 2076              	.LCFI35:
 2077              		.cfi_def_cfa_register 7
 782:Core/Src/main.c **** 
 783:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 784:Core/Src/main.c **** 
 785:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 786:Core/Src/main.c **** 
 787:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 788:Core/Src/main.c **** 
 789:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 790:Core/Src/main.c ****   huart1.Instance = USART1;
 2078              		.loc 1 790 19
 2079 0004 114B     		ldr	r3, .L53
 2080 0006 124A     		ldr	r2, .L53+4
 2081 0008 1A60     		str	r2, [r3]
 791:Core/Src/main.c ****   huart1.Init.BaudRate = 9600;
 2082              		.loc 1 791 24
 2083 000a 104B     		ldr	r3, .L53
 2084 000c 4FF41652 		mov	r2, #9600
 2085 0010 5A60     		str	r2, [r3, #4]
 792:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 2086              		.loc 1 792 26
 2087 0012 0E4B     		ldr	r3, .L53
 2088 0014 0022     		movs	r2, #0
 2089 0016 9A60     		str	r2, [r3, #8]
 793:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 2090              		.loc 1 793 24
 2091 0018 0C4B     		ldr	r3, .L53
 2092 001a 0022     		movs	r2, #0
 2093 001c DA60     		str	r2, [r3, #12]
 794:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 2094              		.loc 1 794 22
 2095 001e 0B4B     		ldr	r3, .L53
 2096 0020 0022     		movs	r2, #0
 2097 0022 1A61     		str	r2, [r3, #16]
 795:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 2098              		.loc 1 795 20
 2099 0024 094B     		ldr	r3, .L53
 2100 0026 0C22     		movs	r2, #12
 2101 0028 5A61     		str	r2, [r3, #20]
 796:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 2102              		.loc 1 796 25
 2103 002a 084B     		ldr	r3, .L53
 2104 002c 0022     		movs	r2, #0
 2105 002e 9A61     		str	r2, [r3, #24]
 797:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 2106              		.loc 1 797 28
 2107 0030 064B     		ldr	r3, .L53
 2108 0032 0022     		movs	r2, #0
 2109 0034 DA61     		str	r2, [r3, #28]
 798:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 2110              		.loc 1 798 7
 2111 0036 0548     		ldr	r0, .L53
 2112 0038 FFF7FEFF 		bl	HAL_UART_Init
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s 			page 53


 2113 003c 0346     		mov	r3, r0
 2114              		.loc 1 798 6
 2115 003e 002B     		cmp	r3, #0
 2116 0040 01D0     		beq	.L52
 799:Core/Src/main.c ****   {
 800:Core/Src/main.c ****     Error_Handler();
 2117              		.loc 1 800 5
 2118 0042 FFF7FEFF 		bl	Error_Handler
 2119              	.L52:
 801:Core/Src/main.c ****   }
 802:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 803:Core/Src/main.c **** 
 804:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 805:Core/Src/main.c **** 
 806:Core/Src/main.c **** }
 2120              		.loc 1 806 1
 2121 0046 00BF     		nop
 2122 0048 80BD     		pop	{r7, pc}
 2123              	.L54:
 2124 004a 00BF     		.align	2
 2125              	.L53:
 2126 004c 00000000 		.word	huart1
 2127 0050 00100140 		.word	1073811456
 2128              		.cfi_endproc
 2129              	.LFE232:
 2131              		.section	.text.MX_DMA_Init,"ax",%progbits
 2132              		.align	1
 2133              		.syntax unified
 2134              		.thumb
 2135              		.thumb_func
 2136              		.fpu fpv4-sp-d16
 2138              	MX_DMA_Init:
 2139              	.LFB233:
 807:Core/Src/main.c **** 
 808:Core/Src/main.c **** /**
 809:Core/Src/main.c ****   * Enable DMA controller clock
 810:Core/Src/main.c ****   */
 811:Core/Src/main.c **** static void MX_DMA_Init(void)
 812:Core/Src/main.c **** {
 2140              		.loc 1 812 1
 2141              		.cfi_startproc
 2142              		@ args = 0, pretend = 0, frame = 8
 2143              		@ frame_needed = 1, uses_anonymous_args = 0
 2144 0000 80B5     		push	{r7, lr}
 2145              	.LCFI36:
 2146              		.cfi_def_cfa_offset 8
 2147              		.cfi_offset 7, -8
 2148              		.cfi_offset 14, -4
 2149 0002 82B0     		sub	sp, sp, #8
 2150              	.LCFI37:
 2151              		.cfi_def_cfa_offset 16
 2152 0004 00AF     		add	r7, sp, #0
 2153              	.LCFI38:
 2154              		.cfi_def_cfa_register 7
 2155              	.LBB6:
 813:Core/Src/main.c **** 
 814:Core/Src/main.c ****   /* DMA controller clock enable */
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s 			page 54


 815:Core/Src/main.c ****   __HAL_RCC_DMA2_CLK_ENABLE();
 2156              		.loc 1 815 3
 2157 0006 0023     		movs	r3, #0
 2158 0008 7B60     		str	r3, [r7, #4]
 2159 000a 104B     		ldr	r3, .L56
 2160 000c 1B6B     		ldr	r3, [r3, #48]
 2161 000e 0F4A     		ldr	r2, .L56
 2162 0010 43F48003 		orr	r3, r3, #4194304
 2163 0014 1363     		str	r3, [r2, #48]
 2164 0016 0D4B     		ldr	r3, .L56
 2165 0018 1B6B     		ldr	r3, [r3, #48]
 2166 001a 03F48003 		and	r3, r3, #4194304
 2167 001e 7B60     		str	r3, [r7, #4]
 2168 0020 7B68     		ldr	r3, [r7, #4]
 2169              	.LBE6:
 816:Core/Src/main.c **** 
 817:Core/Src/main.c ****   /* DMA interrupt init */
 818:Core/Src/main.c ****   /* DMA2_Stream2_IRQn interrupt configuration */
 819:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA2_Stream2_IRQn, 5, 0);
 2170              		.loc 1 819 3
 2171 0022 0022     		movs	r2, #0
 2172 0024 0521     		movs	r1, #5
 2173 0026 3A20     		movs	r0, #58
 2174 0028 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 820:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Stream2_IRQn);
 2175              		.loc 1 820 3
 2176 002c 3A20     		movs	r0, #58
 2177 002e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 821:Core/Src/main.c ****   /* DMA2_Stream7_IRQn interrupt configuration */
 822:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA2_Stream7_IRQn, 5, 0);
 2178              		.loc 1 822 3
 2179 0032 0022     		movs	r2, #0
 2180 0034 0521     		movs	r1, #5
 2181 0036 4620     		movs	r0, #70
 2182 0038 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 823:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Stream7_IRQn);
 2183              		.loc 1 823 3
 2184 003c 4620     		movs	r0, #70
 2185 003e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 824:Core/Src/main.c **** 
 825:Core/Src/main.c **** }
 2186              		.loc 1 825 1
 2187 0042 00BF     		nop
 2188 0044 0837     		adds	r7, r7, #8
 2189              	.LCFI39:
 2190              		.cfi_def_cfa_offset 8
 2191 0046 BD46     		mov	sp, r7
 2192              	.LCFI40:
 2193              		.cfi_def_cfa_register 13
 2194              		@ sp needed
 2195 0048 80BD     		pop	{r7, pc}
 2196              	.L57:
 2197 004a 00BF     		.align	2
 2198              	.L56:
 2199 004c 00380240 		.word	1073887232
 2200              		.cfi_endproc
 2201              	.LFE233:
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s 			page 55


 2203              		.section	.text.MX_GPIO_Init,"ax",%progbits
 2204              		.align	1
 2205              		.syntax unified
 2206              		.thumb
 2207              		.thumb_func
 2208              		.fpu fpv4-sp-d16
 2210              	MX_GPIO_Init:
 2211              	.LFB234:
 826:Core/Src/main.c **** 
 827:Core/Src/main.c **** /**
 828:Core/Src/main.c ****   * @brief GPIO Initialization Function
 829:Core/Src/main.c ****   * @param None
 830:Core/Src/main.c ****   * @retval None
 831:Core/Src/main.c ****   */
 832:Core/Src/main.c **** static void MX_GPIO_Init(void)
 833:Core/Src/main.c **** {
 2212              		.loc 1 833 1
 2213              		.cfi_startproc
 2214              		@ args = 0, pretend = 0, frame = 40
 2215              		@ frame_needed = 1, uses_anonymous_args = 0
 2216 0000 80B5     		push	{r7, lr}
 2217              	.LCFI41:
 2218              		.cfi_def_cfa_offset 8
 2219              		.cfi_offset 7, -8
 2220              		.cfi_offset 14, -4
 2221 0002 8AB0     		sub	sp, sp, #40
 2222              	.LCFI42:
 2223              		.cfi_def_cfa_offset 48
 2224 0004 00AF     		add	r7, sp, #0
 2225              	.LCFI43:
 2226              		.cfi_def_cfa_register 7
 834:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 2227              		.loc 1 834 20
 2228 0006 07F11403 		add	r3, r7, #20
 2229 000a 0022     		movs	r2, #0
 2230 000c 1A60     		str	r2, [r3]
 2231 000e 5A60     		str	r2, [r3, #4]
 2232 0010 9A60     		str	r2, [r3, #8]
 2233 0012 DA60     		str	r2, [r3, #12]
 2234 0014 1A61     		str	r2, [r3, #16]
 2235              	.LBB7:
 835:Core/Src/main.c **** 
 836:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 837:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 2236              		.loc 1 837 3
 2237 0016 0023     		movs	r3, #0
 2238 0018 3B61     		str	r3, [r7, #16]
 2239 001a 414B     		ldr	r3, .L59
 2240 001c 1B6B     		ldr	r3, [r3, #48]
 2241 001e 404A     		ldr	r2, .L59
 2242 0020 43F00403 		orr	r3, r3, #4
 2243 0024 1363     		str	r3, [r2, #48]
 2244 0026 3E4B     		ldr	r3, .L59
 2245 0028 1B6B     		ldr	r3, [r3, #48]
 2246 002a 03F00403 		and	r3, r3, #4
 2247 002e 3B61     		str	r3, [r7, #16]
 2248 0030 3B69     		ldr	r3, [r7, #16]
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s 			page 56


 2249              	.LBE7:
 2250              	.LBB8:
 838:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 2251              		.loc 1 838 3
 2252 0032 0023     		movs	r3, #0
 2253 0034 FB60     		str	r3, [r7, #12]
 2254 0036 3A4B     		ldr	r3, .L59
 2255 0038 1B6B     		ldr	r3, [r3, #48]
 2256 003a 394A     		ldr	r2, .L59
 2257 003c 43F08003 		orr	r3, r3, #128
 2258 0040 1363     		str	r3, [r2, #48]
 2259 0042 374B     		ldr	r3, .L59
 2260 0044 1B6B     		ldr	r3, [r3, #48]
 2261 0046 03F08003 		and	r3, r3, #128
 2262 004a FB60     		str	r3, [r7, #12]
 2263 004c FB68     		ldr	r3, [r7, #12]
 2264              	.LBE8:
 2265              	.LBB9:
 839:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 2266              		.loc 1 839 3
 2267 004e 0023     		movs	r3, #0
 2268 0050 BB60     		str	r3, [r7, #8]
 2269 0052 334B     		ldr	r3, .L59
 2270 0054 1B6B     		ldr	r3, [r3, #48]
 2271 0056 324A     		ldr	r2, .L59
 2272 0058 43F00103 		orr	r3, r3, #1
 2273 005c 1363     		str	r3, [r2, #48]
 2274 005e 304B     		ldr	r3, .L59
 2275 0060 1B6B     		ldr	r3, [r3, #48]
 2276 0062 03F00103 		and	r3, r3, #1
 2277 0066 BB60     		str	r3, [r7, #8]
 2278 0068 BB68     		ldr	r3, [r7, #8]
 2279              	.LBE9:
 2280              	.LBB10:
 840:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 2281              		.loc 1 840 3
 2282 006a 0023     		movs	r3, #0
 2283 006c 7B60     		str	r3, [r7, #4]
 2284 006e 2C4B     		ldr	r3, .L59
 2285 0070 1B6B     		ldr	r3, [r3, #48]
 2286 0072 2B4A     		ldr	r2, .L59
 2287 0074 43F00203 		orr	r3, r3, #2
 2288 0078 1363     		str	r3, [r2, #48]
 2289 007a 294B     		ldr	r3, .L59
 2290 007c 1B6B     		ldr	r3, [r3, #48]
 2291 007e 03F00203 		and	r3, r3, #2
 2292 0082 7B60     		str	r3, [r7, #4]
 2293 0084 7B68     		ldr	r3, [r7, #4]
 2294              	.LBE10:
 841:Core/Src/main.c **** 
 842:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 843:Core/Src/main.c ****   HAL_GPIO_WritePin(KIT_LED_GPIO_Port, KIT_LED_Pin, GPIO_PIN_RESET);
 2295              		.loc 1 843 3
 2296 0086 0022     		movs	r2, #0
 2297 0088 4FF40051 		mov	r1, #8192
 2298 008c 2548     		ldr	r0, .L59+4
 2299 008e FFF7FEFF 		bl	HAL_GPIO_WritePin
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s 			page 57


 844:Core/Src/main.c **** 
 845:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 846:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, LED3_GREEN_Pin|LED1_RED_Pin|LED4_BLUE_Pin|LED2_YELLOW_Pin, GPIO_PIN_RESE
 2300              		.loc 1 846 3
 2301 0092 0022     		movs	r2, #0
 2302 0094 1E21     		movs	r1, #30
 2303 0096 2448     		ldr	r0, .L59+8
 2304 0098 FFF7FEFF 		bl	HAL_GPIO_WritePin
 847:Core/Src/main.c **** 
 848:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 849:Core/Src/main.c ****   HAL_GPIO_WritePin(BRIDGE_1_2_EN_GPIO_Port, BRIDGE_1_2_EN_Pin, GPIO_PIN_SET);
 2305              		.loc 1 849 3
 2306 009c 0122     		movs	r2, #1
 2307 009e 4021     		movs	r1, #64
 2308 00a0 2148     		ldr	r0, .L59+8
 2309 00a2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 850:Core/Src/main.c **** 
 851:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 852:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, BRIDGE_1A_Pin|BRIDGE_3A_Pin, GPIO_PIN_RESET);
 2310              		.loc 1 852 3
 2311 00a6 0022     		movs	r2, #0
 2312 00a8 42F20401 		movw	r1, #8196
 2313 00ac 1F48     		ldr	r0, .L59+12
 2314 00ae FFF7FEFF 		bl	HAL_GPIO_WritePin
 853:Core/Src/main.c **** 
 854:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 855:Core/Src/main.c ****   HAL_GPIO_WritePin(BRIDGE_3_4_EN_GPIO_Port, BRIDGE_3_4_EN_Pin, GPIO_PIN_SET);
 2315              		.loc 1 855 3
 2316 00b2 0122     		movs	r2, #1
 2317 00b4 4FF48051 		mov	r1, #4096
 2318 00b8 1C48     		ldr	r0, .L59+12
 2319 00ba FFF7FEFF 		bl	HAL_GPIO_WritePin
 856:Core/Src/main.c **** 
 857:Core/Src/main.c ****   /*Configure GPIO pin : KIT_LED_Pin */
 858:Core/Src/main.c ****   GPIO_InitStruct.Pin = KIT_LED_Pin;
 2320              		.loc 1 858 23
 2321 00be 4FF40053 		mov	r3, #8192
 2322 00c2 7B61     		str	r3, [r7, #20]
 859:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 2323              		.loc 1 859 24
 2324 00c4 0123     		movs	r3, #1
 2325 00c6 BB61     		str	r3, [r7, #24]
 860:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2326              		.loc 1 860 24
 2327 00c8 0023     		movs	r3, #0
 2328 00ca FB61     		str	r3, [r7, #28]
 861:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 2329              		.loc 1 861 25
 2330 00cc 0023     		movs	r3, #0
 2331 00ce 3B62     		str	r3, [r7, #32]
 862:Core/Src/main.c ****   HAL_GPIO_Init(KIT_LED_GPIO_Port, &GPIO_InitStruct);
 2332              		.loc 1 862 3
 2333 00d0 07F11403 		add	r3, r7, #20
 2334 00d4 1946     		mov	r1, r3
 2335 00d6 1348     		ldr	r0, .L59+4
 2336 00d8 FFF7FEFF 		bl	HAL_GPIO_Init
 863:Core/Src/main.c **** 
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s 			page 58


 864:Core/Src/main.c ****   /*Configure GPIO pins : LED3_GREEN_Pin LED1_RED_Pin LED4_BLUE_Pin LED2_YELLOW_Pin
 865:Core/Src/main.c ****                            BRIDGE_1_2_EN_Pin */
 866:Core/Src/main.c ****   GPIO_InitStruct.Pin = LED3_GREEN_Pin|LED1_RED_Pin|LED4_BLUE_Pin|LED2_YELLOW_Pin
 2337              		.loc 1 866 23
 2338 00dc 5E23     		movs	r3, #94
 2339 00de 7B61     		str	r3, [r7, #20]
 867:Core/Src/main.c ****                           |BRIDGE_1_2_EN_Pin;
 868:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 2340              		.loc 1 868 24
 2341 00e0 0123     		movs	r3, #1
 2342 00e2 BB61     		str	r3, [r7, #24]
 869:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2343              		.loc 1 869 24
 2344 00e4 0023     		movs	r3, #0
 2345 00e6 FB61     		str	r3, [r7, #28]
 870:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 2346              		.loc 1 870 25
 2347 00e8 0023     		movs	r3, #0
 2348 00ea 3B62     		str	r3, [r7, #32]
 871:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 2349              		.loc 1 871 3
 2350 00ec 07F11403 		add	r3, r7, #20
 2351 00f0 1946     		mov	r1, r3
 2352 00f2 0D48     		ldr	r0, .L59+8
 2353 00f4 FFF7FEFF 		bl	HAL_GPIO_Init
 872:Core/Src/main.c **** 
 873:Core/Src/main.c ****   /*Configure GPIO pins : BRIDGE_1A_Pin BRIDGE_3_4_EN_Pin BRIDGE_3A_Pin */
 874:Core/Src/main.c ****   GPIO_InitStruct.Pin = BRIDGE_1A_Pin|BRIDGE_3_4_EN_Pin|BRIDGE_3A_Pin;
 2354              		.loc 1 874 23
 2355 00f8 43F20403 		movw	r3, #12292
 2356 00fc 7B61     		str	r3, [r7, #20]
 875:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 2357              		.loc 1 875 24
 2358 00fe 0123     		movs	r3, #1
 2359 0100 BB61     		str	r3, [r7, #24]
 876:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2360              		.loc 1 876 24
 2361 0102 0023     		movs	r3, #0
 2362 0104 FB61     		str	r3, [r7, #28]
 877:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 2363              		.loc 1 877 25
 2364 0106 0023     		movs	r3, #0
 2365 0108 3B62     		str	r3, [r7, #32]
 878:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 2366              		.loc 1 878 3
 2367 010a 07F11403 		add	r3, r7, #20
 2368 010e 1946     		mov	r1, r3
 2369 0110 0648     		ldr	r0, .L59+12
 2370 0112 FFF7FEFF 		bl	HAL_GPIO_Init
 879:Core/Src/main.c **** 
 880:Core/Src/main.c **** }
 2371              		.loc 1 880 1
 2372 0116 00BF     		nop
 2373 0118 2837     		adds	r7, r7, #40
 2374              	.LCFI44:
 2375              		.cfi_def_cfa_offset 8
 2376 011a BD46     		mov	sp, r7
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s 			page 59


 2377              	.LCFI45:
 2378              		.cfi_def_cfa_register 13
 2379              		@ sp needed
 2380 011c 80BD     		pop	{r7, pc}
 2381              	.L60:
 2382 011e 00BF     		.align	2
 2383              	.L59:
 2384 0120 00380240 		.word	1073887232
 2385 0124 00080240 		.word	1073874944
 2386 0128 00000240 		.word	1073872896
 2387 012c 00040240 		.word	1073873920
 2388              		.cfi_endproc
 2389              	.LFE234:
 2391              		.section	.text.StartDefaultTask,"ax",%progbits
 2392              		.align	1
 2393              		.global	StartDefaultTask
 2394              		.syntax unified
 2395              		.thumb
 2396              		.thumb_func
 2397              		.fpu fpv4-sp-d16
 2399              	StartDefaultTask:
 2400              	.LFB235:
 881:Core/Src/main.c **** 
 882:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 883:Core/Src/main.c **** 
 884:Core/Src/main.c **** /* USER CODE END 4 */
 885:Core/Src/main.c **** 
 886:Core/Src/main.c **** /* USER CODE BEGIN Header_StartDefaultTask */
 887:Core/Src/main.c **** /**
 888:Core/Src/main.c ****   * @brief  Function implementing the defaultTask thread.
 889:Core/Src/main.c ****   * @param  argument: Not used
 890:Core/Src/main.c ****   * @retval None
 891:Core/Src/main.c ****   */
 892:Core/Src/main.c **** /* USER CODE END Header_StartDefaultTask */
 893:Core/Src/main.c **** void StartDefaultTask(void *argument)
 894:Core/Src/main.c **** {
 2401              		.loc 1 894 1
 2402              		.cfi_startproc
 2403              		@ args = 0, pretend = 0, frame = 8
 2404              		@ frame_needed = 1, uses_anonymous_args = 0
 2405 0000 80B5     		push	{r7, lr}
 2406              	.LCFI46:
 2407              		.cfi_def_cfa_offset 8
 2408              		.cfi_offset 7, -8
 2409              		.cfi_offset 14, -4
 2410 0002 82B0     		sub	sp, sp, #8
 2411              	.LCFI47:
 2412              		.cfi_def_cfa_offset 16
 2413 0004 00AF     		add	r7, sp, #0
 2414              	.LCFI48:
 2415              		.cfi_def_cfa_register 7
 2416 0006 7860     		str	r0, [r7, #4]
 895:Core/Src/main.c ****   /* init code for USB_DEVICE */
 896:Core/Src/main.c ****   MX_USB_DEVICE_Init();
 2417              		.loc 1 896 3
 2418 0008 FFF7FEFF 		bl	MX_USB_DEVICE_Init
 2419              	.L62:
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s 			page 60


 897:Core/Src/main.c ****   /* USER CODE BEGIN 5 */
 898:Core/Src/main.c ****   /* Infinite loop */
 899:Core/Src/main.c ****   for(;;)
 900:Core/Src/main.c ****   {
 901:Core/Src/main.c ****     osDelay(1);
 2420              		.loc 1 901 5 discriminator 1
 2421 000c 0120     		movs	r0, #1
 2422 000e FFF7FEFF 		bl	osDelay
 2423 0012 FBE7     		b	.L62
 2424              		.cfi_endproc
 2425              	.LFE235:
 2427              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 2428              		.align	1
 2429              		.global	HAL_TIM_PeriodElapsedCallback
 2430              		.syntax unified
 2431              		.thumb
 2432              		.thumb_func
 2433              		.fpu fpv4-sp-d16
 2435              	HAL_TIM_PeriodElapsedCallback:
 2436              	.LFB236:
 902:Core/Src/main.c ****   }
 903:Core/Src/main.c ****   /* USER CODE END 5 */
 904:Core/Src/main.c **** }
 905:Core/Src/main.c **** 
 906:Core/Src/main.c **** /**
 907:Core/Src/main.c ****   * @brief  Period elapsed callback in non blocking mode
 908:Core/Src/main.c ****   * @note   This function is called  when TIM11 interrupt took place, inside
 909:Core/Src/main.c ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 910:Core/Src/main.c ****   * a global variable "uwTick" used as application time base.
 911:Core/Src/main.c ****   * @param  htim : TIM handle
 912:Core/Src/main.c ****   * @retval None
 913:Core/Src/main.c ****   */
 914:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 915:Core/Src/main.c **** {
 2437              		.loc 1 915 1
 2438              		.cfi_startproc
 2439              		@ args = 0, pretend = 0, frame = 8
 2440              		@ frame_needed = 1, uses_anonymous_args = 0
 2441 0000 80B5     		push	{r7, lr}
 2442              	.LCFI49:
 2443              		.cfi_def_cfa_offset 8
 2444              		.cfi_offset 7, -8
 2445              		.cfi_offset 14, -4
 2446 0002 82B0     		sub	sp, sp, #8
 2447              	.LCFI50:
 2448              		.cfi_def_cfa_offset 16
 2449 0004 00AF     		add	r7, sp, #0
 2450              	.LCFI51:
 2451              		.cfi_def_cfa_register 7
 2452 0006 7860     		str	r0, [r7, #4]
 916:Core/Src/main.c ****   /* USER CODE BEGIN Callback 0 */
 917:Core/Src/main.c **** 
 918:Core/Src/main.c ****   /* USER CODE END Callback 0 */
 919:Core/Src/main.c ****   if (htim->Instance == TIM11) {
 2453              		.loc 1 919 11
 2454 0008 7B68     		ldr	r3, [r7, #4]
 2455 000a 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s 			page 61


 2456              		.loc 1 919 6
 2457 000c 044A     		ldr	r2, .L66
 2458 000e 9342     		cmp	r3, r2
 2459 0010 01D1     		bne	.L65
 920:Core/Src/main.c ****     HAL_IncTick();
 2460              		.loc 1 920 5
 2461 0012 FFF7FEFF 		bl	HAL_IncTick
 2462              	.L65:
 921:Core/Src/main.c ****   }
 922:Core/Src/main.c ****   /* USER CODE BEGIN Callback 1 */
 923:Core/Src/main.c **** 
 924:Core/Src/main.c ****   /* USER CODE END Callback 1 */
 925:Core/Src/main.c **** }
 2463              		.loc 1 925 1
 2464 0016 00BF     		nop
 2465 0018 0837     		adds	r7, r7, #8
 2466              	.LCFI52:
 2467              		.cfi_def_cfa_offset 8
 2468 001a BD46     		mov	sp, r7
 2469              	.LCFI53:
 2470              		.cfi_def_cfa_register 13
 2471              		@ sp needed
 2472 001c 80BD     		pop	{r7, pc}
 2473              	.L67:
 2474 001e 00BF     		.align	2
 2475              	.L66:
 2476 0020 00480140 		.word	1073825792
 2477              		.cfi_endproc
 2478              	.LFE236:
 2480              		.section	.text.Error_Handler,"ax",%progbits
 2481              		.align	1
 2482              		.global	Error_Handler
 2483              		.syntax unified
 2484              		.thumb
 2485              		.thumb_func
 2486              		.fpu fpv4-sp-d16
 2488              	Error_Handler:
 2489              	.LFB237:
 926:Core/Src/main.c **** 
 927:Core/Src/main.c **** /**
 928:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 929:Core/Src/main.c ****   * @retval None
 930:Core/Src/main.c ****   */
 931:Core/Src/main.c **** void Error_Handler(void)
 932:Core/Src/main.c **** {
 2490              		.loc 1 932 1
 2491              		.cfi_startproc
 2492              		@ args = 0, pretend = 0, frame = 0
 2493              		@ frame_needed = 1, uses_anonymous_args = 0
 2494              		@ link register save eliminated.
 2495 0000 80B4     		push	{r7}
 2496              	.LCFI54:
 2497              		.cfi_def_cfa_offset 4
 2498              		.cfi_offset 7, -4
 2499 0002 00AF     		add	r7, sp, #0
 2500              	.LCFI55:
 2501              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s 			page 62


 2502              	.LBB11:
 2503              	.LBB12:
 2504              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s 			page 63


  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s 			page 64


 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 2505              		.loc 2 142 3
 2506              		.syntax unified
 2507              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2508 0004 72B6     		cpsid i
 2509              	@ 0 "" 2
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2510              		.loc 2 143 1
 2511              		.thumb
 2512              		.syntax unified
 2513 0006 00BF     		nop
 2514              	.L69:
 2515              	.LBE12:
 2516              	.LBE11:
 933:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 934:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 935:Core/Src/main.c ****   __disable_irq();
 936:Core/Src/main.c ****   while (1)
 2517              		.loc 1 936 9 discriminator 1
 2518 0008 FEE7     		b	.L69
 2519              		.cfi_endproc
 2520              	.LFE237:
 2522              		.text
 2523              	.Letext0:
 2524              		.file 3 "c:\\arm-gcc\\tools\\gcc-arm-none-eabi-10-2020-q4-major\\arm-none-eabi\\include\\machine\\
 2525              		.file 4 "c:\\arm-gcc\\tools\\gcc-arm-none-eabi-10-2020-q4-major\\arm-none-eabi\\include\\sys\\_std
 2526              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s 			page 65


 2527              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 2528              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 2529              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 2530              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 2531              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 2532              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 2533              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 2534              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 2535              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 2536              		.file 15 "Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h"
 2537              		.file 16 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
 2538              		.file 17 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 2539              		.file 18 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h"
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s 			page 66


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:22     .bss.hadc1:00000000 hadc1
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:19     .bss.hadc1:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:29     .bss.htim1:00000000 htim1
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:26     .bss.htim1:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:36     .bss.htim2:00000000 htim2
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:33     .bss.htim2:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:43     .bss.htim3:00000000 htim3
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:40     .bss.htim3:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:50     .bss.huart1:00000000 huart1
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:47     .bss.huart1:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:57     .bss.hdma_usart1_rx:00000000 hdma_usart1_rx
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:54     .bss.hdma_usart1_rx:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:64     .bss.hdma_usart1_tx:00000000 hdma_usart1_tx
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:61     .bss.hdma_usart1_tx:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:71     .bss.defaultTaskHandle:00000000 defaultTaskHandle
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:68     .bss.defaultTaskHandle:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:78     .bss.defaultTaskBuffer:00000000 defaultTaskBuffer
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:75     .bss.defaultTaskBuffer:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:85     .bss.defaultTaskControlBlock:00000000 defaultTaskControlBlock
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:82     .bss.defaultTaskControlBlock:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:96     .rodata.defaultTask_attributes:00000000 defaultTask_attributes
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:89     .rodata:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:93     .rodata.defaultTask_attributes:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:110    .bss.ATParsingTaskHandle:00000000 ATParsingTaskHandle
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:107    .bss.ATParsingTaskHandle:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:117    .bss.ATParsingTaskBuffer:00000000 ATParsingTaskBuffer
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:114    .bss.ATParsingTaskBuffer:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:124    .bss.ATParsingTaskControlBlock:00000000 ATParsingTaskControlBlock
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:121    .bss.ATParsingTaskControlBlock:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:135    .rodata.ATParsingTask_attributes:00000000 ATParsingTask_attributes
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:132    .rodata.ATParsingTask_attributes:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:149    .bss.ATHandlingTaskHandle:00000000 ATHandlingTaskHandle
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:146    .bss.ATHandlingTaskHandle:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:156    .bss.ATHandlingTaskBuffer:00000000 ATHandlingTaskBuffer
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:153    .bss.ATHandlingTaskBuffer:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:163    .bss.ATHandlingTaskControlBlock:00000000 ATHandlingTaskControlBlock
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:160    .bss.ATHandlingTaskControlBlock:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:174    .rodata.ATHandlingTask_attributes:00000000 ATHandlingTask_attributes
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:171    .rodata.ATHandlingTask_attributes:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:188    .bss.UARTProcTaskHandle:00000000 UARTProcTaskHandle
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:185    .bss.UARTProcTaskHandle:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:195    .bss.UARTProcTaskBuffer:00000000 UARTProcTaskBuffer
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:192    .bss.UARTProcTaskBuffer:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:202    .bss.UARTProcTaskControlBlock:00000000 UARTProcTaskControlBlock
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:199    .bss.UARTProcTaskControlBlock:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:213    .rodata.UARTProcTask_attributes:00000000 UARTProcTask_attributes
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:210    .rodata.UARTProcTask_attributes:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:227    .bss.ModemMngrTaskHandle:00000000 ModemMngrTaskHandle
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:224    .bss.ModemMngrTaskHandle:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:234    .bss.ModemMngrTaskBuffer:00000000 ModemMngrTaskBuffer
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:231    .bss.ModemMngrTaskBuffer:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:241    .bss.ModemMngrTaskControlBlock:00000000 ModemMngrTaskControlBlock
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:238    .bss.ModemMngrTaskControlBlock:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:252    .rodata.ModemMngrTask_attributes:00000000 ModemMngrTask_attributes
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:249    .rodata.ModemMngrTask_attributes:00000000 $d
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s 			page 67


C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:266    .bss.AppSendTaskHandle:00000000 AppSendTaskHandle
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:263    .bss.AppSendTaskHandle:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:273    .bss.SendTemperatureBuffer:00000000 SendTemperatureBuffer
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:270    .bss.SendTemperatureBuffer:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:280    .bss.SendTemperatureControlBlock:00000000 SendTemperatureControlBlock
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:277    .bss.SendTemperatureControlBlock:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:291    .rodata.AppSendTask_attributes:00000000 AppSendTask_attributes
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:288    .rodata.AppSendTask_attributes:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:305    .bss.ReadFromADCTaskHandle:00000000 ReadFromADCTaskHandle
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:302    .bss.ReadFromADCTaskHandle:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:312    .bss.ReadFromADCTaskBuffer:00000000 ReadFromADCTaskBuffer
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:309    .bss.ReadFromADCTaskBuffer:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:319    .bss.ReadFromADCTaskControlBlock:00000000 ReadFromADCTaskControlBlock
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:316    .bss.ReadFromADCTaskControlBlock:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:330    .rodata.ReadFromADCTask_attributes:00000000 ReadFromADCTask_attributes
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:327    .rodata.ReadFromADCTask_attributes:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:344    .bss.DutyCycleHandle:00000000 DutyCycleHandle
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:341    .bss.DutyCycleHandle:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:351    .bss.DutyCycleBuffer:00000000 DutyCycleBuffer
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:348    .bss.DutyCycleBuffer:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:358    .bss.DutyCycleControlBlock:00000000 DutyCycleControlBlock
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:355    .bss.DutyCycleControlBlock:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:369    .rodata.DutyCycle_attributes:00000000 DutyCycle_attributes
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:366    .rodata.DutyCycle_attributes:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:383    .bss.uartQueueHandle:00000000 uartQueueHandle
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:380    .bss.uartQueueHandle:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:390    .bss.uartQueueBuffer:00000000 uartQueueBuffer
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:387    .bss.uartQueueBuffer:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:397    .bss.uartQueueControlBlock:00000000 uartQueueControlBlock
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:394    .bss.uartQueueControlBlock:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:408    .rodata.uartQueue_attributes:00000000 uartQueue_attributes
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:405    .rodata.uartQueue_attributes:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:420    .bss.ATQueueHandle:00000000 ATQueueHandle
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:417    .bss.ATQueueHandle:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:427    .bss.ATQueueBuffer:00000000 ATQueueBuffer
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:424    .bss.ATQueueBuffer:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:434    .bss.ATQueueControlBlock:00000000 ATQueueControlBlock
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:431    .bss.ATQueueControlBlock:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:445    .rodata.ATQueue_attributes:00000000 ATQueue_attributes
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:442    .rodata.ATQueue_attributes:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:457    .bss.ModemSendQueueHandle:00000000 ModemSendQueueHandle
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:454    .bss.ModemSendQueueHandle:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:464    .bss.ModemSendQueueBuffer:00000000 ModemSendQueueBuffer
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:461    .bss.ModemSendQueueBuffer:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:471    .bss.ModemSendQueueControlBlock:00000000 ModemSendQueueControlBlock
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:468    .bss.ModemSendQueueControlBlock:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:482    .rodata.ModemSendQueue_attributes:00000000 ModemSendQueue_attributes
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:479    .rodata.ModemSendQueue_attributes:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:494    .bss.TemperatureQueueHandle:00000000 TemperatureQueueHandle
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:491    .bss.TemperatureQueueHandle:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:501    .bss.TemperatureQueueBuffer:00000000 TemperatureQueueBuffer
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:498    .bss.TemperatureQueueBuffer:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:508    .bss.TemperatureQueueControlBlock:00000000 TemperatureQueueControlBlock
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:505    .bss.TemperatureQueueControlBlock:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:519    .rodata.TemperatureQueue_attributes:00000000 TemperatureQueue_attributes
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:516    .rodata.TemperatureQueue_attributes:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:531    .bss.AccontrollerQueueHandle:00000000 AccontrollerQueueHandle
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s 			page 68


C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:528    .bss.AccontrollerQueueHandle:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:538    .bss.AccontrollerQueueBuffer:00000000 AccontrollerQueueBuffer
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:535    .bss.AccontrollerQueueBuffer:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:545    .bss.AccontrollerQueueControlBlock:00000000 AccontrollerQueueControlBlock
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:542    .bss.AccontrollerQueueControlBlock:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:556    .rodata.AccontrollerQueue_attributes:00000000 AccontrollerQueue_attributes
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:553    .rodata.AccontrollerQueue_attributes:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:568    .bss.PeriodicSendTimerHandle:00000000 PeriodicSendTimerHandle
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:565    .bss.PeriodicSendTimerHandle:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:575    .bss.PeriodicSendTimerControlBlock:00000000 PeriodicSendTimerControlBlock
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:572    .bss.PeriodicSendTimerControlBlock:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:586    .rodata.PeriodicSendTimer_attributes:00000000 PeriodicSendTimer_attributes
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:583    .rodata.PeriodicSendTimer_attributes:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:596    .bss.ModemLedTimerHandle:00000000 ModemLedTimerHandle
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:593    .bss.ModemLedTimerHandle:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:603    .bss.ModemLedTimerControlBlock:00000000 ModemLedTimerControlBlock
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:600    .bss.ModemLedTimerControlBlock:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:614    .rodata.ModemLedTimer_attributes:00000000 ModemLedTimer_attributes
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:611    .rodata.ModemLedTimer_attributes:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:624    .bss.DutyCycleTimerHandle:00000000 DutyCycleTimerHandle
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:621    .bss.DutyCycleTimerHandle:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:631    .bss.DutyCycleTimerControlBlock:00000000 DutyCycleTimerControlBlock
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:628    .bss.DutyCycleTimerControlBlock:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:642    .rodata.DutyCycleTimer_attributes:00000000 DutyCycleTimer_attributes
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:639    .rodata.DutyCycleTimer_attributes:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:652    .bss.ATCommandSemaphoreHandle:00000000 ATCommandSemaphoreHandle
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:649    .bss.ATCommandSemaphoreHandle:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:659    .bss.ATCommandSemaphoreControlBlock:00000000 ATCommandSemaphoreControlBlock
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:656    .bss.ATCommandSemaphoreControlBlock:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:670    .rodata.ATCommandSemaphore_attributes:00000000 ATCommandSemaphore_attributes
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:667    .rodata.ATCommandSemaphore_attributes:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:680    .bss.ATResponseSemaphoreHandle:00000000 ATResponseSemaphoreHandle
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:677    .bss.ATResponseSemaphoreHandle:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:687    .bss.ATResponseSemaphoreControlBlock:00000000 ATResponseSemaphoreControlBlock
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:684    .bss.ATResponseSemaphoreControlBlock:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:698    .rodata.ATResponseSemaphore_attributes:00000000 ATResponseSemaphore_attributes
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:695    .rodata.ATResponseSemaphore_attributes:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:708    .bss.UARTTXSemaphoreHandle:00000000 UARTTXSemaphoreHandle
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:705    .bss.UARTTXSemaphoreHandle:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:715    .bss.UARTTXSemaphoreControlBlock:00000000 UARTTXSemaphoreControlBlock
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:712    .bss.UARTTXSemaphoreControlBlock:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:726    .rodata.UARTTXSemaphore_attributes:00000000 UARTTXSemaphore_attributes
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:723    .rodata.UARTTXSemaphore_attributes:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:736    .bss.RadioStateSemaphoreHandle:00000000 RadioStateSemaphoreHandle
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:733    .bss.RadioStateSemaphoreHandle:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:743    .bss.RadioStateSemaphoreControlBlock:00000000 RadioStateSemaphoreControlBlock
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:740    .bss.RadioStateSemaphoreControlBlock:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:754    .rodata.RadioStateSemaphore_attributes:00000000 RadioStateSemaphore_attributes
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:751    .rodata.RadioStateSemaphore_attributes:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:764    .bss.LoRaTXSemaphoreHandle:00000000 LoRaTXSemaphoreHandle
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:761    .bss.LoRaTXSemaphoreHandle:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:771    .bss.LoRaTXSemaphoreControlBlock:00000000 LoRaTXSemaphoreControlBlock
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:768    .bss.LoRaTXSemaphoreControlBlock:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:782    .rodata.LoRaTXSemaphore_attributes:00000000 LoRaTXSemaphore_attributes
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:779    .rodata.LoRaTXSemaphore_attributes:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:792    .bss.ModemStatusFlagsHandle:00000000 ModemStatusFlagsHandle
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:789    .bss.ModemStatusFlagsHandle:00000000 $d
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s 			page 69


C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:799    .bss.ModemStatusFlagsControlBlock:00000000 ModemStatusFlagsControlBlock
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:796    .bss.ModemStatusFlagsControlBlock:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:810    .rodata.ModemStatusFlags_attributes:00000000 ModemStatusFlags_attributes
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:807    .rodata.ModemStatusFlags_attributes:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:820    .bss.vector:00000000 vector
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:817    .bss.vector:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:823    .text.CONFIGURE_TIMER_FOR_RUN_TIME_STATS:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:831    .text.CONFIGURE_TIMER_FOR_RUN_TIME_STATS:00000000 CONFIGURE_TIMER_FOR_RUN_TIME_STATS
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:855    .text.CONFIGURE_TIMER_FOR_RUN_TIME_STATS:00000010 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:860    .text.GET_RUN_TIME_COUNTER_VALUE:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:867    .text.GET_RUN_TIME_COUNTER_VALUE:00000000 GET_RUN_TIME_COUNTER_VALUE
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:899    .text.GET_RUN_TIME_COUNTER_VALUE:00000014 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:908    .data.uxTopUsedPriority:00000000 uxTopUsedPriority
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:905    .data.uxTopUsedPriority:00000000 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:911    .text.main:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:918    .text.main:00000000 main
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:1277   .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:2210   .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:2138   .text.MX_DMA_Init:00000000 MX_DMA_Init
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:2064   .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:1425   .text.MX_ADC1_Init:00000000 MX_ADC1_Init
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:1775   .text.MX_TIM2_Init:00000000 MX_TIM2_Init
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:1554   .text.MX_TIM1_Init:00000000 MX_TIM1_Init
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:1895   .text.MX_TIM3_Init:00000000 MX_TIM3_Init
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:1207   .text.main:000001e8 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:2399   .text.StartDefaultTask:00000000 StartDefaultTask
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:1270   .text.SystemClock_Config:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:2488   .text.Error_Handler:00000000 Error_Handler
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:1413   .text.SystemClock_Config:000000c8 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:1419   .text.MX_ADC1_Init:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:1541   .text.MX_ADC1_Init:00000098 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:1548   .text.MX_TIM1_Init:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:1763   .text.MX_TIM1_Init:0000013c $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:1769   .text.MX_TIM2_Init:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:1884   .text.MX_TIM2_Init:00000098 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:1889   .text.MX_TIM3_Init:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:2052   .text.MX_TIM3_Init:000000e8 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:2058   .text.MX_USART1_UART_Init:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:2126   .text.MX_USART1_UART_Init:0000004c $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:2132   .text.MX_DMA_Init:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:2199   .text.MX_DMA_Init:0000004c $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:2204   .text.MX_GPIO_Init:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:2384   .text.MX_GPIO_Init:00000120 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:2392   .text.StartDefaultTask:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:2428   .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:2435   .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:2476   .text.HAL_TIM_PeriodElapsedCallback:00000020 $d
C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s:2481   .text.Error_Handler:00000000 $t

UNDEFINED SYMBOLS
HAL_TIM_Base_Start
HAL_Init
HAL_TIM_PWM_Start
osKernelInitialize
osSemaphoreNew
osTimerNew
osMessageQueueNew
ARM GAS  C:\Users\EI\AppData\Local\Temp\ccOSoCEo.s 			page 70


osThreadNew
osEventFlagsNew
osKernelStart
HAL_GPIO_WritePin
HAL_Delay
PeriodicSendTimerCallback
ModemLedCallback
DutyCycleTimerCallback
ATParsingTaskCode
ATHandlingTaskCode
UARTProcTaskCode
ModemManagerTaskCode
AppSendTaskCode
ReadFromADCTaskCode
DutyCycleCode
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
HAL_TIM_MspPostInit
HAL_UART_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_Init
MX_USB_DEVICE_Init
osDelay
HAL_IncTick
